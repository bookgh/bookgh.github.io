<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>OpenLdap安装配置</title>
      <link href="/posts/openldap.html"/>
      <url>/posts/openldap.html</url>
      <content type="html"><![CDATA[<p>[TOC]</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><pre><code>系统：centos7软件版本：openldap-2.4.4配置文件: /etc/openldap/sldap.conf说明：ldap双主配置lab-01    ldap.test.com     IP: 10.0.0.11lab-02    ldap2.test.com    IP: 10.0.0.12</code></pre><hr><h2 id="环境初始化"><a href="#环境初始化" class="headerlink" title="环境初始化"></a>环境初始化</h2><blockquote><p>配置防火墙 放行<code>ldap, sldap</code> 端口</p></blockquote><pre><code>firewall-cmd --zone=public --add-port=389/tcp --permanentfirewall-cmd --zone=public --add-port=636/tcp --permanentfirewall-cmd --reload</code></pre><hr><blockquote><p>关闭, 禁用<code>selinux</code></p></blockquote><pre><code>setenforce 0sed -i &apos;/^SELINUX=.*/SELINUX=disabled&apos; /etc/selinux/config</code></pre><hr><blockquote><p>配置软件安装源</p></blockquote><pre><code>rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repocurl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo </code></pre><hr><blockquote><p>配置时间同步</p></blockquote><pre><code>yum -y install ntpdate/usr/sbin/ntpdate ntp6.aliyun.com ;hwclock -wecho -e &quot;*/3 * * * * /usr/sbin/ntpdate ntp6.aliyun.com  &gt;/dev/null 2&gt;&amp;1 &amp;&amp; /usr/sbin/hwclock -w&quot; &gt; /tmp/crontabcrontab /tmp/crontab</code></pre><hr><h2 id="lab-01-安装配置"><a href="#lab-01-安装配置" class="headerlink" title="lab-01 安装配置"></a>lab-01 安装配置</h2><blockquote><p>hostname(若不配置主机名或者配置错误会导致后面服务无法启动)</p></blockquote><pre><code># lab-01hostnamectl set-hostname ldap.test.com</code></pre><hr><blockquote><p>配置<code>hosts</code>解析</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;&gt;/etc/hosts# add ldap server10.0.0.11    ldap.test.com10.0.0.12    ldap2.test.comEOF</code></pre><hr><h3 id="安装OpenLdap"><a href="#安装OpenLdap" class="headerlink" title="安装OpenLdap"></a>安装<code>OpenLdap</code></h3><blockquote><p>安装<code>OpenLdap</code>与相关软件包</p></blockquote><pre><code>yum install -y openldap openldap-devel openldap-servers openldap-clients openldap-devel compat-openldap</code></pre><hr><h3 id="创建CA证书"><a href="#创建CA证书" class="headerlink" title="创建CA证书"></a>创建<code>CA</code>证书</h3><blockquote><p><code>CA</code>中心生成自身私钥</p></blockquote><pre><code>cd /etc/pki/CA(umask 077;openssl genrsa -out private/cakey.pem 2048)</code></pre><hr><blockquote><p><code>CA</code>签发自身公钥</p></blockquote><pre><code>openssl req -new -x509 -key private/cakey.pem -out cacert.pem -days 3650 \  -subj &quot;/C=CN/ST=HuBei/L=WuHan/O=test/OU=test.com/CN=*.test.com/emailAddress=544025211@qq.com&quot;touch serial index.txtecho &quot;01&quot; &gt; serial</code></pre><hr><blockquote><p>查看生成的根证书信息</p></blockquote><pre><code>openssl x509 -noout -text -in /etc/pki/CA/cacert.pem</code></pre><hr><h3 id="创建ldap证书"><a href="#创建ldap证书" class="headerlink" title="创建ldap证书"></a>创建<code>ldap</code>证书</h3><blockquote><p><code>OpenLdap</code>服务端生成证书</p></blockquote><pre><code>mkdir /etc/openldap/sslcd /etc/openldap/ssl(umask 077;openssl genrsa -out ldapkey.pem 1024)</code></pre><hr><blockquote><p><code>OpenLdap</code>服务端向<code>CA</code>申请证书签署请求</p></blockquote><pre><code>openssl req -new -key ldapkey.pem -out ldap.csr -days 3650 \  -subj &quot;/C=CN/ST=HuBei/L=WuHan/O=test/OU=test.com/CN=*.test.com/emailAddress=544025211@qq.com&quot;</code></pre><hr><blockquote><p><code>CA</code>核实并签发证书</p></blockquote><pre><code>openssl ca -in /etc/openldap/ssl/ldap.csr -out /etc/openldap/ssl/ldapcert.pem -days 3650</code></pre><hr><blockquote><p>设置证书权限</p></blockquote><pre><code>cp /etc/pki/CA/cacert.pem /etc/openldap/ssl/chown -R ldap.ldap /etc/openldap/ssl/*chmod -R 0400 /etc/openldap/ssl/*</code></pre><hr><h3 id="配置OpenLdap"><a href="#配置OpenLdap" class="headerlink" title="配置OpenLdap"></a>配置<code>OpenLdap</code></h3><blockquote><p>复制数据库配置文件</p></blockquote><pre><code>cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</code></pre><hr><blockquote><p>设置配置文件,数据目录权限</p></blockquote><pre><code>chown -R ldap.ldap /etc/openldap/chown -R ldap.ldap /var/lib/ldap/</code></pre><hr><blockquote><p>启动服务,配置服务跟随系统启动</p></blockquote><pre><code>systemctl start slapdsystemctl enable slapd</code></pre><hr><blockquote><p>生成管理员密码</p></blockquote><pre><code>pass=linuxslappasswd -s $pass -n &gt; /etc/openldap/passwdcat /etc/openldap/passwdldap_pass=&quot;$(cat /etc/openldap/passwd)&quot;</code></pre><hr><blockquote><p>创建slapd 配置文件</p></blockquote><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span>&lt;&lt;EOF  &gt;/etc/openldap/slapd.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/corba.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/core.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/cosine.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/duaconf.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/dyngroup.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/inetorgperson.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/java.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/misc.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/nis.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/openldap.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/ppolicy.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/collective.schema</span><br><span class="line"></span><br><span class="line">allow       bind_v2</span><br><span class="line">pidfile     /<span class="keyword">var</span>/<span class="keyword">run</span>/openldap/slapd.pid</span><br><span class="line">argsfile    /<span class="keyword">var</span>/<span class="keyword">run</span>/openldap/slapd.<span class="keyword">args</span></span><br><span class="line"></span><br><span class="line">modulepath  /usr/lib64/openldap</span><br><span class="line">moduleload  ppolicy.<span class="keyword">la</span></span><br><span class="line"></span><br><span class="line">TLSCACertificateFile  /etc/openldap/ssl/cacert.pem</span><br><span class="line">TLSCertificateFile  /etc/openldap/ssl/ldapcert.pem</span><br><span class="line">TLSCertificateKeyFile  /etc/openldap/ssl/ldapkey.pem</span><br><span class="line">TLSVerifyClient never</span><br><span class="line"></span><br><span class="line">access to attrs=shadowLastChange,userPassword</span><br><span class="line">      <span class="keyword">by</span> self write</span><br><span class="line">      <span class="keyword">by</span> * auth</span><br><span class="line"></span><br><span class="line">access to *</span><br><span class="line">      <span class="keyword">by</span> * <span class="keyword">read</span></span><br><span class="line"></span><br><span class="line">database config</span><br><span class="line">access to *</span><br><span class="line">    <span class="keyword">by</span> dn.exact=<span class="string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span> manage</span><br><span class="line">    <span class="keyword">by</span> * none</span><br><span class="line"></span><br><span class="line">database monitor</span><br><span class="line">access to *</span><br><span class="line">    <span class="keyword">by</span> dn.exact=<span class="string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span> <span class="keyword">read</span></span><br><span class="line">        <span class="keyword">by</span> dn.exact=<span class="string">"cn=admin,dc=test,dc=com"</span> <span class="keyword">read</span></span><br><span class="line">        <span class="keyword">by</span> * none</span><br><span class="line"></span><br><span class="line">database    hdb</span><br><span class="line">suffix      <span class="string">"dc=test,dc=com"</span></span><br><span class="line">checkpoint  1024 15</span><br><span class="line">rootdn      <span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">rootpw      <span class="variable">$ldap_pass</span></span><br><span class="line">directory   /<span class="keyword">var</span>/lib/ldap</span><br><span class="line"></span><br><span class="line">index    objectClass                       <span class="keyword">eq</span>,pres</span><br><span class="line">index    <span class="keyword">ou</span>,cn,mail,surname,givenname      <span class="keyword">eq</span>,pres,sub</span><br><span class="line">index    uidNumber,gidNumber,loginShell    <span class="keyword">eq</span>,pres</span><br><span class="line">index    uid,memberUid                     <span class="keyword">eq</span>,pres,sub</span><br><span class="line">index    nisMapName,nisMapEntry            <span class="keyword">eq</span>,pres,sub</span><br><span class="line">loglevel    4095</span><br><span class="line"></span><br><span class="line"># 主同步1 (若为配置单机版本则无需以下配置)</span><br><span class="line">moduleload syncprov.<span class="keyword">la</span></span><br><span class="line">modulepath /usr/lib64/openldap</span><br><span class="line"></span><br><span class="line">index   entryCSN,entryUUID    <span class="keyword">eq</span></span><br><span class="line"></span><br><span class="line">overlay syncprov</span><br><span class="line">syncprov-checkpoint 100 10</span><br><span class="line">syncprov-sessionlog 100</span><br><span class="line"></span><br><span class="line">serverID  1  ldaps:<span class="comment">//ldap.test.com</span></span><br><span class="line">serverID  2  ldaps:<span class="comment">//ldap2.test.com</span></span><br><span class="line"></span><br><span class="line">syncrepl  rid=123</span><br><span class="line">    provider=ldaps:<span class="comment">//ldap.test.com</span></span><br><span class="line">    bindmethod=simple</span><br><span class="line">    binddn=<span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">    credentials=linux</span><br><span class="line">    searchbase=<span class="string">"dc=test,dc=com"</span></span><br><span class="line">    schemachecking=<span class="keyword">on</span></span><br><span class="line">    <span class="keyword">type</span>=refreshAndPersist</span><br><span class="line">    starttls=yes</span><br><span class="line">    tls_key=<span class="string">"/etc/openldap/ssl/ldapkey.pem"</span></span><br><span class="line">    tls_cert=<span class="string">"/etc/openldap/ssl/ldapcert.pem"</span></span><br><span class="line">    tls_cacert=<span class="string">"/etc/openldap/ssl/cacert.pem"</span></span><br><span class="line">    retry=<span class="string">"5 5 300 5"</span></span><br><span class="line"></span><br><span class="line">syncrepl  rid=123</span><br><span class="line">    provider=ldaps:<span class="comment">//ldap2.test.com</span></span><br><span class="line">    bindmethod=simple</span><br><span class="line">    binddn=<span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">    credentials=linux</span><br><span class="line">    searchbase=<span class="string">"dc=test,dc=com"</span></span><br><span class="line">    schemachecking=<span class="keyword">on</span></span><br><span class="line">    <span class="keyword">type</span>=refreshAndPersist</span><br><span class="line">    starttls=yes</span><br><span class="line">    tls_key=<span class="string">"/etc/openldap/ssl/ldapkey.pem"</span></span><br><span class="line">    tls_cert=<span class="string">"/etc/openldap/ssl/ldapcert.pem"</span></span><br><span class="line">    tls_cacert=<span class="string">"/etc/openldap/ssl/cacert.pem"</span></span><br><span class="line">    retry=<span class="string">"5 5 300 5"</span></span><br><span class="line"></span><br><span class="line">mirrormode TRUE</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><hr><blockquote><p>配置监听服务</p></blockquote><pre><code>sed -i &apos;s/SLAPD_URLS/#SLAPD_URLS/&apos; /etc/sysconfig/slapdcat &lt;&lt;EOF   &gt;&gt;/etc/sysconfig/slapd# OpenLDAP LdapsSLAPD_URLS=&quot;ldapi:/// ldap:/// ldaps:///&quot;SLAPD_LDAP=yesSLAPD_LDAPI=yesSLAPD_LDAPS=yesEOF</code></pre><hr><blockquote><p>删除默认配置,生成新的配置(依据slapd.conf配置项生成新的配置)</p></blockquote><pre><code>rm -rf /etc/openldap/slapd.d/*slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/</code></pre><hr><blockquote><p>设置目录权限, 重启服务</p></blockquote><pre><code>chown -R ldap.ldap /etc/openldap/slapd.dchown -R ldap.ldap /var/lib/ldap/systemctl restart slapd</code></pre><hr><blockquote><p>配置日志</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;&gt;/etc/rsyslog.conf# ldap loglocal4.*    /var/log/slapd/slapd.logEOFsystemctl restart rsyslog</code></pre><hr><h3 id="添加用户-组"><a href="#添加用户-组" class="headerlink" title="添加用户, 组"></a>添加<code>用户</code>, <code>组</code></h3><blockquote><p>创建本地测试用户</p></blockquote><pre><code>for user in ldapuser{1..5} feng{1..5}; do    useradd $user    echo redhat | passwd --stdin $userdone</code></pre><hr><blockquote><p>通过<code>migration</code>工具生成<code>ldif</code>文件</p></blockquote><pre><code># 安装工具yum install -y migrationtools# 替换域信息sed -i &quot;71,74 s/padl/test/g&quot; /usr/share/migrationtools/migrate_common.phsed -i &quot;71,74 s/com/com/g&quot; /usr/share/migrationtools/migrate_common.phsed -i &apos;s/EXTENDED_SCHEMA = 0/EXTENDED_SCHEMA = 1/&apos; /usr/share/migrationtools/migrate_common.ph# 生成基础架构,根据密码文件生成用户信息,根据组文件生成组信息/usr/share/migrationtools/migrate_base.pl &gt; ~/base.ldif/usr/share/migrationtools/migrate_passwd.pl  /etc/passwd &gt; ~/passwd.ldif/usr/share/migrationtools/migrate_group.pl  /etc/group &gt; ~/group.ldif</code></pre><hr><blockquote><p>导入数据导入至<code>OpenLdap</code>目录树</p></blockquote><pre><code>ldapadd -x -w $pass -D &quot;cn=admin,dc=test,dc=com&quot; -f ~/base.ldifldapadd -x -w $pass -D &quot;cn=admin,dc=test,dc=com&quot; -f ~/passwd.ldifldapadd -x -w $pass -D &quot;cn=admin,dc=test,dc=com&quot; -f ~/group.ldif</code></pre><hr><h3 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h3><blockquote><p>搜索导入的用户</p></blockquote><pre><code>ldapsearch -x cn=ldapuser1 -b dc=test,dc=comfor user in ldapuser{1..5} feng{1..5}; do    echo &quot;---------- id $user ----------&quot;    ldapsearch -x cn=$user -b dc=test,dc=com    sleep 1    echodone</code></pre><hr><blockquote><p>验证<code>OpenLdap</code>服务端证书的合法性</p></blockquote><pre><code>openssl verify -CAfile /etc/openldap/ssl/cacert.pem /etc/openldap/ssl/ldapcert.pem</code></pre><hr><blockquote><p>确认当前套接字是否能通过CA的验证</p></blockquote><pre><code>openssl s_client -connect ldap.test.com:636 -showcerts -state -CAfile /etc/openldap/ssl/cacert.pem</code></pre><hr><h2 id="lab-02-安装配置"><a href="#lab-02-安装配置" class="headerlink" title="lab-02 安装配置"></a>lab-02 安装配置</h2><blockquote><p>hostname(若不配置主机名或者配置错误会导致后面服务无法启动)</p></blockquote><pre><code># lab-02hostnamectl set-hostname ldap2.test.com</code></pre><hr><blockquote><p>配置<code>hosts</code>解析</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;&gt;/etc/hosts# add ldap server10.0.0.11    ldap.test.com10.0.0.12    ldap2.test.comEOF</code></pre><hr><h3 id="安装OpenLdap-1"><a href="#安装OpenLdap-1" class="headerlink" title="安装OpenLdap"></a>安装<code>OpenLdap</code></h3><blockquote><p>安装<code>OpenLdap</code>与相关软件包</p></blockquote><pre><code>yum install -y openldap openldap-devel openldap-servers openldap-clients openldap-devel compat-openldap</code></pre><hr><h3 id="配置OpenLdap-1"><a href="#配置OpenLdap-1" class="headerlink" title="配置OpenLdap"></a>配置<code>OpenLdap</code></h3><blockquote><p>下载lab-01 证书文件</p></blockquote><pre><code>mkdir /etc/openldap/ssl/scp ldap.test.com:/etc/openldap/ssl/* /etc/openldap/ssl/</code></pre><hr><blockquote><p>设置凭证权限</p></blockquote><pre><code>chown -R ldap.ldap /etc/openldap/ssl/*chmod -R 0400 /etc/openldap/ssl/*</code></pre><hr><blockquote><p>复制数据库配置文件</p></blockquote><pre><code>cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</code></pre><hr><blockquote><p>设置配置文件,数据目录权限</p></blockquote><pre><code>chown -R ldap.ldap /etc/openldap/chown -R ldap.ldap /var/lib/ldap/</code></pre><hr><blockquote><p>启动服务,跟随系统启动</p></blockquote><pre><code>systemctl start slapdsystemctl enable slapd</code></pre><hr><blockquote><p>生成密码管理账号密码</p></blockquote><pre><code>pass=linuxslappasswd -s $pass -n &gt; /etc/openldap/passwdcat /etc/openldap/passwdldap_pass=&quot;$(cat /etc/openldap/passwd)&quot;</code></pre><hr><blockquote><p>创建slapd 配置文件</p></blockquote><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span>&lt;&lt;EOF  &gt;/etc/openldap/slapd.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/corba.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/core.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/cosine.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/duaconf.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/dyngroup.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/inetorgperson.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/java.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/misc.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/nis.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/openldap.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/ppolicy.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/collective.schema</span><br><span class="line"></span><br><span class="line">allow       bind_v2</span><br><span class="line">pidfile     /<span class="keyword">var</span>/<span class="keyword">run</span>/openldap/slapd.pid</span><br><span class="line">argsfile    /<span class="keyword">var</span>/<span class="keyword">run</span>/openldap/slapd.<span class="keyword">args</span></span><br><span class="line"></span><br><span class="line">modulepath  /usr/lib64/openldap</span><br><span class="line">moduleload  ppolicy.<span class="keyword">la</span></span><br><span class="line"></span><br><span class="line">TLSCACertificateFile  /etc/openldap/ssl/cacert.pem</span><br><span class="line">TLSCertificateFile  /etc/openldap/ssl/ldapcert.pem</span><br><span class="line">TLSCertificateKeyFile  /etc/openldap/ssl/ldapkey.pem</span><br><span class="line">TLSVerifyClient never</span><br><span class="line"></span><br><span class="line">access to attrs=shadowLastChange,userPassword</span><br><span class="line">      <span class="keyword">by</span> self write</span><br><span class="line">      <span class="keyword">by</span> * auth</span><br><span class="line"></span><br><span class="line">access to *</span><br><span class="line">      <span class="keyword">by</span> * <span class="keyword">read</span></span><br><span class="line"></span><br><span class="line">database config</span><br><span class="line">access to *</span><br><span class="line">    <span class="keyword">by</span> dn.exact=<span class="string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span> manage</span><br><span class="line">    <span class="keyword">by</span> * none</span><br><span class="line"></span><br><span class="line">database monitor</span><br><span class="line">access to *</span><br><span class="line">    <span class="keyword">by</span> dn.exact=<span class="string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span> <span class="keyword">read</span></span><br><span class="line">        <span class="keyword">by</span> dn.exact=<span class="string">"cn=admin,dc=test,dc=com"</span> <span class="keyword">read</span></span><br><span class="line">        <span class="keyword">by</span> * none</span><br><span class="line"></span><br><span class="line">database    hdb</span><br><span class="line">suffix      <span class="string">"dc=test,dc=com"</span></span><br><span class="line">checkpoint  1024 15</span><br><span class="line">rootdn      <span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">rootpw      <span class="variable">$ldap_pass</span></span><br><span class="line">directory   /<span class="keyword">var</span>/lib/ldap</span><br><span class="line"></span><br><span class="line">index    objectClass                       <span class="keyword">eq</span>,pres</span><br><span class="line">index    <span class="keyword">ou</span>,cn,mail,surname,givenname      <span class="keyword">eq</span>,pres,sub</span><br><span class="line">index    uidNumber,gidNumber,loginShell    <span class="keyword">eq</span>,pres</span><br><span class="line">index    uid,memberUid                     <span class="keyword">eq</span>,pres,sub</span><br><span class="line">index    nisMapName,nisMapEntry            <span class="keyword">eq</span>,pres,sub</span><br><span class="line">loglevel    4095</span><br><span class="line"></span><br><span class="line"># 主同步2 (若为配置单机版本则无需以下配置)</span><br><span class="line">moduleload syncprov.<span class="keyword">la</span></span><br><span class="line">modulepath /usr/lib64/openldap</span><br><span class="line"></span><br><span class="line">index entryCSN,entryUUID                <span class="keyword">eq</span></span><br><span class="line"></span><br><span class="line">overlay syncprov</span><br><span class="line">syncprov-checkpoint 100 10</span><br><span class="line">syncprov-sessionlog 100</span><br><span class="line"></span><br><span class="line">serverID  1  ldaps:<span class="comment">//ldap.test.com</span></span><br><span class="line">serverID  2  ldaps:<span class="comment">//ldap2.test.com</span></span><br><span class="line"></span><br><span class="line">syncrepl  rid=123</span><br><span class="line">    provider=ldaps:<span class="comment">//ldap2.test.com</span></span><br><span class="line">    bindmethod=simple</span><br><span class="line">    binddn=<span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">    credentials=<span class="variable">$pass</span></span><br><span class="line">    searchbase=<span class="string">"dc=test,dc=com"</span></span><br><span class="line">    schemachecking=<span class="keyword">on</span></span><br><span class="line">    <span class="keyword">type</span>=refreshAndPersist</span><br><span class="line">    starttls=yes</span><br><span class="line">    tls_key=<span class="string">"/etc/openldap/ssl/ldapkey.pem"</span></span><br><span class="line">    tls_cert=<span class="string">"/etc/openldap/ssl/ldapcert.pem"</span></span><br><span class="line">    tls_cacert=<span class="string">"/etc/openldap/ssl/cacert.pem"</span></span><br><span class="line">    retry=<span class="string">"5 5 300 5"</span></span><br><span class="line"></span><br><span class="line">syncrepl  rid=123</span><br><span class="line">    provider=ldaps:<span class="comment">//ldap.test.com</span></span><br><span class="line">    bindmethod=simple</span><br><span class="line">    binddn=<span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">    credentials=<span class="variable">$pass</span></span><br><span class="line">    searchbase=<span class="string">"dc=test,dc=com"</span></span><br><span class="line">    schemachecking=<span class="keyword">on</span></span><br><span class="line">    <span class="keyword">type</span>=refreshAndPersist</span><br><span class="line">    starttls=yes</span><br><span class="line">    tls_key=<span class="string">"/etc/openldap/ssl/ldapkey.pem"</span></span><br><span class="line">    tls_cert=<span class="string">"/etc/openldap/ssl/ldapcert.pem"</span></span><br><span class="line">    tls_cacert=<span class="string">"/etc/openldap/ssl/cacert.pem"</span></span><br><span class="line">    retry=<span class="string">"5 5 300 5"</span></span><br><span class="line"></span><br><span class="line">mirrormode TRUE</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><hr><blockquote><p>配置监听服务</p></blockquote><pre><code>sed -i &apos;s/SLAPD_URLS/#SLAPD_URLS/&apos; /etc/sysconfig/slapdcat &lt;&lt;EOF   &gt;&gt;/etc/sysconfig/slapd# OpenLDAP LdapsSLAPD_URLS=&quot;ldapi:/// ldap:/// ldaps:///&quot;SLAPD_LDAP=yesSLAPD_LDAPI=yesSLAPD_LDAPS=yesEOF</code></pre><hr><blockquote><p>删除默认配置,生成新的配置(依据slapd.conf配置项生成新的配置)</p></blockquote><pre><code>rm -rf /etc/openldap/slapd.d/*slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/</code></pre><hr><blockquote><p>设置目录权限, 重启服务</p></blockquote><pre><code>chown -R ldap.ldap /etc/openldap/slapd.dchown -R ldap.ldap /var/lib/ldap/systemctl restart slapd</code></pre><hr><blockquote><p>配置日志</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;&gt;/etc/rsyslog.conf# ldap loglocal4.*    /var/log/slapd/slapd.logEOFsystemctl restart rsyslog</code></pre><hr><h3 id="测试验证-1"><a href="#测试验证-1" class="headerlink" title="测试验证"></a>测试验证</h3><blockquote><p>搜索导入的用户</p></blockquote><pre><code>ldapsearch -x cn=ldapuser1 -b dc=test,dc=comfor user in ldapuser{1..5} feng{1..5}; do    echo &quot;---------- id $user ----------&quot;    ldapsearch -x cn=$user -b dc=test,dc=com    sleep 1    echodone</code></pre><hr><blockquote><p>验证<code>OpenLdap</code>服务端证书的合法性</p></blockquote><pre><code>openssl verify -CAfile /etc/openldap/ssl/cacert.pem /etc/openldap/ssl/ldapcert.pem</code></pre><hr><blockquote><p>确认当前套接字是否能通过CA的验证</p></blockquote><pre><code>openssl s_client -connect ldap2.test.com:636 -showcerts -state -CAfile /etc/openldap/ssl/cacert.pem</code></pre><hr><blockquote><p>验证同步</p></blockquote><pre><code>tail -f /var/log/slapd/slapd.logrm -f /var/lib/ldap/*; systemctl restart slapd;sleep 2; ls /var/lib/ldap/</code></pre><hr><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><blockquote><p>配置<code>hosts</code>解析</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;&gt;/etc/hosts# add ldap server10.0.0.11    ldap.test.com10.0.0.12    ldap2.test.comEOF</code></pre><hr><blockquote><p>安装验证模块</p></blockquote><pre><code>yum install -y sssd krb5-workstation</code></pre><hr><blockquote><p>配置单服务器验证</p></blockquote><pre><code>authconfig \  --enableldap \  --enableldaptls \  --enableldapauth \  --enablemkhomedir \  --ldapserver=&apos;ldaps://ldap.test.com&apos; \  --ldapbasedn=&quot;dc=test,dc=com&quot; \  --ldaploadcacert=http://ldap.test.com/cacert.pem \  --update</code></pre><hr><blockquote><p>配置双服务器验证</p></blockquote><pre><code>authconfig \  --enableldap \  --enableldaptls \  --enableldapauth \  --enablemkhomedir \  --ldapserver=&apos;ldaps://ldap.test.com,ldaps://ldap2.test.com&apos; \  --ldapbasedn=&quot;dc=test,dc=com&quot; \  --ldaploadcacert=http://ldap.test.com/cacert.pem \  --update</code></pre><hr><blockquote><p>验证</p></blockquote><pre><code>id ldapuser1ssh ldapuser1@127.0.0.1</code></pre><hr>]]></content>
      
      <categories>
          
          <category> ldap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openldap </tag>
            
            <tag> ldap </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nginx负载均衡与反向代理配置</title>
      <link href="/posts/nginx-proxy.html"/>
      <url>/posts/nginx-proxy.html</url>
      <content type="html"><![CDATA[<p>[TOC]</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><pre><code>系统：centos7软件版本：nginx-1.12.2配置文件: /etc/nginx/nginx.conf说明：服务器3台分别安装nginx, 第三台配置负载均衡lab-01    IP: 10.0.0.11     nginx_port 8080lab-02    IP: 10.0.0.12     nginx_port 8080lab-03    IP: 10.0.0.13     nginx_port 8080 80</code></pre><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><h3 id="lab-01"><a href="#lab-01" class="headerlink" title="lab-01"></a>lab-01</h3><pre><code># 主机名hostnamectl set-hostname lab-01# 关闭防火墙systemctl stop firewalldsystemctl dieable firewalldsystemctl status firewalld# 关闭selinuxgetenforce 0sed -i &apos;s/^SELINUX=enforcing/SELINUX=disabled/&apos; /etc/selinux/config# 配置YUM源rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repocurl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo# 安装 nginxyum install -y nginx# 修改监听端口为8080 sed -i &apos;30,40 s/listen       80/listen       8080/&apos; /etc/nginx/nginx.conf# 修改日志配置,在日志文件中写入访问者真实IP,而不是负载均衡服务器IPsed -i &apos;s/remote_addr/http_x_real_ip/&apos; /etc/nginx/nginx.conf# 创建主页内容为当前主机名,启动服务echo `hostname` &gt;/usr/share/nginx/html/index.htmlsystemctl start nginx</code></pre><h3 id="lab-02"><a href="#lab-02" class="headerlink" title="lab-02"></a>lab-02</h3><pre><code># 主机名hostnamectl set-hostname lab-02# 关闭防火墙systemctl stop firewalldsystemctl dieable firewalldsystemctl status firewalld# 关闭selinuxgetenforce 0sed -i &apos;s/^SELINUX=enforcing/SELINUX=disabled/&apos; /etc/selinux/config# 配置YUM源rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repocurl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo# 安装 nginxyum install -y nginx# 修改监听端口为8080 sed -i &apos;30,40 s/listen       80/listen       8080/&apos; /etc/nginx/nginx.conf# 修改日志配置,在日志文件中写入访问者真实IP,而不是负载均衡服务器IPsed -i &apos;s/remote_addr/http_x_real_ip/&apos; /etc/nginx/nginx.conf# 创建主页内容为当前主机名,启动服务echo `hostname` &gt;/usr/share/nginx/html/index.htmlsystemctl start nginx</code></pre><h3 id="lab-03"><a href="#lab-03" class="headerlink" title="lab-03"></a>lab-03</h3><pre><code># 主机名hostnamectl set-hostname lab-03# 关闭防火墙systemctl stop firewalldsystemctl dieable firewalldsystemctl status firewalld# 关闭selinuxgetenforce 0sed -i &apos;s/^SELINUX=enforcing/SELINUX=disabled/&apos; /etc/selinux/config# 配置YUM源rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repocurl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo# 安装 nginxyum install -y nginx# 修改监听端口为8080 sed -i &apos;30,40 s/listen       80/listen       8080/&apos; /etc/nginx/nginx.conf# 修改日志配置,在日志文件中写入访问者真实IP,而不是负载均衡服务器IPsed -i &apos;s/remote_addr/http_x_real_ip/&apos; /etc/nginx/nginx.conf# 创建主页内容为当前主机名,启动服务echo `hostname` &gt;/usr/share/nginx/html/index.htmlsystemctl start nginx# 创建负载均衡配置cat &lt;&lt;&apos;EOF&apos;  &gt;/etc/nginx/conf.d/ha.confupstream my-ha {#    ip_hash;    # 对请求的ip进行hash运算并将结果映射到其中一个app，它能确保一个确定的请求ip会被映射到一个确定的服务对session 有要求的可以开启此选项        server 10.0.0.11:8080;        server 10.0.0.12:8080;        server 10.0.0.13:8080;#        server 10.0.0.11:8080 down;       # 表示单前的server暂时不参与负载#        server 10.0.0.12:8080 weight=2;   # 默认为1.weight越大，负载的权重就越大#        server 10.0.0.13:8080 backup;     # 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻    }server {    listen    80;    # server_name www.test.com  # 配置成实际的域名，每个虚拟主机的配置文件域名都相同    # Load configuration files for the default server block.    include /etc/nginx/default.d/*.conf;    location / {        proxy_redirect off;        proxy_set_header Host $host;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_pass http://my-ha;    }    error_page 404 /404.html;        location = /40x.html {    }    error_page 500 502 503 504 /50x.html;        location = /50x.html {    }}EOF# 重启 nginx 服务systemctl restart nginx# 打开浏览器访问http://10.0.0.13</code></pre><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><h3 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h3><pre><code># 主机名hostnamectl set-hostname lab-01# 关闭防火墙systemctl stop firewalldsystemctl dieable firewalldsystemctl status firewalld# 关闭selinuxgetenforce 0sed -i &apos;s/^SELINUX=enforcing/SELINUX=disabled/&apos; /etc/selinux/config# 配置YUM源rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repocurl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo# 安装 nginxyum install -y nginx# 修改监听端口为8080 sed -i &apos;30,40 s/listen       80/listen       8080/&apos; /etc/nginx/nginx.conf</code></pre><h3 id="配置代理-1"><a href="#配置代理-1" class="headerlink" title="配置代理[1]"></a>配置代理[1]</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> &lt;&lt;'EOF'   &gt;/etc/nginx/<span class="keyword">conf</span>.<span class="keyword">d</span>/proxy.<span class="keyword">conf</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8083;</span><br><span class="line">    server_name doc.onlycloud.xin;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-<span class="keyword">For</span> <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_pass http:<span class="comment">//192.168.2.3;</span></span><br><span class="line">    &#125;</span><br><span class="line">    access_log /<span class="keyword">var</span>/<span class="keyword">log</span>/nginx/doc.onlycloud.xin.<span class="keyword">log</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8087;</span><br><span class="line">    server_name filerun.onlycloud.xin;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-<span class="keyword">For</span> <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_pass http:<span class="comment">//192.168.2.7;</span></span><br><span class="line">    &#125;</span><br><span class="line">    access_log /<span class="keyword">var</span>/<span class="keyword">log</span>/nginx/filerun.onlycloud.xin.<span class="keyword">log</span>;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建日志文件"><a href="#创建日志文件" class="headerlink" title="创建日志文件"></a>创建日志文件</h3><pre><code>touch /var/log/nginx/doc.onlycloud.xin.logtouch /var/log/nginx/filerun.onlycloud.xin.log</code></pre><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><pre><code>systemctl restart nginx</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre><code># hosts 添加域名对应的解析访问http://doc.onlycloud.xin:8083  或者 http://服务器IP:8083http://filerun.onlycloud.xin:8087  或者 http://服务器IP:8087</code></pre><h3 id="配置代理-2"><a href="#配置代理-2" class="headerlink" title="配置代理[2]"></a>配置代理[2]</h3><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF  &gt;/etc/nginx/conf.d/mirrors.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">8090</span>;</span><br><span class="line">    <span class="meta">#listen [::]:80;</span></span><br><span class="line">    autoindex on;</span><br><span class="line">    autoindex_exact_size off;</span><br><span class="line">    autoindex_localtime on;</span><br><span class="line">    server_name mirrors.test.com;</span><br><span class="line">    <span class="keyword">index</span> <span class="keyword">index</span>.html <span class="keyword">index</span>.htm <span class="keyword">index</span>.php <span class="keyword">default</span>.html <span class="keyword">default</span>.htm <span class="keyword">default</span>.php;</span><br><span class="line">    root  /home/wwwroot/html;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">location</span> /ubuntu/ &#123;</span><br><span class="line">        proxy_pass http:<span class="comment">//mirrors.aliyun.com/ubuntu/;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">location</span> /centos/ &#123;</span><br><span class="line">        proxy_pass http:<span class="comment">//mirrors.aliyun.com/centos/;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">location</span> /epel/ &#123;</span><br><span class="line">        proxy_pass http:<span class="comment">//mirrors.aliyun.com/epel/;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><pre><code>mkdir -p /home/wwwroot/html/{centos,ubuntu,epel}chown nginx:nginx /home/wwwroot/html/ -R</code></pre><h3 id="重启服务-1"><a href="#重启服务-1" class="headerlink" title="重启服务"></a>重启服务</h3><pre><code>systemctl restart nginx</code></pre><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><pre><code>http://服务器IP:8090</code></pre>]]></content>
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx负载均衡 </tag>
            
            <tag> nginx反向代理 </tag>
            
            <tag> proxy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MySql-MHA</title>
      <link href="/posts/mysql-mha.html"/>
      <url>/posts/mysql-mha.html</url>
      <content type="html"><![CDATA[<p>[TOC]</p><h3 id="MHA介绍"><a href="#MHA介绍" class="headerlink" title="MHA介绍"></a>MHA介绍</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    该软件由两部分组成：MHA Manager（管理节点）和MHA <span class="keyword">Node</span><span class="title">（数据节点）。MHA</span> Manager可以单独部署在一台独立的机器上管理多个<span class="literal">master</span>-<span class="literal">slave</span>集群，也可以部署</span><br><span class="line">在一台<span class="literal">slave</span>节点上。MHA <span class="keyword">Node</span><span class="title">运行在每台MySQL</span>服务器上，MHA Manager会定时探测集群中的<span class="literal">master</span>节点，当<span class="literal">master</span>出现故障时，它可以自动将最新数据的<span class="literal">slave</span>提升为新的</span><br><span class="line"><span class="literal">master</span>，然后将所有其他的<span class="literal">slave</span>重新指向新的<span class="literal">master</span>。整个故障转移过程对应用程序完全透明。</span><br><span class="line"></span><br><span class="line">    在MHA自动故障切换过程中，MHA试图从宕机的主服务器上保存二进制日志，最大程度的保证数据的不丢失，但这并不总是可行的。例如，如果主服务器硬件故障或无法通过</span><br><span class="line">ssh访问，MHA没法保存二进制日志，只进行故障转移而丢失了最新的数据。使用MySQL <span class="number">5.5</span>的半同步复制，可以大大降低数据丢失的风险。MHA可以与半同步复制结合起来。如果</span><br><span class="line">只有一个<span class="literal">slave</span>已经收到了最新的二进制日志，MHA可以将最新的二进制日志应用于其他所有的<span class="literal">slave</span>服务器上，因此可以保证所有节点的数据一致性。</span><br><span class="line"></span><br><span class="line">    目前MHA主要支持一主多从的架构，要搭建MHA,要求一个复制集群中必须最少有三台数据库服务器，一主二从，即一台充当<span class="literal">master</span>，一台充当备用<span class="literal">master</span>，另外一台充当从</span><br><span class="line">库，因为至少需要三台服务器，出于机器成本的考虑，淘宝也在该基础上进行了改造，目前淘宝TMHA已经支持一主一从。</span><br><span class="line"></span><br><span class="line">故障切换原理：</span><br><span class="line">    假如MySQL MHA架构运行正常，突然在上午<span class="number">10</span>：<span class="number">00</span>一个复制组中的A的MySQL服务 down了！</span><br><span class="line">    因为AB复制是异步复制，所以可能有一些数据尚没有被B拉到其relay_log中,即AB数据不一致，MHA是怎样解决这种情况的呢？</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>.mha_manager 使用scp命令将A当前binlog拷贝到mha_manager</span><br><span class="line"></span><br><span class="line">       <span class="number">2</span>.待新A（选举：依据谁的relay_log新）产生后，mha_manager将旧A的binlog和新的relay_log做比对，并进行差异还原以保证新A和旧A数据的一致性</span><br><span class="line"></span><br><span class="line">       <span class="number">3</span>.mha_manager将拿到的旧A的binlog去找复制组中其他B 做差异还原，保证数据的一致性</span><br><span class="line"></span><br><span class="line">  注意：mha_manager 每执行一次 failover 后，该进程自动退出。如果还想测试failover需要重新开启---开启前要将以下文件删掉：(lab03)/etc/mha/mha.failover.complete</span><br></pre></td></tr></table></figure><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><pre><code>系统：centos7_1804lab01: 10.0.0.11  master  mha4mysql-nodelab02: 10.0.0.12  slave1  mha4mysql-nodelab03: 10.0.0.13  slave2  mha4mysql-node mha4mysql-managerlab04: 10.0.0.14  haproxy [node2, node3] (备读)  VIP: 10.0.0.10  [node1, node2](主写)配置步骤：  1. 配置相互ssh密钥登陆  2. 主从复制 master:[lab01]  slave:[lab02, lab03]  3. 安装 mha node:[lab01, lab02, lab03]  manager:[lab03]  4. 测试</code></pre><h3 id="配置ssh密钥登陆"><a href="#配置ssh密钥登陆" class="headerlink" title="配置ssh密钥登陆"></a>配置ssh密钥登陆</h3><blockquote><p>生成密钥,安装自动交互工具<code>所有节点执行</code></p></blockquote><pre><code>[ -f ~/.ssh/id_dsa ] || { ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa;}[ -f /usr/bin/expect ] || { yum install -y expect;}</code></pre><hr><blockquote><p>发送公钥到远程主机<code>所有节点执行</code>（实际上只需要控制节点能无需密码登陆从节点即可）</p></blockquote><pre><code># 远程主机root密码rootpass=123.comSSH_KEY(){/usr/bin/expect &lt;&lt;EOFset timeout 30spawn ssh-copy-id -i /root/.ssh/id_dsa.pub root@$1expect {    &quot;(yes/no)?&quot; { send &quot;yes\r&quot;; exp_continue }    &quot;password:&quot; { send &quot;$rootpass\r&quot; }}expect eofEOF}for ip in 10.0.0.{11..13};do    SSH_KEY $ipdone</code></pre><hr><h3 id="安装MySql"><a href="#安装MySql" class="headerlink" title="安装MySql"></a>安装MySql</h3><blockquote><p>配置<a href="https://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">安装源</a><code>所有节点</code></p></blockquote><pre><code>yum install -y https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm    # 安装mysql软件安装源yum repolist all | grep mysql                     # 查看所有 mysql 子存储库yum install -y yum-utils                          # 安装 yum 配置工具管理 YUM 源yum-config-manager --disable mysql80-community    # 禁用 mysql80 子存储库yum-config-manager --enable mysql57-community     # 启用 mysql57 子存储库yum repolist enabled | grep mysql                 # 查看已启用的 mysql 子存储库</code></pre><hr><blockquote><p>安装 mysql-5.7 启动服务<code>所有节点</code></p></blockquote><pre><code>yum install -y mysql-community-serversystemctl start mysqld</code></pre><hr><h3 id="配置主从复制"><a href="#配置主从复制" class="headerlink" title="配置主从复制"></a>配置主从复制</h3><blockquote><p>lab01 操作; 开启二进制日志,设置 server-id,启动服务,更改root密码及授权,创建同步用户及授权</p></blockquote><pre><code># 开启二进制日志(注意 server-id 唯一)cp /etc/my.cnf{,.bak}cat &lt;&lt;EOF  &gt;&gt;/etc/my.cnf# binlogserver-id = 1log-bin = mysql-binlog-bin-index = master-bin.indexEOF# 重启服务,跟随系统启动systemctl restart mysqldsystemctl enable mysqldsystemctl status mysqld# 更改root密码,开启root用户远程登陆授权(密码：Hc.1234456)grep &apos;temporary password&apos; /var/log/mysqld.log    # 查看初始化密码def_pass=$(grep &apos;temporary password&apos; /var/log/mysqld.log | awk &apos;{print $NF}&apos;)ChangePass=&quot;alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;Hc.123456&apos;;&quot;mysql -uroot -p$def_pass -e &quot;$ChangePass&quot; --connect-expired-passwordAuthor=&quot;grant all privileges on *.* to root@&apos;%&apos; identified by &apos;Hc.123456&apos; with grant option;&quot;mysql -uroot -pHc.123456 -e &quot;$Author&quot;# 创建同步账号,授权mysql -uroot -pHc.123456create user &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;grant replication slave on *.* to &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;flush privileges;show master status;exit# mysql&gt; show master status;  # 记录下二进制日志文件名及偏移量+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000001 |     1390 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+</code></pre><hr><blockquote><p>lab02 操作; 开启二进制日志,设置 server-id,启动服务,更改root密码及授权,创建同步用户及授权,配置连接lab01</p></blockquote><pre><code># 开启二进制日志(注意 server-id 唯一)cp /etc/my.cnf{,.bak}cat &lt;&lt;EOF  &gt;&gt;/etc/my.cnf# binlogserver-id = 2log-bin = mysql-binlog-bin-index = master-bin.indexEOF# 重启服务,跟随系统启动systemctl restart mysqldsystemctl enable mysqldsystemctl status mysqld# 更改root密码,开启root用户远程登陆授权(密码：Hc.1234456)grep &apos;temporary password&apos; /var/log/mysqld.log    # 查看初始化密码def_pass=$(grep &apos;temporary password&apos; /var/log/mysqld.log | awk &apos;{print $NF}&apos;)ChangePass=&quot;alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;Hc.123456&apos;;&quot;mysql -uroot -p$def_pass -e &quot;$ChangePass&quot; --connect-expired-passwordAuthor=&quot;grant all privileges on *.* to root@&apos;%&apos; identified by &apos;Hc.123456&apos; with grant option;&quot;mysql -uroot -pHc.123456 -e &quot;$Author&quot;# 创建同步账号,授权,配置连接lab01mysql -uroot -pHc.123456create user &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;grant replication slave on *.* to &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;flush privileges;change master to master_host=&apos;10.0.0.11&apos;,  # lab01数据库 IP或主机名(需解析通)master_port=3306,                          # lab01数据库端口号master_user=&apos;sync&apos;,                        # 同步账号master_password=&apos;Hc.123456&apos;,               # 同步账号的密码master_log_file=&apos;mysql-bin.000001&apos;,        # lab01数据库执行 show master status; 获取的二进制日志文件名master_log_pos=1390;                       # lab01数据库执行 show master status; 获取的二进制日志偏移量start slave;                               # 启动slaveshow slave status\G;                       # 查看同步状态exit</code></pre><hr><blockquote><p>lab03 操作; 开启二进制日志,设置 server-id,启动服务,更改root密码及授权,创建同步用户及授权,配置连接lab01</p></blockquote><pre><code># 开启二进制日志(注意 server-id 唯一)cp /etc/my.cnf{,.bak}cat &lt;&lt;EOF  &gt;&gt;/etc/my.cnf# binlogserver-id = 3log-bin = mysql-binlog-bin-index = master-bin.indexEOF# 重启服务,跟随系统启动systemctl restart mysqldsystemctl enable mysqldsystemctl status mysqld# 更改root密码,开启root用户远程登陆授权(密码：Hc.1234456)grep &apos;temporary password&apos; /var/log/mysqld.log    # 查看初始化密码def_pass=$(grep &apos;temporary password&apos; /var/log/mysqld.log | awk &apos;{print $NF}&apos;)ChangePass=&quot;alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;Hc.123456&apos;;&quot;mysql -uroot -p$def_pass -e &quot;$ChangePass&quot; --connect-expired-passwordAuthor=&quot;grant all privileges on *.* to root@&apos;%&apos; identified by &apos;Hc.123456&apos; with grant option;&quot;mysql -uroot -pHc.123456 -e &quot;$Author&quot;# 创建同步账号,授权,配置连接lab01mysql -uroot -pHc.123456create user &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;grant replication slave on *.* to &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;flush privileges;change master to master_host=&apos;10.0.0.11&apos;,  # lab01数据库 IP或主机名(需解析通)master_port=3306,                          # lab01数据库端口号master_user=&apos;sync&apos;,                        # 同步账号master_password=&apos;Hc.123456&apos;,               # 同步账号的密码master_log_file=&apos;mysql-bin.000001&apos;,        # lab01数据库执行 show master status; 获取的二进制日志文件名master_log_pos=1390;                       # lab01数据库执行 show master status; 获取的二进制日志偏移量start slave;                               # 启动slaveshow slave status\G;                       # 查看同步状态exit</code></pre><hr><h3 id="安装-MHA"><a href="#安装-MHA" class="headerlink" title="安装 MHA"></a>安装 MHA</h3><blockquote><p>所有节点安装<code>mha4mysql-node</code></p></blockquote><pre><code># yum install -y https://github.com/yoshinorim/mha4mysql-node/releases/download/v0.58/mha4mysql-node-0.58-0.el7.centos.noarch.rpmcurl http://117.50.70.211:88/attach_files/sql/12 -o mha4mysql-node-0.58-0.el7.centos.noarch.rpmyum install -y mha4mysql-node-0.58-0.el7.centos.noarch.rpm</code></pre><hr><blockquote><p>lab03安装<code>mha4mysql-manager</code></p></blockquote><pre><code># yum install -y https://github.com/yoshinorim/mha4mysql-manager/releases/download/v0.58/mha4mysql-manager-0.58-0.el7.centos.noarch.rpmcurl http://117.50.70.211:88/attach_files/sql/12 -o mha4mysql-manager-0.58-0.el7.centos.noarch.rpmyum install -y mha4mysql-manager-0.58-0.el7.centos.noarch.rpm</code></pre><hr><h3 id="配置-MHA-lab03"><a href="#配置-MHA-lab03" class="headerlink" title="配置 MHA(lab03)"></a>配置 MHA(lab03)</h3><blockquote><p>创建配置文件</p></blockquote><pre><code># 创建日志路径及文件mkdir /etc/mhatouch /etc/mha/manager.log# 创建配置文件cat &lt;&lt;EOF   &gt;/etc/mha/mha.cnf[server default]# mysql admin account and passworduser=rootpassword=Hc.123456# mha workdir  and worklogmanager_workdir=/etc/mhamanager_log=/etc/mha/manager.log# mysql A/B account and pwrepl_user=syncrepl_password=Hc.123456# check_mha_node timeping_interval=1# ssh accountssh_user=root# mha change VIP#report_script=/etc/mha/send_report#master_ip_failover_script=/etc/mha/master_ip_failover#master_ip_online_change_script=/etc/mha/master_ip_online_change[server1]hostname=10.0.0.11ssh_port=22master_binlog_dir=/var/lib/mysqlcandidate_master=1[server2]hostname=10.0.0.12ssh_port=22master_binlog_dir=/var/lib/mysqlcandidate_master=1[server3]hostname=10.0.0.13ssh_port=22master_binlog_dir=/var/lib/mysqlcandidate_master=2EOF</code></pre><hr><blockquote><p>创建服务器启动脚本</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;/etc/mha/mha_start#!/bin/bash/usr/bin/nohup /usr/bin/masterha_manager --conf=/etc/mha/mha.cnf &gt;/tmp/mha_manager.log 2&gt;&amp;1 &amp;EOFchmod +x /etc/mha/mha_start</code></pre><hr><blockquote><p>检测ssh密钥登陆配置</p></blockquote><pre><code>masterha_check_ssh --conf=/etc/mha/mha.cnf</code></pre><hr><blockquote><p>检测数据库复制</p></blockquote><pre><code>masterha_check_repl --conf=/etc/mha/mha.cnf</code></pre><hr><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>测试故障恢复;</p></blockquote><pre><code>1. lab03 启动 masterha_manager 服务2. lab01 关闭 mysqld 服务3. lab03 上验证当前 master4. 恢复 lab01(slave)5. 设置 lab01 为 master6. lab03 启动 masterha_manager 服务</code></pre><hr><blockquote><p>1.<code>lab03</code>启动 <code>masterha_manager</code>服务</p></blockquote><pre><code>/etc/mha/mha_start              # 启动 masterha_manager 服务ps aux | grep masterhatail -f /tmp/mha_manager.log    # 查看 masterha_manager 实时日志</code></pre><hr><blockquote><p>2.<code>lab01</code>关闭<code>mysql</code>服务</p></blockquote><pre><code>systemctl stop mysqld</code></pre><hr><blockquote><p>3.<code>lab03</code>验证</p></blockquote><pre><code>mysql -uroot -pHc.123456 -e &apos;show slave status\G;&apos; | grep Master_Host</code></pre><hr><blockquote><p>4.<code>lab01</code>恢复为<code>slave</code></p></blockquote><pre><code>systemctl start mysqldssh 10.0.0.13  &apos;grep -i change /etc/mha/manager.log&apos;    # 查看管理节点上的恢复参数mysql -uroot -pHc.123456CHANGE MASTER TO MASTER_HOST=&apos;10.0.0.12&apos;,MASTER_PORT=3306,MASTER_LOG_FILE=&apos;mysql-bin.000001&apos;,    # 替换此处为 manager.log 对应参数MASTER_LOG_POS=1390,                   # 替换此处为 manager.log 对应参数MASTER_USER=&apos;sync&apos;,MASTER_PASSWORD=&apos;Hc.123456&apos;;           # 替换此处为同步用户密码start slave;show slave status\G;</code></pre><hr><blockquote><p>5.设置 lab01 为 master</p></blockquote><pre><code># lab03 执行rm -f /etc/mha/mha.failover.complete/etc/mha/mha_start              # 启动 masterha_manager 服务ps aux | grep masterhatail -f /tmp/mha_manager.log    # 查看 masterha_manager 实时日志# lab02关闭mysld服务(lab02执行)systemctl stop mysqld# lab03 验证(lab03执行)mysql -uroot -pHc.123456 -e &apos;show slave status\G;&apos; | grep Master_Host# 恢复lab02(lab02执行)systemctl start mysqldssh 10.0.0.13  &apos;grep -i change /etc/mha/manager.log&apos;    # 查看管理节点上的恢复参数mysql -uroot -pHc.123456CHANGE MASTER TO MASTER_HOST=&apos;10.0.0.11&apos;,MASTER_PORT=3306,MASTER_LOG_FILE=&apos;mysql-bin.000002&apos;,    # 替换此处为 manager.log 对应参数MASTER_LOG_POS=154,                    # 替换此处为 manager.log 对应参数MASTER_USER=&apos;sync&apos;,MASTER_PASSWORD=&apos;Hc.123456&apos;;           # 替换此处为同步用户密码start slave;show slave status\G;</code></pre><hr><blockquote><p>6.<code>lab03</code>启动<code>masterha_manager</code>服务</p></blockquote><pre><code>rm -f /etc/mha/mha.failover.complete/etc/mha/mha_start              # 启动 masterha_manager 服务ps aux | grep masterhatail -f /tmp/mha_manager.log    # 查看 masterha_manager 实时日志</code></pre><hr><h3 id="创建VIP切换脚本"><a href="#创建VIP切换脚本" class="headerlink" title="创建VIP切换脚本"></a>创建VIP切换脚本</h3><blockquote><p>lab03 当主从切换时触发脚本执行删除/添加 VIP</p></blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span>   &gt;<span class="regexp">/etc/mha</span><span class="regexp">/master_ip_failover</span></span><br><span class="line"><span class="regexp">#!/usr</span><span class="regexp">/bin/env</span> perl</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings <span class="string">FATAL =&gt;</span> <span class="string">'all'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> Getopt::Long;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">my</span> (</span><br><span class="line">    $command,          $ssh_user,        $orig_master_host, $orig_master_ip,</span><br><span class="line">    $orig_master_port, $new_master_host, $new_master_ip,    $new_master_port</span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">my</span> $vip = <span class="string">'10.0.0.10/24'</span>;</span><br><span class="line"><span class="keyword">my</span> $nic = <span class="string">'ens32'</span>;</span><br><span class="line"><span class="keyword">my</span> $key = <span class="string">'6'</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_start_vip = <span class="string">"/sbin/ifconfig $nic:$key $vip"</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_stop_vip = <span class="string">"/sbin/ifconfig $nic:$key down"</span>;</span><br><span class="line"> </span><br><span class="line">GetOptions(</span><br><span class="line">    <span class="string">'command=s'</span>          =&gt; \$command,</span><br><span class="line">    <span class="string">'ssh_user=s'</span>         =&gt; \$ssh_user,</span><br><span class="line">    <span class="string">'orig_master_host=s'</span> =&gt; \$orig_master_host,</span><br><span class="line">    <span class="string">'orig_master_ip=s'</span>   =&gt; \$orig_master_ip,</span><br><span class="line">    <span class="string">'orig_master_port=i'</span> =&gt; \$orig_master_port,</span><br><span class="line">    <span class="string">'new_master_host=s'</span>  =&gt; \$new_master_host,</span><br><span class="line">    <span class="string">'new_master_ip=s'</span>    =&gt; \$new_master_ip,</span><br><span class="line">    <span class="string">'new_master_port=i'</span>  =&gt; \$new_master_port,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span> &amp;main();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"\n\nIN SCRIPT TEST====$ssh_stop_vip==$ssh_start_vip===\n\n"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( $command eq <span class="string">"stop"</span> || $command eq <span class="string">"stopssh"</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Disabling the VIP on old master: $orig_master_host \n"</span>;</span><br><span class="line">            &amp;stop_vip();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> <span class="string">"Got Error: $@\n"</span>;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">"start"</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Enabling the VIP - $vip on the new master - $new_master_host \n"</span>;</span><br><span class="line">            &amp;start_vip();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> $@;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">"status"</span> ) &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Checking the Status of the script.. OK \n"</span>;</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        &amp;usage();</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">start_vip</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $ssh_user\@$new_master_host \" $ssh_start_vip \"`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">stop_vip</span>() </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>  <span class="keyword">unless</span>  ($ssh_user);</span><br><span class="line">    <span class="string">`ssh $ssh_user\@$orig_master_host \" $ssh_stop_vip \"`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">usage</span> </span>&#123;</span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">    <span class="string">"Usage: master_ip_failover --command=start|stop|stopssh|status --orig_master_host=host --orig_master_ip=ip </span></span><br><span class="line"><span class="string">            --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="keyword">chmod</span> +<span class="keyword">x</span> /etc/mha/master_ip_failover</span><br></pre></td></tr></table></figure><hr><blockquote><p>开启切换主从时触发脚本VIP</p></blockquote><pre><code>sed -i &apos;s/#master_ip_failover_script/master_ip_failover_script/&apos; /etc/mha/mha.cnf</code></pre><hr><h3 id="节点快速恢复"><a href="#节点快速恢复" class="headerlink" title="节点快速恢复"></a>节点快速恢复</h3><pre><code>systemctl start mysqldmysql  -uroot -pHc.123456 -e &apos;stop slave;&apos;mysql  -uroot -pHc.123456 -e &apos;reset slave;&apos;echo  $(ssh 10.0.0.13  &apos;grep -i change /etc/mha/manager.log&apos; | awk -F &apos;be: &apos; &apos;{print $2}&apos; | tail -n 2) &gt;/tmp/bin.logsed -i &apos;s/xxx/Hc.123456/&apos; /tmp/bin.logsql=$(cat /tmp/bin.log)mysql  -uroot -pHc.123456 -e &quot;$sql&quot;mysql  -uroot -pHc.123456 -e &apos;start slave;&apos;mysql  -uroot -pHc.123456 -e &apos;show slave status\G;&apos;</code></pre><h3 id="slave集群"><a href="#slave集群" class="headerlink" title="slave集群"></a>slave集群</h3><blockquote><p>lab04安装 haproxy ; 代理 lab02 lab03 数据库读请求</p></blockquote><pre><code>yum -y install haproxy</code></pre><hr><h3 id="配置haproxy"><a href="#配置haproxy" class="headerlink" title="配置haproxy"></a>配置haproxy</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/haproxy/haproxy.cfg&#123;,.bak&#125;</span><br><span class="line">cat &lt;&lt;! &gt;/etc/haproxy/haproxy.cfg</span><br><span class="line">############ 全局配置 ############</span><br><span class="line">global</span><br><span class="line">log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local0</span><br><span class="line">log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local1 notice</span><br><span class="line">daemon</span><br><span class="line">nbproc <span class="number">1</span>       # 进程数量</span><br><span class="line">maxconn <span class="number">4096</span>   # 最大连接数</span><br><span class="line">user haproxy   # 运行用户</span><br><span class="line">group haproxy  # 运行组</span><br><span class="line">chroot /var/lib/haproxy</span><br><span class="line">pidfile /var/run/haproxy.pid</span><br><span class="line"></span><br><span class="line">############ 默认配置 ############</span><br><span class="line">defaults</span><br><span class="line">log global</span><br><span class="line">mode http            # 默认模式&#123; tcp|http|health &#125;</span><br><span class="line">option httplog       # 日志类别,采用httplog</span><br><span class="line">option dontlognull   # 不记录健康检查日志信息</span><br><span class="line">retries <span class="number">2</span>            # <span class="number">2</span>次连接失败不可用</span><br><span class="line">option forwardfor except <span class="number">127.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">8</span>    # 后端服务获得真实ip</span><br><span class="line">option httpclose     # 请求完毕后主动关闭http通道</span><br><span class="line">option abortonclose  # 服务器负载很高，自动结束比较久的链接</span><br><span class="line">option redispatch</span><br><span class="line">maxconn <span class="number">4096</span>         # 最大连接数</span><br><span class="line">timeout connect <span class="number">5</span>m   # 连接超时</span><br><span class="line">timeout client <span class="number">1</span>m    # 客户端超时</span><br><span class="line">timeout server <span class="number">31</span>m   # 服务器超时</span><br><span class="line">timeout check <span class="number">10</span>s    # 心跳检测超时</span><br><span class="line">balance roundrobin   # 负载均衡方式，轮询</span><br><span class="line"></span><br><span class="line">########## 统计页面配置 ##########</span><br><span class="line">listen stats</span><br><span class="line">  bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1080</span></span><br><span class="line">  mode http</span><br><span class="line">  option httplog</span><br><span class="line">  log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local0 err</span><br><span class="line">  maxconn <span class="number">10</span>               # 最大连接数</span><br><span class="line">  stats refresh <span class="number">30</span>s</span><br><span class="line">  stats uri /admin         #状态页面 http<span class="comment">//ip:1080/admin 访问</span></span><br><span class="line">  stats realm Haproxy\ Statistics</span><br><span class="line">  stats auth admin:admin   # 用户和密码:admin</span><br><span class="line">  stats hide-version       # 隐藏版本信息</span><br><span class="line">  stats admin <span class="keyword">if</span> TRUE      # 设置手工启动/禁用</span><br><span class="line"></span><br><span class="line">listen MYSQL-HA</span><br><span class="line">  mode tcp</span><br><span class="line">  option  tcplog</span><br><span class="line">  bind <span class="number">10.0</span><span class="number">.0</span><span class="number">.14</span>:<span class="number">3306</span></span><br><span class="line">  balance leastconn</span><br><span class="line">  option mysql-check user root</span><br><span class="line">  server <span class="number">10.0</span><span class="number">.0</span><span class="number">.12</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.12</span>:<span class="number">3306</span> inter <span class="number">1</span>s rise <span class="number">2</span> fall <span class="number">2</span></span><br><span class="line">  server <span class="number">10.0</span><span class="number">.0</span><span class="number">.13</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.13</span>:<span class="number">3306</span> inter <span class="number">1</span>s rise <span class="number">2</span> fall <span class="number">2</span></span><br><span class="line">!</span><br></pre></td></tr></table></figure><h4 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> &lt;&lt;'!' &gt;/etc/rsyslog.<span class="keyword">d</span>/haproxy.<span class="keyword">conf</span></span><br><span class="line"><span class="variable">$ModLoad</span> imudp</span><br><span class="line"><span class="variable">$UDPServerRun</span> 514</span><br><span class="line"><span class="variable">$template</span> Haproxy,<span class="string">"%rawmsg% \n"</span></span><br><span class="line">local0.=info -/<span class="keyword">var</span>/<span class="keyword">log</span>/haproxy.<span class="keyword">log</span>;Haproxy</span><br><span class="line">local0.notice -/<span class="keyword">var</span>/<span class="keyword">log</span>/haproxy-status.<span class="keyword">log</span>;Haproxy</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line"># 重启日志服务</span><br><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure><h4 id="设置启动方式"><a href="#设置启动方式" class="headerlink" title="设置启动方式"></a>设置启动方式</h4><pre><code># 允许没VIP时启动(如果没有配置此项且应用会导致 haproxy 服务无法启动)echo &quot;net.ipv4.ip_nonlocal_bind = 1&quot; &gt;&gt;/etc/sysctl.confsysctl -p</code></pre><hr><blockquote><p>服务管理</p></blockquote><pre><code>systemctl start haproxy     # 启动服务systemctl enable haproxy    # 随系统启动systemctl status haproxy    # 运行状态</code></pre><hr><h3 id="配置手动切换主从"><a href="#配置手动切换主从" class="headerlink" title="配置手动切换主从"></a>配置手动切换主从</h3><blockquote><p>创建 VIP 切换脚本(使用 perl 脚本 1)</p></blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span>   &gt;<span class="regexp">/etc/mha</span><span class="regexp">/master_ip_online_change</span></span><br><span class="line"><span class="regexp">#!/usr</span><span class="regexp">/bin/env</span> perl</span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings <span class="string">FATAL =&gt;</span><span class="string">'all'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> Getopt::Long;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> $vip = <span class="string">'10.0.0.10/24'</span>;  <span class="comment"># Virtual IP</span></span><br><span class="line"><span class="keyword">my</span> $nic = <span class="string">'ens32'</span>;</span><br><span class="line"><span class="keyword">my</span> $key = <span class="string">"6"</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_start_vip = <span class="string">"/sbin/ifconfig $nic:$key $vip"</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_stop_vip = <span class="string">"/sbin/ifconfig $nic:$key down"</span>;</span><br><span class="line"><span class="keyword">my</span> $exit_code = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> (</span><br><span class="line">    $command,              $orig_master_is_new_slave, $orig_master_host,</span><br><span class="line">    $orig_master_ip,       $orig_master_port,         $orig_master_user,</span><br><span class="line">    $orig_master_password, $orig_master_ssh_user,     $new_master_host,</span><br><span class="line">    $new_master_ip,        $new_master_port,          $new_master_user,</span><br><span class="line">    $new_master_password,  $new_master_ssh_user,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">GetOptions(</span><br><span class="line">    <span class="string">'command=s'</span>                =&gt; \$command,</span><br><span class="line">    <span class="string">'orig_master_is_new_slave'</span> =&gt; \$orig_master_is_new_slave,</span><br><span class="line">    <span class="string">'orig_master_host=s'</span>       =&gt; \$orig_master_host,</span><br><span class="line">    <span class="string">'orig_master_ip=s'</span>         =&gt; \$orig_master_ip,</span><br><span class="line">    <span class="string">'orig_master_port=i'</span>       =&gt; \$orig_master_port,</span><br><span class="line">    <span class="string">'orig_master_user=s'</span>       =&gt; \$orig_master_user,</span><br><span class="line">    <span class="string">'orig_master_password=s'</span>   =&gt; \$orig_master_password,</span><br><span class="line">    <span class="string">'orig_master_ssh_user=s'</span>   =&gt; \$orig_master_ssh_user,</span><br><span class="line">    <span class="string">'new_master_host=s'</span>        =&gt; \$new_master_host,</span><br><span class="line">    <span class="string">'new_master_ip=s'</span>          =&gt; \$new_master_ip,</span><br><span class="line">    <span class="string">'new_master_port=i'</span>        =&gt; \$new_master_port,</span><br><span class="line">    <span class="string">'new_master_user=s'</span>        =&gt; \$new_master_user,</span><br><span class="line">    <span class="string">'new_master_password=s'</span>    =&gt; \$new_master_password,</span><br><span class="line">    <span class="string">'new_master_ssh_user=s'</span>    =&gt; \$new_master_ssh_user,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span> &amp;main();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">#print "\n\nIN SCRIPT TEST====$ssh_stop_vip==$ssh_start_vip===\n\n";</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( $command eq <span class="string">"stop"</span> || $command eq <span class="string">"stopssh"</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># $orig_master_host, $orig_master_ip, $orig_master_port are passed.</span></span><br><span class="line">        <span class="comment"># If you manage master ip address at global catalog database,</span></span><br><span class="line">        <span class="comment"># invalidate orig_master_ip here.</span></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"\n\n\n***************************************************************\n"</span>;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Disabling the VIP - $vip on old master: $orig_master_host\n"</span>;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"***************************************************************\n\n\n\n"</span>;</span><br><span class="line">            &amp;stop_vip();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> <span class="string">"Got Error: $@\n"</span>;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">"start"</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># all arguments are passed.</span></span><br><span class="line">        <span class="comment"># If you manage master ip address at global catalog database,</span></span><br><span class="line">        <span class="comment"># activate new_master_ip here.</span></span><br><span class="line">        <span class="comment"># You can also grant write access (create user, set read_only=0, etc) here.</span></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"\n\n\n***************************************************************\n"</span>;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Enabling the VIP - $vip on new master: $new_master_host \n"</span>;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"***************************************************************\n\n\n\n"</span>;</span><br><span class="line">            &amp;start_vip();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> $@;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">"status"</span> ) &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Checking the Status of the script.. OK \n"</span>;</span><br><span class="line">        <span class="string">`ssh $orig_master_ssh_user\@$orig_master_host \" $ssh_start_vip \"`</span>;</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        &amp;usage();</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A simple system call that enable the VIP on the new master</span></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">start_vip</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $new_master_ssh_user\@$new_master_host \" $ssh_start_vip \"`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A simple system call that disable the VIP on the old_master</span></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">stop_vip</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $orig_master_ssh_user\@$orig_master_host \" $ssh_stop_vip \"`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">usage</span> </span>&#123;</span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">        <span class="string">"Usage: master_ip_failover –command=start|stop|stopssh|status –orig_master_host=host –orig_master_ip=ip –orig_master_port=po</span></span><br><span class="line"><span class="string">        rt –new_master_host=host –new_master_ip=ip –new_master_port=port\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可执行权限</span></span><br><span class="line"><span class="keyword">chmod</span> +<span class="keyword">x</span> /etc/mha/master_ip_online_change</span><br></pre></td></tr></table></figure><hr><blockquote><p>创建 VIP 切换脚本(使用 shell 脚本 2)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF   &gt;/etc/mha/master_ip_online_change.sh</span><br><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"><span class="built_in">source</span> /root/.bash_profile</span><br><span class="line"> </span><br><span class="line">vip=<span class="string">'10.0.0.10/24'</span>  <span class="comment"># Virtual IP</span></span><br><span class="line">nic=<span class="string">'ens32'</span></span><br><span class="line">key=6</span><br><span class="line"> </span><br><span class="line"><span class="built_in">command</span>=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$1</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">orig_master_host=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$2</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">new_master_host=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$7</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">orig_master_ssh_user=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;12&#125;</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">new_master_ssh_user=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;13&#125;</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"> </span><br><span class="line">stop_vip=<span class="string">"ssh root@<span class="variable">$orig_master_host</span> /sbin/ifconfig  <span class="variable">$nic</span>:<span class="variable">$key</span>  down"</span></span><br><span class="line">start_vip=<span class="string">"ssh root@<span class="variable">$new_master_host</span> /sbin/ifconfig  <span class="variable">$nic</span>:<span class="variable">$key</span>  <span class="variable">$vip</span>"</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$command</span> = <span class="string">'stop'</span> ]</span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"\n\n\n***************************************************************\n"</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"Disabling the VIP - <span class="variable">$vip</span> on old master: <span class="variable">$orig_master_host</span>\n"</span></span><br><span class="line">   <span class="variable">$stop_vip</span></span><br><span class="line">   <span class="keyword">if</span> [ $? -eq 0 ]</span><br><span class="line">      <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Disabled the VIP successfully"</span></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Disabled the VIP failed"</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"***************************************************************\n\n\n\n"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$command</span> = <span class="string">'start'</span> -o <span class="variable">$command</span> = <span class="string">'status'</span> ]</span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"\n\n\n***************************************************************\n"</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"Enabling the VIP - <span class="variable">$vip</span> on new master: <span class="variable">$new_master_host</span> \n"</span></span><br><span class="line">   <span class="variable">$start_vip</span></span><br><span class="line">   <span class="keyword">if</span> [ $? -eq 0 ]</span><br><span class="line">      <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Enabled the VIP successfully"</span></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Enabled the VIP failed"</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"***************************************************************\n\n\n\n"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可执行权限</span></span><br><span class="line">chmod +x /etc/mha/master_ip_online_change.sh</span><br></pre></td></tr></table></figure><hr><blockquote><p>开启手动切换VIP功能 <code>shell</code>, <code>perl</code> 方式二选一(注意：手动切换时不要开启masterha_manager服务)</p></blockquote><pre><code># shell 方式shell=&apos;/etc/mha/master_ip_online_change.sh&apos;sed -i &apos;23d&apos; /etc/mha/mha.cnfsed -i &quot;22a master_ip_online_change_script=$shell&quot; /etc/mha/mha.cnf# perl 方式perl=&apos;/etc/mha/master_ip_online_change&apos;sed -i &apos;23d&apos; /etc/mha/mha.cnfsed -i &quot;22a master_ip_online_change_script=$perl&quot; /etc/mha/mha.cnf</code></pre><hr><blockquote><p>切换10.0.0.11为主</p></blockquote><pre><code>masterha_master_switch --conf=/etc/mha/mha.cnf -master_state=alive --new_master_host=10.0.0.11 --new_master_port=3306 --orig_master_is_new_slave --running_updates_limit=10000</code></pre><hr><h3 id="触发切换时发送邮件"><a href="#触发切换时发送邮件" class="headerlink" title="触发切换时发送邮件"></a>触发切换时发送邮件</h3><blockquote><p>安装<code>mailx</code></p></blockquote><pre><code>yum install -y mailx</code></pre><hr><blockquote><p>配置<code>mail.rc</code></p></blockquote><pre><code>cat &lt;&lt;EOF    &gt;/etc/mail.rc# mail $(date &apos;+%F %T&apos;)set from=gaojing_2018@163.com smtp=smtp.163.comset smtp-auth-user=gaojing_2018@163.comset smtp-auth-password=passwordset smtp-auth=loginEOFsystemctl restart postfix</code></pre><hr><blockquote><p>测试配置</p></blockquote><pre><code>echo &quot;服务器已恢复正常，恢复时间：$(date &apos;+%F %T&apos;)&quot;| mailx -s &quot;MHA服务监控&quot; 544025211@qq.com</code></pre><hr><blockquote><p>触发发送邮件脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span>   &gt;/etc/mha/send_report</span><br><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"><span class="built_in">source</span> /root/.bash_profile</span><br><span class="line"></span><br><span class="line">orig_master_host=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$1</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">new_master_host=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$2</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">new_slave_hosts=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$3</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">subject=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$4</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">body=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$5</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">#判断日志结尾是否有successfully，有则表示切换成功，成功与否都发邮件。</span></span><br><span class="line">tac /etc/mha/manager.log | sed -n 2p | grep <span class="string">'successfully'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"MHA <span class="variable">$subject</span> 主从切换成功\n master:<span class="variable">$orig_master_host</span> --&gt; <span class="variable">$new_master_host</span> \n <span class="variable">$body</span> \n 当前从库:<span class="variable">$new_slave_hosts</span>"</span> | mailx -s <span class="string">"MySQL实例宕掉,MHA <span class="variable">$subject</span> 切换成功"</span>  544025211@qq.com</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"MHA <span class="variable">$subject</span> 主从切换失败\n master:<span class="variable">$orig_master_host</span> --&gt; <span class="variable">$new_master_host</span> \n <span class="variable">$body</span>"</span> | mailx -s <span class="string">"MySQL实例宕掉,MHA <span class="variable">$subject</span> 切换失败"</span> 544025211@qq.com</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可执行权限</span></span><br><span class="line">chmod +x /etc/mha/send_report</span><br></pre></td></tr></table></figure><hr><blockquote><p>开启切换触发邮件</p></blockquote><pre><code>sed -i &apos;s/#report_script/report_script/&apos; /etc/mha/mha.cnf</code></pre><hr><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><blockquote><p>管理节点(确认集群运行正常 主从从)</p></blockquote><pre><code>rm -f mha.failover.completemasterha_manager --conf=/etc/mha/mha.cnf &amp;ps aux | grep mhamysql  -uroot -pHc.123456 -e &apos;show slave status\G;&apos;    # 查看主节点是谁</code></pre><hr><blockquote><p>关闭主节点的mysqld服务</p></blockquote><pre><code>systemctl stop mysqld</code></pre><hr><blockquote><p>状态</p></blockquote><pre><code>此时 master 已经切换到其他节点 VIP 已经转移 指定邮箱也收到邮件包含集群信息</code></pre><hr><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><pre><code>数据库写入使用VIP数据库读使用 haproxy 代理的IP 或者使用VIP(haproxy可以不安装)</code></pre>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql高可用 </tag>
            
            <tag> mysql-MHA </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql双主配置</title>
      <link href="/posts/999a.html"/>
      <url>/posts/999a.html</url>
      <content type="html"><![CDATA[<p>[TOC]</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><pre><code>系统：centos7软件版本：mysql-5.7.23-linux-glibc2.12-x86_64安装目录：/usr/local/mysql数据库目录：/data/mysql数据库root密码: hc123456A数据库：10.0.0.11B数据库：10.0.0.12VIP：10.0.0.100 1.两个数据库版本最好一致2.两个数据库内数据保持一致，若不一致，可手动调整，比如A比B多一个库，那将这个库导入到B库，达到一致。数据库同步账号: sync数据库sync密码: pcpaeyphmp说明：数据库通过配置相互做对端的slave实现双主,使用heartbeat提供VIP,haproxy(负载均衡)将两台主机的端口转发给VIP如VIP所在主机故障,VIP漂移到另一台主机继续提供服务</code></pre><h3 id="数据库安装"><a href="#数据库安装" class="headerlink" title="数据库安装"></a>数据库安装</h3><blockquote><p>两端都执行<a href="http://192.168.2.8/docs/sql/sql-1aksisn4dlmdf" target="_blank" rel="noopener">查看安装文档</a></p></blockquote><pre><code>curl http://home.onlycloud.xin/code/mysql-bin-install.sh -o mysql-install.shsh mysql-install.shsource /etc/profile</code></pre><h3 id="hosts解析"><a href="#hosts解析" class="headerlink" title="hosts解析"></a>hosts解析</h3><pre><code>cat &lt;&lt;EOF  &gt;&gt;/etc/hosts10.0.0.11   nfs-0110.0.0.12   nfs-02EOF</code></pre><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><blockquote><p>A数据库</p></blockquote><pre><code>hostnamectl set-hostname nfs-01</code></pre><hr><blockquote><p>B数据库</p></blockquote><pre><code>hostnamectl set-hostname nfs-02</code></pre><hr><h3 id="A数据库操作"><a href="#A数据库操作" class="headerlink" title="A数据库操作"></a>A数据库操作</h3><blockquote><p>1.开启binlog(数据库二进制日志),设置server-id,重启mysql服务</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> /etc/my.<span class="keyword">cnf</span>&#123;,.`date +%F`&#125;</span><br><span class="line">systemctl <span class="keyword">stop</span> mysqld</span><br><span class="line">sed -i <span class="string">'s/server-id.*/server-id = 1/g'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'24a log-bin = mysql-bin'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'25a binlog_format = mixed'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'26a log-bin-index = master-bin.index'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'27a relay-log = relay-bin'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'28a relay-log-index = slave-relay-bin.index'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'29a auto-increment-offset = 1'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">"30a auto-increment-increment = 2\n"</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><blockquote><p>2.创建同步数据的用户,授权允许10.0.0.0/24网络使用sync用户登录</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mysql -uroot -phc123456 </span><br><span class="line">create user sync;</span><br><span class="line">grant replication slave on <span class="strong">*.*</span> to <span class="emphasis">'sync'</span>@<span class="emphasis">'10.0.0.%'</span> identified by <span class="emphasis">'pcpaeyphmp'</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">show master status;</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"># MySQL [(none)]&gt; show master status;</span><br><span class="line"># 记下 binlog文件的position（偏移）和File（日志文件）的值)</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| File             | Position | Binlog<span class="emphasis">_Do_</span>DB | Binlog<span class="emphasis">_Ignore_</span>DB | Executed<span class="emphasis">_Gtid_</span>Set |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| mysql-bin.000003 |      794 |              |                  |                   |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br></pre></td></tr></table></figure><h3 id="B数据库操作"><a href="#B数据库操作" class="headerlink" title="B数据库操作"></a>B数据库操作</h3><blockquote><p>1.配置从库只允许来自服务器线程或具有SUPER权限的数据库用户进行更新(root,sync),开启binlog(数据库二进制日志),设置server-id,重启mysql服务</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> /etc/my.<span class="keyword">cnf</span>&#123;,.`date +%F`&#125;</span><br><span class="line">systemctl <span class="keyword">stop</span> mysqld</span><br><span class="line">sed -i <span class="string">'s/server-id.*/server-id = 2/g'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'24a log-bin = mysql-bin'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'25a binlog_format = mixed'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'26a log-bin-index = master-bin.index'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'27a relay-log = relay-bin'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'28a relay-log-index = slave-relay-bin.index'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'29a auto-increment-offset = 2'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">"30a auto-increment-increment = 2\n"</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><blockquote><p>2.连接数据库A,需要A数据库主机名，登陆凭据，二进制文件的名称和位置</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mysql -uroot -phc123456</span><br><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'10.0.0.11'</span>,  # A数据库 IP或主机名(需解析通)</span><br><span class="line"><span class="attribute">master_port</span>=3306,                          # A数据库 端口号</span><br><span class="line"><span class="attribute">master_user</span>=<span class="string">'sync'</span>,                        # 同步账号</span><br><span class="line"><span class="attribute">master_password</span>=<span class="string">'pcpaeyphmp'</span>,              # 同步账号的密码</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000003'</span>,        # A数据库执行 show master status; 获取的 File 值</span><br><span class="line"><span class="attribute">master_log_pos</span>=794;                        # A数据库执行 show master status; 获取的 Position 值</span><br><span class="line">start slave;                               # 启动slave</span><br><span class="line">show slave status\G;                       # 查看同步状态</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show slave status\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: 10.0.0.11</span><br><span class="line">                  Master_User: sync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 794</span><br><span class="line">               Relay_Log_File: nfs-02-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 320</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">            Slave_SQL_Running: <span class="literal">Yes</span></span><br><span class="line">           <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保证以下两项状态为 Yes 则同步成功</span></span><br><span class="line">Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">Slave_SQL_Running: <span class="literal">Yes</span></span><br></pre></td></tr></table></figure><blockquote><p>3.创建同步数据的用户,授权允许10.0.0.0/24网络使用sync用户登录</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -phc123456</span><br><span class="line">create user sync;</span><br><span class="line">grant replication slave on <span class="strong">*.*</span> to <span class="emphasis">'sync'</span>@<span class="emphasis">'10.0.0.%'</span> identified by <span class="emphasis">'pcpaeyphmp'</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">show master status;</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"># MySQL [(none)]&gt; show master status;</span><br><span class="line"># 记下 binlog文件的position（偏移）和File（日志文件）的值)</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| File             | Position | Binlog<span class="emphasis">_Do_</span>DB | Binlog<span class="emphasis">_Ignore_</span>DB | Executed<span class="emphasis">_Gtid_</span>Set |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| mysql-bin.000003 |      794 |              |                  |                   |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br></pre></td></tr></table></figure><h3 id="A数据库操作-1"><a href="#A数据库操作-1" class="headerlink" title="A数据库操作"></a>A数据库操作</h3><blockquote><p>连接数据库B,需要B服务器主机名，登陆凭据，二进制文件的名称和位置</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mysql -uroot -phc123456</span><br><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'10.0.0.12'</span>,  # B数据库 IP或主机名(需解析通)</span><br><span class="line"><span class="attribute">master_port</span>=3306,                          # B数据库 端口号</span><br><span class="line"><span class="attribute">master_user</span>=<span class="string">'sync'</span>,                        # B同步账号</span><br><span class="line"><span class="attribute">master_password</span>=<span class="string">'pcpaeyphmp'</span>,              # 同步账号的密码</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000003'</span>,        # B数据库执行 show master status; 获取的 File 值</span><br><span class="line"><span class="attribute">master_log_pos</span>=794;                        # B数据库执行 show master status; 获取的 Position 值</span><br><span class="line">start slave;                               # 启动slave</span><br><span class="line">show slave status\G;                       # 查看同步状态</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show slave status\G;</span></span><br><span class="line">************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: 10.0.0.12</span><br><span class="line">                  Master_User: sync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 794</span><br><span class="line">               Relay_Log_File: localhost-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 320</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">            Slave_SQL_Running: <span class="literal">Yes</span></span><br><span class="line">           <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保证以下两项状态为 Yes 则同步成功</span></span><br><span class="line">Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">Slave_SQL_Running: <span class="literal">Yes</span></span><br></pre></td></tr></table></figure><h3 id="验证mysql"><a href="#验证mysql" class="headerlink" title="验证mysql"></a>验证mysql</h3><blockquote><p>A创建数据库</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create database test<span class="emphasis">_01;</span></span><br><span class="line"><span class="emphasis">show databases;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"># MySQL [(none)]&gt; show databases;</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br><span class="line"><span class="emphasis">| Database           |</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br><span class="line"><span class="emphasis">| information_</span>schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| sys                |</span></span><br><span class="line"><span class="emphasis">| test_</span>01            |</span><br><span class="line"><span class="code">+--------------------+</span></span><br></pre></td></tr></table></figure><blockquote><p>B查看数据库</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"># MySQL [(none)]&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| sys                |</span><br><span class="line">| test<span class="emphasis">_01            |</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br></pre></td></tr></table></figure><blockquote><p>B创建数据库</p></blockquote><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">create database test_02;</span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">|<span class="string"> Database           </span>|</span><br><span class="line">+--------------------+</span><br><span class="line">|<span class="string"> information_schema </span>|</span><br><span class="line">|<span class="string"> mysql              </span>|</span><br><span class="line">|<span class="string"> performance_schema </span>|</span><br><span class="line">|<span class="string"> sys                </span>|</span><br><span class="line">|<span class="string"> test_01            </span>|</span><br><span class="line">|<span class="string"> test_02            </span>|</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><blockquote><p>A查看数据库</p></blockquote><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">|<span class="string"> Database           </span>|</span><br><span class="line">+--------------------+</span><br><span class="line">|<span class="string"> information_schema </span>|</span><br><span class="line">|<span class="string"> mysql              </span>|</span><br><span class="line">|<span class="string"> performance_schema </span>|</span><br><span class="line">|<span class="string"> sys                </span>|</span><br><span class="line">|<span class="string"> test_01            </span>|</span><br><span class="line">|<span class="string"> test_02            </span>|</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><h3 id="mysql排错"><a href="#mysql排错" class="headerlink" title="mysql排错"></a>mysql排错</h3><pre><code>Slave_IO_Running:     # 状态不为Yes1.数据库A与数据库B之间网络是否通畅2.同步账号的用户权限,及是否允许数据库B登录3.查看两端server-id(不能相同) 使用mysql命令查看 show variables like &apos;server_id&apos;; 此配置项在my.cnf</code></pre><h3 id="安装haproxy"><a href="#安装haproxy" class="headerlink" title="安装haproxy"></a>安装haproxy</h3><blockquote><p>两端都安装配置相同</p></blockquote><pre><code>yum -y install haproxy</code></pre><h3 id="配置haproxy"><a href="#配置haproxy" class="headerlink" title="配置haproxy"></a>配置haproxy</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/haproxy/haproxy.cfg&#123;,.bak&#125;</span><br><span class="line">cat &lt;&lt;! &gt;/etc/haproxy/haproxy.cfg</span><br><span class="line">############ 全局配置 ############</span><br><span class="line">global</span><br><span class="line">log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local0</span><br><span class="line">log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local1 notice</span><br><span class="line">daemon</span><br><span class="line">nbproc <span class="number">1</span>       # 进程数量</span><br><span class="line">maxconn <span class="number">4096</span>   # 最大连接数</span><br><span class="line">user haproxy   # 运行用户</span><br><span class="line">group haproxy  # 运行组</span><br><span class="line">chroot /var/lib/haproxy</span><br><span class="line">pidfile /var/run/haproxy.pid</span><br><span class="line"></span><br><span class="line">############ 默认配置 ############</span><br><span class="line">defaults</span><br><span class="line">log global</span><br><span class="line">mode http            # 默认模式&#123; tcp|http|health &#125;</span><br><span class="line">option httplog       # 日志类别,采用httplog</span><br><span class="line">option dontlognull   # 不记录健康检查日志信息</span><br><span class="line">retries <span class="number">2</span>            # <span class="number">2</span>次连接失败不可用</span><br><span class="line">option forwardfor    # 后端服务获得真实ip</span><br><span class="line">option httpclose     # 请求完毕后主动关闭http通道</span><br><span class="line">option abortonclose  # 服务器负载很高，自动结束比较久的链接</span><br><span class="line">maxconn <span class="number">4096</span>         # 最大连接数</span><br><span class="line">timeout connect <span class="number">5</span>m   # 连接超时</span><br><span class="line">timeout client <span class="number">1</span>m    # 客户端超时</span><br><span class="line">timeout server <span class="number">31</span>m   # 服务器超时</span><br><span class="line">timeout check <span class="number">10</span>s    # 心跳检测超时</span><br><span class="line">balance roundrobin   # 负载均衡方式，轮询</span><br><span class="line"></span><br><span class="line">########## 统计页面配置 ##########</span><br><span class="line">listen stats</span><br><span class="line">  bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1080</span></span><br><span class="line">  mode http</span><br><span class="line">  option httplog</span><br><span class="line">  log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local0 err</span><br><span class="line">  maxconn <span class="number">10</span>               # 最大连接数</span><br><span class="line">  stats refresh <span class="number">30</span>s</span><br><span class="line">  stats uri /admin         #状态页面 http<span class="comment">//ip:1080/admin 访问</span></span><br><span class="line">  stats realm Haproxy\ Statistics</span><br><span class="line">  stats auth admin:admin   # 用户和密码:admin</span><br><span class="line">  stats hide-version       # 隐藏版本信息</span><br><span class="line">  stats admin <span class="keyword">if</span> TRUE      # 设置手工启动/禁用</span><br><span class="line"></span><br><span class="line">listen HAPROXY-STATUS</span><br><span class="line">  bind <span class="number">10.0</span><span class="number">.0</span><span class="number">.100</span>:<span class="number">88</span></span><br><span class="line">  mode tcp</span><br><span class="line">  option  tcplog</span><br><span class="line">  balance leastconn        # 根据服务器当前的请求数</span><br><span class="line">  server nfs<span class="number">-01</span> nfs<span class="number">-01</span>:<span class="number">1080</span> check port <span class="number">1080</span> inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line">  server nfs<span class="number">-02</span> nfs<span class="number">-02</span>:<span class="number">1080</span> check port <span class="number">1080</span> inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line"></span><br><span class="line">listen MYSQL-HA</span><br><span class="line">  mode tcp</span><br><span class="line">  option  tcplog</span><br><span class="line">  bind <span class="number">10.0</span><span class="number">.0</span><span class="number">.100</span>:<span class="number">3308</span></span><br><span class="line">  balance leastconn</span><br><span class="line">  option mysql-check user haproxy</span><br><span class="line">  server nfs<span class="number">-01</span> nfs<span class="number">-01</span>:<span class="number">3306</span> weight <span class="number">1</span> check inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line">  server nfs<span class="number">-02</span> nfs<span class="number">-02</span>:<span class="number">3306</span> weight <span class="number">1</span> check inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line"></span><br><span class="line">listen HTTP-HA</span><br><span class="line">  bind <span class="number">10.0</span><span class="number">.0</span><span class="number">.100</span>:<span class="number">80</span></span><br><span class="line">  balance  roundrobin</span><br><span class="line">  option  tcpka</span><br><span class="line">  option  httpchk</span><br><span class="line">  option  tcplog</span><br><span class="line">  server nfs<span class="number">-01</span> nfs<span class="number">-01</span>:<span class="number">8080</span> check port <span class="number">8080</span> inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line">  server nfs<span class="number">-02</span> nfs<span class="number">-02</span>:<span class="number">8080</span> check port <span class="number">8080</span> inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line">!</span><br></pre></td></tr></table></figure><h4 id="创建监控用户"><a href="#创建监控用户" class="headerlink" title="创建监控用户"></a>创建监控用户</h4><blockquote><p>监控<code>mysql</code>运行状态此用户无需配置密码及权限</p></blockquote><pre><code>mysql -u root -phc123456 -e &quot;create user &apos;haproxy&apos;@&apos;%&apos;;flush privileges;&quot;</code></pre><hr><h4 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> &lt;&lt;'!'  &gt;/etc/rsyslog.<span class="keyword">d</span>/haproxy.<span class="keyword">conf</span></span><br><span class="line"><span class="variable">$ModLoad</span> imudp</span><br><span class="line"><span class="variable">$UDPServerRun</span> 514</span><br><span class="line"><span class="variable">$template</span> Haproxy,<span class="string">"%rawmsg% \n"</span></span><br><span class="line">local0.=info -/<span class="keyword">var</span>/<span class="keyword">log</span>/haproxy.<span class="keyword">log</span>;Haproxy</span><br><span class="line">local0.notice -/<span class="keyword">var</span>/<span class="keyword">log</span>/haproxy-status.<span class="keyword">log</span>;Haproxy</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line"># 重启日志服务</span><br><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure><h4 id="设置启动方式"><a href="#设置启动方式" class="headerlink" title="设置启动方式"></a>设置启动方式</h4><pre><code># 允许没VIP时启动(如果没有配置此项且应用会导致 haproxy 服务无法启动)echo &quot;net.ipv4.ip_nonlocal_bind = 1&quot; &gt;&gt;/etc/sysctl.confsysctl -p</code></pre><blockquote><p>服务管理</p></blockquote><pre><code>systemctl start haproxy     # 启动服务systemctl enable haproxy    # 随系统启动systemctl status haproxy    # 运行状态</code></pre><hr><h3 id="安装heartbeat"><a href="#安装heartbeat" class="headerlink" title="安装heartbeat"></a>安装heartbeat</h3><blockquote><p>配置依赖软件安装源</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF   &gt;/etc/yum.repos.d/gf-epel-7.repo</span><br><span class="line">[epel-testing]</span><br><span class="line"><span class="attribute">name</span>=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - <span class="variable">$basearch</span> - Testing</span><br><span class="line"><span class="attribute">baseurl</span>=http://mirror.ghettoforge.org/distributions/gf/el/7/testing/x86_64</span><br><span class="line"><span class="attribute">enabled</span>=1</span><br><span class="line"><span class="attribute">gpgcheck</span>=0</span><br><span class="line">EOF</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><blockquote><p>下载软件包并安装 heartbeat</p></blockquote><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">heartbeat=<span class="string">'heartbeat-3.0.6-1.el7.centos.x86_64.rpm'</span></span><br><span class="line">heartbeat_libs=<span class="string">'heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm'</span> </span><br><span class="line">curl -o <span class="variable">$heartbeat</span> <span class="symbol">http:</span>/<span class="regexp">/home.onlycloud.xin/soft</span><span class="regexp">/heartbeat/</span><span class="variable">$heartbeat</span> --progress</span><br><span class="line">curl -o <span class="variable">$heartbeat_libs</span> <span class="symbol">http:</span>/<span class="regexp">/home.onlycloud.xin/soft</span><span class="regexp">/heartbeat/</span><span class="variable">$heartbeat_libs</span> --progress</span><br><span class="line">yum localinstall -y heartbeat-*</span><br></pre></td></tr></table></figure><h3 id="配置heartbeat"><a href="#配置heartbeat" class="headerlink" title="配置heartbeat"></a>配置heartbeat</h3><blockquote><p>创建<code>ha.cf</code>配置文件</p></blockquote><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/ha.cf</span><br><span class="line"><span class="meta"># 调试日志</span></span><br><span class="line">debugfile /<span class="keyword">var</span>/log/ha-debug</span><br><span class="line"></span><br><span class="line"><span class="meta"># heartbeat 运行日志</span></span><br><span class="line">logfile /<span class="keyword">var</span>/log/ha-log</span><br><span class="line"></span><br><span class="line"><span class="meta"># 在 syslog 服务中配置通过 local1 设备接收日志</span></span><br><span class="line">logfacility local0</span><br><span class="line"></span><br><span class="line"><span class="meta"># 心跳间隔时间 default:2</span></span><br><span class="line">keepalive <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 备用节点在 default:30 秒内没有收到主节点心跳信号则立即接管主节点服务资源</span></span><br><span class="line">deadtime <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 心跳延迟时间为 default:10 秒,当 10 秒内备份节点未收到主节点心跳信号时,将写入警告日志,此时不会切换服务</span></span><br><span class="line">warntime <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># heartbeat 服务首次启动,需要等待 default:60 秒后才启动服务器的资源,该值至少为 deadtime 两倍(单机启动时vip绑定比较慢)</span></span><br><span class="line">initdead <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 指定心跳信号网卡(直连网卡)</span></span><br><span class="line"><span class="meta">#bcast ens33</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 配置多播通信路径(直连网卡)</span></span><br><span class="line">mcast ens33 <span class="number">239.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">694</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 主节点恢复后,是否将服务自动切回</span></span><br><span class="line">auto_failback on</span><br><span class="line"></span><br><span class="line"><span class="meta"># 节点主机名(使用IP地址也可以)</span></span><br><span class="line">node nfs<span class="number">-01</span></span><br><span class="line">node nfs<span class="number">-02</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 是否开启 CRM 集群管理</span></span><br><span class="line">crm no</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p>两端认证密码配置 authkeys</p></blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="literal">EOF</span>  &gt;&gt;/etc/ha.d/authkeys</span><br><span class="line">auth <span class="number">1</span></span><br><span class="line"><span class="number">1</span> sha1 cxix9lkzq2aevnxv43yn68yoh2y7zp2cfwufgs7w</span><br><span class="line"><span class="literal">EOF</span></span><br><span class="line">chmod <span class="number">600</span> /etc/ha.d/authkeys</span><br></pre></td></tr></table></figure><blockquote><p>配置heartbeat资源</p></blockquote><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="params">&lt;&lt;EOF   &gt;</span><span class="meta-keyword">/etc/</span>ha.d/haresources</span><br><span class="line">nfs<span class="number">-01</span> <span class="symbol">IPaddr::</span><span class="number">10.0</span><span class="number">.0</span><span class="number">.100</span>/<span class="number">24</span>/ens33</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p>启动服务,验证(两个节点各自执行 ip add 能看到两个 10.0.0网段ip)</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start heartbeat</span><br><span class="line">netstat -ntaulp</span><br><span class="line">ip <span class="builtin-name">add</span> | grep 10.0.0</span><br></pre></td></tr></table></figure><h3 id="验证heartbeat"><a href="#验证heartbeat" class="headerlink" title="验证heartbeat"></a>验证heartbeat</h3><blockquote><p>浏览器打开以下链接查看资源状态(账号：admin/admin)</p></blockquote><pre><code>http://10.0.0.11:1080/adminhttp://10.0.0.12:1080/adminhttp://10.0.0.100:1080/admin</code></pre><hr><blockquote><p>关闭存在VIP主机的heartbeat服务,然后在另一端验证(在正常的一端已经接管了所有虚拟IP ip add 能看到三个 10.0.0网段ip)登录数据库验证</p></blockquote><pre><code>systemctl stop heartbeatip add | grep 10.0.0mysql -h 10.0.0.100 -P 3308 -uroot -phc123456</code></pre><hr><blockquote><p>启动关闭的服务后验证 虚拟IP已经恢复</p></blockquote><pre><code>systemctl start heartbeatip add | grep 10.0.0mysql -h 10.0.0.100 -P 3308 -uroot -phc123456</code></pre><hr><blockquote><p>查看同步状态</p></blockquote><pre><code># 可以看到Master_Host IP一直在切换负载均衡配置成功mysql -h 10.0.0.100 -P 3308 -uroot -phc123456 -e &apos;show slave status\G&apos;</code></pre><hr><h3 id="同步故障恢复"><a href="#同步故障恢复" class="headerlink" title="同步故障恢复"></a>同步故障恢复</h3><h4 id="修复A主B从同步"><a href="#修复A主B从同步" class="headerlink" title="修复A主B从同步"></a>修复A主B从同步</h4><h5 id="A数据库操作-2"><a href="#A数据库操作-2" class="headerlink" title="A数据库操作"></a>A数据库操作</h5><blockquote><p>A数据库锁表查看binlog文件的position（偏移）和File（日志文件）的值</p></blockquote><pre><code>mysql -uroot -phc123456flush tables with read lock;    # 锁住数据库表防止写入show master status;    # 记下 binlog文件的position（偏移）和File（日志文件）的值)# MySQL [(none)]&gt; show master status;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000007 |      154 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+</code></pre><hr><h5 id="B数据库操作-1"><a href="#B数据库操作-1" class="headerlink" title="B数据库操作"></a>B数据库操作</h5><blockquote><p>B数据库重新连接A</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -phc123456</span><br><span class="line">stop slave;</span><br><span class="line">reset slave;</span><br><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'10.0.0.11'</span>,  # A数据库 IP或主机名(需解析通)</span><br><span class="line"><span class="attribute">master_port</span>=3306,                          # A数据库端口号</span><br><span class="line"><span class="attribute">master_user</span>=<span class="string">'sync'</span>,                        # 同步账号</span><br><span class="line"><span class="attribute">master_password</span>=<span class="string">'pcpaeyphmp'</span>,              # 同步账号的密码</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000007'</span>,        # A数据库执行 show master status; 获取的 File 值</span><br><span class="line"><span class="attribute">master_log_pos</span>=154;                        # A数据库执行 show master status; 获取的 Position 值</span><br><span class="line">start slave;                               # 启动slave</span><br><span class="line">show slave status\G;                       # 查看同步状态</span><br><span class="line">show slave status\G;</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show slave status\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: 10.0.0.11</span><br><span class="line">                  Master_User: sync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000007</span><br><span class="line">          Read_Master_Log_Pos: 154</span><br><span class="line">               Relay_Log_File: relay-bin.000007</span><br><span class="line">                Relay_Log_Pos: 367</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000007</span><br><span class="line">             Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">            Slave_SQL_Running: <span class="literal">Yes</span></span><br><span class="line">            <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure><h5 id="A数据库操作-3"><a href="#A数据库操作-3" class="headerlink" title="A数据库操作"></a>A数据库操作</h5><pre><code>unlock tables;    # 解锁数据库</code></pre><hr><h4 id="修复B主A从同步"><a href="#修复B主A从同步" class="headerlink" title="修复B主A从同步"></a>修复B主A从同步</h4><h5 id="B数据库操作-2"><a href="#B数据库操作-2" class="headerlink" title="B数据库操作"></a>B数据库操作</h5><blockquote><p>B数据库锁表查看binlog文件的position（偏移）和File（日志文件）的值</p></blockquote><pre><code>mysql -uroot -phc123456flush tables with read lock;    # 锁住数据库表防止写入show master status;    # 记下 binlog文件的position（偏移）和File（日志文件）的值)# MySQL [(none)]&gt; show master status;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000007 |      154 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+</code></pre><hr><h5 id="A数据库操作-4"><a href="#A数据库操作-4" class="headerlink" title="A数据库操作"></a>A数据库操作</h5><blockquote><p>A数据库重新连接B</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -phc123456</span><br><span class="line">stop slave;</span><br><span class="line">reset slave;</span><br><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'10.0.0.12'</span>,  # BA数据库 IP或主机名(需解析通)</span><br><span class="line"><span class="attribute">master_port</span>=3306,                          # B数据库端口号</span><br><span class="line"><span class="attribute">master_user</span>=<span class="string">'sync'</span>,                        # 同步账号</span><br><span class="line"><span class="attribute">master_password</span>=<span class="string">'pcpaeyphmp'</span>,              # 同步账号的密码</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000007'</span>,        # B数据库执行 show master status; 获取的 File 值</span><br><span class="line"><span class="attribute">master_log_pos</span>=154;                        # B数据库执行 show master status; 获取的 Position 值</span><br><span class="line">start slave;                               # 启动slave</span><br><span class="line">show slave status\G;                       # 查看同步状态</span><br><span class="line">show slave status\G;</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show slave status\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: 10.0.0.12</span><br><span class="line">                  Master_User: sync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000007</span><br><span class="line">          Read_Master_Log_Pos: 154</span><br><span class="line">               Relay_Log_File: relay-bin.000007</span><br><span class="line">                Relay_Log_Pos: 367</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000007</span><br><span class="line">             Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">            Slave_SQL_Running: <span class="literal">Yes</span></span><br><span class="line">          <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure><h5 id="B数据库操作-3"><a href="#B数据库操作-3" class="headerlink" title="B数据库操作"></a>B数据库操作</h5><pre><code>unlock tables;    # 解锁数据库</code></pre>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql-master-master </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql主从配置</title>
      <link href="/posts/a3a4.html"/>
      <url>/posts/a3a4.html</url>
      <content type="html"><![CDATA[<p>[TOC]</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><pre><code>系统：centos7软件版本：mysql-5.7.23-linux-glibc2.12-x86_64安装目录：/usr/local/mysql数据库目录：/data/mysql数据库root密码: hc123456A数据库：10.0.0.11 主B数据库：10.0.0.12 从1.两个数据库版本最好一致2.两个数据库内数据保持一致，若不一致，可手动调整，比如A比B多一个库，那将这个库导入到B库，达到一致。数据库同步账号: sync数据库sync密码: pcpaeyphmp</code></pre><h3 id="数据库安装"><a href="#数据库安装" class="headerlink" title="数据库安装"></a>数据库安装</h3><blockquote><p>两端都执行<a href="http://192.168.2.8/docs/sql/sql-1aksisn4dlmdf" target="_blank" rel="noopener">查看安装文档</a></p></blockquote><pre><code>curl http://home.onlycloud.xin/code/mysql-bin-install.sh -o mysql-install.shsh mysql-install.shsource /etc/profile</code></pre><h3 id="A数据库操作"><a href="#A数据库操作" class="headerlink" title="A数据库操作"></a>A数据库操作</h3><blockquote><p>1.开启binlog(数据库二进制日志),设置server-id,重启mysql服务</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/<span class="keyword">my</span>.cnf&#123;,.`<span class="built_in">date</span> +%F`&#125;</span><br><span class="line">sed -i '<span class="number">14</span>a <span class="built_in">log</span>-bin = mysql-bin' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">sed -i 's/server-<span class="built_in">id</span>.*/server-<span class="built_in">id</span> = <span class="number">1</span>/g' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">sed -i '<span class="number">18</span>a <span class="built_in">log</span>-bin-index = master-bin.index' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><blockquote><p>2.创建同步数据的用户,授权允许10.0.0.0/24网络使用sync用户登录</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mysql -uroot -phc123456 </span><br><span class="line">create user sync;</span><br><span class="line">grant replication slave on <span class="strong">*.*</span> to <span class="emphasis">'sync'</span>@<span class="emphasis">'10.0.0.%'</span> identified by <span class="emphasis">'pcpaeyphmp'</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">show master status;</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"># MySQL [(none)]&gt; show master status;</span><br><span class="line"># 记下 File, Position 的值</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| File             | Position | Binlog<span class="emphasis">_Do_</span>DB | Binlog<span class="emphasis">_Ignore_</span>DB | Executed<span class="emphasis">_Gtid_</span>Set |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| mysql-bin.000003 |      794 |              |                  |                   |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br></pre></td></tr></table></figure><h3 id="B数据库操作"><a href="#B数据库操作" class="headerlink" title="B数据库操作"></a>B数据库操作</h3><blockquote><p>1.配置从库只允许来自服务器线程或具有SUPER权限的数据库用户进行更新(root,sync),开启binlog(数据库二进制日志),设置server-id,重启mysql服务</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/<span class="keyword">my</span>.cnf&#123;,.`<span class="built_in">date</span> +%F`&#125;</span><br><span class="line">sed -i '<span class="number">11</span>a <span class="built_in">read</span>-only' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">sed -i '<span class="number">15</span>a <span class="built_in">log</span>-bin = mysql-bin' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">sed -i 's/server-<span class="built_in">id</span>.*/server-<span class="built_in">id</span> = <span class="number">2</span>/g' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">sed -i '<span class="number">19</span>a <span class="built_in">log</span>-bin-index = master-bin.index' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><blockquote><p>2.配置,连接数据库A</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mysql -uroot -phc123456</span><br><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'10.0.0.11'</span>,  # A数据库 IP或主机名(需解析通)</span><br><span class="line"><span class="attribute">master_port</span>=3306,                          # A数据库A端口号</span><br><span class="line"><span class="attribute">master_user</span>=<span class="string">'sync'</span>,                        # 同步账号</span><br><span class="line"><span class="attribute">master_password</span>=<span class="string">'pcpaeyphmp'</span>,              # 同步账号的密码</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000003'</span>,        # A数据库执行 show master status; 获取的 File 值</span><br><span class="line"><span class="attribute">master_log_pos</span>=794;                        # A数据库执行 show master status; 获取的 Position 值</span><br><span class="line">start slave;                               # 启动slave</span><br><span class="line">show slave status\G;                       # 查看同步状态</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show slave status\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: 10.0.0.11</span><br><span class="line">                  Master_User: sync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 794</span><br><span class="line">               Relay_Log_File: nfs-02-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 320</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">            Slave_SQL_Running: <span class="literal">Yes</span></span><br><span class="line">           <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保证以下两项状态为 Yes 则同步成功</span></span><br><span class="line">Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">Slave_SQL_Running: <span class="literal">Yes</span></span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><blockquote><p>A创建数据库</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create database test<span class="emphasis">_01;</span></span><br><span class="line"><span class="emphasis">show databases;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"># MySQL [(none)]&gt; show databases;</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br><span class="line"><span class="emphasis">| Database           |</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br><span class="line"><span class="emphasis">| information_</span>schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| sys                |</span></span><br><span class="line"><span class="emphasis">| test_</span>01            |</span><br><span class="line"><span class="code">+--------------------+</span></span><br></pre></td></tr></table></figure><blockquote><p>B查看数据库</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"># MySQL [(none)]&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| sys                |</span><br><span class="line">| test<span class="emphasis">_01            |</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br></pre></td></tr></table></figure><h3 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h3><pre><code>Slave_IO_Running:     # 状态不为Yes1.数据库A与数据库B之间网络是否通畅2.同步账号的用户权限,及是否允许数据库B登录3.查看两端server-id(不能相同) 使用mysql命令查看 show variables like &apos;server_id&apos;; 此配置项在my.cnf</code></pre>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> mysql-mastar-slave </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql安装(二进制方式)</title>
      <link href="/posts/2694.html"/>
      <url>/posts/2694.html</url>
      <content type="html"><![CDATA[<p>[TOC]</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><pre><code>系统：centos7软件版本：mysql-5.7安装目录：/usr/local/mysql数据库目录：/data/mysql数据库root密码：hc123456</code></pre><h3 id="创建用户-组"><a href="#创建用户-组" class="headerlink" title="创建用户,组"></a>创建用户,组</h3><blockquote><p>创建<code>mysql</code>组指定组id为<code>1200</code>，创建<code>mysql</code>用户指定用户id为<code>1200</code>默认组<code>mysql</code></p></blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd -g <span class="number">1200</span> mysql</span><br><span class="line">useradd -r -g mysql -u <span class="number">1200</span> -s /sbin/nologin mysql</span><br></pre></td></tr></table></figure><h3 id="创建数据目录"><a href="#创建数据目录" class="headerlink" title="创建数据目录"></a>创建数据目录</h3><blockquote><p><code>mysql</code>数据库数据存储目录</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">datadir=/data/mysql    <span class="comment"># 数据库数据存储目录</span></span><br><span class="line">mkdir -p $datadir</span><br><span class="line">basedir=/usr/local/mysql    <span class="comment"># 数据库安装目录</span></span><br></pre></td></tr></table></figure><h3 id="安装-jemalloc"><a href="#安装-jemalloc" class="headerlink" title="安装 jemalloc"></a>安装 jemalloc</h3><blockquote><p>配置软件安装源,<code>jemalloc</code>适合多线程下内存分配管理,减少内存碎片</p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -rf <span class="string">/etc/yum.repos.d/</span>*</span><br><span class="line">curl -o <span class="string">/etc/yum.repos.d/epel.repo</span> http:<span class="string">//mirrors.aliyun.com/repo/epel-7.repo</span></span><br><span class="line">curl -o <span class="string">/etc/yum.repos.d/CentOS.repo</span> http:<span class="string">//mirrors.aliyun.com/repo/Centos-7.repo</span></span><br><span class="line">sed -i '<span class="string">/aliyuncs.com/d</span>' <span class="string">/etc/yum.repos.d/CentOS.repo</span> <span class="string">/etc/yum.repos.d/epel.repo</span></span><br><span class="line">yum install -y jemalloc-devel</span><br></pre></td></tr></table></figure><h3 id="下载软件-解压"><a href="#下载软件-解压" class="headerlink" title="下载软件,解压"></a><a href="http://mirrors.ustc.edu.cn/mysql-ftp/Downloads/" target="_blank" rel="noopener">下载软件</a>,解压</h3><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -OL http://mirrors.ustc.edu.cn/mysql-ftp/Downloads/MySQL-<span class="number">5.7</span>/mysql-<span class="number">5.7</span><span class="meta">.23</span>-linux-glibc2<span class="meta">.12</span>-x86_64.tar.gz --progress</span><br><span class="line">tar xvf mysql-<span class="number">5.7</span><span class="meta">.23</span>-linux-glibc2<span class="meta">.12</span>-x86_64.tar.gz</span><br><span class="line">mv mysql-<span class="number">5.7</span><span class="meta">.23</span>-linux-glibc2<span class="meta">.12</span>-x86_64/ $basedir</span><br></pre></td></tr></table></figure><h3 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cp</span> <span class="variable">$basedir</span>/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">sed -i <span class="string">"s@^basedir=.*<span class="variable">@basedir</span>=<span class="variable">$basedir</span>@"</span> /etc/init.d/mysqld</span><br><span class="line">sed -i <span class="string">"s@^datadir=.*<span class="variable">@datadir</span>=<span class="variable">$datadir</span>@"</span> /etc/init.d/mysqld</span><br><span class="line">chmod +x /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld <span class="literal">on</span></span><br></pre></td></tr></table></figure><h3 id="mysql配置文件"><a href="#mysql配置文件" class="headerlink" title="mysql配置文件"></a>mysql配置文件</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF &gt;/etc/my.cnf</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">"MySQL [\\d]&gt; "</span></span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">skip-ssl</span><br><span class="line">port = 3306</span><br><span class="line">user = mysql</span><br><span class="line">server-id = 1</span><br><span class="line">bind-address = 0.0.0.0</span><br><span class="line">log_timestamps = SYSTEM</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">basedir = $basedir</span><br><span class="line">datadir = $datadir</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">pid-file = $datadir/mysql.pid</span><br><span class="line">init-connect = 'SET NAMES utf8mb4'</span><br><span class="line"></span><br><span class="line">back_log = 300</span><br><span class="line"><span class="comment">#skip-networking</span></span><br><span class="line">skip-name-resolve</span><br><span class="line"></span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 6000</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">table_open_cache = 128</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line">binlog_cache_size = 1M</span><br><span class="line">max_heap_table_size = 8M</span><br><span class="line">tmp_table_size = 16M</span><br><span class="line"></span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">join_buffer_size = 8M</span><br><span class="line">key_buffer_size = 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size = 8</span><br><span class="line"></span><br><span class="line">query_cache_type = 1</span><br><span class="line">query_cache_size = 8M</span><br><span class="line">query_cache_limit = 2M</span><br><span class="line"></span><br><span class="line">ft_min_word_len = 4</span><br><span class="line"></span><br><span class="line">log_bin = mysql-bin</span><br><span class="line">binlog_format = mixed</span><br><span class="line">expire_logs_days = 7</span><br><span class="line"></span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 1</span><br><span class="line">log_error = $datadir/mysql-error.log</span><br><span class="line">slow_query_log_file = $datadir/mysql-slow.log</span><br><span class="line"></span><br><span class="line">performance_schema = 0</span><br><span class="line">explicit_defaults_for_timestamp</span><br><span class="line"></span><br><span class="line"><span class="comment">#lower_case_table_names = 1</span></span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line"><span class="comment">#default-storage-engine = MyISAM</span></span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_open_files = 500</span><br><span class="line">innodb_buffer_pool_size = 64M</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_thread_concurrency = 0</span><br><span class="line">innodb_purge_threads = 1</span><br><span class="line">innodb_flush_log_at_trx_commit = 2</span><br><span class="line">innodb_log_buffer_size = 2M</span><br><span class="line">innodb_log_file_size = 32M</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line">innodb_max_dirty_pages_pct = 90</span><br><span class="line">innodb_lock_wait_timeout = 120</span><br><span class="line"></span><br><span class="line">bulk_insert_buffer_size = 8M</span><br><span class="line">myisam_sort_buffer_size = 8M</span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line">myisam_repair_threads = 1</span><br><span class="line"></span><br><span class="line">interactive_timeout = 28800</span><br><span class="line">wait_timeout = 28800</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">read_buffer = 4M</span><br><span class="line">write_buffer = 4M</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="数据库配置优化"><a href="#数据库配置优化" class="headerlink" title="数据库配置优化"></a>数据库配置优化</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="regexp">/etc/my</span>.cnf&#123;,.bak&#125;</span><br><span class="line">Mem=`free -m | awk <span class="string">'/Mem:/&#123;print $2&#125;'</span>`</span><br><span class="line">sed -i <span class="string">"s@max_connections.*@max_connections = $(($&#123;Mem&#125;/3))@"</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;Mem&#125;</span> -gt <span class="number">1500</span> -a <span class="variable">$&#123;Mem&#125;</span> -le <span class="number">2500</span> ]; then</span><br><span class="line">    <span class="comment">#  1500MB &lt; 实际内存 &lt;= 2500MB</span></span><br><span class="line">    sed -i <span class="string">'s@^thread_cache_size.*@thread_cache_size = 16@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^query_cache_size.*@query_cache_size = 16M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 16M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^key_buffer_size.*@key_buffer_size = 16M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 128M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^tmp_table_size.*@tmp_table_size = 32M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^table_open_cache.*@table_open_cache = 256@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">elif [ <span class="variable">$&#123;Mem&#125;</span> -gt <span class="number">2500</span> -a <span class="variable">$&#123;Mem&#125;</span> -le <span class="number">3500</span> ]; then</span><br><span class="line">    <span class="comment">#  2500MB &lt; 实际内存 &lt;= 3500MB</span></span><br><span class="line">    sed -i <span class="string">'s@^thread_cache_size.*@thread_cache_size = 32@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^query_cache_size.*@query_cache_size = 32M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 32M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^key_buffer_size.*@key_buffer_size = 64M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 512M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^tmp_table_size.*@tmp_table_size = 64M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^table_open_cache.*@table_open_cache = 512@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">elif [ <span class="variable">$&#123;Mem&#125;</span> -gt <span class="number">3500</span> ]; then</span><br><span class="line">    <span class="comment">#  3500MB &lt; 实际内存</span></span><br><span class="line">    sed -i <span class="string">'s@^thread_cache_size.*@thread_cache_size = 64@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^query_cache_size.*@query_cache_size = 64M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 64M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^key_buffer_size.*@key_buffer_size = 256M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 1024M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^tmp_table_size.*@tmp_table_size = 128M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^table_open_cache.*@table_open_cache = 1024@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><blockquote><p>添加<code>libjemalloc</code>模块,初始化数据库,启动<code>mysql</code>服务</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -<span class="selector-tag">i</span> <span class="string">'s@executing mysqld_safe@executing mysqld_safe\nexport LD_PRELOAD=/usr/lib64/libjemalloc.so@'</span> <span class="variable">$basedir</span>/bin/mysqld_safe</span><br><span class="line"><span class="variable">$basedir</span>/bin/mysqld --initialize-insecure --user=mysql --basedir=<span class="variable">$basedir</span> --datadir=<span class="variable">$datadir</span></span><br><span class="line">chmod <span class="number">600</span> /etc/my.cnf</span><br><span class="line">chown mysql<span class="selector-class">.mysql</span> -R <span class="variable">$datadir</span></span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3><pre><code>echo &quot;export PATH=$basedir/bin:\$PATH&quot; &gt;&gt; /etc/profile. /etc/profile</code></pre><h3 id="初始化root密码-权限"><a href="#初始化root密码-权限" class="headerlink" title="初始化root密码, 权限"></a>初始化root密码, 权限</h3><blockquote><p><code>root</code>用户仅本地登录</p></blockquote><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dbrootpwd=hc123456    <span class="comment"># 数据库root密码</span></span><br><span class="line">mysql -e <span class="string">"grant all privileges on *.* to root@'127.0.0.1' identified by \"</span><span class="variable">$&#123;dbrootpwd&#125;</span>\<span class="string">" with grant option;"</span></span><br><span class="line">mysql -e <span class="string">"grant all privileges on *.* to root@'localhost' identified by \"</span><span class="variable">$&#123;dbrootpwd&#125;</span>\<span class="string">" with grant option;"</span></span><br><span class="line">mysql -uroot -p<span class="variable">$&#123;dbrootpwd&#125;</span> -e <span class="string">"reset master;"</span></span><br></pre></td></tr></table></figure><h3 id="配置mysql库文件"><a href="#配置mysql库文件" class="headerlink" title="配置mysql库文件"></a>配置mysql库文件</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /etc/ld<span class="selector-class">.so</span><span class="selector-class">.conf</span><span class="selector-class">.d</span>/mariadb-x86_64.conf</span><br><span class="line">echo <span class="string">"$basedir/lib"</span> &gt; /etc/ld<span class="selector-class">.so</span><span class="selector-class">.conf</span><span class="selector-class">.d</span>/mysql.conf</span><br><span class="line">ldconfig</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><h3 id="开启root远程登录权限"><a href="#开启root远程登录权限" class="headerlink" title="开启root远程登录权限"></a>开启root远程登录权限</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span> -uroot -p<span class="variable">$&#123;dbrootpwd&#125;</span> -e <span class="string">"grant all privileges on *.* to root@'%' identified by \"<span class="variable">$&#123;dbrootpwd&#125;</span>\" with grant option;"</span></span><br></pre></td></tr></table></figure><h3 id="数据库所有用户的登录权限"><a href="#数据库所有用户的登录权限" class="headerlink" title="数据库所有用户的登录权限"></a>数据库所有用户的登录权限</h3><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p$&#123;dbrootpwd&#125; -e <span class="string">"SELECT DISTINCT CONCAT('</span>User: <span class="string">''',user,'''</span>@<span class="string">''',host,'''</span>;<span class="string">') AS query FROM mysql.user;"</span></span><br></pre></td></tr></table></figure><h3 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --zone=public --add-port=3306/tcp --permanent    <span class="comment"># 永久生效允许 3306 端口</span></span></span><br><span class="line"><span class="bash">firewall-cmd --reload    <span class="comment"># 重新载入防火墙配置</span></span></span><br><span class="line"><span class="bash">firewall-cmd --zone=public --query-port=3306/tcp    <span class="comment"># 查看 3306 端口是否允许</span></span></span><br><span class="line"><span class="bash">firewall-cmd --zone=public --list-ports    <span class="comment"># 查看所有允许端口</span></span></span><br></pre></td></tr></table></figure><h3 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h3><pre><code>setenforce 0    # 临时生效，重启失效sed -i &apos;s/SELINUX=enforcing/SELINUX=disabled/&apos; /etc/selinux/config    # 重启后生效</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><blockquote><p>可修改脚本中mysql安装路径及数据库路径实现自定义安装，安装完成后防火墙自动放行3306端口，关闭selinux</p></blockquote><pre><code>curl http://home.onlycloud.xin/code/mysql-bin-install.sh -o mysql-install.shsh mysql-install.sh</code></pre>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql安装 </tag>
            
            <tag> mysql二进制 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Heartbeat-DRBD-NFS-Cluster</title>
      <link href="/posts/6b7.html"/>
      <url>/posts/6b7.html</url>
      <content type="html"><![CDATA[<h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">MASTER: data-1-1  </span><br><span class="line"></span><br><span class="line">    Heartbeat:</span><br><span class="line"></span><br><span class="line">        ens33: 10.0.0.11    管理IP, Lan数据转发    VIP：10.0.0.101</span><br><span class="line">        ens37: 10.0.10.11   NFS服务器心跳链接</span><br><span class="line">        ens38: 10.0.11.11   NFS服务器DRDB同步 </span><br><span class="line"></span><br><span class="line">    DRBD:</span><br><span class="line"></span><br><span class="line">        管理IP        : ens33:10.0.0.11</span><br><span class="line">        DRBD管理名称  : data</span><br><span class="line">        DRBD挂载目录  : /data</span><br><span class="line">        DRBD逻辑设备  : /dev/drbd0</span><br><span class="line">        DRBD对接IP    : ens37:10.0.11.11</span><br><span class="line">        DRBD存储设备  : /dev/sdb1</span><br><span class="line">        DRBDMeta设备  : /dev/sdb2[0]</span><br><span class="line"></span><br><span class="line">BACKUP: data-1-2</span><br><span class="line"></span><br><span class="line">    Heartbeat:</span><br><span class="line"></span><br><span class="line">        ens33: 10.0.0.12    管理IP, Lan数据转发    VIP：10.0.0.102</span><br><span class="line">        ens37: 10.0.10.12   NFS服务器心跳链接</span><br><span class="line">        ens38: 10.0.11.12   NFS服务器DRDB同步</span><br><span class="line"></span><br><span class="line">    DRBD:</span><br><span class="line"></span><br><span class="line">        管理IP        : ens33:10.0.0.12</span><br><span class="line">        DRBD管理名称  : data</span><br><span class="line">        DRBD挂载目录  : /data</span><br><span class="line">        DRBD逻辑设备  : /dev/drbd0</span><br><span class="line">        DRBD对接IP    : ens37:10.0.11.12</span><br><span class="line">        DRBD存储设备  : /dev/sdb1</span><br><span class="line">        DRBDMeta设备  : /dev/sdb2[0]</span><br><span class="line"></span><br><span class="line">SLAVE: data-1-3 </span><br><span class="line"></span><br><span class="line">        ens33: 10.0.0.13    管理IP</span><br></pre></td></tr></table></figure><h2 id="配置网络参数"><a href="#配置网络参数" class="headerlink" title="配置网络参数"></a>配置网络参数</h2><blockquote><p><code>data-1-1</code>网络参数(设置主机名, 删除网卡配置文件重新生成网络配置参数,添加hosts解析,配置心跳网络路由)</p></blockquote><pre><code>hostnamectl set-hostname data-1-1NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.11/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;NetName=ens37rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.10.11/24NetName=ens38rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.11.11/24nmcli connection reload# Hosts (主机名解析到心跳网卡真实IP)cat &lt;&lt;EOF   &gt;&gt;/etc/hosts10.0.10.11    data-1-110.0.10.12    data-1-2EOF# data-1-1 到达 data-1-2 心跳网络走 ens37 网卡route add -host 10.0.10.12 dev ens37echo &apos;/sbin/route add -host 10.0.10.12 dev ens37&apos; &gt;&gt;/etc/rc.localchmod +x /etc/rc.local</code></pre><hr><blockquote><p><code>data-1-2</code>网络参数(设置主机名, 删除网卡配置文件重新生成网络配置参数,添加hosts解析,配置心跳网络路由)</p></blockquote><pre><code>hostnamectl set-hostname data-1-2NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.12/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;NetName=ens37rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.10.12/24NetName=ens38rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.11.12/24nmcli connection reload# Hosts (主机名解析到心跳网卡真实IP)cat &lt;&lt;EOF   &gt;&gt;/etc/hosts10.0.10.11    data-1-110.0.10.12    data-1-2EOF# data-1-2 到达 data-1-1 心跳网络走 ens37 网卡oute add -host 10.0.10.11 dev ens37echo &apos;/sbin/route add -host 10.0.10.11 dev ens37&apos; &gt;&gt;/etc/rc.localchmod +x /etc/rc.local</code></pre><hr><blockquote><p><code>data-1-3</code>网络参数</p></blockquote><pre><code>hostnamectl set-hostname data-1-3NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.13/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;NetName=ens37rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.10.13/24NetName=ens38rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.11.13/24nmcli connection reload</code></pre><hr><h2 id="添加软件依赖安装源"><a href="#添加软件依赖安装源" class="headerlink" title="添加软件依赖安装源"></a>添加软件依赖安装源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 配置软件依赖安装源 (cluster-glue-libs-devel 安装源)</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/yum.repos.d/gf-epel-7.repo</span><br><span class="line">[epel-testing]</span><br><span class="line">name=Extra Packages for Enterprise Linux 7 - $basearch - Testing</span><br><span class="line">baseurl=http://mirror.ghettoforge.org/distributions/gf/el/7/testing/x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="安装Heartbeat"><a href="#安装Heartbeat" class="headerlink" title="安装Heartbeat"></a>安装Heartbeat</h2><pre><code># 下载软件包并安装 heartbeat # RPM包生成方法及编译安装方法  http://home.onlycloud.xin/posts/dae5.htmlheartbeat=&apos;heartbeat-3.0.6-1.el7.centos.x86_64.rpm&apos;heartbeat_libs=&apos;heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm&apos; curl -o $heartbeat http://home.onlycloud.xin/soft/heartbeat/$heartbeat --progresscurl -o $heartbeat_libs http://home.onlycloud.xin/soft/heartbeat/$heartbeat_libs --progressyum localinstall -y heartbeat-*</code></pre><h2 id="配置Heartbeat"><a href="#配置Heartbeat" class="headerlink" title="配置Heartbeat"></a>配置Heartbeat</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"># 复制配置文件模板</span><br><span class="line">cp /usr/share/doc/heartbeat-3.0.6/&#123;ha.cf,authkeys,haresources&#125; /etc/ha.d/</span><br><span class="line"></span><br><span class="line"># ha.cf 配置文件</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/ha.cf</span><br><span class="line"># 调试日志</span><br><span class="line">debugfile /var/log/ha-debug</span><br><span class="line"></span><br><span class="line"># heartbeat 运行日志</span><br><span class="line">logfile /var/log/ha-log</span><br><span class="line"></span><br><span class="line"># 在 syslog 服务中配置通过 local1 设备接收日志</span><br><span class="line">logfacility local0</span><br><span class="line"></span><br><span class="line"># 心跳间隔时间 default:2</span><br><span class="line">keepalive 1</span><br><span class="line"></span><br><span class="line"># 备用节点在 default:30 秒内没有收到主节点心跳信号则立即接管主节点服务资源</span><br><span class="line">deadtime 5</span><br><span class="line"></span><br><span class="line"># 心跳延迟时间为 default:10 秒,当 10 秒内备份节点未收到主节点心跳信号时,将写入警告日志,此时不会切换服务</span><br><span class="line">warntime 3</span><br><span class="line"></span><br><span class="line"># heartbeat 服务首次启动,需要等待 default:60 秒后才启动服务器的资源,该值至少为 deadtime 两倍(单机启动时vip绑定比较慢)</span><br><span class="line">initdead 10</span><br><span class="line"></span><br><span class="line"># 指定心跳信号网卡(直连网卡)</span><br><span class="line">#bcast ens37</span><br><span class="line"></span><br><span class="line"># 配置多播通信路径(直连网卡)</span><br><span class="line">mcast ens37 239.0.0.1 694 1 0</span><br><span class="line"></span><br><span class="line"># 主节点恢复后,是否将服务自动切回</span><br><span class="line">auto_failback on</span><br><span class="line"></span><br><span class="line"># 节点主机名(使用IP地址也可以)</span><br><span class="line">node data-1-1</span><br><span class="line">node data-1-2</span><br><span class="line"></span><br><span class="line"># 是否开启 CRM 集群管理</span><br><span class="line">crm no</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 两端认证方式 authkeys</span><br><span class="line">cat &lt;&lt;EOF  &gt;&gt;/etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line">auth 1</span><br><span class="line">1 sha1 cxix9lkzq2aevnxv43yn68yoh2y7zp2cfwufgs7w</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line"># haresources添加资源</span><br><span class="line"># 相当于执行脚本 /etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 stop/start</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/haresources</span><br><span class="line"># 虚拟IP配置到 ens33 网卡(虚拟IP流量走 ens33网卡)</span><br><span class="line">data-1-1 IPaddr::10.0.0.101/24/ens33</span><br><span class="line">data-1-2 IPaddr::10.0.0.102/24/ens33</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="验证Heartbeat"><a href="#验证Heartbeat" class="headerlink" title="验证Heartbeat"></a>验证Heartbeat</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务,验证(两个节点各自执行 ip add 能看到两个 10.0.0网段ip)</span><br><span class="line">systemctl start heartbeat</span><br><span class="line">netstat -ntaulp</span><br><span class="line">ip add | grep 10.0.0</span><br><span class="line"></span><br><span class="line"># 关闭一端服务,然后在另一端验证(在正常的一端已经接管了所有虚拟IP ip add 能看到三个 10.0.0网段ip)</span><br><span class="line">systemctl stop heartbeat</span><br><span class="line">ip add | grep 10.0.0</span><br><span class="line"></span><br><span class="line"># 启动关闭的服务后验证 虚拟IP已经恢复</span><br><span class="line">systemctl start heartbeat</span><br><span class="line">ip add | grep 10.0.0</span><br></pre></td></tr></table></figure><h2 id="硬盘分区"><a href="#硬盘分区" class="headerlink" title="硬盘分区"></a>硬盘分区</h2><blockquote><p>此处分区比较小,是因为在同步数据时会将整个硬盘同步,需要的时间较长且占用宿主机存储</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 硬盘分区, 格式化</span><br><span class="line">parted /dev/sdb mklabel gpt      # 更改分区表格式为 GPT</span><br><span class="line">echo -e &apos;n\np\n1\n\n+3G\nw&apos; | fdisk /dev/sdb</span><br><span class="line">echo -e &apos;n\np\n2\n\n+1G\nw&apos; | fdisk /dev/sdb</span><br><span class="line">partprobe</span><br><span class="line"></span><br><span class="line"># 格式化(sdb2分区不用格式化) 可以启动DRBD后格式化 drbd分区</span><br><span class="line"># mkfs.ext4 /dev/sdb1</span><br><span class="line">parted /dev/sdb p</span><br></pre></td></tr></table></figure><h2 id="安装DRBD"><a href="#安装DRBD" class="headerlink" title="安装DRBD"></a>安装DRBD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># YUM 安装 DRDB84</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br><span class="line">yum install -y kmod-drbd84 drbd84-utils</span><br><span class="line"></span><br><span class="line"># 加载DRBD驱动内核模块, 写入随系统加载</span><br><span class="line">modprobe drbd</span><br><span class="line">lsmod | grep drbd</span><br><span class="line">echo &apos;modprobe drbd&apos; &gt;/etc/sysconfig/modules/drbd.modules</span><br></pre></td></tr></table></figure><h2 id="配置DRBD-添加资源"><a href="#配置DRBD-添加资源" class="headerlink" title="配置DRBD, 添加资源"></a>配置DRBD, 添加资源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"># DRBD 配置文件</span><br><span class="line">cp /etc/drbd.conf&#123;,.bak&#125;</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/drbd.conf</span><br><span class="line">global &#123;</span><br><span class="line">    # minor-count 64;</span><br><span class="line">    # dialog-refresh 5;  # 5 seconds</span><br><span class="line">    # disable-ip-verification;</span><br><span class="line">    usage-count no;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">common &#123;</span><br><span class="line">    protocol C;</span><br><span class="line">    </span><br><span class="line">    disk &#123;</span><br><span class="line">        on-io-error detach;</span><br><span class="line">        no-disk-flushes;</span><br><span class="line">        no-md-flushes;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    net &#123;</span><br><span class="line">        sndbuf-size 512k;</span><br><span class="line">        # timeout             60;    #  6 seconds (unit = 0.1 seconds)</span><br><span class="line">        # connect-int         10;    # 10 seconds (unit = 1 seconds)</span><br><span class="line">        # ping-timeout         5;</span><br><span class="line">        max-buffers         8000;</span><br><span class="line">        unplug-watermark    1024;</span><br><span class="line">        max-epoch-size      8000;</span><br><span class="line">        # ko-count             4;</span><br><span class="line">        # allow-two-primaries;</span><br><span class="line">        cram-hmac-alg &quot;sha1&quot;;</span><br><span class="line">        shared-secret &quot;q1366zxxlzzv5rnndx4o&quot;;</span><br><span class="line">        after-sb-0pri disconnect;</span><br><span class="line">        after-sb-1pri disconnect;</span><br><span class="line">        after-sb-2pri disconnect;</span><br><span class="line">        rr-conflict   disconnect;</span><br><span class="line">        # data-integrity-alg &quot;md5&quot;;</span><br><span class="line">        # no-tcp-cork;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    syncer &#123;</span><br><span class="line">        rate                330M;   # 同步限速(不要给太大影响正常服务)</span><br><span class="line">        al-extents           517;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># RESOURCE data</span><br><span class="line">resource data &#123;</span><br><span class="line">    protocol C;</span><br><span class="line">    </span><br><span class="line">    disk &#123;</span><br><span class="line">        on-io-error detach;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    on data-1-1 &#123;</span><br><span class="line">        device     /dev/drbd0;</span><br><span class="line">        disk       /dev/sdb1;</span><br><span class="line">        address    10.0.11.11:7788;   # 数据同步网络 </span><br><span class="line">        meta-disk  /dev/sdb2[0];      # meta-disk internal;  # 内部模式只需要一个分区即可</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    on data-1-2 &#123;</span><br><span class="line">        device     /dev/drbd0;</span><br><span class="line">        disk       /dev/sdb1;</span><br><span class="line">        address    10.0.11.12:7788;   # 数据同步网络</span><br><span class="line">        meta-disk  /dev/sdb2[0];      # meta-disk internal;  # 内部模式只需要一个分区即可</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="初始化DRBD"><a href="#初始化DRBD" class="headerlink" title="初始化DRBD"></a>初始化DRBD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 两端执行初始化(两端执行完毕后状态应该为 0: &apos;cs:Connected ro:Secondary/Secondary ds:Inconsistent/Inconsistent&apos;)</span><br><span class="line">drbdadm create-md data</span><br><span class="line">drbdadm up data</span><br><span class="line">cat /proc/drbd</span><br><span class="line"></span><br><span class="line"># 查看角色 服务启动/重启后默认为都为从 (Secondary/Secondary 从/从 本主机/对端主机)</span><br><span class="line">drbdadm role data</span><br><span class="line"></span><br><span class="line"># 设置主并同步数据(哪台执行则哪台为主) 同步完成后状态 0: cs:Connected ro:Secondary/Primary ds:UpToDate/UpToDate</span><br><span class="line">drbdadm -- --overwrite-data-of-peer primary data</span><br><span class="line"></span><br><span class="line"># 查看角色 (Primary/Secondary  主/从 本主机/对端主机)</span><br><span class="line">drbdadm role data</span><br><span class="line"></span><br><span class="line"># 主端格式化 DRBD分区(从端会自动同步不用管)</span><br><span class="line">mkfs.ext4 -b 4096 /dev/drbd0</span><br><span class="line">tune2fs -c -1 /dev/drbd0</span><br></pre></td></tr></table></figure><h2 id="测试验证DRBD"><a href="#测试验证DRBD" class="headerlink" title="测试验证DRBD"></a>测试验证DRBD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 挂载drbd设备(请不要用物理设备挂载/dev/sdb1 否则执行文件操作重启服务后会出现故障)</span><br><span class="line"># 数据通过DRBD裸设备读取数据 如果挂载/dev/sdb1进行删除文件操作会导致数据不同步</span><br><span class="line">mkdir /md1</span><br><span class="line">mount /dev/drbd0 /md1</span><br><span class="line"></span><br><span class="line"># 写文件测试</span><br><span class="line">cd /md1</span><br><span class="line">for i in &#123;1..100&#125;;do  echo &quot;$(df -hT)&quot;  &gt;$i.txt; done</span><br><span class="line">ls /md1</span><br><span class="line">cat /md1/50.txt</span><br><span class="line"></span><br><span class="line"># 从端验证(请不要手动操作分区里边的数据 会导致同步异常)</span><br><span class="line">drbdadm down data</span><br><span class="line">mkdir /md1</span><br><span class="line">mount /dev/sdb1 /md1</span><br><span class="line">ls /md1</span><br><span class="line">cat /md1/50.txt</span><br><span class="line"></span><br><span class="line"># 恢复同步</span><br><span class="line">umount /dev/sdb1</span><br><span class="line">drbdadm up data</span><br></pre></td></tr></table></figure><h2 id="配置Heartbate管理DRBD"><a href="#配置Heartbate管理DRBD" class="headerlink" title="配置Heartbate管理DRBD"></a>配置Heartbate管理DRBD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># 两端都执行</span><br><span class="line"># 停止Heartbeat服务</span><br><span class="line">systemctl stop heartbeat</span><br><span class="line"></span><br><span class="line"># 配置 Heartbeat 资源</span><br><span class="line"># IPaddr::10.0.0.101/24/ens33  相当于执行脚本(配置VIP 10.0.0.101) /etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 stop/start</span><br><span class="line"># drbddisk::data (DRBD 资源名) 相当于执行(将当前drbd data 资源设置为主/从) /etc/ha.d/resource.d/drbddisk data stop/start</span><br><span class="line"># Filesystem::/dev/drbd0::/data::ext4 相当于执行(挂载数据) /etc/ha.d/resource.d/Filesystem /dev/drbd0/ /md1 ext4 stop/start</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/haresources</span><br><span class="line"># 虚拟IP</span><br><span class="line">data-1-1 IPaddr::10.0.0.101/24/ens33 drbddisk::data Filesystem::/dev/drbd0::/md1::ext4</span><br><span class="line">data-1-2 IPaddr::10.0.0.102/24/ens33 drbddisk::data Filesystem::/dev/drbd0::/md1::ext4</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 启动Heartbeat服务</span><br><span class="line">systemctl start heartbeat</span><br><span class="line"></span><br><span class="line">## 模拟脑裂恢复</span><br><span class="line"></span><br><span class="line">```conf</span><br><span class="line"># 将当前主节点虚拟机挂起模拟脑裂状态(通过命令查看Primary 在前面则当前主机为主节点 cat /proc/drbd  ro:Primary/Secondary)</span><br><span class="line">1. 验证从节点状态(此时从节点已经切换为主节点)</span><br><span class="line">ip add | grep 10.0.0      # 此时虚拟IP都漂移到了从节点</span><br><span class="line">cat /proc/drbd            # 查看DRBD状态 当前节点已经变为主节点  cs:WFConnection ro:Primary/Unknown ds:UpToDate/DUnknown</span><br><span class="line">df -hT                    # 此时/md1 已经被挂载 /dev/drbd0              ext4      2.9G  9.2M  2.8G   1% /md1</span><br><span class="line">cd /md1                   # 进入挂载目录写入新数据</span><br><span class="line">touch &#123;1..50&#125;.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. 恢复挂起的虚拟机 恢复脑裂状态(两端执行 cat /proc/drbd 查看本端状态正常对方为 Unknown 则为脑裂状态)</span><br><span class="line"># 从节点执行(数据滞后的一端 数据需要放弃的一端 也就是之前的主节点 被挂起的虚拟机)</span><br><span class="line">modprobe drbd</span><br><span class="line">drbdadm secondary data</span><br><span class="line">drbdadm up data</span><br><span class="line">drbdadm disconnect data</span><br><span class="line">drbdadm -- --discard-my-data connect data</span><br><span class="line">cat /proc/drbd</span><br><span class="line"></span><br><span class="line"># 主节点执行(当前的主节点)</span><br><span class="line">drbdadm connect data</span><br><span class="line">cat /proc/drbd        # 查看状态两端同步状态为 ds:UpToDate/UpToDate  0: cs:Connected ro:Secondary/Primary ds:UpToDate/UpToDate</span><br><span class="line"></span><br><span class="line"># 从节点重启heartbeat服务,自动切换为主节点</span><br><span class="line">systemctl stop heartbeat</span><br><span class="line">systemctl start heartbeat</span><br><span class="line">ls /md1              # 此时查看在脑裂期间创建的数据已经同步到主节点</span><br></pre></td></tr></table></figure><h2 id="手动管理"><a href="#手动管理" class="headerlink" title="手动管理"></a>手动管理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 手动执行切换</span><br><span class="line">/etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 status       # 虚拟IP 10.0.0.101 在当前节点状态</span><br><span class="line">/etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 stop         # 在执行的主机释放虚拟IP 10.0.0.101</span><br><span class="line">/etc/ha.d/resource.d/IPaddr 10.0.0.102/24/ens33 start        # 在执行的主机添加虚拟IP 10.0.0.102</span><br><span class="line">/etc/ha.d/resource.d/drbddisk data status                    # 状态为 running (Primary) 为主节点</span><br><span class="line">/etc/ha.d/resource.d/drbddisk data start                     # 在两端都重启或状态都为从节点 可以通过此命令设置主节点哪台执行则哪台为主节点</span><br><span class="line">/etc/ha.d/resource.d/Filesystem /dev/drbd0 /md1 ext4 status  # 查看挂载状态</span><br><span class="line">/etc/ha.d/resource.d/Filesystem /dev/drbd0 /md1 ext4 start   # 挂载DRBD设备只有主节点才能挂载(从节点执行会报错)</span><br></pre></td></tr></table></figure><h2 id="安装配置NFS"><a href="#安装配置NFS" class="headerlink" title="安装配置NFS"></a>安装配置NFS</h2><h3 id="NFS-Server端-data-1-1-data-1-2"><a href="#NFS-Server端-data-1-1-data-1-2" class="headerlink" title="NFS Server端(data-1-1 data-1-2)"></a>NFS Server端(data-1-1 data-1-2)</h3><blockquote><p>安装配置NFS</p></blockquote><pre><code>yum install -y nfs-utils rpcbind</code></pre><hr><blockquote><p>启动服务, 查看服务状态(nfs服务由heartbeat管理)</p></blockquote><pre><code>systemctl restart rpcbind nfssystemctl status rpcbind nfssystemctl enable rpcbindsystemctl is-enabled rpcbindrpcinfo -p localhost</code></pre><hr><blockquote><p>配置NFS资源, 权限</p></blockquote><pre><code>chmod 777 /md1/cat &lt;&lt;EOF  &gt;/etc/exports/md1  10.0.0.*(rw,sync)EOF</code></pre><hr><blockquote><p>重读配置, 查看nfs资源<br>    exportfs -r</p></blockquote><pre><code>showmount -e localhost</code></pre><hr><h3 id="NFS-Clietn端-web-01-web-02"><a href="#NFS-Clietn端-web-01-web-02" class="headerlink" title="NFS Clietn端(web-01 web-02)"></a>NFS Clietn端(web-01 web-02)</h3><blockquote><p>安装NFS ,启动rpcbind</p></blockquote><pre><code>yum install -y nfs-utils rpcbindsystemctl start rpcbindsystemctl enable rpcbind</code></pre><hr><blockquote><p>查看服务资源</p></blockquote><pre><code>showmount -e 10.0.0.101</code></pre><hr><blockquote><p>创建挂载目录授权</p></blockquote><pre><code>mkdir /md1chown -R 777 /md1</code></pre><hr><blockquote><p>挂载数据目录</p></blockquote><pre><code>mount -t nfs 10.0.0.101:/md1 /md1echo -e &quot;\n# Mount NFS\nmount -t nfs 10.0.0.101:/md1 /md1&quot; &gt;&gt;/etc/rc.localchmod +x /etc/rc.d/rc.local</code></pre><hr><h2 id="配置Heartbate管理NFS"><a href="#配置Heartbate管理NFS" class="headerlink" title="配置Heartbate管理NFS"></a>配置Heartbate管理NFS</h2><h3 id="创建NFS控制脚"><a href="#创建NFS控制脚" class="headerlink" title="创建NFS控制脚"></a>创建NFS控制脚</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;&apos;!&apos;   &gt;/etc/ha.d/resource.d/killnfsd</span><br><span class="line">#!/bin/bash</span><br><span class="line">nfs_usage()&#123;</span><br><span class="line">    cat &lt;&lt;EOF</span><br><span class="line">    USAGE: $0 &#123;start|stop&#125;</span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nfs_start()&#123;</span><br><span class="line">    systemctl start nfs</span><br><span class="line"></span><br><span class="line">    rc=$?</span><br><span class="line">    if [ $rc -ne 0 ];then</span><br><span class="line">        echo &quot;NFS Server Start Failed&quot;</span><br><span class="line">        exit $rc</span><br><span class="line">    else</span><br><span class="line">        echo &quot;NFS Server Start Success&quot;</span><br><span class="line">    fi     </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nfs_stop()&#123;</span><br><span class="line">    killall -9 nfsd</span><br><span class="line">    systemctl stop nfs</span><br><span class="line">    </span><br><span class="line">    rc=$?</span><br><span class="line">    if [ $rc -ne 0 ];then</span><br><span class="line">        echo &quot;NFS Server Stop Failed&quot;</span><br><span class="line">        exit $rc</span><br><span class="line">    else</span><br><span class="line">        echo &quot;NFS Server Stop Success&quot;</span><br><span class="line">    fi        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">    start)</span><br><span class="line">        nfs_start</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        nfs_stop</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        nfs_usage</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line">!</span><br></pre></td></tr></table></figure><hr><blockquote><p>添加可执行权限</p></blockquote><pre><code>chmod +x /etc/ha.d/resource.d/killnfsd </code></pre><hr><h3 id="配置Heartbeat资源"><a href="#配置Heartbeat资源" class="headerlink" title="配置Heartbeat资源"></a>配置Heartbeat资源</h3><pre><code># 停止heartbeat服务systemctl stop heartbeat# 配置资源cat &lt;&lt;EOF   &gt;/etc/ha.d/haresources# 虚拟IP(提供资源访问)配置到ens33接口 对外资源流量也走ens33接口data-1-1 IPaddr::10.0.0.101/24/ens33 drbddisk::data Filesystem::/dev/drbd0::/md1::ext4 killnfsddata-1-2 IPaddr::10.0.0.102/24/ens33 drbddisk::data Filesystem::/dev/drbd0::/md1::ext4 killnfsdEOF# 启动heartbeat服务systemctl start heartbeat</code></pre><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><pre><code># ssh登录 web-01 web-02df -hTls /md1# 关闭主节点(data-1-1)heartbeat 服务systemctl stop heartbeat# ssh登录 web-01 web-02df -hTls /md1# 启动(data-1-1)heartbeat 服务systemctl start heartbeat# ssh登录 web-01 web-02df -hTls /md1# web-01 web-02 应该能自动挂载其中切换主备时会出现几秒超时现象</code></pre><h2 id="服务重启后启动顺序-两端断电或重启"><a href="#服务重启后启动顺序-两端断电或重启" class="headerlink" title="服务重启后启动顺序(两端断电或重启)"></a>服务重启后启动顺序(两端断电或重启)</h2><pre><code># 1.两端都启动DRBD资源,查看状态(两端都为从 ro:Secondary/Secondary)drbdadm up datacat /proc/drbd# 2.在主端(data-1-1)启动heartbeat服务(查看DRBD状态 ro:Primary/Secondary)systemctl start heartbeatsleep 3cat /proc/drbdip add | grep 10.0.0df -hT# 3.启动备端(data-1-2)(执行完成命令后当前节点已经变为主节点)systemctl start heartbeatsleep 3cat /proc/drbdip add | grep 10.0.0df -hT# 4.1 自动切换主节点为(data-1-1) 如果未能切换请重复执行或查看 heartbeat 日志 tail -f /var/log/ha-logsystemctl stop heartbeatsystemctl start heartbeatsleep 3cat /proc/drbdip add | grep 10.0.0df -hT# 4.2 手动切换主节点# data-1-2(执行后变备节点 释放VIP →停止nfs → 取消drbd设备挂载 → drbd状态为备)/etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 stop/etc/ha.d/resource.d/killnfsd  stop/etc/ha.d/resource.d/Filesystem /dev/drbd0 /md1 ext4 stop/etc/ha.d/resource.d/drbddisk data stop# data-1-1(执行后变主节点 接管VIP → drbd状态为主 → 挂载drbd设备 → 启动nfs)/etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 start/etc/ha.d/resource.d/drbddisk data start/etc/ha.d/resource.d/Filesystem /dev/drbd0 /md1 ext4 start/etc/ha.d/resource.d/killnfsd start</code></pre><hr><h2 id="配置inotyfy实现双主多从"><a href="#配置inotyfy实现双主多从" class="headerlink" title="配置inotyfy实现双主多从"></a>配置inotyfy实现双主多从</h2><pre><code>待续。。。。</code></pre>]]></content>
      
      <categories>
          
          <category> Cluster </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Heartbeat </tag>
            
            <tag> DRBD </tag>
            
            <tag> NFS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Heartbeat-BRDB安装</title>
      <link href="/posts/dae5.html"/>
      <url>/posts/dae5.html</url>
      <content type="html"><![CDATA[<pre><code>本文章主要写软件安装及配置过程如需集群配置请访问 http://home.onlycloud.xin/posts/6b7.html环境：CentOS 7.5MASTER: data-1-1    Heartbeat:    ens33: 10.0.0.11    管理IP, Lan数据转发    VIP：10.0.0.101    ens37: 10.0.10.11   NFS服务器心跳链接    ens38: 10.0.11.11   NFS服务器DRDB同步   DRBD:    管理IP        : ens33:10.0.0.11    DRBD管理名称  : data    DRBD挂载目录  : /data    DRBD逻辑设备  : /dev/drbd0    DRBD对接IP    : ens37:10.0.11.11    DRBD存储设备  : /dev/sdb1    DRBDMeta设备  : /dev/sdb2[0]</code></pre><hr><pre><code>BACKUP: data-1-2  Heartbeat:    ens33: 10.0.0.12    管理IP, Lan数据转发    VIP：10.0.0.102    ens37: 10.0.10.12   NFS服务器心跳链接    ens38: 10.0.11.12   NFS服务器DRDB同步  DRBD:    管理IP        : ens33:10.0.0.12    DRBD管理名称  : data    DRBD挂载目录  : /data    DRBD逻辑设备  : /dev/drbd0    DRBD对接IP    : ens37:10.0.11.12    DRBD存储设备  : /dev/sdb1    DRBDMeta设备  : /dev/sdb2[0]</code></pre><h2 id="编译安装Heartbeat"><a href="#编译安装Heartbeat" class="headerlink" title="编译安装Heartbeat"></a>编译安装Heartbeat</h2><h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a><a href="http://linux-ha.org/wiki/Download" target="_blank" rel="noopener">软件下载</a></h3><pre><code>wget -O ClusterGlue-1.0.12.tar.bz2 http://hg.linux-ha.org/glue/archive/0a7add1d9996.tar.bz2wget -O Heartbeat-3.0.6.tar.bz2 http://hg.linux-ha.org/heartbeat-STABLE_3_0/archive/958e11be8686.tar.bz2wget -O resource-agents-3.9.6.tar.gz https://github.com/ClusterLabs/resource-agents/archive/v3.9.6.tar.gz</code></pre><h3 id="创建服务用户"><a href="#创建服务用户" class="headerlink" title="创建服务用户"></a>创建服务用户</h3><pre><code>groupadd -g 501 haclientuseradd -u 501 hacluster -g haclient -s /bin/false</code></pre><h3 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a>安装编译环境</h3><pre><code>yum install -y gcc gcc-c++ autoconf automake libtool glib2-devel libxml2-devel \  bzip2 bzip2-devel libtool-ltdl-devel libuuid-devel asciidoc</code></pre><h3 id="编译安装Glue"><a href="#编译安装Glue" class="headerlink" title="编译安装Glue"></a>编译安装Glue</h3><pre><code>mkdir /usr/local/srctar xvf ClusterGlue-1.0.12.tar.bz2 -C /usr/local/srccd /usr/local/src/Reusable-Cluster-Components-glue--0a7add1d9996./autogen.sh./configure --prefix=/usr/local/heartbeat --with-daemon-user=hacluster --with-daemon-group=haclientmake &amp;&amp; make install</code></pre><h3 id="编译安装-Resource-Agents"><a href="#编译安装-Resource-Agents" class="headerlink" title="编译安装 Resource Agents"></a>编译安装 Resource Agents</h3><pre><code>cd -tar xvf resource-agents-3.9.6.tar.gz -C /usr/local/srccd /usr/local/src/resource-agents-3.9.6./autogen.sh./configure --prefix=/usr/local/heartbeatmake &amp;&amp; make install</code></pre><h3 id="编译安装-Heartbeat"><a href="#编译安装-Heartbeat" class="headerlink" title="编译安装 Heartbeat"></a>编译安装 Heartbeat</h3><pre><code>cd -tar -xvf Heartbeat-3.0.6.tar.bz2 -C /usr/local/srccd /usr/local/src/Heartbeat-3-0-958e11be8686export CFLAGS=&quot;$CFLAGS -I/usr/local/heartbeat/include -L/usr/local/heartbeat/lib&quot;./bootstrap./configure --prefix=/usr/local/heartbeat --enable-fatal-warnings=no LIBS=&apos;/lib64/libuuid.so.1&apos;make &amp;&amp; make installcd</code></pre><h3 id="Heartbeat-配置"><a href="#Heartbeat-配置" class="headerlink" title="Heartbeat 配置"></a>Heartbeat 配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"># Hosts (主机名解析到心跳网卡真实IP)</span><br><span class="line">cat &lt;&lt;EOF   &gt;&gt;/etc/hosts</span><br><span class="line">10.0.10.11    data-1-1</span><br><span class="line">10.0.10.12    data-1-2</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 复制配置文件模板</span><br><span class="line">cp /usr/local/heartbeat/share/doc/heartbeat/&#123;ha.cf,authkeys,haresources&#125; /usr/local/heartbeat/etc/ha.d</span><br><span class="line"></span><br><span class="line"># ha.cf 配置文件</span><br><span class="line">cat &lt;&lt;EOF   &gt;/usr/local/heartbeat/etc/ha.d/ha.cf</span><br><span class="line"># 调试日志</span><br><span class="line">debugfile /var/log/ha-debug</span><br><span class="line"></span><br><span class="line"># heartbeat 运行日志</span><br><span class="line">logfile /var/log/ha-log</span><br><span class="line"></span><br><span class="line"># 在 syslog 服务中配置通过 local1 设备接收日志</span><br><span class="line">logfacility local0</span><br><span class="line"></span><br><span class="line"># 心跳间隔时间</span><br><span class="line">keepalive 2</span><br><span class="line"></span><br><span class="line"># 备用节点在 30 秒内没有收到主节点心跳信号则立即接管主节点服务资源</span><br><span class="line">deadtime 30</span><br><span class="line"></span><br><span class="line"># 心跳延迟时间为 10 秒,当 10 秒内备份节点未收到主节点心跳信号时,将写入警告日志,此时不会切换服务</span><br><span class="line">warntime 10</span><br><span class="line"></span><br><span class="line"># heartbeat 服务首次启动,需要等待 60 秒后才启动服务器的资源,该值至少为 deadtime 两倍(单机启动时vip绑定比较慢)</span><br><span class="line">initdead 60</span><br><span class="line"></span><br><span class="line"># 指定心跳信号网卡(直连网卡)</span><br><span class="line">#bcast ens37</span><br><span class="line"></span><br><span class="line"># 配置多播通信路径(直连网卡)</span><br><span class="line">mcast ens37 239.0.0.1 694 1 0</span><br><span class="line"></span><br><span class="line"># 主节点恢复后,是否将服务自动切回</span><br><span class="line">auto_failback on</span><br><span class="line"></span><br><span class="line"># 节点主机名(使用IP地址也可以)</span><br><span class="line">node data-1-1</span><br><span class="line">node data-1-2</span><br><span class="line"></span><br><span class="line"># 是否开启 CRM 集群管理</span><br><span class="line">crm no</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># authkeys</span><br><span class="line">cat &lt;&lt;EOF  &gt;&gt;/usr/local/heartbeat/etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line">auth 1</span><br><span class="line">1 sha1 cxix9lkzq2aevnxv43yn68yoh2y7zp2cfwufgs7w</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /usr/local/heartbeat/etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line"># haresources</span><br><span class="line">cat &lt;&lt;EOF   &gt;/usr/local/heartbeat/etc/ha.d/haresources</span><br><span class="line"># 虚拟IP 配置到 ens33网卡</span><br><span class="line">data-1-1 IPaddr::10.0.0.101/24/ens33</span><br><span class="line">data-1-2 IPaddr::10.0.0.102/24/ens33</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 链接功能模块</span><br><span class="line">ln -svf /usr/local/heartbeat/lib64/heartbeat/plugins/RAExec/* /usr/local/heartbeat/lib/heartbeat/plugins/RAExec/  </span><br><span class="line">ln -svf /usr/local/heartbeat/lib64/heartbeat/plugins/* /usr/local/heartbeat/lib/heartbeat/plugins/  </span><br><span class="line"></span><br><span class="line">systemctl restart heartbeat</span><br><span class="line">systemctl status heartbeat</span><br><span class="line"></span><br><span class="line"># 接管资源</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_takeover           # 接管所有资源</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_takeover local     # 接管本地资源</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_takeover foreign   # 接管对端资源</span><br><span class="line"></span><br><span class="line"># 释放资源</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_standby</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_standby local      # 释放本地资源</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_standby foreign    # 释放对端资源</span><br><span class="line"></span><br><span class="line"># 链接配置文件(便于修改)</span><br><span class="line">ln -s /usr/local/heartbeat/etc/ha.d/ /etc/</span><br><span class="line">cp /usr/local/src/resource-agents-3.9.6/ldirectord/ldirectord.cf /etc/ha.d/</span><br></pre></td></tr></table></figure><h2 id="RPM包安装Heartbeat"><a href="#RPM包安装Heartbeat" class="headerlink" title="RPM包安装Heartbeat"></a>RPM包安装Heartbeat</h2><h3 id="准备build环境"><a href="#准备build环境" class="headerlink" title="准备build环境"></a>准备build环境</h3><pre><code>yum install -y bzip2 rpm-build</code></pre><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><pre><code>wget -O Heartbeat-3.0.6.tar.bz2 http://hg.linux-ha.org/heartbeat-STABLE_3_0/archive/958e11be8686.tar.bz2</code></pre><h3 id="创建build所需路径"><a href="#创建build所需路径" class="headerlink" title="创建build所需路径"></a>创建build所需路径</h3><pre><code>mkdir -p /root/rpmbuild/SOURCES/tar xjvf Heartbeat-3.0.6.tar.bz2 -C /root/rpmbuild/SOURCES/cd /root/rpmbuild/SOURCES/mv Heartbeat-3-0-958e11be8686 heartbeattar cjvf /root/rpmbuild/SOURCES/heartbeat.tar.bz2 heartbeatcd heartbeat</code></pre><h3 id="安装依赖关系"><a href="#安装依赖关系" class="headerlink" title="安装依赖关系"></a>安装依赖关系</h3><blockquote><p>配置cluster-glue-libs-devel 安装源</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;/etc/yum.repos.d/gf-epel-7.repo[epel-testing]name=Extra Packages for Enterprise Linux 7 - $basearch - Testingbaseurl=http://mirror.ghettoforge.org/distributions/gf/el/7/testing/x86_64enabled=1gpgcheck=0EOF</code></pre><hr><blockquote><p>安装软件</p></blockquote><pre><code>yum install -y glib2-devel libtool-ltdl-devel bzip2-devel ncurses-devel openssl-devel libtool \  zlib-devel mailx cluster-glue-libs-devel libxslt docbook-dtds docbook-style-xsl libuuid-devel</code></pre><hr><h3 id="生成RPM包"><a href="#生成RPM包" class="headerlink" title="生成RPM包"></a>生成RPM包</h3><pre><code>rpmbuild -ba heartbeat-fedora.specls /root/rpmbuild/RPMS/x86_64/</code></pre><h3 id="其他节点安装"><a href="#其他节点安装" class="headerlink" title="其他节点安装"></a>其他节点安装</h3><blockquote><p>下载安装包</p></blockquote><pre><code>mkdir /root/heartbeatscp 10.0.0.11:/root/rpmbuild/RPMS/x86_64/* /root/heartbeatheartbeat=&apos;heartbeat-3.0.6-1.el7.centos.x86_64.rpm&apos;heartbeat-libs=&apos;heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm&apos; curl -o /root/heartbeat/$heartbeat http://home.onlycloud.xin/soft/heartbeat/$heartbeat --progresscurl -o /root/heartbeat/$heartbeat-libs http://home.onlycloud.xin/soft/heartbeat/$heartbeat-libs --progress</code></pre><hr><blockquote><p>配置cluster-glue-libs-devel 安装源</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;/etc/yum.repos.d/gf-epel-7.repo[epel-testing]name=Extra Packages for Enterprise Linux 7 - $basearch - Testingbaseurl=http://mirror.ghettoforge.org/distributions/gf/el/7/testing/x86_64enabled=1gpgcheck=0EOF</code></pre><hr><blockquote><p>安装</p></blockquote><pre><code>cd /root/heartbeatyum localinstall heartbeat-*</code></pre><h3 id="配置Heartbeat"><a href="#配置Heartbeat" class="headerlink" title="配置Heartbeat"></a>配置Heartbeat</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"># 复制配置文件模板</span><br><span class="line">cp /usr/share/doc/heartbeat-3.0.6/&#123;ha.cf,authkeys,haresources&#125; /etc/ha.d/</span><br><span class="line"></span><br><span class="line"># ha.cf 配置文件</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/ha.cf</span><br><span class="line"># 调试日志</span><br><span class="line">debugfile /var/log/ha-debug</span><br><span class="line"></span><br><span class="line"># heartbeat 运行日志</span><br><span class="line">logfile /var/log/ha-log</span><br><span class="line"></span><br><span class="line"># 在 syslog 服务中配置通过 local1 设备接收日志</span><br><span class="line">logfacility local0</span><br><span class="line"></span><br><span class="line"># 心跳间隔时间</span><br><span class="line">keepalive 2</span><br><span class="line"></span><br><span class="line"># 备用节点在 30 秒内没有收到主节点心跳信号则立即接管主节点服务资源</span><br><span class="line">deadtime 30</span><br><span class="line"></span><br><span class="line"># 心跳延迟时间为 10 秒,当 10 秒内备份节点未收到主节点心跳信号时,将写入警告日志,此时不会切换服务</span><br><span class="line">warntime 10</span><br><span class="line"></span><br><span class="line"># heartbeat 服务首次启动,需要等待 60 秒后才启动服务器的资源,该值至少为 deadtime 两倍(单机启动时vip绑定比较慢)</span><br><span class="line">initdead 60</span><br><span class="line"></span><br><span class="line"># 指定心跳信号网卡(直连网卡)</span><br><span class="line">#bcast ens37</span><br><span class="line"></span><br><span class="line"># 配置多播通信路径(直连网卡)</span><br><span class="line">mcast ens37 239.0.0.1 694 1 0</span><br><span class="line"></span><br><span class="line"># 主节点恢复后,是否将服务自动切回</span><br><span class="line">auto_failback on</span><br><span class="line"></span><br><span class="line"># 节点主机名(使用IP地址也可以)</span><br><span class="line">node data-1-1</span><br><span class="line">node data-1-2</span><br><span class="line"></span><br><span class="line"># 是否开启 CRM 集群管理</span><br><span class="line">crm no</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 两端认证方式 authkeys</span><br><span class="line">cat &lt;&lt;EOF  &gt;&gt;/etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line">auth 1</span><br><span class="line">1 sha1 cxix9lkzq2aevnxv43yn68yoh2y7zp2cfwufgs7w</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line"># haresources添加资源</span><br><span class="line"># 相当于执行脚本 /etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 stop/start</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/haresources</span><br><span class="line"># 虚拟IP配置到 ens33 网卡(虚拟IP流量走 ens33网卡)</span><br><span class="line">data-1-1 IPaddr::10.0.0.101/24/ens33</span><br><span class="line">data-1-2 IPaddr::10.0.0.102/24/ens33</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="验证Heartbeat"><a href="#验证Heartbeat" class="headerlink" title="验证Heartbeat"></a>验证Heartbeat</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务,跟随系统启动 验证(两个节点各自执行 ip add 能看到两个 10.0.0网段ip)</span><br><span class="line">systemctl start heartbeat</span><br><span class="line">systemctl enable heartbeat</span><br><span class="line">netstat -ntaulp</span><br><span class="line">ip add | grep 10.0.0</span><br><span class="line"></span><br><span class="line"># 关闭一端服务,然后在另一端验证(在正常的一端已经接管了所有虚拟IP ip add 能看到三个 10.0.0网段ip)</span><br><span class="line">systemctl stop heartbeat</span><br><span class="line">ip add | grep 10.0.0</span><br><span class="line"></span><br><span class="line"># 启动关闭的服务后验证 虚拟IP已经恢复</span><br><span class="line">systemctl start heartbeat</span><br><span class="line">ip add | grep 10.0.0</span><br></pre></td></tr></table></figure><h2 id="DRBD编译安装"><a href="#DRBD编译安装" class="headerlink" title="DRBD编译安装"></a>DRBD编译安装</h2><h3 id="安装依赖环境"><a href="#安装依赖环境" class="headerlink" title="安装依赖环境"></a>安装依赖环境</h3><blockquote><p>依赖环境安装(升级内核)</p></blockquote><pre><code>yum install -y gcc gcc-c++  flex kernel kernel-devel kernel-headers elfutils-libelf-develreboot</code></pre><hr><blockquote><p>依赖环境安装(安装指定版本kernel-devel 无需升级内核)</p></blockquote><pre><code>yum install -y gcc gcc-c++ flex kernel-devel-$(uname -r) kernel-headers elfutils-libelf-devel</code></pre><hr><h3 id="编译安装-DRBD-内核驱动"><a href="#编译安装-DRBD-内核驱动" class="headerlink" title="编译安装 DRBD 内核驱动"></a>编译安装 DRBD 内核驱动</h3><blockquote><p>如果 make 立即报错请确定当前使用的内核版本与 kernel-devel 版本一致</p></blockquote><pre><code>wget http://www.linbit.com/downloads/drbd/9.0/drbd-9.0.14-1.tar.gztar xvf drbd-9.0.14-1.tar.gz -C /usr/local/srccd /usr/local/src/drbd-9.0.14-1make KDIR=/usr/src/kernels/$(uname -r)/make install</code></pre><blockquote><p>加载模块,验证</p></blockquote><pre><code>modprobe drbdlsmod | grep drbd# 跟随系统启动加载模块echo &apos;modprobe drbd&apos; &gt;&gt;/etc/rc.localchmod +x /etc/rc.local</code></pre><h3 id="编译安装-DRBD"><a href="#编译安装-DRBD" class="headerlink" title="编译安装 DRBD"></a>编译安装 DRBD</h3><pre><code># 安装依赖环境yum install -y autoconf automake libxslt docbook-style-xslcdwget http://www.linbit.com/downloads/drbd/utils/drbd-utils-9.4.0.tar.gztar xvf drbd-utils-9.4.0.tar.gz -C /usr/local/srccd /usr/local/src/drbd-utils-9.4.0./autogen.sh./configure --prefix=/usr/local/drbd --sysconfdir=/etcmake &amp;&amp; make install</code></pre><h3 id="安装drbdmanage"><a href="#安装drbdmanage" class="headerlink" title="安装drbdmanage"></a>安装drbdmanage</h3><pre><code>wget http://www.linbit.com/downloads/drbdmanage/drbdmanage-0.99.17.tar.gztar xvf drbdmanage-0.99.17.tar.gz -C /usr/local/srccd /usr/local/src/drbdmanage-0.99.17python setup.py install</code></pre><h3 id="DRBD配置"><a href="#DRBD配置" class="headerlink" title="DRBD配置"></a>DRBD配置</h3><blockquote><p>DRBD 配置文件(两端配置文件相同)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/drbd.conf&#123;,.bak&#125;</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/drbd.d/data.res</span><br><span class="line"># resource data</span><br><span class="line"></span><br><span class="line">resource data &#123;</span><br><span class="line">    protocol C;</span><br><span class="line">    </span><br><span class="line">    disk &#123;</span><br><span class="line">        on-io-error detach;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    on data-1-1 &#123;</span><br><span class="line">        device     /dev/drbd0;</span><br><span class="line">        disk       /dev/sdb1;</span><br><span class="line">        address    10.0.10.11:7788;</span><br><span class="line">        meta-disk  /dev/sdb2[0];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    on data-1-2 &#123;</span><br><span class="line">        device     /dev/drbd0;</span><br><span class="line">        disk       /dev/sdb1;</span><br><span class="line">        address    10.0.10.12:7788;</span><br><span class="line">        meta-disk  /dev/sdb2[0];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 创建run路径</span><br><span class="line">mkdir -p /usr/local/drbd/var/run/drbd</span><br><span class="line"></span><br><span class="line"># 链接脚本文件</span><br><span class="line">ln -s /usr/local/drbd/lib/drbd/* /usr/lib/drbd/</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><blockquote><p>硬盘分区分区(sdb1为数据分区sdb2为 meta分区用于存储 drdb同步状态信息 )</p></blockquote><pre><code>echo -e &apos;n\np\n1\n\n+3G\nw&apos; | fdisk /dev/sdbecho -e &apos;n\np\n2\n\n+1G\nw&apos; | fdisk /dev/sdbpartprobelsblk# 在节点1,2初始化资源drbdadm create-md data# 在节点1,2启动资源drbdadm up data# 查看两个节点上data的角色(两个都为：Secondary)drbdadm role data# 将节点1设置为主节点(执行这条命令的为主节点)drbdadm primary data --force# 查看节点1 data的角色(此时已经变为：Primary)drbdadm role data# 查看两个节点各自drbd状态(0:data/0  Connected(2*) Second/Primar Incons/UpToDa)/usr/local/drbd/sbin/drbd-overview# 待两边同步完成后(0:data/0  Connected(2*) Second/Primar UpToDa/UpToDa)/usr/local/drbd/sbin/drbd-overviewnetstat -ntaulp</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre><code># 挂载,创建文件mkdir /datamount /dev/drbd0 /datacd /datatouch {1..10}/usr/local/drbd/sbin/drbd-overview# 重启drbd资源umount /datadrbdadm down datadrbdadm up data# 从节点获取主身份,验证数据drbdadm primary data --forcemkdir /datamount /dev/drbd0 /datals -la /data/usr/local/drbd/sbin/drbd-overview</code></pre><h2 id="YUM安装BRBD"><a href="#YUM安装BRBD" class="headerlink" title="YUM安装BRBD"></a>YUM安装BRBD</h2><blockquote><p>YUM 安装 DRDB84</p></blockquote><pre><code>rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmyum install -y kmod-drbd84 drbd84-utilsmodprobe drbdecho drbd &gt; /etc/modules-load.d/drbd.conf</code></pre><blockquote><p>YUM 安装 DRDB90</p></blockquote><pre><code>rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.orgrpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmyum install -y drbd90-utils kmod-drbd90modprobe drbdecho drbd &gt; /etc/modules-load.d/drbd.conf</code></pre>]]></content>
      
      <categories>
          
          <category> heartbeat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Heartbeat </tag>
            
            <tag> HA </tag>
            
            <tag> rpm-build </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux笔记不定期更新</title>
      <link href="/posts/note.html"/>
      <url>/posts/note.html</url>
      <content type="html"><![CDATA[<h2 id="账号安全"><a href="#账号安全" class="headerlink" title="账号安全"></a>账号安全</h2><h3 id="创建用户指定uid-1200-自动建立用户的登入目录-更改用户密码"><a href="#创建用户指定uid-1200-自动建立用户的登入目录-更改用户密码" class="headerlink" title="创建用户指定uid:1200; 自动建立用户的登入目录; 更改用户密码"></a>创建用户指定uid:1200; 自动建立用户的登入目录; 更改用户密码</h3><pre><code>useradd feng -u 1200 -mecho $pass | passwd --stdin feng</code></pre><h3 id="禁止-root-用户远程-SSH-登录-line-38"><a href="#禁止-root-用户远程-SSH-登录-line-38" class="headerlink" title="禁止 root 用户远程 SSH 登录(line 38)"></a>禁止 root 用户远程 SSH 登录(line 38)</h3><pre><code>sed -i &apos;s/#PermitRootLogin yes/PermitRootLogin no/&apos; /etc/ssh/sshd_configsystemctl restart sshd</code></pre><h3 id="配置用户-feng-使用-sudo-权限"><a href="#配置用户-feng-使用-sudo-权限" class="headerlink" title="配置用户 feng 使用 sudo 权限"></a>配置用户 feng 使用 sudo 权限</h3><blockquote><p>NOPASSWD 使用 sudo 时无需输入密码(详情请执行 visudo 查看示例)</p></blockquote><pre><code>ssh feng@192.168.0.2su - rootecho &quot;feng ALL=(ALL) ALL&quot; | sudo tee /etc/sudoers.d/feng# echo &quot;feng ALL=(ALL) NOPASSWD: ALL&quot; | sudo tee /etc/sudoers.d/feng</code></pre><h3 id="更改-SSH-登录端口号-line-17-默认此行是被注释则登录端口为：22"><a href="#更改-SSH-登录端口号-line-17-默认此行是被注释则登录端口为：22" class="headerlink" title="更改 SSH 登录端口号(line 17  默认此行是被注释则登录端口为：22)"></a>更改 SSH 登录端口号(line 17  默认此行是被注释则登录端口为：22)</h3><pre><code>sed -i &apos;s/^#Port.*/Port 2200/&apos; /etc/ssh/sshd_configsystemctl restart sshdssh -p 2200 feng@192.168.0.2</code></pre><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><h3 id="firewalld"><a href="#firewalld" class="headerlink" title="firewalld"></a>firewalld</h3><blockquote><p>–permanent永久生效，没有此参数重启后失效<a href="https://www.cnblogs.com/hubing/p/6058932.html" target="_blank" rel="noopener">来自</a></p></blockquote><pre><code># 查看区域信息firewall-cmd --get-active-zones# 查看指定接口所属区域firewall-cmd --get-zone-of-interface=ens33# 查看已启动的服务列表systemctl list-unit-files | grep enabled# 查看所有放行的端口firewall-cmd --zone=public --list-ports# 查看指定服务是否放行firewall-cmd --zone=public --query-service=http# 放行一个指定服务firewall-cmd --permanent --add-service=http# 查看指定端口是否允许firewall-cmd --zone=public --query-port=80/tcp# 防火墙放行 2200 端口firewall-cmd --zone=public --add-port=2200/tcp --permanentfirewall-cmd --reload# 防火墙放行 80,443 端口firewall-cmd --zone=public --add-port=80/tcp --permanentfirewall-cmd --zone=public --add-port=443/tcp --permanentfirewall-cmd --reload# 删除规则firewall-cmd --zone=public --remove-port=443/tcp --permanentfirewall-cmd --reload</code></pre><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><pre><code>待续。。。</code></pre><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><blockquote><p>扫描指定主机开放的端口  -A：使用所有高级扫描选项(命令执行时间稍长)</p></blockquote><pre><code>yum install -y nmapnmap 192.168.0.2</code></pre><h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><blockquote><p>http下载文件<br>参数说明: -O 下载后保存为原文件名(-o filename 指定文件名); -C - 断点续传; –progress 显示进度条; –limit-rate 10M 下载速度最大不会超过 10M 每秒</p></blockquote><pre><code>curl -O -C -  http://hostname/filename.iso --progress</code></pre><hr><blockquote><p>http上传文件</p></blockquote><pre><code>curl --form &quot;fileupload=@filename.txt&quot; http://hostname/resource</code></pre><hr><blockquote><p>从FTP服务器下载文件</p></blockquote><pre><code># 列出 public下的所有文件夹和文件curl -u user:pass -O ftp://ftp.testserver.com/public/# 下载 filename.isocurl -u user:pass -O ftp://ftp.testserver.com/public/filename.iso</code></pre><hr><blockquote><p>上传文件到FTP服务器</p></blockquote><pre><code># 将myfile.txt文件上传到服务器curl -u user:pass -T file.txt ftp://ftp.testserver.com# 同时上传多个文件curl -u user:pass -T &quot;{file1,file2}&quot; ftp://ftp.testserver.com</code></pre><h2 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h2><pre><code>待续。。。</code></pre><h2 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h2><blockquote><p>手动配置网络参数 重启后失效</p></blockquote><pre><code>yum install -y net-toolsifconfig ens34 192.168.0.22 netmask 255.255.255.0 upecho nameserver 202.103.24.68 &gt;&gt; /etc/resolv.confroute add default gw 192.168.2.1 dev ens32route add default gw 1​​92.168.0.1</code></pre><blockquote><p>配置子接口(多IP)</p></blockquote><pre><code>ifconfig ens34:0 192.168.3.22 netmask 255.255.255.0 up</code></pre><hr><blockquote><p>删除默认网关, 添加网关到指定接口,度量值为 100(越小越优先)</p></blockquote><pre><code>ip route de​​l defaultip route add default via 192.168.0.1ip route add default via 192.168.0.1 dev ens33ip route add default via 192.168.0.1 dev ens33 proto static metric 100</code></pre><hr><blockquote><p>删除默认网关, 添加网关到指定接口,度量值为 100(越小越优先)</p></blockquote><pre><code>route add default gw 192.168.0.1route add default gw 192.168.0.1 dev ens33route add default gw 192.168.0.1 dev ens33 metric 100</code></pre><h2 id="route"><a href="#route" class="headerlink" title="route"></a>route</h2><blockquote><p>添加默认路由</p></blockquote><pre><code>route add -net 0.0.0.0 ens33route add -net 10.0.0.0/24 gw 10.0.0.2</code></pre><hr><blockquote><p>环境 (Server1单网卡 192.168.0.2; Server2 双网卡 192.168.0.10; 10.0.0.11) 使Server1 ping 通 10.0.0.11<br>以下配置仅针对临时有效, 将相关配置设置开机启动或更改配置文件实现永久生效</p></blockquote><pre><code># 方法1: (Server1 只能访问10.0.0.11 这一个ip ,访问公网还是通过192.168.0.0网络的网关)#Server1: 添加路由route add -net 10.0.0.0/24 dev ens33route add -net 10.0.0.0/24 gw 192.168.0.22----------------- END ---------------------# 方法2: (Server2开启路由,添加NAT规则; Server1 更改默认网关,本机访问外网也通过Server2, 能访问10.0.0.0 整个网络)#Server2: 开启路由功能, 添加NAT规则所有来自192.168.0.0/24 网络的请求 被转换为 10.0.0.11(10.0.0.11是可以上网的)echo 1 &gt; /proc/sys/net/ipv4/ip_forwardiptables -t nat -A POSTROUTING -s 192.168.0.0/24 -j SNAT --to 10.0.0.11# Server1: 更改网关为Server2同网段接口IP(192.168.0.10)重启网络(以下为手动配置请更改配置文件)route de​​l defaultroute add default gw 192.168.0.10 dev ens33----------------- END ---------------------# 方法3: (Server2开启路由,添加NAT规则; Server1 添加访问 Server2 10.0.0.0/24 网络的网关, 能访问10.0.0.0 整个网络)Server2:开启路由功能, 添加NAT规则所有来自192.168.0.0/24 网络的请求 被转换为 10.0.0.11(另一个网卡接口)echo 1 &gt; /proc/sys/net/ipv4/ip_forward      #  echo &apos;net.ipv4.ip_forward = 1&apos; &gt;&gt;/etc/sysctl.confiptables -t nat -A POSTROUTING -s 192.168.0.0/24 -j SNAT --to 10.0.0.11# 如果请求目标是(-d DNAT)192.168.0.0网络则不用转发iptables -t nat -A POSTROUTING -s 192.168.0.0/24 ! -d 192.168.0.0/24 -j SNAT --to 10.0.0.11# Server1: 添加路由route add -net 10.0.0.0/24 gw 192.168.0.22----------------- END---------------------# 方法4: (Server1, 两端的网络都能互相访问)#Server2iptables -t nat -A POSTROUTING -s 192.168.0.0/24 ! -d 192.168.0.0/24 -j SNAT --to 10.0.0.11iptables -t nat -A POSTROUTING -s 10.0.0.0/24 ! -d 10.0.0.0/24 -j SNAT --to 192.168.0.10# 192.168.0.0/24 网段添加路由route add -net 10.0.0.0/24 gw 192.168.0.22# 192.168.0.0/24 网段添加路由route add -net 192.168.0.0/24 gw 10.0.0.11----------------- END---------------------</code></pre><hr><h2 id="nmcli"><a href="#nmcli" class="headerlink" title="nmcli"></a>nmcli</h2><blockquote><p>重新生成网络配置(网卡UUID也会改变)</p></blockquote><pre><code>NetName=ens34rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 192.168.0.22/24 ipv4.dns 202.103.24.68 ipv4.gateway 192.168.0.1nmcli connection reload</code></pre>]]></content>
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Install OpenStack Pike</title>
      <link href="/posts/pike.html"/>
      <url>/posts/pike.html</url>
      <content type="html"><![CDATA[<pre><code>########################################################################################################################################  初始化环境  ################## Management Netwock   10.0.0.0/24(私有网络, 管理网络)# Provicer  Network   203.0.113.0/24(公有网络, 提供外部访问虚拟机)# controller 网络参数hostnamectl set-hostname controllerNetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.11/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# compute1 网络参数hostnamectl set-hostname compute1NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.31/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# block1 网络参数hostnamectl set-hostname block1NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.41/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# object1 网络参数hostnamectl set-hostname object1NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.51/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# object2 网络参数hostnamectl set-hostname object2NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.52/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload```file# 配置hosts解析if [ -z &quot;$(grep &apos;OpenStack_0&apos; /etc/hosts)&quot; ];thencat &lt;&lt;EOF  &gt;&gt;/etc/hosts# OpenStack_0   $(date +&apos;%F %T&apos;)10.0.0.11       controller10.0.0.31       compute110.0.0.41       block110.0.0.51       object110.0.0.52       object2EOFfi# ssh免秘钥curl http://home.onlycloud.xin/code/SSH_KEY -o ~/SSH_KEY. ~/SSH_KEYSSH_KEY controllerSSH_KEY compute1SSH_KEY block1SSH_KEY object1SSH_KEY object2# 同步hosts,关闭防火墙,selinux,yum源for node in controller compute1 block1 object1 object2; do    echo &quot;--------------- $node ---------------&quot;    scp /etc/hosts $node:/etc/hosts    ssh $node &quot;    # 关闭, 禁用 firewalld    systemctl stop firewalld    systemctl disable firewalld    firewall-cmd --state    # 关闭, 禁用 selinux    setenforce 0    sed -i &apos;/^SELINUX=.*/c SELINUX=disabled&apos; /etc/selinux/config    grep --color=auto &apos;^SELINUX&apos; /etc/selinux/config    # 下载阿里云yum源    rm -f /etc/yum.repos.d/*    curl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repo    sed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo    sed -i &apos;s/ONBOOT=.*/ONBOOT=yes/&apos; /etc/sysconfig/network-scripts/ifcfg-ens34    sed -i &apos;s/BOOTPROTO=.*/BOOTPROTO=none/&apos; /etc/sysconfig/network-scripts/ifcfg-ens34&quot;done# 网络测试for node in controller compute1 block1 object1 object2; do    echo &quot;--------------- $node ---------------&quot;    ssh $node &quot;    ping -c 3 openstack.org    ping -c 3 controller    ping -c 3 compute1&quot;done########################################################################################################################################  配置本地YUM  ################### 挂载共享mkdir /mnt/yum_pikeecho &apos;//192.168.0.50/openstack /mnt cifs username=admin,vers=2.0,rw&apos; &gt;&gt;/etc/fstabmount -a# 设置yum下载目录mkdir -p /www/share/yumcp /etc/yum.conf{,.bak}sed -i &apos;s#^keepcache=0#keepcache=1#&apos; /etc/yum.confsed -i &apos;s/^cachedir/#cachedir/&apos; /etc/yum.confsed -ir &apos;3 icachedir=/www/share/yum/$basearch/$releasever \n&apos; /etc/yum.confhead /etc/yum.conf# 移动包到新的路径find /www/share/yum/ -name *.rpm |sed -r &apos;s#.*#mv &amp; /mnt/tmp/\n#&apos;|bashyum install -y createrepocreaterepo -pdo  /mnt/tmp/ /mnt/tmp/mv /mnt/tmp/* /mnt/yum_pike# 创建源文件cat &lt;&lt;EOF &gt;/mnt/yum/openstack-pike.repo[My_share]name=My_Soucebaseurl=http://192.168.0.2/yum_pike/gpgcheck=0enabled=1cost=88gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7EOFrm -f /etc/yum.repos.d/*curl http://192.168.0.2/yum/openstack-pike.repo -o /etc/yum.repos.d/openstack-pike.repo########################################################################################################################################  生成 OpenStack 密码, chrony时间同步  ########################################### 生成OpenStack所需密码 文件if [ ! -f /etc/PASS ];thenlist=&apos;ROOT_DBPASS ADMIN_PASS CINDER_DBPASS CINDER_PASS DASH_DBPASS DEMO_PASS GLANCE_DBPASS GLANCE_PASS KEYSTONE_DBPASS  METADATA_SECRET NEUTRON_DBPASS NEUTRON_PASS NOVA_DBPASS NOVA_PASS PLACEMENT_PASS RABBIT_PASS DEMO_PASS&apos;for user in $list; do    echo &quot;# $user&quot; | tee -a PASS    echo -e &quot;$user=$(openssl rand -hex 10)\n&quot; | tee -a ~/PASSdonecp ~/PASS /etc/PASScat ~/PASS. ~/PASSfi# 同步密码文件到其他节点scp ~/PASS compute1:~/PASSscp ~/PASS block1:~/PASSscp ~/PASS object1:~/PASSscp ~/PASS object2:~/PASS# 配置ntp(服务端)# 安装 chronyyum install -y chrony# chrony 服务端配置文件cat &lt;&lt;EOF  &gt;/etc/chrony.conf# net server $(date +&apos;%F %T&apos;)server ntp.aliyun.com iburstdriftfile /var/lib/chrony/driftmakestep 1.0 3rtcsynclogdir /var/log/chrony# 允许同步的网段allow 10.0.0.0/24EOF# 跟随系统启动, 启动服务systemctl enable chronydsystemctl start chronyd# 验证chronyc sources# 配置ntp(客户端)for node in controller compute1 block1 object1 object2; do    echo &quot;--------------- $node ---------------&quot;    ssh -T $node &lt;&lt;EOF    # 安装 chrony    yum install -y chrony    echo &quot;# ntp client $(date +&apos;%F %T&apos;)&quot; &gt;/etc/chrony.conf    echo &apos;server controller iburst&apos; &gt;&gt;/etc/chrony.conf    echo &apos;driftfile /var/lib/chrony/drift&apos; &gt;&gt;/etc/chrony.conf    echo &apos;makestep 1.0 3&apos; &gt;&gt;/etc/chrony.conf    echo &apos;rtcsync&apos; &gt;&gt;/etc/chrony.conf    echo &apos;logdir /var/log/chrony&apos; &gt;&gt;/etc/chrony.conf    # 跟随系统启动, 启动服务    systemctl enable chronyd    systemctl restart chronyd    # 验证    chronyc sourcesEOFdone# 配置OpenStack 安装源 openstack 客户端工具 selinuxfor node in compute1 block1 object1 object2; do    echo &quot;--------------- $node ---------------&quot;    ssh -T $node &lt;&lt;&apos;EOF&apos;    # 启用 OpenStack 存储库    yum install -y centos-release-openstack-pike    # 替换QEMU 安装源    sed -i &apos;s/$contentdir/centos/&apos; /etc/yum.repos.d/CentOS-QEMU-EV.repo    yum install -y https://rdoproject.org/repos/rdo-release.rpm    # 安装openstack 客户端工具 selinux    # yum upgrade    yum install -y python-openstackclient openstack-selinuxEOFdone########################################################################################################################################  安装MariaDB 数据库(控制节点)  #################################### 安装 mariadbyum install -y mariadb mariadb-server python2-PyMySQL# 创建 openstack 数据库配置cat &lt;&lt;EOF  &gt;/etc/my.cnf.d/openstack.cnf[mysqld]bind-address = 10.0.0.11default-storage-engine = innodbinnodb_file_per_table = onmax_connections = 4096collation-server = utf8_general_cicharacter-set-server = utf8EOF# 修改数据库最大连接数cat &lt;&lt;EOF  &gt;&gt;/etc/security/limits.confmysql soft nofile 65535mysql hard nofile 65535EOFmkdir /etc/systemd/system/mariadb.service.dcat &lt;&lt;EOF  &gt;/etc/systemd/system/mariadb.service.d/filelimit.conf[Service]LimitNOFILE=infinityEOF# 启动数据库服务,跟随系统启动systemctl enable mariadbsystemctl start mariadb# 初始化数据库(此处密码读取的 ~/PASS)/usr/bin/expect &lt;&lt;EOFset timeout 30spawn mysql_secure_installationexpect {    &quot;enter for none&quot; { send &quot;\r&quot;; exp_continue}    &quot;Y/n&quot; { send &quot;Y\r&quot; ; exp_continue}    &quot;password:&quot; { send &quot;$ROOT_DBPASS\r&quot;; exp_continue}    &quot;new password:&quot; { send &quot;$ROOT_DBPASS\r&quot;; exp_continue}    &quot;Y/n&quot; { send &quot;Y\r&quot; ; exp_continue}    eof { exit }}EOF########################################################################################################################################  安装 rabbitmq 消息队列服务, memcached, Etcd (控制节点)  ############################################################## 安装 rabbitmqyum install -y rabbitmq-server# 启动服务, 跟随系统启动systemctl enable rabbitmq-serversystemctl start rabbitmq-server# 启动 web 插件 WebUI http://IP:15672rabbitmq-plugins enable rabbitmq_management# 添加 openstack用户, 授权(此处密码读取的 ~/PASS)rabbitmqctl add_user openstack $RABBIT_PASSrabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;# 安装memcached (控制节点)yum install -y memcached python-memcached# 添加控制器节点的管理IP地址sed -i &apos;s/^OPTIONS/# OPTIONS/&apos; /etc/sysconfig/memcachedsed -i &apos;$a OPTIONS=&quot;-l 127.0.0.1,::1,controller&quot;&apos; /etc/sysconfig/memcached# 启动服务,配置服务随系统启动systemctl enable memcachedsystemctl start memcached# 安装 Etcd,一种分布式可靠的键值存储(控制节点)yum install -y etcd# 配置cat &lt;&lt;EOF  &gt;/etc/etcd/etcd.conf#[Member]ETCD_NAME=&quot;controller&quot;ETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;ETCD_LISTEN_PEER_URLS=&quot;http://10.0.0.11:2380&quot;ETCD_LISTEN_CLIENT_URLS=&quot;http://10.0.0.11:2379&quot;#[Clustering]ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://10.0.0.11:2380&quot;ETCD_ADVERTISE_CLIENT_URLS=&quot;http://10.0.0.11:2379&quot;ETCD_INITIAL_CLUSTER=&quot;controller=http://10.0.0.11:2380&quot;ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster-01&quot;ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;EOF# 启动服务,配置服务随系统启动systemctl enable etcdsystemctl start etcd########################################################################################################################################  安装配置 Keyston 服务, http (控制节点)  #############################################[Keystone 教程](https://docs.openstack.org/keystone/pike/install/index.html)# 创建数据库. ~/PASSmysql -u root -p$ROOT_DBPASS -te &quot;CREATE DATABASE keystone;GRANT ALL PRIVILEGES ON keystone.* TO &apos;keystone&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$KEYSTONE_DBPASS&apos;;GRANT ALL PRIVILEGES ON keystone.* TO &apos;keystone&apos;@&apos;%&apos; IDENTIFIED BY &apos;$KEYSTONE_DBPASS&apos;;select user,host from mysql.user;show databases;&quot;# 安装http, keystoneyum install -y openstack-keystone httpd mod_wsgi# keystone 配置cp /etc/keystone/keystone.conf{,.bak}cat &lt;&lt;EOF  &gt;/etc/keystone/keystone.conf[database]connection = mysql+pymysql://keystone:$KEYSTONE_DBPASS@controller/keystone[token]provider = fernetEOF# 初始化 keystone 数据库su -s /bin/sh -c &quot;keystone-manage db_sync&quot; keystone# 初始化Fernet密钥存储库keystone-manage fernet_setup --keystone-user keystone --keystone-group keystonekeystone-manage credential_setup --keystone-user keystone --keystone-group keystone# 创建服务APIkeystone-manage bootstrap --bootstrap-password $ADMIN_PASS \  --bootstrap-admin-url http://controller:35357/v3/ \  --bootstrap-internal-url http://controller:5000/v3/ \  --bootstrap-public-url http://controller:5000/v3/ \  --bootstrap-region-id RegionOne# 配置 httpcp /etc/httpd/conf/httpd.conf{,.bak}echo &apos;ServerName controller&apos; | tee -a /etc/httpd/conf/httpd.conf# 链接keytsone web配置文件ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/# 启动服务,配置服务随系统启动systemctl enable httpdsystemctl start httpd# 配置环境变量凭证export OS_USERNAME=adminexport OS_PASSWORD=$ADMIN_PASSexport OS_PROJECT_NAME=adminexport OS_USER_DOMAIN_NAME=Defaultexport OS_PROJECT_DOMAIN_NAME=Defaultexport OS_AUTH_URL=http://controller:35357/v3export OS_IDENTITY_API_VERSION=3# 创建 service 项目openstack project create --domain default --description &quot;Service Project&quot; service# 创建 demo 项目和用户openstack project create --domain default --description &quot;Demo Project&quot; demoopenstack user create --domain default --password=$DEMO_PASS demo# 创建 user 角色, 将 user 角色添加到dome 项目和用户openstack role create useropenstack role add --project demo --user demo user# 注销变量unset OS_AUTH_URL OS_PASSWORD# 请求 admin 身份验证令牌openstack --os-auth-url http://controller:35357/v3 \  --os-project-domain-name Default --os-user-domain-name Default \  --os-project-name admin --os-username admin --os-password $ADMIN_PASS token issue# 请求 demo 身份验证令牌openstack --os-auth-url http://controller:5000/v3 \  --os-project-domain-name Default --os-user-domain-name Default \  --os-project-name demo --os-username demo --os-password $DEMO_PASS token issue# 创建 admin 用户环境脚本cat &lt;&lt;EOF  &gt;~/admin-openrcexport OS_PROJECT_DOMAIN_NAME=Defaultexport OS_USER_DOMAIN_NAME=Defaultexport OS_PROJECT_NAME=adminexport OS_USERNAME=adminexport OS_PASSWORD=$ADMIN_PASSexport OS_AUTH_URL=http://controller:35357/v3export OS_IDENTITY_API_VERSION=3export OS_IMAGE_API_VERSION=2EOF# 创建 demo 用户环境脚本cat &lt;&lt;EOF  &gt;~/demo-openrcexport OS_PROJECT_DOMAIN_NAME=Defaultexport OS_USER_DOMAIN_NAME=Defaultexport OS_PROJECT_NAME=demoexport OS_USERNAME=demoexport OS_PASSWORD=$DEMO_PASSexport OS_AUTH_URL=http://controller:5000/v3export OS_IDENTITY_API_VERSION=3export OS_IMAGE_API_VERSION=2EOF# 验证凭证. ~/admin-openrcopenstack token issue. ~/demo-openrcopenstack token issue########################################################################################################################################  安装配置 Glance (控制节点)  #################################[glance 官方文档](https://docs.openstack.org/glance/pike/user/index.html)# 创建 glance 用户 数据库 授权mysql -u root -p$ROOT_DBPASS -te &quot;CREATE DATABASE glance;GRANT ALL PRIVILEGES ON glance.* TO &apos;glance&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$GLANCE_DBPASS&apos;;GRANT ALL PRIVILEGES ON glance.* TO &apos;glance&apos;@&apos;%&apos; IDENTIFIED BY &apos;$GLANCE_DBPASS&apos;;select user,host from mysql.user;show databases;&quot;# 创建 glance 用户, 授权. ~/admin-openrcopenstack user create --domain default --password=$GLANCE_PASS glanceopenstack role add --project service --user glance admin# 创建 glance 服务, APIopenstack service create --name glance --description &quot;OpenStack Image&quot; imageopenstack endpoint create --region RegionOne image public http://controller:9292openstack endpoint create --region RegionOne image internal http://controller:9292openstack endpoint create --region RegionOne image admin http://controller:9292# 安装 gnalceyum install -y openstack-glance# 配置 glance-apicp /etc/glance/glance-api.conf{,.bak}cat &lt;&lt;EOF  &gt;/etc/glance/glance-api.conf[database]connection = mysql+pymysql://glance:$GLANCE_DBPASS@controller/glance[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = glancepassword = $GLANCE_PASS[paste_deploy]flavor = keystone[glance_store]stores = file,httpdefault_store = filefilesystem_store_datadir = /var/lib/glance/images/EOF# 配置 glance-registrycp /etc/glance/glance-registry.conf{,.bak}cat &lt;&lt;EOF  &gt;/etc/glance/glance-registry.conf[database]connection = mysql+pymysql://glance:$GLANCE_DBPASS@controller/glance[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = glancepassword = $GLANCE_PASS[paste_deploy]flavor = keystoneEOF# 初始化 glance 数据库su -s /bin/sh -c &quot;glance-manage db_sync&quot; glance# 启动服务, 跟随系统启动systemctl enable openstack-glance-api openstack-glance-registrysystemctl start openstack-glance-api openstack-glance-registry# 验证(上传镜像)yum install -y wget. ~/admin-openrcwget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img# wget http://192.168.0.2/img/cirros-0.3.5-x86_64-disk.img# wget http://192.168.0.2/img/cirros-0.4.0-x86_64-disk.img# wget http://192.168.0.2/img/CentOS-7-x86_64-GenericCloud-1805.qcow2c# 使用QCOW2磁盘格式，qcow2格式和公共可见性将图像上载到Image服务 ，以便所有项目都可以访问它openstack image create &quot;cirros-3.5&quot; --file cirros-0.3.5-x86_64-disk.img --disk-format qcow2 --container-format bare --public# openstack image create &quot;cirros-4.0&quot; --file cirros-0.4.0-x86_64-disk.img --disk-format qcow2 --container-format bare --public# openstack image create &quot;CentOS-7.5&quot; --file CentOS-7-x86_64-GenericCloud-1805.qcow2c --disk-format qcow2 --container-format bare --public########################################################################################################################################  Nova 计算服务安装配置(控制节点)  ######################################[Nova 官方文档](https://docs.openstack.org/nova/pike/install/)[Nova 高级功能](https://docs.openstack.org/nova/pike/admin/index.html)# 创建 nova 数据库 用户 授权. ~/PASSmysql -u root -p$ROOT_DBPASS -te &quot;CREATE DATABASE nova_api;GRANT ALL PRIVILEGES ON nova_api.* TO &apos;nova&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;GRANT ALL PRIVILEGES ON nova_api.* TO &apos;nova&apos;@&apos;%&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;CREATE DATABASE nova;GRANT ALL PRIVILEGES ON nova.* TO &apos;nova&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;GRANT ALL PRIVILEGES ON nova.* TO &apos;nova&apos;@&apos;%&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;CREATE DATABASE nova_cell0;GRANT ALL PRIVILEGES ON nova_cell0.* TO &apos;nova&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;GRANT ALL PRIVILEGES ON nova_cell0.* TO &apos;nova&apos;@&apos;%&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;select user,host from mysql.user;show databases;&quot;# 创建 navo 用户, 授权. ~/admin-openrcopenstack user create --domain default --password=$NOVA_PASS novaopenstack role add --project service --user nova admin# 创建 glance 服务, APIopenstack service create --name nova --description &quot;OpenStack Compute&quot; computeopenstack endpoint create --region RegionOne compute public http://controller:8774/v2.1openstack endpoint create --region RegionOne compute internal http://controller:8774/v2.1openstack endpoint create --region RegionOne compute admin http://controller:8774/v2.1# 创建 Placement 服务用户, 授权openstack user create --domain default --password=$PLACEMENT_PASS placementopenstack role add --project service --user placement admin# 创建Placement APIopenstack service create --name placement --description &quot;Placement API&quot; placementopenstack endpoint create --region RegionOne placement public http://controller:8778openstack endpoint create --region RegionOne placement internal http://controller:8778openstack endpoint create --region RegionOne placement admin http://controller:8778# 安装 novayum install -y openstack-nova-api openstack-nova-conductor openstack-nova-console \  openstack-nova-novncproxy openstack-nova-scheduler openstack-nova-placement-api# nova 配置cp /etc/nova/nova.conf{,.bak}cat &lt;&lt;&apos;EOF&apos;  &gt;/etc/nova/nova.conf[DEFAULT]my_ip = 10.0.0.11use_neutron = Trueenabled_apis = osapi_compute,metadatafirewall_driver = nova.virt.firewall.NoopFirewallDrivertransport_url = rabbit://openstack:$RABBIT_PASS@controller:5672[api_database]connection = mysql+pymysql://nova:$NOVA_DBPASS@controller/nova_api[database]connection = mysql+pymysql://nova:$NOVA_DBPASS@controller/nova[api]auth_strategy = keystone[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = novapassword = $NOVA_PASS[vnc]enabled = truevncserver_listen = $my_ipvncserver_proxyclient_address = $my_ip[glance]api_servers = http://controller:9292[oslo_concurrency]lock_path = /var/lib/nova/tmp[placement]os_region_name = RegionOneproject_domain_name = Defaultproject_name = serviceauth_type = passworduser_domain_name = Defaultauth_url = http://controller:35357/v3username = placementpassword = $PLACEMENT_PASSEOFsed -i &quot;s/\$RABBIT_PASS/$RABBIT_PASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$NOVA_DBPASS/$NOVA_DBPASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$NOVA_PASS/$NOVA_PASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$PLACEMENT_PASS/$PLACEMENT_PASS/&quot; /etc/nova/nova.conf# 配置 Placement API web服务cp /etc/httpd/conf.d/00-nova-placement-api.conf{,.bak}cat &lt;&lt;EOF  &gt;&gt;/etc/httpd/conf.d/00-nova-placement-api.conf# nova-placement-api&lt;Directory /usr/bin&gt;   &lt;IfVersion &gt;= 2.4&gt;      Require all granted   &lt;/IfVersion&gt;   &lt;IfVersion &lt; 2.4&gt;      Order allow,deny      Allow from all   &lt;/IfVersion&gt;&lt;/Directory&gt;EOF# 重启 httpsystemctl restart httpd# 初始化 nova_api, nova, nova_cell0 数据库su -s /bin/sh -c &quot;nova-manage api_db sync&quot; nova      # 此步骤有一个警告(官方提示 忽略弃用警告)su -s /bin/sh -c &quot;nova-manage cell_v2 create_cell --name=cell1 --verbose&quot; novasu -s /bin/sh -c &quot;nova-manage db sync&quot; nova# 验证nova-manage cell_v2 list_cellsmysql -h controller -u nova -p$NOVA_DBPASS -te &quot;use nova_api;show tables;&quot;mysql -h controller -u nova -p$NOVA_DBPASS -te &quot;use nova;show tables;&quot;mysql -h controller -u nova -p$NOVA_DBPASS -te &quot;use nova_cell0;show tables;&quot;# 启动服务, 配置服务跟随系统启动systemctl enable openstack-nova-api openstack-nova-consoleauth openstack-nova-scheduler \  openstack-nova-conductor openstack-nova-novncproxysystemctl start openstack-nova-api openstack-nova-consoleauth openstack-nova-scheduler \  openstack-nova-conductor openstack-nova-novncproxysystemctl status openstack-nova-api openstack-nova-consoleauth openstack-nova-scheduler \  openstack-nova-conductor openstack-nova-novncproxy# 验证openstack compute service list      # 列出 nova 服务组件进程状态openstack compute service list --service nova-compute      # 列出计算节点openstack catalog list      # 列出所有注册 APIopenstack image list      # 列出服务器上的镜像nova-status upgrade check      # 检测 Cells v2, 及API 状态(所有状态为 Result: Success)openstack host list      # 列出主机及其上运行的与nova相关的服务openstack host show compute1      # 显示主机上运行的实例的虚拟CPU总和,磁盘大小,########################################################################################################################################  neutron 网络服务安装配置(控制节点)  ########################################## 以下网络配置二选一 注意修改配置后需同步数据库,重启服务[官方文档](https://docs.openstack.org/neutron/pike/install/overview.html)# 安装和配置控制器节点# 此处供应商网络(Provide 203.0.113.0)为公网 管理网络(Management 10.0.0.0)为私有网# 创建 neutron 用户, 数据库, 授权. ~/PASSmysql -u root -p$ROOT_DBPASS -te &quot;CREATE DATABASE neutron;GRANT ALL PRIVILEGES ON neutron.* TO &apos;neutron&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$NEUTRON_DBPASS&apos;;GRANT ALL PRIVILEGES ON neutron.* TO &apos;neutron&apos;@&apos;%&apos; IDENTIFIED BY &apos;$NEUTRON_DBPASS&apos;;select user,host from mysql.user;show databases;&quot;# 创建 neutron 用户, 授权. ~/admin-openrcopenstack user create --domain default --password=$NEUTRON_PASS neutronopenstack role add --project service --user neutron admin# 创建 neutron 服务, APIopenstack service create --name neutron --description &quot;OpenStack Networking&quot; networkopenstack endpoint create --region RegionOne network public http://controller:9696openstack endpoint create --region RegionOne network internal http://controller:9696openstack endpoint create --region RegionOne network admin http://controller:9696openstack endpoint list      # 列出所有注册 API ( -f choose from &apos;csv&apos;, &apos;json&apos;, &apos;table&apos;, &apos;value&apos;, &apos;yaml&apos;)openstack catalog list      # 列出所有注册 API############################################################# 1.提供商网络 (Provider networks) 网络模式(二选一)  仅二层网络# 安装 neutron 及网络插件yum install -y openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables# 创建 neutron.conf 配置文件cp /etc/neutron/neutron.conf{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/neutron.conf[database]connection = mysql+pymysql://neutron:$NEUTRON_DBPASS@controller/neutron[DEFAULT]core_plugin = ml2service_plugins =auth_strategy = keystonenotify_nova_on_port_data_changes = truenotify_nova_on_port_status_changes = truetransport_url = rabbit://openstack:$RABBIT_PASS@controller[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = $NEUTRON_PASS[nova]auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = $NOVA_PASS[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF# 创建 插件ML2 配置文(二层网络 启用 flat vlan 网络, 将提供商网络配置为 provider 公网)cp /etc/neutron/plugins/ml2/ml2_conf.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/ml2_conf.ini[ml2]tenant_network_types =type_drivers = flat,vlanmechanism_drivers = linuxbridgeextension_drivers = port_security[ml2_type_flat]flat_networks = provider[securitygroup]enable_ipset = trueEOF# 配置Linux桥代理(此处provider 供商网络 公网地址网卡)cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:ens34[vxlan]enable_vxlan = false[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF# 配置DHCP代理cp /etc/neutron/dhcp_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/dhcp_agent.ini[DEFAULT]interface_driver = linuxbridgeenable_isolated_metadata = truedhcp_driver = neutron.agent.linux.dhcp.DnsmasqEOF############################################################# 2.自助服务网络 (Self-service networks) 网络模式(二选一)  二层三层网络# 安装 neutron 及网络插件yum install -y openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables# 创建 neutron.conf 配置文件cp /etc/neutron/neutron.conf{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/neutron.conf[database]connection = mysql+pymysql://neutron:$NEUTRON_DBPASS@controller/neutron[DEFAULT]core_plugin = ml2auth_strategy = keystoneservice_plugins = routerallow_overlapping_ips = truenotify_nova_on_port_data_changes = truenotify_nova_on_port_status_changes = truetransport_url = rabbit://openstack:$RABBIT_PASS@controller[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = $NEUTRON_PASS[nova]auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = $NOVA_PASS[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF# 创建 插件ML2 配置文(二层网络 启用 flat vlan 网络, 将提供商网络配置为 provider 公网)cp /etc/neutron/plugins/ml2/ml2_conf.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/ml2_conf.ini[ml2]tenant_network_types = vxlantype_drivers = flat,vlan,vxlanextension_drivers = port_securitymechanism_drivers = linuxbridge,l2population[ml2_type_flat]flat_networks = provider[ml2_type_vxlan]vni_ranges = 1:1000[securitygroup]enable_ipset = trueEOF# 配置Linux桥代理(此处provider 供商网络 公网地址网卡 local_ip 为控制器节点的管理IP地址)cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:ens34[vxlan]enable_vxlan = truel2_population = truelocal_ip = 10.0.0.11[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF# 配置第3层代理cp /etc/neutron/l3_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/l3_agent.ini[DEFAULT]interface_driver = linuxbridgeEOF# 配置DHCP代理cp /etc/neutron/dhcp_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/dhcp_agent.ini[DEFAULT]interface_driver = linuxbridgeenable_isolated_metadata = truedhcp_driver = neutron.agent.linux.dhcp.DnsmasqEOF##########  END  ############################################################## 配置元数据代理cp /etc/neutron/metadata_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/metadata_agent.ini[DEFAULT]nova_metadata_host = controllermetadata_proxy_shared_secret = $METADATA_SECRETEOF# 配置Compute服务以使用Networking服务cat &lt;&lt;EOF   &gt;&gt;/etc/nova/nova.conf[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = $NEUTRON_PASSservice_metadata_proxy = truemetadata_proxy_shared_secret = $METADATA_SECRETEOF# 链接配置文件ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini# 初始化数据库su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron# 重启 Compute API 服务systemctl restart openstack-nova-api# 启动网络服务, 配置服务跟随系统启动systemctl enable neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agentsystemctl start neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agent# 启动三层网络服务, 跟随系统启动(仅对于配置 2.自助服务网络)systemctl enable neutron-l3-agentsystemctl start neutron-l3-agent# 验证服务状态openstack network agent listopenstack service list#+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+#| ID                                   | Agent Type         | Host       | Availability Zone | Alive | State | Binary                    |#+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+#| 0256098d-80e6-41a1-8ff8-726c715e0bc1 | Linux bridge agent | controller | None              | :-)   | UP    | neutron-linuxbridge-agent |#| 16a3eaee-8ba1-4b4d-8908-f61908dda6bc | DHCP agent         | controller | nova              | :-)   | UP    | neutron-dhcp-agent        |#| adcee175-91a1-4ca9-909d-39bda3c01152 | Metadata agent     | controller | None              | :-)   | UP    | neutron-metadata-agent    |#+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+##########  END  ################################################################################################################################################################################################################################################################################  dashboard (控制节点)  ###########################[官方安装文档](https://docs.openstack.org/horizon/pike/install/index.html)[自定义Horizo](https://docs.openstack.org/horizon/pike/configuration/customizing.html)[自定义和配置仪表板](https://docs.openstack.org/horizon/pike/admin/customize-configure.html)[OpenStack仪表板用户文档](https://docs.openstack.org/horizon/pike/user/index.html)# 安装 dashboardyum install -y openstack-dashboard# 备份默认配置文件cp /etc/openstack-dashboard/local_settings{,.bak}Setfiles=&apos;/etc/openstack-dashboard/local_settings&apos;# 配置仪表板以在 controller 节点上使用 OpenStack 服务sed -i &apos;s#OPENSTACK_HOST = &quot;127.0.0.1&quot;#OPENSTACK_HOST = &quot;controller&quot;#&apos; $Setfiles# 允许所有主机访问sed -i &quot;/ALLOWED_HOSTS/cALLOWED_HOSTS = [&apos;*&apos;, ]&quot; $Setfiles# 开启 memcahce 缓存sed -in &apos;158,163s/#//&apos; $Setfiles sed -in &apos;165,169s/.*/#&amp;/&apos; $Setfilessed -i &quot;157a SESSION_ENGINE = \&apos;django.contrib.sessions.backends.cache\&apos;&quot; $Setfilessed -i &quot;s/127.0.0.1:11211/controller:11211/&quot; $Setfiles# 启用对域的支持, 配置域名(取消注释,更改值为 True)sed -i &apos;/ULTIDOMAIN_SUPPORT/cOPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True&apos; $Setfilessed -i &quot;s@^#OPENSTACK_KEYSTONE_DEFAULT@OPENSTACK_KEYSTONE_DEFAULT@&quot; $Setfiles# 配置user为您通过仪表板创建的用户的默认角色sed -i &apos;s#_member_#user#g&apos; $Setfiles# 配置API版本cat &lt;&lt;EOF   &gt;&gt;$SetfilesOPENSTACK_API_VERSIONS = {    &quot;identity&quot;: 3,    &quot;image&quot;: 2,    &quot;volume&quot;: 2,}EOF# 修改时区sed -i &apos;s#UTC#Asia/Shanghai#g&apos; $Setfiles# 如果选择网络选项1, 禁用对第3层网络服务的支持sed -i &quot;324,331 s/True/False/&quot; $Setfiles# 如果选择网络选项2, 启用用对第3层网络服务的支持sed -i &quot;324,331 s/False/True/&quot; $Setfiles# 网页无法访问 dashboard 服务器内部错误解决方法sed -i &apos;3a WSGIApplicationGroup %{GLOBAL}&apos; /etc/httpd/conf.d/openstack-dashboard.conf# 重启 httpd, memcachedsystemctl restart httpd memcached########################################################################################################################################  存储  ###########[manila 存储配置](https://docs.openstack.org/manila/queens/install/)########################################################################################################################################  计算节点安装配置(计算节点)【compute1 :10.0.0.31】  ######################################################### 启用 OpenStack 存储库yum install -y centos-release-openstack-pike# 替换QEMU 安装源sed -i &apos;s/$contentdir/centos/&apos; /etc/yum.repos.d/CentOS-QEMU-EV.repoyum install -y https://rdoproject.org/repos/rdo-release.rpm# 安装openstack 客户端工具 selinux# yum upgradeyum install -y python-openstackclient openstack-selinux# 安装 nova-computeyum install -y openstack-nova-compute# 安装计算节点网络服务yum install -y openstack-neutron-linuxbridge ebtables ipset# 配置 nova. ~/PASScp /etc/nova/nova.conf{,.bak}cat &lt;&lt;&apos;EOF&apos; &gt;/etc/nova/nova.conf[DEFAULT]my_ip = 10.0.0.31use_neutron = Trueenabled_apis = osapi_compute,metadatafirewall_driver = nova.virt.firewall.NoopFirewallDrivertransport_url = rabbit://openstack:$RABBIT_PASS@controller[api]auth_strategy = keystone[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = novapassword = $NOVA_PASS[vnc]enabled = Truevncserver_listen = 0.0.0.0vncserver_proxyclient_address = $my_ipnovncproxy_base_url = http://controller:6080/vnc_auto.html[glance]api_servers = http://controller:9292[oslo_concurrency]lock_path = /var/lib/nova/tmp[placement]os_region_name = RegionOneproject_domain_name = Defaultproject_name = serviceauth_type = passworduser_domain_name = Defaultauth_url = http://controller:35357/v3username = placementpassword = $PLACEMENT_PASS# 虚拟机只能设置为 qemu 如果是物理机 则设置为 kvm# egrep -c &apos;(vmx|svm)&apos; /proc/cpuinfo[libvirt]virt_type = qemu[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = $NEUTRON_PASSEOF. ~/PASSsed -i &quot;s/\$RABBIT_PASS/$RABBIT_PASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$NOVA_PASS/$NOVA_PASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$PLACEMENT_PASS/$PLACEMENT_PASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$NEUTRON_PASS/$NEUTRON_PASS/&quot; /etc/nova/nova.conf# 配置 neutroncp /etc/neutron/neutron.conf{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/neutron.conf[DEFAULT]auth_strategy = keystonetransport_url = rabbit://openstack:$RABBIT_PASS@controller[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = $NEUTRON_PASS[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF###################################################################  选择为控制器节点选择的相同网络选项，以配置特定于其的服务#  网络选项1：提供商网络# 配置Linux桥代理(此处provider 供商网络 公网地址网卡)cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:ens34[vxlan]enable_vxlan = false[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF###################################################################  选择与控制器节点选择的相同网络选项，以配置特定于其的服务#  网络选项2：自助服务网络# 配置Linux桥代理(此处provider 供商网络 公网地址网卡 local_ip 为控制器节点的管理IP地址)cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:ens34[vxlan]enable_vxlan = truel2_population = truelocal_ip = 10.0.0.11[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF##########  END  #################################################################### 启动服务, 跟随系统启动systemctl enable libvirtd openstack-nova-compute neutron-linuxbridge-agentsystemctl start libvirtd openstack-nova-compute neutron-linuxbridge-agent################################################################### 发现计算节点 (在控制节点运行以下命令)# 手动发现, 注册 计算节点. ~/admin-openrc      # 获取 admin 凭证openstack compute service list --service nova-compute      # 查看列表中是否发现新的计算节点su -s /bin/sh -c &quot;nova-manage cell_v2 discover_hosts --verbose&quot; nova      # 注册计算节点# 自动发现, 注册 计算节点,控制节点 nova 配置文件添加以下配置[scheduler]discover_hosts_in_cells_interval = 300# 验证openstack compute service list      # 列出 nova 服务组件进程状态openstack compute service list --service nova-compute      # 列出计算节点openstack catalog list      # 列出所有注册 APIopenstack image list      # 列出服务器上的镜像nova-status upgrade check      # 检测 Cells v2, 及API 状态(所有状态为 Result: Success)openstack host list      # 列出主机及其上运行的与nova相关的服务openstack host show compute1      # 显示主机上运行的实例的虚拟CPU总和,磁盘大小,########################################################################################################################################  安装完成后初始化  ########################[启动一个实例](https://docs.openstack.org/install-guide/launch-instance.html)# 创建公钥(创建虚拟机时可以选择此公钥免密码登录 公钥名称：mykey)ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa      # 生成秘钥nova keypair-add --pub-key ~/.ssh/id_dsa.pub mykey      # 上传本地公钥到服务器nova keypair-list      # 查看公钥# 创建可用区域nova aggregate-create NOVA-Cluster_01 NOVA-Cluster_01      # 创建 NOVA-Cluster_01 区域nova aggregate-add-host NOVA-Cluster_01 compute1      # 将逐渐 compute1 添加到 NOVA-Cluster_01 区域nova aggregate-list      # 查看创建的区域# 创建安全规则 [开启 icmp, ssh(ping, ssh)]openstack security group rule create --proto icmp defaultopenstack security group rule create --proto tcp --dst-port 22 default# 创建实例类型openstack flavor create --id 0 --vcpus 1 --ram 64 --disk 1 m1.nano      # 创建实例类型 cpu:1 mem:64M disk:1Gopenstack flavor create --id 1 --vcpus 1 --ram 512 --disk 12 m2.nano      # 创建实例类型 cpu:1 mem:512M disk:12Gopenstack flavor list      # 列出所有实例##############################################################################################################################  创建网络[网络选项1：提供商网络 - 连接 ]  ############################################### 1.[提供商网络](https://docs.openstack.org/install-guide/launch-instance-networks-provider.html)# 2.[自助服务网络](https://docs.openstack.org/install-guide/launch-instance-networks-selfservice.html)# 如果不开启lan 类型网络则只能创建一个网络 [provider ：为公用网络 客户通过此网络访问虚拟机]# --share选项允许所有项目使用虚拟网络# --external选项将虚拟网络定义为外部。如果您希望创建内部网络，则可以使用--internal。默认值是internal# Management Netwock   10.0.0.0/24(私有网络, 管理网络)# Provicer  Network   203.0.113.0/24(公有网络, 提供外部访问虚拟机)NETWORK=&apos;203.0.113&apos;openstack network create --share --external --provider-physical-network provider \  --provider-network-type flat Provider_$NETWORK## 在网络上创建子网(在 Provider_$NETWORK 网络创建子网)openstack subnet create --network Provider_$NETWORK --allocation-pool start=$NETWORK.70,end=$NETWORK.100 \  --dns-nameserver 202.103.24.68 --gateway $NETWORK.2 --subnet-range $NETWORK.0/24 Provider_sub_$NETWORK##############################################################################################################################  开启 vlan 功能  ######################对应物理网卡连接交换机trunk，在交换机创建vlan，即可在openstack创建vlan网络)#控制节点 (provider对应网卡lable,在linuxbridge_agent.ini配置对应物理网卡)#配置 type_drivers、ml2_type_vlan (openstack-config 命令由 openstack-utils 包提供)openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types vlanopenstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers flat,vlanopenstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_vlan network_vlan_ranges provider:1001:2000systemctl restart neutron-server# 计算节点systemctl restart neutron-linuxbridge-agent# 创建 vlan 网络openstack network create --share --provider-segment=8 --provider-network-type=vlan --provider-physical-network provider vlan_192.168.4# 创建子网openstack subnet create --network vlan_192.168.4 --allocation-pool start=192.168.4.100,end=192.168.4.200 --dns-nameserver 119.29.29.29 \  --dns-nameserver 114.114.114.114 --gateway 192.168.4.1 --subnet-range 192.168.4.0/24 net_192.168.4# 创建虚拟机示例nova boot --flavor m1.nano --image cirros-0.4.0 --nic net-name=vlan_192.168.4 --security-group default --key-name mykey vm01##########  END  ########################################################################################################################################  END  ############################################################################################################################################################################################################################################################  创建虚拟机(下载镜像,上传镜像,创建虚拟机)  ################################################ 下载镜像wget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.imgwget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img# 上传镜像source ~/admin-openrcopenstack image create &quot;cirros-0.3.5&quot; --file cirros-0.3.5-x86_64-disk.img \  --disk-format qcow2 --container-format bare --publicopenstack image create &quot;cirros-0.4.0&quot; --file cirros-0.4.0-x86_64-disk.img \  --disk-format qcow2 --container-format bare --publicopenstack image list# 创建虚拟机nova boot --flavor m1.nano --image cirros-0.3.5 --nic net-name=Provider_$NETWORK \  --security-group default --key-name mykey_controller1 VM01nova boot --flavor m1.nano --image cirros-0.4.0 --nic net-name=Provider_$NETWORK \  --security-group default --key-name mykey_controller1 VM02openstack server list##########  END  ############################################################################################################################################################################################################################################################  开启 RabbitMQ Web管理(http://IP:15672)  ############################################## 开启插件rabbitmq-plugins enable rabbitmq_management# 创建用户 admin, 设置密码为 adminrabbitmqctl add_user admin admin# 给予 admin 用户管理员权限rabbitmqctl set_user_tags admin administrator# Web管理(http://IP:15672)##########  END  ##############################################################################################################################</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> pike </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Neutron 服务的网络模式(Pike)</title>
      <link href="/posts/neutron-mod.html"/>
      <url>/posts/neutron-mod.html</url>
      <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><blockquote><p><a href="https://docs.openstack.org/neutron/queens/install/controller-install-option1-rdo.html#configure-the-server-component" target="_blank" rel="noopener">官方文档</a></p></blockquote><blockquote><p>网络选项1：部署了最简单的架构，该架构仅支持将实例附加到提供商（外部）网络。没有自助（私有）网络，路由器或浮动IP地址。只有该admin特权用户或其他特权用户才能管理提供商网络。</p></blockquote><blockquote><p>网络选项2：使用支持将实例附加到自助服务网络的第3层服务来增强选项1。该demo非特权用户或其他非特权用户可以管理自助服务网络，包括提供自助服务和提供商网络之间连接的路由器。此外，浮动IP地址提供与使用来自外部网络（如Internet）的自助服务网络的实例的连接。</p></blockquote><blockquote><p>自助服务网络通常使用覆盖网络。诸如VXLAN之类的覆盖网络协议包括额外的报头，这些报头增加了开销并减少了有效载荷或用户数据的可用空间。在不了解虚拟网络基础设施的情况下，实例尝试使用1500字节的默认以太网最大传输单元（MTU）来发送分组。Networking服务自动通过DHCP为实例提供正确的MTU值。但是，某些云映像不使用DHCP或忽略DHCP MTU选项，需要使用元数据或脚本进行配置。</p></blockquote><h3 id="安装组件"><a href="#安装组件" class="headerlink" title="安装组件"></a>安装组件</h3><pre><code>yum install openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables</code></pre><h3 id="创建用户-数据库-授权-MariaDB"><a href="#创建用户-数据库-授权-MariaDB" class="headerlink" title="创建用户,数据库,授权(MariaDB)"></a>创建用户,数据库,授权(MariaDB)</h3><pre><code>mysql -u root -predhat -te &quot;create database neutron;grant all privileges on neutron.* to &apos;neutron&apos;@&apos;localhost&apos; identified by &apos;neutron&apos;;grant all privileges on neutron.* to &apos;neutron&apos;@&apos;%&apos; identified by &apos;neutron&apos;;&quot;</code></pre><h3 id="创建服务凭据"><a href="#创建服务凭据" class="headerlink" title="创建服务凭据"></a>创建服务凭据</h3><pre><code>source ~/admin-openstack.shopenstack user create --domain default --password=neutron neutronopenstack role add --project service --user neutron adminopenstack service create --name neutron --description &quot;OpenStack Networking&quot; networkopenstack endpoint create --region RegionOne network public http://controller:9696openstack endpoint create --region RegionOne network internal http://controller:9696openstack endpoint create --region RegionOne network admin http://controller:9696</code></pre><h3 id="网络选项1：提供商网络"><a href="#网络选项1：提供商网络" class="headerlink" title="网络选项1：提供商网络"></a>网络选项1：提供商网络</h3><h4 id="neutron配置"><a href="#neutron配置" class="headerlink" title="neutron配置"></a>neutron配置</h4><pre><code>cat &lt;&lt;EOF &gt;/etc/neutron/neutron.conf[DEFAULT]bind_port = 9696bind_host = $(hostname)core_plugin = ml2service_plugins =transport_url = rabbit://openstack:openstack@controllerauth_strategy = keystonenotify_nova_on_port_status_changes = truenotify_nova_on_port_data_changes = true[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = neutron[nova]auth_url = http://controller:35357auth_type = passwordproject_domain_id = defaultuser_domain_id = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = nova[database]connection = mysql://neutron:neutron@controller:3306/neutron[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF</code></pre><h4 id="配置2层网络插件"><a href="#配置2层网络插件" class="headerlink" title="配置2层网络插件"></a>配置2层网络插件</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/plugins/ml2/ml2_conf.ini[ml2]tenant_network_types =type_drivers = flat,vlanmechanism_drivers = linuxbridgeextension_drivers = port_security[ml2_type_flat]flat_networks = provider[securitygroup]enable_ipset = trueEOF</code></pre><hr><blockquote><p>链接配置文件</p></blockquote><pre><code>ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</code></pre><hr><h4 id="配置Linux桥代理"><a href="#配置Linux桥代理" class="headerlink" title="配置Linux桥代理"></a>配置Linux桥代理</h4><blockquote><p>NetName 为底层提供网络的物理接口(此处一般选公网网卡)</p></blockquote><pre><code>NetName=ens34cat &lt;&lt;EOF  &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:$NetName[vxlan]enable_vxlan = false[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF</code></pre><h4 id="开启内核支持网桥过滤器"><a href="#开启内核支持网桥过滤器" class="headerlink" title="开启内核支持网桥过滤器"></a>开启内核支持网桥过滤器</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/sysctl.confnet.bridge.bridge-nf-call-iptables = 1net.bridge.bridge-nf-call-ip6tables = 1EOFsysctl -p</code></pre><h4 id="配置DHCP代理"><a href="#配置DHCP代理" class="headerlink" title="配置DHCP代理"></a>配置DHCP代理</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/dhcp_agent.ini[DEFAULT] interface_driver = linuxbridge dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq enable_isolated_metadata = trueEOF</code></pre><hr><h4 id="配置元数据代理"><a href="#配置元数据代理" class="headerlink" title="配置元数据代理"></a>配置元数据代理</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/metadata_agent.ini[DEFAULT]nova_metadata_ip = controllermetadata_proxy_shared_secret = metadataEOF</code></pre><h4 id="配置计算服务网络"><a href="#配置计算服务网络" class="headerlink" title="配置计算服务网络"></a>配置计算服务网络</h4><pre><code>cat &lt;&lt;EOF  &gt;&gt;/etc/nova/nova.conf# Neutron[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = neutronservice_metadata_proxy = truemetadata_proxy_shared_secret = metadataEOF</code></pre><h4 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h4><pre><code>su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron</code></pre><h4 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h4><pre><code># 重启 nova-apisystemctl restart openstack-nova-api# 启动服务,跟随系统启动systemctl enable neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agentsystemctl start neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agent</code></pre><h3 id="网络选项2：自助服务网络"><a href="#网络选项2：自助服务网络" class="headerlink" title="网络选项2：自助服务网络"></a>网络选项2：自助服务网络</h3><h4 id="neutron-配置"><a href="#neutron-配置" class="headerlink" title="neutron 配置"></a>neutron 配置</h4><pre><code>cat &lt;&lt;EOF &gt;/etc/neutron/neutron.conf[DEFAULT]bind_port = 9696bind_host = $(hostname)core_plugin = ml2service_plugins = routerallow_overlapping_ips = true   transport_url = rabbit://openstack:openstack@controllerauth_strategy = keystonenotify_nova_on_port_status_changes = truenotify_nova_on_port_data_changes = true[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = neutron[nova]auth_url = http://controller:35357auth_type = passwordproject_domain_id = defaultuser_domain_id = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = nova[database]connection = mysql://neutron:neutron@controller:3306/neutron[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF</code></pre><h4 id="配置2层网络插件-1"><a href="#配置2层网络插件-1" class="headerlink" title="配置2层网络插件"></a>配置2层网络插件</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/plugins/ml2/ml2_conf.ini[ml2]tenant_network_types = vxlantype_drivers = flat,vlan,vxlanmechanism_drivers = linuxbridge,l2populationextension_drivers = port_security[ml2_type_flat]flat_networks = provider[ml2_type_vxlan]vni_ranges = 1:1000[securitygroup]enable_ipset = trueEOF</code></pre><hr><blockquote><p>链接配置文件</p></blockquote><pre><code>ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</code></pre><hr><h4 id="配置Linux桥代理-1"><a href="#配置Linux桥代理-1" class="headerlink" title="配置Linux桥代理"></a>配置Linux桥代理</h4><blockquote><p>NetName 为底层提供网络的物理接口(此处一般选公网网卡)</p></blockquote><pre><code>NetName=ens34# 获取第二块网卡IPIP=$(ip add | grep global | grep -v &apos;secondary&apos; |awk -F&apos;[ /]+&apos; &apos;{ print $3 }&apos; | tail -1)cat &lt;&lt;EOF  &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:$NetName[vxlan]enable_vxlan = truelocal_ip = $IPl2_population = true[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF</code></pre><h4 id="开启内核支持网桥过滤器-1"><a href="#开启内核支持网桥过滤器-1" class="headerlink" title="开启内核支持网桥过滤器"></a>开启内核支持网桥过滤器</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/sysctl.confnet.bridge.bridge-nf-call-iptables = 1net.bridge.bridge-nf-call-ip6tables = 1EOFsysctl -p</code></pre><h4 id="配置第3层代理"><a href="#配置第3层代理" class="headerlink" title="配置第3层代理"></a>配置第3层代理</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/l3_agent.ini[DEFAULT] interface_driver  =  linuxbridgeEOF</code></pre><h4 id="配置DHCP代理-1"><a href="#配置DHCP代理-1" class="headerlink" title="配置DHCP代理"></a>配置DHCP代理</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/dhcp_agent.ini[DEFAULT] interface_driver = linuxbridge dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq enable_isolated_metadata = trueEOF</code></pre><h4 id="配置元数据代理-1"><a href="#配置元数据代理-1" class="headerlink" title="配置元数据代理"></a>配置元数据代理</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/metadata_agent.ini[DEFAULT]nova_metadata_ip = controllermetadata_proxy_shared_secret = metadataEOF</code></pre><h4 id="配置计算服务网络-1"><a href="#配置计算服务网络-1" class="headerlink" title="配置计算服务网络"></a>配置计算服务网络</h4><pre><code>cat &lt;&lt;EOF  &gt;&gt;/etc/nova/nova.conf# Neutron[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = neutronservice_metadata_proxy = truemetadata_proxy_shared_secret = metadataEOF</code></pre><h4 id="初始化数据库-1"><a href="#初始化数据库-1" class="headerlink" title="初始化数据库"></a>初始化数据库</h4><pre><code>su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron</code></pre><h4 id="服务配置-1"><a href="#服务配置-1" class="headerlink" title="服务配置"></a>服务配置</h4><pre><code># 重启 nova-apisystemctl restart openstack-nova-api# 启动服务,跟随系统启动systemctl enable neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agentsystemctl start neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agent# 启动第3层服务(仅对于网络选项2)systemctl enable neutron-l3-agentsystemctl start neutron-l3-agent</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-13_创建虚拟机</title>
      <link href="/posts/openstack-13.html"/>
      <url>/posts/openstack-13.html</url>
      <content type="html"><![CDATA[<h2 id="上传公钥"><a href="#上传公钥" class="headerlink" title="上传公钥"></a>上传公钥</h2><pre><code>source ~/admin-openstack.shnova keypair-add --pub-key ~/.ssh/id_dsa.pub mykey_controller1</code></pre><h2 id="创建可以用区域"><a href="#创建可以用区域" class="headerlink" title="创建可以用区域"></a>创建可以用区域</h2><pre><code>nova aggregate-create Dell01 Dell01nova aggregate-list</code></pre><hr><blockquote><p>添加主机</p></blockquote><pre><code>nova aggregate-add-host Dell01 computer01</code></pre><h2 id="创建安全规则"><a href="#创建安全规则" class="headerlink" title="创建安全规则"></a>创建安全规则</h2><pre><code>openstack security group rule create --proto icmp defaultopenstack security group rule create --proto tcp --dst-port 22 &apos;default&apos;</code></pre><h2 id="创建网络"><a href="#创建网络" class="headerlink" title="创建网络"></a>创建网络</h2><h3 id="获取本机网段"><a href="#获取本机网段" class="headerlink" title="获取本机网段"></a>获取本机网段</h3><pre><code>IP=$(ip add|grep global|awk -F&apos;[ /]+&apos; &apos;{ print $3 }&apos;|head -n 1)IPS=$(echo $IP|awk -F\. &apos;{ print $1&quot;.&quot;$2&quot;.&quot;$3 }&apos;)</code></pre><h3 id="创建网络-1"><a href="#创建网络-1" class="headerlink" title="创建网络"></a>创建网络</h3><pre><code>openstack network create --share --external --provider-physical-network provider \  --provider-network-type flat lan_$IPS</code></pre><h3 id="创建子网"><a href="#创建子网" class="headerlink" title="创建子网"></a>创建子网</h3><pre><code>openstack subnet create --network lan_$IPS --allocation-pool start=$IPS.70,end=$IPS.100 \  --dns-nameserver 223.5.5.5 --gateway $IPS.1 --subnet-range $IPS.0/24 net_$IPS</code></pre><h3 id="创建实例类型"><a href="#创建实例类型" class="headerlink" title="创建实例类型"></a>创建实例类型</h3><pre><code>openstack flavor create --id 1 --vcpus 1 --ram 512 --disk 5  m1.nanoopenstack flavor create --id 2 --vcpus 1 --ram 512 --disk 12  m2.nanoopenstack flavor create --id 3 --vcpus 2 --ram 1024 --disk 12  m3.nano</code></pre><h2 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h2><h3 id="下载测试镜像"><a href="#下载测试镜像" class="headerlink" title="下载测试镜像"></a>下载测试镜像</h3><pre><code>wget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.imgwget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img</code></pre><h3 id="上传镜像-1"><a href="#上传镜像-1" class="headerlink" title="上传镜像"></a>上传镜像</h3><blockquote><p>使用qcow2磁盘格式, bare容器格式, 上传镜像到镜像服务并设置公共可见</p></blockquote><pre><code>openstack image create &quot;cirros-0.3.5&quot; --file cirros-0.3.5-x86_64-disk.img \  --disk-format qcow2 --container-format bare --publicopenstack image create &quot;cirros-0.4.0&quot; --file cirros-0.4.0-x86_64-disk.img \  --disk-format qcow2 --container-format bare --public</code></pre><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><pre><code>nova boot --flavor m1.nano --image cirros-0.3.5 --nic net-name=lan_$IPS \  --security-group default --key-name mykey_controller1 VM01nova boot --flavor m1.nano --image cirros-0.4.0 --nic net-name=lan_$IPS \  --security-group default --key-name mykey_controller1 VM02</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre><code>openstack server listopenstack console url show VM01</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack Pike版安装部署汇总</title>
      <link href="/posts/openstack-readme.html"/>
      <url>/posts/openstack-readme.html</url>
      <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><pre><code># 系统环境 CentOS-7.4 最小化安装(CentOS-7-x86_64-Minimal-1708.iso)# controller1, controller2, controller3 为控制节点(高可用,负载均衡)# nfs 主机本地磁盘提供给 glance 镜像存储# cinder1 主机本地磁盘 nfs,lvm 提给 openstac 卷# computer1 提供计算服务</code></pre><style>/* 第一列表格宽度 */table th:nth-of-type(1){width: 26%;}/* 第二列表格宽度 */table th:nth-of-type(2){width: 74%;}</style><h3 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h3><table><thead><tr><th style="text-align:left">目录</th><th style="text-align:left">服务</th></tr></thead><tbody><tr><td style="text-align:left">00<a href="http://home.onlycloud.xin/posts/openstack-00.html">虚拟机初始化</a></td><td style="text-align:left">所有主机：虚拟机创建, 网络参数配置, 更改主机名</td></tr><tr><td style="text-align:left">01<a href="http://home.onlycloud.xin/posts/openstack-01.html">系统环境初始化</a></td><td style="text-align:left">所有主机：关闭 selinux, firewalld; 配置软件安装源, 时间同步, 常用工具</td></tr><tr><td style="text-align:left">02<a href="http://home.onlycloud.xin/posts/openstack-02.html">Haproxy集群高可用</a></td><td style="text-align:left">controller1, controller2, controller3 安装 pacemaker, haproxy 集群高可用</td></tr><tr><td style="text-align:left">03<a href="http://home.onlycloud.xin/posts/openstack-03.html">MariaDB-Galera-Cluster集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 MariaDB Galera 集群高可用</td></tr><tr><td style="text-align:left">04<a href="http://home.onlycloud.xin/posts/openstack-04.html">RabbitMQ-cluster集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 RabbitMQ 集群高可用</td></tr><tr><td style="text-align:left">05<a href="http://home.onlycloud.xin/posts/openstack-05.html">Keystone验证服务群集</a></td><td style="text-align:left">controller1, controller2, controller3 安装 Keystone 集群</td></tr><tr><td style="text-align:left">06<a href="http://home.onlycloud.xin/posts/openstack-06.html">Glance镜像服务集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 Glance-控制节点集群; nfs 提供 镜像存储</td></tr><tr><td style="text-align:left">07<a href="http://home.onlycloud.xin/posts/openstack-07.html">Nova-控制节点集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 Nova-控制节点集群</td></tr><tr><td style="text-align:left">08<a href="http://home.onlycloud.xin/posts/openstack-08.html">Neutron控制节点集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 Neutron控制节点集群</td></tr><tr><td style="text-align:left">09<a href="http://home.onlycloud.xin/posts/openstack-09.html">dashboard集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 dashboard集群</td></tr><tr><td style="text-align:left">10<a href="http://home.onlycloud.xin/posts/openstack-10.html">cinder存储安装</a></td><td style="text-align:left">controller1, controller2, controller3 安装 cinder存储控制节点集群; cinder 提供本地 lvm,nfs 存储</td></tr><tr><td style="text-align:left">11<a href="http://home.onlycloud.xin/posts/openstack-11.html">nova计算节点安装</a></td><td style="text-align:left">computer1, computer2 安装 nova计算节点</td></tr><tr><td style="text-align:left">12<a href="http://home.onlycloud.xin/posts/openstack-12.html">创建虚拟机</a></td><td style="text-align:left">任意有管理权限的节点(或使用 dashboard)</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>创建内网OpenStack源(pike版)</title>
      <link href="/posts/openstack-install-13.html"/>
      <url>/posts/openstack-install-13.html</url>
      <content type="html"><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><pre><code># CentOS 7 最小化安装# 关闭, 禁用 firewalldsystemctl stop firewalldsystemctl disable firewalldfirewall-cmd --state# 关闭, 禁用 selinuxsetenforce 0sed -i &apos;/^SELINUX=.*/c SELINUX=disabled&apos; /etc/selinux/configgrep --color=auto &apos;^SELINUX&apos; /etc/selinux/config</code></pre><h2 id="YUM设置"><a href="#YUM设置" class="headerlink" title="YUM设置"></a>YUM设置</h2><blockquote><p>更改YUM缓存路径, 安装完成后不删除已下载软件包</p></blockquote><pre><code>mkdir -p /www/share/tmpcp /etc/yum.conf{,.bak}sed -i &apos;s#^keepcache=0#keepcache=1#&apos; /etc/yum.confsed -i &apos;s/^cachedir/#cachedir/&apos; /etc/yum.confsed -ir &apos;3 icachedir=/www/share/tmp/$basearch/$releasever \n&apos; /etc/yum.conf</code></pre><h2 id="配置-yum-epel-openstack-安装源"><a href="#配置-yum-epel-openstack-安装源" class="headerlink" title="配置 yum, epel, openstack 安装源"></a>配置 yum, epel, openstack 安装源</h2><pre><code>rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repoyum -y install epel-releaserm -rf /etc/yum.repos.d/epel*curl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/epel-7.repo# 手动配置阿里云openstack源(关闭GPG验证 否则软件安装时会报错)cat &lt;&lt;&apos;EOF&apos; &gt;/etc/yum.repos.d/centos-openstack.repo[centos-openstack-pike]name=CentOS-$releasever-openstack-pikeenabled=1failovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/cloud/$basearch/openstack-pikegpgcheck=0#gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7[centos-virt-kvm-common]name=CentOS-$releasever-virt-kvm-commonenabled=1failovermethod=prioritybaseurl=https://mirrors.aliyun.com/centos/$releasever/virt/$basearch/kvm-common/gpgcheck=0#gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7EOF</code></pre><h2 id="更新系统并重启"><a href="#更新系统并重启" class="headerlink" title="更新系统并重启"></a>更新系统并重启</h2><blockquote><p>系统更新完毕后需要重新执行上一步替换软装安装源</p></blockquote><pre><code>yum -y updatereboot</code></pre><h2 id="保下载的包"><a href="#保下载的包" class="headerlink" title="保下载的包"></a>保下载的包</h2><blockquote><p>将 /www/share/yum/ 目录下载的包移动到 /www/share/yum</p></blockquote><pre><code>mkdir /www/share/yumfind /www/share/tmp/ -name *.rpm |sed -r &apos;s#.*#mv &amp; /www/share/yum/\n#&apos;|bash</code></pre><h2 id="下载安装openstack-用到的包"><a href="#下载安装openstack-用到的包" class="headerlink" title="下载安装openstack 用到的包"></a>下载安装openstack 用到的包</h2><pre><code>List=&apos;wget vim ntpdate net-tools lrzsz lsof glances htop corosync pacemaker pcs fence-agents   resource-agents httpd haproxy python-openstackclient openstack-selinux openstack-utils expect   mariadb mariadb-server mariadb-galera-server rabbitmq-server erlang socat openstack-keystone   httpd mod_wsgi memcached python-memcached nfs-utils rpcbind openstack-glance python-glance   openstack-nova-api openstack-nova-conductor openstack-nova-console openstack-nova-novncproxy   openstack-nova-scheduler openstack-nova-placement-api openstack-neutron openstack-neutron-ml2   openstack-neutron-linuxbridge python-neutronclient ebtables ipset openstack-dashboard   openstack-cinder targetcli python-keystone lvm2 nfs-utils rpcbind python2-PyMySQL   openstack-nova-compute openstack-neutron-linuxbridge ebtables ipset&apos;for Package in $List; do    yum install -y --downloadonly --downloaddir=/www/share/yum $Packagedone</code></pre><h2 id="生成数据库文件"><a href="#生成数据库文件" class="headerlink" title="生成数据库文件"></a>生成数据库文件</h2><pre><code>yum install -y createrepocreaterepo -pdo  /www/share/yum /www/share/yum</code></pre><h2 id="安装-http"><a href="#安装-http" class="headerlink" title="安装 http"></a>安装 http</h2><pre><code>yum install -y httpdcat &lt;&lt;EOF &gt;/etc/httpd/conf.d/share.conf# http shareAlias /share /www/share&lt;Directory &quot;/www/share&quot;&gt;    Options Indexes FollowSymLinks    IndexOptions NameWidth=* DescriptionWidth=* FoldersFirst    IndexOptions SuppressIcon HTMLTable Charset=UTF-8 SuppressHTMLPreamble    Order allow,deny    Allow from all    Require all granted&lt;/Directory&gt;EOFsystemctl restart httpdsystemctl enable httpd</code></pre><h2 id="创建repo"><a href="#创建repo" class="headerlink" title="创建repo"></a>创建repo</h2><pre><code>cat &lt;&lt;EOF &gt;/www/share/loacl.repo[local_yum]name=My_Soucebaseurl=http://192.168.0.2/share/yum/gpgcheck=0enabled=1cost=88gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7EOF</code></pre><h2 id="添加软件"><a href="#添加软件" class="headerlink" title="添加软件"></a>添加软件</h2><pre><code># 下载没有安装过的包yum install --downloadonly --downloaddir=/www/share/yum/ -y 包名称# 下载已经安装过的包yum reinstall --downloadonly --downloaddir=/www/share/yum/ -y 包名称# 生成数据库createrepo -pdo  /www/share/yum /www/share/yumcreaterepo --update -pdo /www/share/yum /www/share/yum</code></pre><h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><pre><code>curl http://192.168.0.2/share/loacl.repo -o /etc/yum.repos.d/Lan7.repo</code></pre><p><a href="http://www.cnblogs.com/elvi/p/7657770.html" target="_blank" rel="noopener">参考</a>    </p>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> yum </tag>
            
            <tag> repo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-11_nova计算节点安装</title>
      <link href="/posts/openstack-11.html"/>
      <url>/posts/openstack-11.html</url>
      <content type="html"><![CDATA[<pre><code># Computer 计算服务# 计算节点安装配置</code></pre><h2 id="计算节点安装"><a href="#计算节点安装" class="headerlink" title="计算节点安装"></a>计算节点安装</h2><h3 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h3><pre><code>curl http://home.onlycloud.xin/code/openstack-01_init.sh | sh</code></pre><h3 id="安装OpenStack客户端-工具"><a href="#安装OpenStack客户端-工具" class="headerlink" title="安装OpenStack客户端,工具"></a>安装OpenStack客户端,工具</h3><pre><code>yum install -y python-openstackclient openstack-selinux python2-PyMySQL openstack-utils</code></pre><h3 id="安装-Nova"><a href="#安装-Nova" class="headerlink" title="安装 Nova"></a>安装 Nova</h3><pre><code>yum install -y openstack-nova-compute</code></pre><h3 id="安装-Neutron"><a href="#安装-Neutron" class="headerlink" title="安装 Neutron"></a>安装 Neutron</h3><pre><code>yum install -y openstack-neutron-linuxbridge ebtables ipset</code></pre><h2 id="计算节点配置"><a href="#计算节点配置" class="headerlink" title="计算节点配置"></a>计算节点配置</h2><h3 id="备份默认配置"><a href="#备份默认配置" class="headerlink" title="备份默认配置"></a>备份默认配置</h3><pre><code>[ -f /etc/nova/nova.conf.bak ] || cp /etc/nova/nova.conf{,.bak}[ -f /etc/neutron/neutron.conf.bak ] || cp /etc/neutron/neutron.conf{,.bak}[ -f /etc/neutron/plugins/ml2/linuxbridge_agent.ini.bak ] || cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}</code></pre><h3 id="设置-Nova-实例路径-磁盘镜像文件"><a href="#设置-Nova-实例路径-磁盘镜像文件" class="headerlink" title="设置 Nova 实例路径(磁盘镜像文件)"></a>设置 Nova 实例路径(磁盘镜像文件)</h3><pre><code>Vdir=/date/novaVHD=$Vdir/instancesmkdir -p $VHDchown -R nova:nova $Vdir</code></pre><h3 id="虚拟化类型"><a href="#虚拟化类型" class="headerlink" title="虚拟化类型"></a>虚拟化类型</h3><blockquote><p>使用QEMU或KVM ,KVM硬件加速需要硬件支持,虚拟机使用 qemu</p></blockquote><pre><code>#[[ `egrep -c &apos;(vmx|svm)&apos; /proc/cpuinfo` = 0 ]] &amp;&amp; { Kvm=qemu; } || { Kvm=kvm; }Kvm=qemu</code></pre><h3 id="nova-配置"><a href="#nova-配置" class="headerlink" title="nova 配置"></a>nova 配置</h3><blockquote><p>获取第一块网卡名</p></blockquote><pre><code>Netname=$(ip add|egrep global|awk &apos;{ print $NF }&apos;|head -n 1)</code></pre><hr><blockquote><p>获取第一块网卡 ip地址</p></blockquote><pre><code>MyIP=$(ip add|grep global|awk -F&apos;[ /]+&apos; &apos;{ print $3 }&apos;|head -n 1)</code></pre><hr><blockquote><p>VNC代理地址vip</p></blockquote><pre><code>VncProxy=10.0.0.10</code></pre><hr><blockquote><p>创建 nova 配置文件</p></blockquote><pre><code>cat &lt;&lt;EOF  &gt;/etc/nova/nova.conf[DEFAULT]instances_path=&apos;$VHD&apos;enabled_apis = osapi_compute,metadatatransport_url = rabbit://openstack:openstack@controller:5673use_neutron = Truefirewall_driver = nova.virt.firewall.NoopFirewallDrivercpu_allocation_ratio = 4[api_database]connection = mysql+pymysql://nova:nova@controller/nova_api[database]connection = mysql+pymysql://nova:nova@controller/nova[api]auth_strategy = keystone[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = novapassword = nova[vnc]enabled = truevncserver_listen = 0.0.0.0vncserver_proxyclient_address = $MyIPnovncproxy_base_url = http://${VncProxy}:6080/vnc_auto.html[glance]api_servers = http://controller:9292[oslo_concurrency]lock_path = /var/lib/nova/tmp[placement]os_region_name = RegionOneproject_domain_name = Defaultproject_name = serviceauth_type = passworduser_domain_name = Defaultauth_url = http://controller:35357/v3username = placementpassword = placement[libvirt]virt_type = &apos;$Kvm&apos;[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = neutronEOF</code></pre><hr><blockquote><p>创建 neutron 配置文件</p></blockquote><pre><code>cat &lt;&lt;&apos;EOF&apos;  &gt;/etc/neutron/neutron.conf[DEFAULT]auth_strategy = keystonetransport_url = rabbit://openstack:openstack@controller:5673[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_id = defaultuser_domain_id = defaultproject_name = serviceusername = neutronpassword = neutron[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF</code></pre><hr><blockquote><p>创建 linuxbridge-agent 配置文件</p></blockquote><pre><code>cat &lt;&lt;EOF &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:$Netname[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver[vxlan]enable_vxlan = false# local_ip = 10.0.0.21# l2_population = trueEOF</code></pre><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><blockquote><p>配置服务跟随系统启动, 启动服务</p></blockquote><pre><code>systemctl enable libvirtd openstack-nova-compute neutron-linuxbridge-agentsystemctl start libvirtd openstack-nova-compute neutron-linuxbridge-agent</code></pre><h2 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h2><pre><code>site=&apos;http://home.onlycloud.xin&apos;curl $site/code/openstack-11_nova.sh -o openstack-nova.shsh openstack-nova.sh</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> nova </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-10_cinder存储安装</title>
      <link href="/posts/openstack-10.html"/>
      <url>/posts/openstack-10.html</url>
      <content type="html"><![CDATA[<pre><code># Cinder 块存储# 控制节点安装配置 cinder-api, cinder-scheduler 服务# 存储节点安装配置 cinder-volume 服务</code></pre><h2 id="控制节点安装配置"><a href="#控制节点安装配置" class="headerlink" title="控制节点安装配置"></a>控制节点安装配置</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><blockquote><p>创建 cinder 数据库,用户,授权</p></blockquote><pre><code>source ~/PASS               # 读取数据库密码mysql -u root -p$DBPass -e &quot;create database cinder;grant all privileges on cinder.* to &apos;cinder&apos;@&apos;localhost&apos; identified by &apos;cinder&apos;;grant all privileges on cinder.* to &apos;cinder&apos;@&apos;%&apos; identified by &apos;cinder&apos;;flush privileges;select user,host from mysql.user;show databases;&quot;</code></pre><h4 id="创建-角色-服务-API"><a href="#创建-角色-服务-API" class="headerlink" title="创建,角色,服务,API"></a>创建,角色,服务,API</h4><blockquote><p>创建 cinder 角色,授权</p></blockquote><pre><code>source ~/admin-openstack.sh              # 加载凭证openstack user create --domain default --password=cinder cinderopenstack role add --project service --user cinder admin</code></pre><hr><blockquote><p>创建 glance 服务</p></blockquote><pre><code>openstack service create --name cinderv2   --description &quot;OpenStack Block Storage&quot; volumev2openstack service create --name cinderv3   --description &quot;OpenStack Block Storage&quot; volumev3openstack service list        # 查看服务</code></pre><hr><blockquote><p>注册 API</p></blockquote><pre><code>openstack endpoint create --region RegionOne volumev2 public http://controller:8776/v2/%\(project_id\)sopenstack endpoint create --region RegionOne volumev2 internal http://controller:8776/v2/%\(project_id\)sopenstack endpoint create --region RegionOne volumev2 admin http://controller:8776/v2/%\(project_id\)sopenstack endpoint create --region RegionOne volumev3 public http://controller:8776/v3/%\(project_id\)sopenstack endpoint create --region RegionOne volumev3 internal http://controller:8776/v3/%\(project_id\)sopenstack endpoint create --region RegionOne volumev3 admin http://controller:8776/v3/%\(project_id\)sopenstack endpoint list        # 查看注册的 API</code></pre><hr><h3 id="安装-Cinder"><a href="#安装-Cinder" class="headerlink" title="安装 Cinder"></a>安装 Cinder</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;&apos;EOF&apos;    # 安装 Cinder NFS    yum install -y openstack-cinder nfs-utils    # 备份默认配置文件    [ -f /etc/cinder/cinder.conf.bak ] || cp /etc/cinder/cinder.conf{,.bak}    # Nova 添加 cinder 配置    if [ -z &quot;$(grep &apos;Cinder&apos; /etc/nova/nova.conf)&quot; ];then        echo -e &apos;\n# Cinder&apos; &gt;&gt;/etc/nova/nova.conf        echo &apos;[cinder]&apos; &gt;&gt;/etc/nova/nova.conf        echo &apos;os_region_name = RegionOne&apos; &gt;&gt;/etc/nova/nova.conf    fiEOFdone</code></pre><h3 id="配置-Cinder"><a href="#配置-Cinder" class="headerlink" title="配置 Cinder"></a>配置 Cinder</h3><blockquote><p>Cinder 配置文件</p></blockquote><pre><code># 备份默认配置文件[ -f /etc/cinder/cinder.conf.bak ] || cp /etc/cinder/cinder.conf{,.bak}# 创建 Cinder 配置文件cat &lt;&lt;&apos;EOF&apos; &gt;/etc/cinder/cinder.conf[DEFAULT]osapi_volume_listen = controller1osapi_volume_listen_port = 8776auth_strategy = keystonelog_dir = /var/log/cinderstate_path = /var/lib/cinderglance_api_servers = http://controller:9292transport_url = rabbit://openstack:openstack@controller[database]connection = mysql+pymysql://cinder:cinder@controller/cinder[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211,controller2:11211,controller3:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = cinderpassword = cinder[oslo_concurrency]lock_path = /var/lib/cinder/tmpEOF</code></pre><hr><blockquote><p>同步配置到其他节点</p></blockquote><pre><code># 同步 cinder 配置文件, 修改其他节点监听主机rsync -avzP -e &apos;ssh -p 22&apos; /etc/cinder/cinder.conf controller2:/etc/cinder/rsync -avzP -e &apos;ssh -p 22&apos; /etc/cinder/cinder.conf controller3:/etc/cinder/ssh controller2 &quot;sed -i &apos;1,8s/controller1/controller2/&apos; /etc/cinder/cinder.conf&quot;ssh controller3 &quot;sed -i &apos;1,8s/controller1/controller3/&apos; /etc/cinder/cinder.conf&quot;</code></pre><hr><blockquote><p>初始化数据</p></blockquote><pre><code>su -s /bin/sh -c &quot;cinder-manage db sync&quot; cinder</code></pre><hr><blockquote><p>检验 cinder 数据库</p></blockquote><pre><code>mysql -h controller -u cinder -pcinder -e &quot;use cinder;show tables;&quot;</code></pre><h3 id="配置Haproxy"><a href="#配置Haproxy" class="headerlink" title="配置Haproxy"></a>配置Haproxy</h3><blockquote><p>Haproxy 代理 Cinder 配置</p></blockquote><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;&gt;/etc/haproxy/haproxy.cfg##########Cinder_API_cluster##########listen Cinder_API_cluster  bind controller:8776  #balance source  option tcpka  option httpchk  option tcplog  server controller1 controller1:8776 check inter 2000 rise 2 fall 5  server controller2 controller2:8776 check inter 2000 rise 2 fall 5  server controller3 controller3:8776 check inter 2000 rise 2 fall 5EOF</code></pre><hr><blockquote><p>同步配置到其他节点</p></blockquote><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/haproxy.cfg controller2:/etc/haproxy/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/haproxy.cfg controller3:/etc/haproxy/</code></pre><hr><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;&apos;EOF&apos;    # 重启 nova-api, haproxy    systemctl restart openstack-nova-api haproxy    # cinder服务跟随系统启动    systemctl enable openstack-cinder-api openstack-cinder-scheduler    # 启动 cinder 服务    systemctl start openstack-cinder-api openstack-cinder-schedulerEOFdone</code></pre><h3 id="添加-cinder1-主机免密码登录"><a href="#添加-cinder1-主机免密码登录" class="headerlink" title="添加 cinder1 主机免密码登录"></a>添加 cinder1 主机免密码登录</h3><pre><code>source ~/SSH_KEYSSH_KEY cinder1                        # controller1 免密码登录 cinder1scp /etc/hosts cinder1:/etc/           # 同步hostsscp ~/admin-openstack.sh cinder1:~/    # 同步 opentstack 管理员凭证</code></pre><h2 id="存储节点安装配置"><a href="#存储节点安装配置" class="headerlink" title="存储节点安装配置"></a>存储节点安装配置</h2><blockquote><p>cinder 主机执行</p></blockquote><blockquote><p>cinder 后端可以使用LVM, NFS,分布式存储等 (本次安装以LVM, NFS为例 /dev/sdb1: nfs  /dev/sdb2: lvm)</p></blockquote><h3 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h3><pre><code>curl http://home.onlycloud.xin/code/openstack-01_init.sh | sh</code></pre><h3 id="创建分区"><a href="#创建分区" class="headerlink" title="创建分区"></a>创建分区</h3><blockquote><p>快速分区,新建2个30G分区</p></blockquote><pre><code>echo -e &apos;n\np\n1\n\n+30G\nw&apos; | fdisk /dev/sdbecho -e &apos;n\np\n2\n\n+30G\nw&apos; | fdisk /dev/sdb</code></pre><hr><blockquote><p>格式化分区</p></blockquote><pre><code>mkfs.ext4 /dev/sdb1; mkfs.ext4 /dev/sdb2</code></pre><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><pre><code># 创建数据目录,挂载mkdir -p /data# 开机挂载磁盘echo &apos;/dev/sdb1       /data   ext4    defaults        0 0&apos; &gt;&gt;/etc/fstabmount -a</code></pre><h3 id="安装配置-Cinder"><a href="#安装配置-Cinder" class="headerlink" title="安装配置 Cinder"></a>安装配置 Cinder</h3><blockquote><p>安装 openstack 客户端, 工具, cinder, lvm2</p></blockquote><pre><code>yum install -y python-openstackclient openstack-selinux openstack-utilsyum install -y openstack-cinder targetcli python-keystone lvm2 nfs-utils rpcbind</code></pre><hr><blockquote><p>cinder 配置文件</p></blockquote><pre><code># 备份默认配置文件[ -f /etc/cinder/cinder.conf.bak ] || cp /etc/cinder/cinder.conf{,.bak}# 获取第一块网卡 ip地址MyIP=$(ip add|grep global|awk -F&apos;[ /]+&apos; &apos;{ print $3 }&apos;|head -n 1)# 创建 cinder 配置文件cat &lt;&lt;&apos;EOF&apos; &gt;/etc/cinder/cinder.conf[DEFAULT]auth_strategy = keystonelog_dir = /var/log/cinderstate_path = /var/lib/cinderglance_api_servers = http://controller:9292transport_url = rabbit://openstack:openstack@controllerenabled_backends = lvm,nfs[database]connection = mysql+pymysql://cinder:cinder@controller/cinder[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211,controller2:11211,controller3:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = cinderpassword = cinder[oslo_concurrency]lock_path = /var/lib/cinder/tmp[lvm]volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriveriscsi_helper = lioadmiscsi_protocol = iscsivolume_group = cinder_lvm01iscsi_ip_address = cinder_ipvolumes_dir = $state_path/volumesvolume_backend_name = lvm01[nfs]volume_driver = cinder.volume.drivers.nfs.NfsDrivernfs_shares_config = /etc/cinder/nfs_sharesnfs_mount_point_base = $state_path/mntvolume_backend_name = nfs01EOFsed -i &quot;s/cinder_ip/$MyIP/&quot; /etc/cinder/cinder.conf</code></pre><hr><blockquote><p>设置 cinder 配置文件权限</p></blockquote><pre><code>chmod 640 /etc/cinder/cinder.conf chgrp cinder /etc/cinder/cinder.conf </code></pre><hr><h3 id="配置-lvm-后端存储"><a href="#配置-lvm-后端存储" class="headerlink" title="配置 lvm 后端存储"></a>配置 lvm 后端存储</h3><blockquote><p>创建 LVM 物理卷 pv 与卷组 vg</p></blockquote><pre><code>echo -e &apos;y\n&apos; | pvcreate /dev/sdb2vgcreate cinder_lvm01 /dev/sdb2vgdisplay</code></pre><hr><blockquote><p>配置LVM过滤，只接收上面配置的lvm设备/dev/sdb2( sdb2 作为lvm 存储)</p></blockquote><pre><code># 备份lvm默认配置文件[ -f /etc/lvm/lvm.conf.bak ] || cp /etc/lvm/lvm.conf{,.bak}sed -i &apos;141a\        filter = [ &quot;a/sdb2/&quot;, &quot;r/.*/&quot;]&apos; /etc/lvm/lvm.conf</code></pre><hr><h3 id="配置-NFS-后端存储"><a href="#配置-NFS-后端存储" class="headerlink" title="配置 NFS 后端存储"></a>配置 NFS 后端存储</h3><pre><code># 获取第一块网卡 ip地址MyIP=$(ip add|grep global|awk -F&apos;[ /]+&apos; &apos;{ print $3 }&apos;|head -n 1)# 创建数据目录,设置目录权限mkdir -p /data/{cinder_nfs1,cinder_nfs2}chown cinder:cinder /data/cinder_nfs1chmod 777 /data/cinder_nfs1echo &quot;/data/cinder_nfs1 *(rw,root_squash,sync,anonuid=165,anongid=165)&quot;&gt;/etc/exportsexportfs -r# 配置 NFS 权限echo &quot;$MyIP:/data/cinder_nfs1&quot; &gt;/etc/cinder/nfs_shareschmod 640 /etc/cinder/nfs_shareschown root:cinder /etc/cinder/nfs_shares# 启动服务,设置开机启动, 验证 NFSsystemctl restart rpcbind nfs-serversystemctl enable rpcbind nfs-servershowmount -e localhost</code></pre><hr><h3 id="服务管理-1"><a href="#服务管理-1" class="headerlink" title="服务管理"></a>服务管理</h3><pre><code>systemctl enable openstack-cinder-api openstack-cinder-schedulersystemctl start openstack-cinder-api openstack-cinder-schedulersystemctl enable openstack-cinder-volume targetsystemctl start openstack-cinder-volume target</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre><code>source ~/admin-openstack.shcinder service-listopenstack volume service list     # 能看到存储节点@lvm, @nfs 且up状态说明配置成功+------------------+-------------+------+---------+-------+----------------------------+| Binary           | Host        | Zone | Status  | State | Updated At                 |+------------------+-------------+------+---------+-------+----------------------------+| cinder-scheduler | controller1 | nova | enabled | up    | 2018-07-29T13:22:04.000000 || cinder-scheduler | controller2 | nova | enabled | up    | 2018-07-29T13:22:10.000000 || cinder-scheduler | controller3 | nova | enabled | up    | 2018-07-29T13:22:05.000000 || cinder-scheduler | cinder1     | nova | enabled | up    | 2018-07-29T13:22:07.000000 || cinder-volume    | cinder1@lvm | nova | enabled | up    | 2018-07-29T13:22:08.000000 || cinder-volume    | cinder1@nfs | nova | enabled | up    | 2018-07-29T13:22:04.000000 |+------------------+-------------+------+---------+-------+----------------------------+</code></pre><h3 id="创建云硬盘"><a href="#创建云硬盘" class="headerlink" title="创建云硬盘"></a>创建云硬盘</h3><blockquote><p>创建云硬盘类型,关联volum</p></blockquote><pre><code># LVM # (backend_name与配置文件名对应)cinder type-create lvmcinder type-key lvm set volume_backend_name=lvm01# NFScinder type-create nfscinder type-key nfs set volume_backend_name=nfs01# checkcinder extra-specs-listcinder type-list# delete# cinder type-delete nfs# cinder type-delete lvm</code></pre><hr><blockquote><p>创建云盘(容量单位G)</p></blockquote><pre><code>openstack volume create --size 10 --type lvm disk01        # lvm类型openstack volume create --size 10 --type nfs disk02        # nfs类型openstack volume list</code></pre><hr><h2 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h2><blockquote><p>存储控制端(controller1 执行)</p></blockquote><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-10_cinder-cluster.sh -O openstack-cinder-cluster.shsh openstack-cinder-cluster.sh</code></pre><hr><blockquote><p>存储节点(controller1 执行)</p></blockquote><pre><code>ssh cinder1 &lt;&lt;EOFsite=&apos;http://home.onlycloud.xin&apos;curl $site/code/openstack-10_cinder.sh -o openstack-cinder.shsh openstack-cinder.shEOF</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> cinder </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-09_dashboard集群</title>
      <link href="/posts/openstack-09.html"/>
      <url>/posts/openstack-09.html</url>
      <content type="html"><![CDATA[<pre><code>Dashboard 集群(控制节点)</code></pre><h3 id="安装Dashboard"><a href="#安装Dashboard" class="headerlink" title="安装Dashboard"></a>安装Dashboard</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;&apos;EOF&apos;    # 安装 dashboard    yum -y install openstack-dashboard    # 网页无法访问 dashboard 服务器内部错误解决方法    sed -i &apos;3a WSGIApplicationGroup %{GLOBAL}&apos; /etc/httpd/conf.d/openstack-dashboard.confEOFdone</code></pre><h3 id="配置Dashboard"><a href="#配置Dashboard" class="headerlink" title="配置Dashboard"></a>配置Dashboard</h3><pre><code># 备份默认配置[ -f /etc/openstack-dashboard/local_settings.bak ] || cp /etc/openstack-dashboard/local_settings{,.bak}# 修改配置文件# egrep -v &apos;#|^$&apos; /etc/openstack-dashboard/local_settings     # 显示默认配置Setfiles=/etc/openstack-dashboard/local_settingssed -i &apos;s#_member_#user#g&apos; $Setfilessed -i &apos;s#OPENSTACK_HOST = &quot;127.0.0.1&quot;#OPENSTACK_HOST = &quot;controller&quot;#&apos; $Setfiles# 允许所有主机访问sed -i &quot;/ALLOWED_HOSTS/cALLOWED_HOSTS = [&apos;*&apos;, ]&quot; $Setfiles# 去掉memcached注释sed -in &apos;153,158s/#//&apos; $Setfiles sed -in &apos;160,164s/.*/#&amp;/&apos; $Setfiles# 修改时区sed -i &apos;s#UTC#Asia/Shanghai#g&apos; $Setfilessed -i &apos;s#%s:5000/v2.0#%s:5000/v3#&apos; $Setfilessed -i &apos;/ULTIDOMAIN_SUPPORT/cOPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True&apos; $Setfilessed -i &quot;s@^#OPENSTACK_KEYSTONE_DEFAULT@OPENSTACK_KEYSTONE_DEFAULT@&quot; $Setfilesecho -e &quot;\n&quot; &gt;&gt;$Setfilesecho &apos;# set add&apos; &gt;&gt;$Setfilesecho &quot;OPENSTACK_API_VERSIONS = {&quot; &gt;&gt;$Setfilesecho -e &apos;    &quot;identity&quot;: 3,&apos; &gt;&gt;$Setfilesecho -e &apos;    &quot;image&quot;: 2,&apos; &gt;&gt;$Setfilesecho -e &apos;    &quot;volume&quot;: 2,&apos; &gt;&gt;$Setfilesecho &apos;}&apos; &gt;&gt;$Setfiles# 重启 httpdsystemctl restart httpd# 同步 controller1 配置到其它节点rsync -avzP  -e &apos;ssh -p 22&apos;  /etc/openstack-dashboard/local_settings  controller2:/etc/openstack-dashboard/rsync -avzP  -e &apos;ssh -p 22&apos;  /etc/openstack-dashboard/local_settings  controller3:/etc/openstack-dashboard/# 重启httpssh controller2 &quot;systemctl restart httpd&quot;ssh controller3 &quot;systemctl restart httpd&quot;</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre><code>#  通过集群 IP 访问Dashboard     http://10.0.0.10/dashboard/# #  http://10.0.0.10/dashboard/    http://192.168.16.21:8080/dashboard/#  http://192.168.0.11:8080/dashboard#  http://192.168.0.12:8080/dashboard#  http://192.168.0.13:8080/dashboard##  域      :  default#  用户名  :  admin#  密码    :  admin</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-09_dashboard-cluster.sh -O openstack-dashboard-cluster.shsh openstack-dashboard-cluster.sh</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> dashboard </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-08_Neutron控制节点集群</title>
      <link href="/posts/openstack-08.html"/>
      <url>/posts/openstack-08.html</url>
      <content type="html"><![CDATA[<pre><code>Neutron集群安装(控制节点)管理网为私有网 Provide为公网</code></pre><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="创建-neutron-数据库-用户-授权"><a href="#创建-neutron-数据库-用户-授权" class="headerlink" title="创建 neutron 数据库,用户, 授权"></a>创建 neutron 数据库,用户, 授权</h4><pre><code>source ~/PASS                        # 读取数据库密码mysql -u root -p$DBPass -e &quot;create database neutron;grant all privileges on neutron.* to &apos;neutron&apos;@&apos;localhost&apos; identified by &apos;neutron&apos;;grant all privileges on neutron.* to &apos;neutron&apos;@&apos;%&apos; identified by &apos;neutron&apos;;&quot;</code></pre><h4 id="创建-neutron-用户-添加-admin-角色"><a href="#创建-neutron-用户-添加-admin-角色" class="headerlink" title="创建 neutron 用户,添加 admin 角色"></a>创建 neutron 用户,添加 admin 角色</h4><pre><code>source ~/admin-openstack.sh    # 获取管理员凭证openstack user create --domain default --password=neutron neutronopenstack role add --project service --user neutron admin</code></pre><h4 id="创建-neutron-服务实体-API-端点"><a href="#创建-neutron-服务实体-API-端点" class="headerlink" title="创建 neutron 服务实体, API 端点"></a>创建 neutron 服务实体, API 端点</h4><pre><code>openstack service create --name neutron --description &quot;OpenStack Networking&quot; networkopenstack endpoint create --region RegionOne network public http://controller:9696openstack endpoint create --region RegionOne network internal http://controller:9696openstack endpoint create --region RegionOne network admin http://controller:9696</code></pre><h3 id="安装neutron"><a href="#安装neutron" class="headerlink" title="安装neutron"></a>安装neutron</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;EOF    yum install -y openstack-neutron openstack-neutron-ml2 \      openstack-neutron-linuxbridge python-neutronclient ebtables ipset    # 备份默认配置文件    [ -f /etc/neutron/neutron.conf.bak2 ] || cp /etc/neutron/neutron.conf{,.bak2}    [ -f /etc/neutron/plugins/ml2/ml2_conf.ini.bak ] || cp /etc/neutron/plugins/ml2/ml2_conf.ini{,.bak}    ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini    [ -f /etc/neutron/plugins/ml2/linuxbridge_agent.ini.bak ] || cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}    [ -f /etc/neutron/dhcp_agent.ini.bak ] || cp /etc/neutron/dhcp_agent.ini{,.bak}    [ -f /etc/neutron/metadata_agent.ini.bak ] || cp /etc/neutron/metadata_agent.ini{,.bak}    [ -f /etc/neutron/l3_agent.ini.bak ] || cp /etc/neutron/l3_agent.ini{,.bak}EOFdone</code></pre><h3 id="配置-neutron"><a href="#配置-neutron" class="headerlink" title="配置 neutron"></a>配置 neutron</h3><h4 id="创建-neutron-配置文件"><a href="#创建-neutron-配置文件" class="headerlink" title="创建 neutron 配置文件"></a>创建 neutron 配置文件</h4><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;&gt;/etc/nova/nova.conf# Neutron[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = neutronservice_metadata_proxy = truemetadata_proxy_shared_secret = metadataEOFcat &lt;&lt;&apos;EOF&apos; &gt;/etc/neutron/metadata_agent.ini[DEFAULT]nova_metadata_ip = controllermetadata_proxy_shared_secret = metadataEOFcat &lt;&lt;&apos;EOF&apos; &gt;/etc/neutron/plugins/ml2/ml2_conf.ini[ml2]tenant_network_types = type_drivers = vlan,flatmechanism_drivers = linuxbridgeextension_drivers = port_security[ml2_type_flat]flat_networks = provider[securitygroup]enable_ipset = True#vlan# [ml2_type_valn]# network_vlan_ranges = provider:3001:4000EOF# 获取第一块网卡名Netname=$(ip add|egrep global|awk &apos;{ print $NF }&apos;|head -n 1)# provider:网卡名(公网网卡)cat &lt;&lt;EOF &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:$Netname[vxlan]enable_vxlan = false#local_ip = 10.0.0.10#l2_population = true[agent]prevent_arp_spoofing = True[securitygroup]firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverenable_security_group = TrueEOFcat &lt;&lt;&apos;EOF&apos; &gt;/etc/neutron/dhcp_agent.ini[DEFAULT]interface_driver = linuxbridgedhcp_driver = neutron.agent.linux.dhcp.Dnsmasqenable_isolated_metadata = trueEOF# 创建 neutron 配置文件cat &lt;&lt;EOF &gt;/etc/neutron/neutron.conf[DEFAULT]bind_port = 9696bind_host = controller1core_plugin = ml2service_plugins = routerallow_overlapping_ips = truetransport_url = rabbit://openstack:openstack@controllerauth_strategy = keystonenotify_nova_on_port_status_changes = truenotify_nova_on_port_data_changes = true[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = neutron[nova]auth_url = http://controller:35357auth_type = passwordproject_domain_id = defaultuser_domain_id = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = nova[database]connection = mysql://neutron:neutron@controller:3306/neutron[oslo_concurrency]lock_path = /var/lib/neutron/tmp EOFcat &lt;&lt;&apos;EOF&apos; &gt;/etc/neutron/l3_agent.ini[DEFAULT]interface_driver = linuxbridgeEOF</code></pre><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><pre><code>su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron</code></pre><hr><blockquote><p>验证数据库</p></blockquote><pre><code>mysql -h controller -u neutron -pneutron -e &quot;use neutron;show tables;&quot;</code></pre><h3 id="Haproxy配置"><a href="#Haproxy配置" class="headerlink" title="Haproxy配置"></a>Haproxy配置</h3><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/haproxy/haproxy.cfg##########Neutron_API##########listen Neutron_API_cluster  bind controller:9696  balance source  option tcpka  option tcplog  server controller1 controller1:9696 check inter 2000 rise 2 fall 5  server controller2 controller2:9696 check inter 2000 rise 2 fall 5  server controller3 controller3:9696 check inter 2000 rise 2 fall 5EOF</code></pre><h3 id="同步配置"><a href="#同步配置" class="headerlink" title="同步配置"></a>同步配置</h3><blockquote><p>同步软件配置文件</p></blockquote><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/nova/* controller2:/etc/nova/rsync -avzP -e &apos;ssh -p 22&apos; /etc/nova/* controller3:/etc/nova/rsync -avzP -e &apos;ssh -p 22&apos; /etc/neutron/* controller2:/etc/neutron/rsync -avzP -e &apos;ssh -p 22&apos; /etc/neutron/* controller3:/etc/neutron/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/* controller2:/etc/haproxy/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/* controller3:/etc/haproxy/</code></pre><hr><blockquote><p>修改监听主机</p></blockquote><pre><code>ssh controller2 &quot;sed -i &apos;1,7s/controller1/controller2/&apos; /etc/nova/nova.conf&quot;ssh controller3 &quot;sed -i &apos;1,7s/controller1/controller3/&apos; /etc/nova/nova.conf&quot;ssh controller2 &quot;sed -i &apos;s/controller1/controller2/&apos; /etc/neutron/neutron.conf&quot;ssh controller3 &quot;sed -i &apos;s/controller1/controller3/&apos; /etc/neutron/neutron.conf&quot;</code></pre><h4 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h4><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;EOF    # 重启相关服务    systemctl restart haproxy openstack-nova-api    # 配置 neutron-server 相关服务随系统启动    systemctl enable neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agent    # 启动 neutron 相关服务    systemctl start neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agentEOFdonesleep 5</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><blockquote><p>查看集群节点</p></blockquote><pre><code># 能看到 neutron-dhcp-agent neutron-metadata-agent 各3个openstack network agent listopenstack service list</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-08_neutron-cluster.sh -O openstack-neutron-cluster.shsh openstack-neutron-cluster.sh</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> neutron </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-07_Nova-控制节点集群</title>
      <link href="/posts/openstack-07.html"/>
      <url>/posts/openstack-07.html</url>
      <content type="html"><![CDATA[<h3 id="Nova集群安装-控制节点"><a href="#Nova集群安装-控制节点" class="headerlink" title="Nova集群安装(控制节点)"></a>Nova集群安装(控制节点)</h3><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><h5 id="创建-nova-api-和-nova-数据库-用户-授权"><a href="#创建-nova-api-和-nova-数据库-用户-授权" class="headerlink" title="创建 nova_api 和 nova 数据库,用户, 授权"></a>创建 nova_api 和 nova 数据库,用户, 授权</h5><pre><code>source ~/PASS                        # 读取数据库密码mysql -u root -p$DBPass -e &quot;create database nova;grant all privileges on nova.* to &apos;nova&apos;@&apos;localhost&apos; identified by &apos;nova&apos;;grant all privileges on nova.* to &apos;nova&apos;@&apos;%&apos; identified by &apos;nova&apos;;create database nova_api;grant all privileges on nova_api.* to &apos;nova&apos;@&apos;localhost&apos; identified by &apos;nova&apos;;grant all privileges on nova_api.* to &apos;nova&apos;@&apos;%&apos; identified by &apos;nova&apos;;create database nova_cell0;grant all privileges on nova_cell0.* to &apos;nova&apos;@&apos;localhost&apos; identified by &apos;nova&apos;;grant all privileges on nova_cell0.* to &apos;nova&apos;@&apos;%&apos; identified by &apos;nova&apos;;&quot;</code></pre><h5 id="创建nova用户-添加-admin-角色"><a href="#创建nova用户-添加-admin-角色" class="headerlink" title="创建nova用户,添加 admin 角色"></a>创建nova用户,添加 admin 角色</h5><pre><code>source ~/admin-openstack.sh    # 获取管理员凭证openstack user create --domain default --password=nova novaopenstack role add --project service --user nova admin</code></pre><h5 id="创建-compute-服务实体-API-端点"><a href="#创建-compute-服务实体-API-端点" class="headerlink" title="创建 compute 服务实体 API 端点"></a>创建 compute 服务实体 API 端点</h5><pre><code>openstack service create --name nova --description &quot;OpenStack Compute&quot; computeopenstack endpoint create --region RegionOne compute public http://controller:8774/v2.1openstack endpoint create --region RegionOne compute internal http://controller:8774/v2.1openstack endpoint create --region RegionOne compute admin http://controller:8774/v2.1</code></pre><h5 id="创建-placement-用户-添加-admin-角色"><a href="#创建-placement-用户-添加-admin-角色" class="headerlink" title="创建 placement 用户,添加 admin 角色"></a>创建 placement 用户,添加 admin 角色</h5><pre><code>openstack user create --domain default --password=placement placementopenstack role add --project service --user placement admin</code></pre><h5 id="创建-placement-服务实体-API-端点"><a href="#创建-placement-服务实体-API-端点" class="headerlink" title="创建 placement 服务实体 API 端点"></a>创建 placement 服务实体 API 端点</h5><pre><code>openstack service create --name placement --description &quot;Placement API&quot; placementopenstack endpoint create --region RegionOne placement public http://controller:8778openstack endpoint create --region RegionOne placement internal http://controller:8778openstack endpoint create --region RegionOne placement admin http://controller:8778</code></pre><h4 id="安装nova控制节点"><a href="#安装nova控制节点" class="headerlink" title="安装nova控制节点"></a>安装nova控制节点</h4><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;EOF    yum install -y openstack-nova-api openstack-nova-conductor \    openstack-nova-console openstack-nova-novncproxy \    openstack-nova-scheduler openstack-nova-placement-api    # 备份 nova 默认配置文件, 创建 nova 配置文件    [ -f /etc/nova/nova.conf.bak ] || cp /etc/nova/nova.conf{,.bak}EOFdone</code></pre><h3 id="Nova集群配置"><a href="#Nova集群配置" class="headerlink" title="Nova集群配置"></a>Nova集群配置</h3><h4 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h4><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/etc/nova/nova.conf[DEFAULT]my_ip = controller1use_neutron = Trueosapi_compute_listen = controller1osapi_compute_listen_port = 8774metadata_listen = controller1metadata_listen_port = 8775firewall_driver = nova.virt.firewall.NoopFirewallDriverenabled_apis = osapi_compute,metadatatransport_url = rabbit://openstack:openstack@controller:5673[api_database]connection = mysql+pymysql://nova:nova@controller/nova_api[database]connection = mysql+pymysql://nova:nova@controller/nova[api]auth_strategy = keystone[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211,controller2:11211,controller3:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = novapassword = nova[vnc]enabled = truevncserver_listen = $my_ipvncserver_proxyclient_address = $my_ipnovncproxy_host=$my_ipnovncproxy_port=6080[glance]api_servers = http://controller:9292[oslo_concurrency]lock_path = /var/lib/nova/tmp[placement]os_region_name = RegionOneproject_domain_name = Defaultproject_name = serviceauth_type = passworduser_domain_name = Defaultauth_url = http://controller:35357/v3username = placementpassword = placement[scheduler]discover_hosts_in_cells_interval = 300[cache]enabled = truebackend = oslo_cache.memcache_poolmemcache_servers = controller1:11211,controller2:11211,controller3:11211EOF</code></pre><h4 id="配置nova-alacement-api"><a href="#配置nova-alacement-api" class="headerlink" title="配置nova-alacement-api"></a>配置nova-alacement-api</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/httpd/conf.d/00-nova-placement-api.conf# Placement API&lt;Directory /usr/bin&gt;   &lt;IfVersion &gt;= 2.4&gt;      Require all granted   &lt;/IfVersion&gt;   &lt;IfVersion &lt; 2.4&gt;      Order allow,deny      Allow from all   &lt;/IfVersion&gt;&lt;/Directory&gt;EOF</code></pre><h4 id="初始化nova数据库"><a href="#初始化nova数据库" class="headerlink" title="初始化nova数据库"></a>初始化nova数据库</h4><pre><code>systemctl restart httpd; sleep 4                   # 重启httpdsu -s /bin/sh -c &quot;nova-manage api_db sync&quot; novasu -s /bin/sh -c &quot;nova-manage cell_v2 map_cell0&quot; novasu -s /bin/sh -c &quot;nova-manage cell_v2 create_cell --name=cell1 --verbose&quot; novasu -s /bin/sh -c &quot;nova-manage db sync&quot; nova        # 执行此命令会有两个警告如果出现报错请重复执行此条命令</code></pre><hr><blockquote><p>验证</p></blockquote><pre><code>nova-manage cell_v2 list_cellsmysql -h controller -u nova -pnova -te &quot;use nova_api;show tables;&quot;mysql -h controller -u nova -pnova -te &quot;use nova;show tables;&quot;mysql -h controller -u nova -pnova -te &quot;use nova_cell0;show tables;&quot;</code></pre><h4 id="更改默认端口8778给集群VIP使用"><a href="#更改默认端口8778给集群VIP使用" class="headerlink" title="更改默认端口8778给集群VIP使用"></a>更改默认端口8778给集群VIP使用</h4><pre><code>sed -i &apos;s/8778/9778/&apos; /etc/httpd/conf.d/00-nova-placement-api.confsystemctl restart httpd</code></pre><h3 id="Haproxy-配置"><a href="#Haproxy-配置" class="headerlink" title="Haproxy 配置"></a>Haproxy 配置</h3><h4 id="添加-Nova-代理"><a href="#添加-Nova-代理" class="headerlink" title="添加 Nova 代理"></a>添加 Nova 代理</h4><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;&gt;/etc/haproxy/haproxy.cfg########## Nova_compute ##########listen nova_compute_api_cluster  bind controller:8774  balance source  option tcpka  option httpchk  option tcplog  server controller1 controller1:8774 check inter 2000 rise 2 fall 5  server controller2 controller2:8774 check inter 2000 rise 2 fall 5  server controller3 controller3:8774 check inter 2000 rise 2 fall 5########## Nova-api-metadata ##########listen Nova-api-metadata_cluster  bind controller:8775  balance source  option tcpka  option httpchk  option tcplog  server controller1 controller1:8775 check inter 2000 rise 2 fall 5  server controller2 controller2:8775 check inter 2000 rise 2 fall 5  server controller3 controller3:8775 check inter 2000 rise 2 fall 5########## Nova_placement ##########listen nova_placement_cluster  bind controller:8778  balance source  option tcpka  option tcplog  server controller1 controller1:9778 check inter 2000 rise 2 fall 5  server controller2 controller2:9778 check inter 2000 rise 2 fall 5  server controller3 controller3:9778 check inter 2000 rise 2 fall 5EOF</code></pre><h4 id="同步配置"><a href="#同步配置" class="headerlink" title="同步配置"></a>同步配置</h4><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/nova/* controller2:/etc/nova/rsync -avzP -e &apos;ssh -p 22&apos; /etc/nova/* controller3:/etc/nova/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/* controller2:/etc/haproxy/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/* controller3:/etc/haproxy/rsync -avzP -e &apos;ssh -p 22&apos; /etc/httpd/conf.d/00-nova-placement-api.conf controller2:/etc/httpd/conf.d/rsync -avzP -e &apos;ssh -p 22&apos; /etc/httpd/conf.d/00-nova-placement-api.conf controller3:/etc/httpd/conf.d/</code></pre><hr><blockquote><p>替换监听主机</p></blockquote><pre><code>ssh controller2 &quot;sed -i &apos;1,7s/controller1/controller2/&apos; /etc/nova/nova.conf&quot;ssh controller3 &quot;sed -i &apos;1,7s/controller1/controller3/&apos; /etc/nova/nova.conf&quot;</code></pre><h4 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h4><pre><code>for HOST in controller{1..3}; do    ssh -T $HOST &quot;systemctl restart httpd haproxy&quot;donesleep 5</code></pre><h3 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;EOF    # 配置服务跟随系统启动    systemctl enable openstack-nova-api openstack-nova-consoleauth \      openstack-nova-scheduler openstack-nova-conductor openstack-nova-novncproxy    # 启动nova服务    systemctl start openstack-nova-api openstack-nova-consoleauth \      openstack-nova-scheduler openstack-nova-conductor openstack-nova-novncproxyFOFdone</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><blockquote><p>查看集群节点</p></blockquote><pre><code>nova service-listnova-status upgrade checkopenstack compute service list# 浏览器打开 http://192.168.0.11:1080/admin# 检测 Nova_compute,Nova-api-metadata,Nova_placement 集群状态</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-07_nova-cluster.sh -O openstack-glance-cluster.shsh openstack-glance-cluster.sh</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> nova </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-06_Glance镜像服务集群</title>
      <link href="/posts/openstack-06.html"/>
      <url>/posts/openstack-06.html</url>
      <content type="html"><![CDATA[<h3 id="集群安装"><a href="#集群安装" class="headerlink" title="集群安装"></a>集群安装</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><blockquote><p>创建glance数据库,授权</p></blockquote><pre><code>source ~/PASS               # 读取数据库密码mysql -u root -p$DBPass -e &quot;create database glance;grant all privileges on glance.* to &apos;glance&apos;@&apos;localhost&apos; identified by &apos;glance&apos;;grant all privileges on glance.* to &apos;glance&apos;@&apos;%&apos; identified by &apos;glance&apos;;&quot;</code></pre><h4 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a>创建服务</h4><blockquote><p>创建 glance 角色,授权</p></blockquote><pre><code>source ~/admin-openstack.sh              # 加载凭证openstack user create --domain default --password=glance glanceopenstack role add --project service --user glance admin</code></pre><hr><blockquote><p>创建glance服务实体</p></blockquote><pre><code>openstack service create --name glance --description &quot;OpenStack Image&quot; image</code></pre><hr><blockquote><p>创建服务 API</p></blockquote><pre><code>openstack endpoint create --region RegionOne image public http://controller:9292openstack endpoint create --region RegionOne image internal http://controller:9292openstack endpoint create --region RegionOne image admin http://controller:9292</code></pre><hr><h3 id="安装-NFS-服务"><a href="#安装-NFS-服务" class="headerlink" title="安装 NFS 服务"></a>安装 NFS 服务</h3><blockquote><p>打开nfs服务器电源,配置 NFS 服务,提供给控制节点存储glance镜像</p></blockquote><h4 id="NFS服务端配置-centos7"><a href="#NFS服务端配置-centos7" class="headerlink" title="NFS服务端配置(centos7)"></a>NFS服务端配置(centos7)</h4><blockquote><p>配置免密码登录,初始化环境</p></blockquote><pre><code>source ~/SSH_KEYSSH_KEY nfsssh nfs &quot;curl http://home.onlycloud.xin/code/openstack-01_init.sh | sh&quot;scp /etc/hosts nfs:/etc/</code></pre><blockquote><p>安装配置 NFS Server</p></blockquote><pre><code># 镜像存储路径ImgDir=&apos;/data/glance&apos;ssh -T nfs &lt;&lt;EOFyum install nfs-utils rpcbind -ymkdir -p $ImgDirecho &quot;$ImgDir 192.168.0.0/24(rw,no_root_squash,sync)&quot;&gt;&gt;/etc/exportsexportfs -rsystemctl enable rpcbind nfs-serversystemctl restart rpcbind nfs-servershowmount -e localhostEOF</code></pre><h4 id="NFS客户端-所有控制节点"><a href="#NFS客户端-所有控制节点" class="headerlink" title="NFS客户端(所有控制节点)"></a>NFS客户端(所有控制节点)</h4><pre><code>for HOST in controller{1..3}; do    ssh -T $HOST  &lt;&lt;EOF    # 启用 rpcbind    systemctl enable rpcbind    systemctl start rpcbind    # 创建挂载目录    mkdir -p $ImgDir    # 设置镜像路径权限    # chown glance:nobody $ImgDir    # 手动挂载    mount -t nfs nfs:$ImgDir $ImgDir    # 写入开机执行shell    echo -e &apos;\n# mount nfs glance&apos; &gt;&gt;/etc/rc.local    echo &quot;/usr/bin/mount -t nfs nfs:$ImgDir $ImgDir&quot;&gt;&gt;/etc/rc.local    chmod +x /etc/rc.d/rc.local    # 验证挂载    df -hEOFdone</code></pre><h3 id="安装配置Glance"><a href="#安装配置Glance" class="headerlink" title="安装配置Glance"></a>安装配置Glance</h3><h4 id="安装-Glance"><a href="#安装-Glance" class="headerlink" title="安装 Glance"></a>安装 Glance</h4><pre><code>for HOST in controller{1..3}; do    echo &quot;------------- $HOST Glance ------------&quot;    ssh -T $HOST  &lt;&lt;EOF    # 安装 Glance    yum install -y openstack-glance python-glance    # 备份默认配置    [ -f /etc/glance/glance-api.conf.bak ] || cp /etc/glance/glance-api.conf{,.bak}    [ -f /etc/glance/glance-registry.conf.bak ] || cp /etc/glance/glance-registry.conf{,.bak}    # 配置镜像路径权限    chown glance:nobody $ImgDirEOFdone</code></pre><h4 id="Glance-配置"><a href="#Glance-配置" class="headerlink" title="Glance 配置"></a>Glance 配置</h4><h5 id="创建-glance-api-配置文件"><a href="#创建-glance-api-配置文件" class="headerlink" title="创建 glance-api 配置文件"></a>创建 glance-api 配置文件</h5><pre><code>cat &lt;&lt;EOF &gt;/etc/glance/glance-api.conf[DEFAULT]debug = Falseverbose = Truebind_host = controller1bind_port = 9292auth_region = RegionOneregistry_client_protocol = http[database]connection = mysql+pymysql://glance:glance@controller/glance[keystone_authtoken]auth_uri = http://controller:5000/v3auth_url = http://controller:35357/v3memcached_servers = controller1:11211,controller2:11211,controller3:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = glancepassword = glance[paste_deploy]flavor = keystone[glance_store]stores = file,httpdefault_store = filefilesystem_store_datadir = $ImgDir[oslo_messaging_rabbit]rabbit_userid = openstackrabbit_password = openstackrabbit_durable_queues=truerabbit_ha_queues = Truerabbit_max_retries= 0rabbit_port = 5672rabbit_hosts = controller1:5672,controller2:5672,controller3:5672EOF</code></pre><h5 id="创建-glance-registry-配置文件"><a href="#创建-glance-registry-配置文件" class="headerlink" title="创建 glance-registry 配置文件"></a>创建 glance-registry 配置文件</h5><pre><code>cat &lt;&lt;EOF &gt;/etc/glance/glance-registry.conf[DEFAULT]debug = Falseverbose = Truebind_host = controller1bind_port = 9191workers = 2[database]connection = mysql+pymysql://glance:glance@controller/glance[keystone_authtoken]auth_uri = http://controller:5000/v3auth_url = http://controller:35357/v3memcached_servers = controller1:11211,controller2:11211,controller3:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = glancepassword = glance[paste_deploy]flavor = keystone[oslo_messaging_rabbit]rabbit_userid = openstackrabbit_password = openstackrabbit_durable_queues= truerabbit_ha_queues = Truerabbit_max_retries= 0rabbit_port = 5672  rabbit_hosts = controller1:5672,controller2:5672,controller3:5672EOF</code></pre><h5 id="同步-glance-配置到-controller2-3"><a href="#同步-glance-配置到-controller2-3" class="headerlink" title="同步 glance 配置到 controller2,3"></a>同步 glance 配置到 controller2,3</h5><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/glance/* controller2:/etc/glance/rsync -avzP -e &apos;ssh -p 22&apos; /etc/glance/* controller3:/etc/glance/</code></pre><h5 id="更改controller2-3-监听主机-bind-host"><a href="#更改controller2-3-监听主机-bind-host" class="headerlink" title="更改controller2,3 监听主机 bind_host"></a>更改controller2,3 监听主机 bind_host</h5><pre><code>ssh controller2 &quot;sed -i &apos;s/bind_host =.*/bind_host = controller2/&apos; /etc/glance/glance-api.confssh controller3 &quot;sed -i &apos;s/bind_host =.*/bind_host = controller3/&apos; /etc/glance/glance-api.confssh controller2 &quot;sed -i &apos;s/bind_host =.*/bind_host = controller2/&apos; /etc/glance/glance-registry.conf&quot; ssh controller3 &quot;sed -i &apos;s/bind_host =.*/bind_host = controller3/&apos; /etc/glance/glance-registry.conf&quot;</code></pre><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><blockquote><p>初始化 glance数据库,检查数据库</p></blockquote><pre><code>su -s /bin/sh -c &quot;glance-manage db_sync&quot; glancemysql -h controller -u glance -pglance -e &quot;use glance;show tables;&quot;</code></pre><h3 id="Haproxy代理"><a href="#Haproxy代理" class="headerlink" title="Haproxy代理"></a>Haproxy代理</h3><h4 id="配置-glance-api-cluster-代理"><a href="#配置-glance-api-cluster-代理" class="headerlink" title="配置 glance_api_cluster 代理"></a>配置 glance_api_cluster 代理</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/haproxy/haproxy.cfg##########Glance_api_cluster##########listen glance_api_cluster  bind controller:9292  #balance  source  option  tcpka  option  httpchk  option  tcplog  server controller1 controller1:9292 check inter 2000 rise 2 fall 5  server controller2 controller2:9292 check inter 2000 rise 2 fall 5  server controller3 controller3:9292 check inter 2000 rise 2 fall 5EOF</code></pre><h4 id="同步-haproxy-配置到其他节点"><a href="#同步-haproxy-配置到其他节点" class="headerlink" title="同步 haproxy 配置到其他节点"></a>同步 haproxy 配置到其他节点</h4><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/haproxy.cfg controller2:/etc/haproxy/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/haproxy.cfg controller3:/etc/haproxy/</code></pre><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><blockquote><p>启动服务,跟随系统启动</p></blockquote><pre><code>for HOST in controller{1..3}; do    echo &quot;------------- $HOST ------------&quot;    ssh -T $HOST  &lt;&lt;EOF    # 配置服务跟随系统启动    systemctl enable openstack-glance-api openstack-glance-registry    # 重启服务    systemctl restart openstack-glance-api openstack-glance-registry haproxyEOFdone</code></pre><h3 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h3><h4 id="下载镜像源"><a href="#下载镜像源" class="headerlink" title="下载镜像源"></a>下载镜像源</h4><pre><code>wget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.imgwget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img</code></pre><h4 id="上传镜像-1"><a href="#上传镜像-1" class="headerlink" title="上传镜像"></a>上传镜像</h4><blockquote><p>使用qcow2磁盘格式，bare容器格式,上传镜像到镜像服务并设置公共可见</p></blockquote><pre><code>source ~/admin-openstack.shopenstack image create &quot;cirros-0.3.5&quot; --file cirros-0.3.5-x86_64-disk.img --disk-format qcow2 --container-format bare --publicopenstack image create &quot;cirros-0.4.0&quot; --file cirros-0.4.0-x86_64-disk.img --disk-format qcow2 --container-format bare --public</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><h4 id="发送凭证到其他控制节点"><a href="#发送凭证到其他控制节点" class="headerlink" title="发送凭证到其他控制节点"></a>发送凭证到其他控制节点</h4><pre><code>scp ~/admin-openstack.sh controller2:~/admin-openstack.shscp ~/admin-openstack.sh controller3:~/admin-openstack.sh</code></pre><h4 id="查看镜像列表-三台节点相同"><a href="#查看镜像列表-三台节点相同" class="headerlink" title="查看镜像列表(三台节点相同)"></a>查看镜像列表(三台节点相同)</h4><pre><code>openstack image listssh controller2 &quot;source ~/admin-openstack.sh;openstack image list&quot;ssh controller3 &quot;source ~/admin-openstack.sh;openstack image list&quot;ls $ImgDir             # 查看本地镜像路径ssh nfs &quot;ls /data/glance&quot;   # 查看 nfs 服务器镜像路径</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-06_glance-cluster.sh -O openstack-glance-cluster.shsh openstack-glance-cluster.sh</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> glance </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shell题</title>
      <link href="/posts/6583.html"/>
      <url>/posts/6583.html</url>
      <content type="html"><![CDATA[<h2 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h2><blockquote><p>随机产生 a-z 10 位小写字符串</p></blockquote><pre><code>head /dev/urandom | tr -dc a-z | head -c 10head /dev/urandom | tr -dc a-z | tr -d s-w | head -c 10    # 排除s-w字符串</code></pre><hr><blockquote><p>随机产生 0-9 10 位数字</p></blockquote><pre><code>head /dev/urandom | tr -dc 0-9 | head -c 10head /dev/urandom | tr -dc 0-9 | tr -d 4,5 | head -c 10   # 排除4和5</code></pre><hr><blockquote><p>随机产生数字,字母大小写 20位字符串</p></blockquote><pre><code>head /dev/urandom | tr -cd a-zA-Z0-9 | head -c 20</code></pre><hr><blockquote><p>创建10个指定文件名例如 [hnzlorcbhm_data.html]要求前十位为随机小写加指定后缀[_data.html]</p></blockquote><pre><code>for i in {1..10};do     touch $(head /dev/urandom | tr -dc a-z | tr -d s-w | head -c 10)_data.htmldone</code></pre><hr><h2 id="统计文件中单词-字母"><a href="#统计文件中单词-字母" class="headerlink" title="统计文件中单词,字母"></a>统计文件中单词,字母</h2><blockquote><p>统计字符串中出现的单词,字母</p></blockquote><pre><code>str=&quot;the squid project provides a number of resources toassist users design,implement and support squid installations. \Please browsethe documentation and support sections for more infomation&quot;</code></pre><hr><blockquote><p>按单词出现的频率降序排序</p></blockquote><pre><code>echo $str|sed &apos;s#[^a-zA-Z]#\n#g&apos;|grep -v &quot;^$&quot;|sort|uniq -c|sort -rn -k1echo $str|tr &apos; &apos; &apos;\n&apos;|sort|uniq -c|sort -rn -k1</code></pre><hr><blockquote><p>按字母出现的频率降序排序</p></blockquote><pre><code>echo $str|grep -o &quot;.&quot;|egrep -v &quot;[^a-zA-Z]&quot;|sort|uniq -c|sort -rn -k1echo $str|sed -r &apos;s#(.)#\1\n#g&apos;|egrep -v &quot;[^a-zA-Z]|^$&quot;|sort|uniq -c|sort -rn -k1</code></pre><hr><h2 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h2><blockquote><p>打印指定年份</p></blockquote><pre><code>date &apos;+%Y%m%d&apos; -d &apos;+10 year&apos;       # 10年后日期date &apos;+%Y%m%d&apos; -d &apos;-10 year&apos;       # 10年前日期</code></pre><hr><blockquote><p>打印指定月之后的日期</p></blockquote><pre><code>date &apos;+%Y%m%d&apos; -d &apos;+1 month&apos;        # 1个月后日期date &apos;+%Y%m%d&apos; -d &apos;-1 month&apos;        # 1个月前日期</code></pre><hr><blockquote><p>打印指定天的日期</p></blockquote><pre><code>date &apos;+%Y%m%d&apos; -d &apos;+10 day&apos;        # 10 天后日期date &apos;+%Y%m%d&apos; -d &apos;-10 day&apos;        # 10 天前日期</code></pre><hr><blockquote><p>打印指定小时时间</p></blockquote><pre><code>date &apos;+%H%M%S&apos; -d &apos;+2 hour&apos;        # 2小时后时间date &apos;+%H%M%S&apos; -d &apos;-2 hour&apos;        # 2小时前时间</code></pre><hr><blockquote><p>打印指定分时间</p></blockquote><pre><code>date &apos;+%H%M%S&apos; -d &apos;+5 minute&apos;      # 5分钟后的时间date &apos;+%H%M%S&apos; -d &apos;-5 minute&apos;      # 5分钟前的时间</code></pre><hr><h3 id="打印指定日期"><a href="#打印指定日期" class="headerlink" title="打印指定日期"></a>打印指定日期</h3><blockquote><p>打印出 15 天前到当前 的日期(从0开始包含当前日期)</p></blockquote><pre><code>for i in {0..15}; do    date -d &quot;+$i day $(date +%Y%m%d)&quot; +%Y%m%ddone</code></pre><hr><blockquote><p>打印出当前时间到 15 天后的时间</p></blockquote><pre><code>for i in {0..15}; do    date -d &quot;+$i day $(date +%Y%m%d)&quot; +%Y%m%ddone</code></pre><hr><blockquote><p>打印 20180101 之后的 15 天</p></blockquote><pre><code>for i in {0..15}; do    date -d &quot;+$i day 20180101&quot; +%Y%m%ddone</code></pre><hr><blockquote><p>打印 20180101 之前的 15 天</p></blockquote><pre><code>for i in {0..15}; do    date -d &quot;-$i day 20180101&quot; +%Y%m%ddone</code></pre><hr><blockquote><p>计算某年有多少天(已知每年最后一天为 12/31 %j 获取当前时间是一年中的第几天)</p></blockquote><pre><code>date -d &quot;20001231&quot; +%j</code></pre><blockquote><p>将指定日期时间转换为 unix 时间戳</p></blockquote><pre><code>date -d &apos;20180727 23:51:00&apos; +%s</code></pre><hr><blockquote><p>将指定 unix 时间戳转换为日期时间格式</p></blockquote><pre><code>date -d &apos;@1532706660&apos; +&apos;%Y-%m-%d %H:%M:%S&apos;date -d &apos;@1532706660&apos; +%Y                    # 获取时间戳年份date -d &apos;@1532706660&apos; +%m                    # 获取时间戳月份date -d &apos;@1532706660&apos; +%w                    # 获取时间戳当天礼拜几date -d &apos;@1532706660&apos; +%j                    # 获取时间戳是当年的第几天</code></pre><hr><h4 id="写一个脚本计算某个日期到当前有多少天"><a href="#写一个脚本计算某个日期到当前有多少天" class="headerlink" title="写一个脚本计算某个日期到当前有多少天"></a>写一个脚本计算某个日期到当前有多少天</h4><pre><code>cat &lt;&lt;&apos;EOF&apos;  &gt;./sum_day.sh#!/bin/bashs_Y=$(date -d &quot;$1&quot; +%Y)                     # 获取输入的年份e_Y=$(date +%Y)                             # 获取当前年份s_j=$(date -d &quot;$1&quot; +%j | sed &apos;s/^0//&apos;)      # 取出输入的日期是当年的第几天(若不满100去除首部的0)e_j=$(date +%j | sed &apos;s/^0//&apos;)              # 获取当前日期是今年的第几天a=$s_Y# for 循环方式for ((a=$s_Y; a&lt;=$e_Y; a++ ));do    let sum=$sum+$(date -d ${a}1231 +%j)    # 累加输入的年份到当前年份天数(已知每年最后一天为 1231 +%j 获取每年的天数)    echo $a -----  $(date -d ${a}1231 +%j)   ------ $sumdone# while 循环方式#while ((a&lt;=$e_Y)); do#    let sum=$sum+$(date -d ${a}1231 +%j)#    echo $a -----  $(date -d ${a}1231 +%j)   ------ $sum#    let a++ ;#donelet e_d=$(date -d ${s_Y}1231 +%j)-$e_j      # 获取今年剩余天数echo  &quot;从 ${s_Y}0101 到 ${e_Y}1231 一共有 $sum 天&quot;echo  &quot;输入的日期在当年是第: $s_j 天&quot;echo  &quot;今年剩余: $e_d  天&quot;let sum=$sum-$s_j-$e_d                      # 用累加天数减 输入日期当年的天数 减去 今年剩余天数echo &quot;从 $1 到今天 $(date +%Y%m%d) 一共有 $sum 天&quot;EOF# 使用方法sh ./sum_day.sh 19910119# 测试结果date -d &quot;-10052 day $(date +%Y%m%d)&quot; +%Y%m%d        # 请替换10052 为上面计算出来的值</code></pre>]]></content>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-05_Keystone验证服务群集</title>
      <link href="/posts/openstack-05.html"/>
      <url>/posts/openstack-05.html</url>
      <content type="html"><![CDATA[<h3 id="集群安装"><a href="#集群安装" class="headerlink" title="集群安装"></a>集群安装</h3><h4 id="创建-keystone-数据库-授权"><a href="#创建-keystone-数据库-授权" class="headerlink" title="创建 keystone 数据库, 授权"></a>创建 keystone 数据库, 授权</h4><pre><code>source ~/PASS                            # 读取数据库密码mysql -u root -p$DBPass -e &quot;create database keystone;grant all privileges on keystone.* to &apos;keystone&apos;@&apos;localhost&apos; identified by &apos;keystone&apos;;grant all privileges on keystone.* to &apos;keystone&apos;@&apos;%&apos; identified by &apos;keystone&apos;;&quot;</code></pre><h4 id="安装-httpd-keystone-memcached"><a href="#安装-httpd-keystone-memcached" class="headerlink" title="安装 httpd, keystone, memcached"></a>安装 httpd, keystone, memcached</h4><pre><code>for HOST in controller{1..3}; do    echo &quot;--------------- $HOST ---------------&quot;    ssh -T $HOST &lt;&lt;EOF    # 安装软件    yum install -y openstack-keystone httpd mod_wsgi memcached python-memcached    # 配置Memcached    cp /etc/sysconfig/memcached{,.bak}                       # 备份默认配置    sed -i &apos;s/127.0.0.1/0.0.0.0/&apos; /etc/sysconfig/memcached   # 修改监听地址    systemctl enable memcached                               # 跟随系统启动    systemctl start memcached                                # 启动服务EOFdone</code></pre><h3 id="配置Keystone"><a href="#配置Keystone" class="headerlink" title="配置Keystone"></a>配置Keystone</h3><h4 id="备份配置-生成密码"><a href="#备份配置-生成密码" class="headerlink" title="备份配置,生成密码"></a>备份配置,生成密码</h4><pre><code>cp /etc/keystone/keystone.conf{,.bak}                        # 备份默认配置Keys=$(openssl rand -hex 10)                                 # 生成随机密码echo $Keysecho &quot;kestone  $Keys&quot;&gt;~/keystone.key</code></pre><h4 id="创建-keystone-配置文件"><a href="#创建-keystone-配置文件" class="headerlink" title="创建 keystone 配置文件"></a>创建 keystone 配置文件</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/keystone/keystone.conf[DEFAULT]admin_token = $Keysverbose = true[database]connection = mysql+pymysql://keystone:keystone@controller/keystone[memcache]servers = controller1:11211,controller2:11211,controller3:11211[token]provider = fernetdriver = memcache# expiration = 86400# caching = true# cache_time = 86400[cache]enabled = truebackend = oslo_cache.memcache_poolmemcache_servers = controller1:11211,controller2:11211,controller3:11211EOF</code></pre><h4 id="初始化Fernet-keys"><a href="#初始化Fernet-keys" class="headerlink" title="初始化Fernet keys"></a>初始化Fernet keys</h4><pre><code>keystone-manage fernet_setup --keystone-user keystone --keystone-group keystonekeystone-manage credential_setup --keystone-user keystone --keystone-group keystone</code></pre><h4 id="同步配置到其它节点-用scp会改变文件权限"><a href="#同步配置到其它节点-用scp会改变文件权限" class="headerlink" title="同步配置到其它节点(用scp会改变文件权限)"></a>同步配置到其它节点(用scp会改变文件权限)</h4><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/keystone/* controller2:/etc/keystone/rsync -avzP -e &apos;ssh -p 22&apos; /etc/keystone/* controller3:/etc/keystone/</code></pre><h3 id="初始化Keystone"><a href="#初始化Keystone" class="headerlink" title="初始化Keystone"></a>初始化Keystone</h3><pre><code>su -s /bin/sh -c &quot;keystone-manage db_sync&quot; keystone        # 初始化keystone数据库mysql -h controller -ukeystone -pkeystone -e &quot;use keystone;show tables;&quot;    # 验证</code></pre><h3 id="群集设置"><a href="#群集设置" class="headerlink" title="群集设置"></a>群集设置</h3><blockquote><p>修改默认端口5000,35357(默认端口给群集vip使用)</p></blockquote><pre><code>for HOST in controller{1..3}; do    ssh -T $HOST &lt;&lt;EOF        # 链接 keystone 配置文件    ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/    # 修改默认端口5000,35357    [ -f /usr/share/keystone/wsgi-keystone.conf.bak ] || cp /usr/share/keystone/wsgi-keystone.conf{,.bak}    sed -i &apos;s/5000/4999/&apos; /usr/share/keystone/wsgi-keystone.conf    sed -i &apos;s/35357/35356/&apos; /usr/share/keystone/wsgi-keystone.conf    #Apache HTTP 重启并设置开机自启动    systemctl enable httpd    systemctl restart httpdEOFdone</code></pre><h3 id="配置Haproxy"><a href="#配置Haproxy" class="headerlink" title="配置Haproxy"></a>配置Haproxy</h3><h4 id="添加-Keystone-代理"><a href="#添加-Keystone-代理" class="headerlink" title="添加 Keystone 代理"></a>添加 Keystone 代理</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/haproxy/haproxy.cfg############ Keystone ############listen keystone_admin_cluster  bind controller:35357  #balance source  option tcpka  option httpchk   option tcplog  server controller1 controller1:35356 check inter 2000 rise 2 fall 5  server controller2 controller2:35356 check inter 2000 rise 2 fall 5  server controller3 controller3:35356 check inter 2000 rise 2 fall 5listen keystone_public_cluster  bind controller:5000  #balance source  option tcpka  option httpchk   option tcplog  server controller1 controller1:4999 check inter 2000 rise 2 fall 5  server controller2 controller2:4999 check inter 2000 rise 2 fall 5  server controller3 controller3:4999 check inter 2000 rise 2 fall 5EOF</code></pre><h4 id="同步-haproxy-配置文件"><a href="#同步-haproxy-配置文件" class="headerlink" title="同步 haproxy 配置文件"></a>同步 haproxy 配置文件</h4><pre><code>scp /etc/haproxy/haproxy.cfg controller2:/etc/haproxy/haproxy.cfgscp /etc/haproxy/haproxy.cfg controller3:/etc/haproxy/haproxy.cfg</code></pre><h4 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h4><pre><code>systemctl restart haproxyssh controller2 &quot;systemctl restart haproxy&quot;ssh controller3 &quot;systemctl restart haproxy&quot;</code></pre><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><pre><code>curl http://controller1:35356/v3curl http://controller2:35356/v3curl http://controller3:35356/v3curl http://controller:35357/v3</code></pre><h3 id="初始化keystone"><a href="#初始化keystone" class="headerlink" title="初始化keystone"></a>初始化keystone</h3><h4 id="创建服务实体和API端点-服务实体和API端点"><a href="#创建服务实体和API端点-服务实体和API端点" class="headerlink" title="创建服务实体和API端点, 服务实体和API端点"></a>创建服务实体和API端点, 服务实体和API端点</h4><pre><code>keystone-manage bootstrap --bootstrap-password admin \  --bootstrap-admin-url http://controller:35357/v3/ \  --bootstrap-internal-url http://controller:5000/v3/ \  --bootstrap-public-url http://controller:5000/v3/ \  --bootstrap-region-id RegionOne</code></pre><h4 id="创建-OpenStack-客户端环境脚本"><a href="#创建-OpenStack-客户端环境脚本" class="headerlink" title="创建 OpenStack 客户端环境脚本"></a>创建 OpenStack 客户端环境脚本</h4><pre><code>cat &lt;&lt;EOF  &gt;~/admin-openstack.shexport OS_PROJECT_DOMAIN_NAME=defaultexport OS_USER_DOMAIN_NAME=default export OS_PROJECT_NAME=admin export OS_USERNAME=adminexport OS_PASSWORD=adminexport OS_AUTH_URL=http://controller:35357/v3export OS_IDENTITY_API_VERSION=3export OS_IMAGE_API_VERSION=2EOF</code></pre><blockquote><p>测试脚本是否生效</p></blockquote><pre><code>source ~/admin-openstack.shopenstack token issue</code></pre><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><blockquote><p>添加环境中每个服务包含独有用户的service 项目。：</p></blockquote><h4 id="创建-service-项目"><a href="#创建-service-项目" class="headerlink" title="创建 service 项目"></a>创建 service 项目</h4><pre><code>openstack project create --domain default --description &quot;Service Project&quot; service</code></pre><h4 id="创建-demo-项目-角色-授权"><a href="#创建-demo-项目-角色-授权" class="headerlink" title="创建 demo 项目,角色 授权"></a>创建 demo 项目,角色 授权</h4><pre><code>openstack project create --domain default --description &quot;Demo Project&quot; demoopenstack user create --domain default --password=demo demoopenstack role create useropenstack role add --project demo --user demo user</code></pre><h4 id="创建demo环境脚本"><a href="#创建demo环境脚本" class="headerlink" title="创建demo环境脚本"></a>创建demo环境脚本</h4><pre><code>cat &lt;&lt;EOF &gt;~/demo-openstack.shexport OS_PROJECT_DOMAIN_NAME=defaultexport OS_USER_DOMAIN_NAME=defaultexport OS_PROJECT_NAME=demoexport OS_USERNAME=demoexport OS_PASSWORD=demoexport OS_AUTH_URL=http://controller:5000/v3export OS_IDENTITY_API_VERSION=3export OS_IMAGE_API_VERSION=2EOF</code></pre><blockquote><p>测试脚本是否生效</p></blockquote><pre><code>source ~/demo-openstack.shopenstack token issue</code></pre><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><blockquote><p>浏览器打开 <a href="http://192.168.0.11:1080/admin" target="_blank" rel="noopener">http://192.168.0.11:1080/admin</a> 查看 &gt;keystone_admin_cluster,keystone_public_cluster 状态</p></blockquote><blockquote><p>获取节点信息<br>curl <a href="http://controller1:35356/v3" target="_blank" rel="noopener">http://controller1:35356/v3</a><br>curl <a href="http://controller2:35356/v3" target="_blank" rel="noopener">http://controller2:35356/v3</a><br>curl <a href="http://controller3:35356/v3" target="_blank" rel="noopener">http://controller3:35356/v3</a><br>curl <a href="http://controller:35357/v3" target="_blank" rel="noopener">http://controller:35357/v3</a></p></blockquote><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-05_keystone-cluster.sh -O openstack-keystone-cluster.shsh openstack-keystone-cluster.sh</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> keystone </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-04_RabbitMQ-cluster集群</title>
      <link href="/posts/openstack-04.html"/>
      <url>/posts/openstack-04.html</url>
      <content type="html"><![CDATA[<h3 id="安装配置RabbitMQ"><a href="#安装配置RabbitMQ" class="headerlink" title="安装配置RabbitMQ"></a>安装配置RabbitMQ</h3><h4 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h4><pre><code>for HOST in controller{1..3}; do    echo &quot;--------------- $HOST ---------------&quot;    ssh -T $HOST &lt;&lt;&apos;EOF&apos;    # 安装 rabbitmq    yum -y install rabbitmq-server erlang socat    # 跟随系统启动    systemctl enable rabbitmq-server    # 启用web插件(端口15672)    rabbitmq-plugins enable rabbitmq_managementEOFdone</code></pre><h4 id="controller1启动服务"><a href="#controller1启动服务" class="headerlink" title="controller1启动服务"></a>controller1启动服务</h4><pre><code>systemctl start rabbitmq-server</code></pre><h4 id="同步认证-Cookie-文件到其他节点"><a href="#同步认证-Cookie-文件到其他节点" class="headerlink" title="同步认证 Cookie 文件到其他节点"></a>同步认证 Cookie 文件到其他节点</h4><pre><code>scp /var/lib/rabbitmq/.erlang.cookie controller2:/var/lib/rabbitmq/scp /var/lib/rabbitmq/.erlang.cookie controller3:/var/lib/rabbitmq/</code></pre><h4 id="controller2-3启动服务"><a href="#controller2-3启动服务" class="headerlink" title="controller2,3启动服务"></a>controller2,3启动服务</h4><pre><code>ssh controller2 &quot;systemctl restart rabbitmq-server&quot;ssh controller3 &quot;systemctl restart rabbitmq-server&quot;</code></pre><h3 id="配置集群"><a href="#配置集群" class="headerlink" title="配置集群"></a>配置集群</h3><h4 id="使用Disk模式"><a href="#使用Disk模式" class="headerlink" title="使用Disk模式"></a>使用Disk模式</h4><pre><code>systemctl stop rabbitmq-serverpkill beam.smprabbitmqctl stoprabbitmq-server -detached rabbitmqctl cluster_status     #查看状态</code></pre><h4 id="加入节点controller1"><a href="#加入节点controller1" class="headerlink" title="加入节点controller1"></a>加入节点controller1</h4><pre><code>for HOST in  controller{1..3}; do    ssh -T $HOST &lt;&lt;EOF    systemctl stop rabbitmq-server    pkill beam.smp    rabbitmq-server -detached     rabbitmqctl stop_app    rabbitmqctl join_cluster rabbit@controller1    rabbitmqctl start_app    rabbitmqctl cluster_status    sleep 2EOFdonerabbitmqctl set_policy ha-all &quot;^&quot; &apos;{&quot;ha-mode&quot;:&quot;all&quot;}&apos;  # 设置镜像队列rabbitmqctl set_cluster_name RabbitMQ-Cluster          # 更改群集名称rabbitmqctl cluster_status                             # 查看群集状态</code></pre><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><pre><code># 查看群集状态(验证有3台节点)rabbitmqctl cluster_status#[root@controller1 ~]# rabbitmqctl cluster_status               #Cluster status of node rabbit@controller1 ...#[{nodes,[{disc,    [rabbit@controller1,rabbit@controller2,rabbit@controller3]}]},# {running_nodes,[rabbit@controller3,rabbit@controller2,rabbit@controller1]},# {cluster_name,&lt;&lt;&quot;RabbitMQ-Cluster&quot;&gt;&gt;},# {partitions,[]},# {alarms,[{rabbit@controller3,[]},#          {rabbit@controller2,[]},#          {rabbit@controller1,[]}]}]</code></pre><h4 id="创建RabbitMQ用户及密码"><a href="#创建RabbitMQ用户及密码" class="headerlink" title="创建RabbitMQ用户及密码"></a>创建RabbitMQ用户及密码</h4><pre><code>rabbitmqctl add_user admin adminrabbitmqctl set_user_tags admin administratorrabbitmqctl add_user openstack openstackrabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;rabbitmqctl set_user_tags openstack administrator</code></pre><h3 id="Haproxy-配置"><a href="#Haproxy-配置" class="headerlink" title="Haproxy 配置"></a>Haproxy 配置</h3><h4 id="添加-RabbitMQ-代理"><a href="#添加-RabbitMQ-代理" class="headerlink" title="添加 RabbitMQ 代理"></a>添加 RabbitMQ 代理</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/haproxy/haproxy.cfg########## RabbitMQ ##########listen RabbitMQ-Server  bind controller:5673  mode tcp  balance roundrobin  option tcpka  timeout client 3h  timeout server 3h  option clitcpka  server controller1 controller1:5672 check inter 5s rise 2 fall 3  server controller2 controller2:5672 check inter 5s rise 2 fall 3  server controller3 controller3:5672 check inter 5s rise 2 fall 3listen RabbitMQ-Web  bind controller:15673  mode tcp  balance roundrobin  option tcpka  server controller1 controller1:15672 check inter 5s rise 2 fall 3  server controller2 controller2:15672 check inter 5s rise 2 fall 3  server controller3 controller3:15672 check inter 5s rise 2 fall 3EOF</code></pre><h4 id="同步-haproxy-配置文件"><a href="#同步-haproxy-配置文件" class="headerlink" title="同步 haproxy 配置文件"></a>同步 haproxy 配置文件</h4><pre><code>scp /etc/haproxy/haproxy.cfg controller2:/etc/haproxy/haproxy.cfgscp /etc/haproxy/haproxy.cfg controller3:/etc/haproxy/haproxy.cfg</code></pre><h4 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h4><pre><code>systemctl restart haproxyssh controller2 &quot;systemctl restart haproxy&quot;ssh controller3 &quot;systemctl restart haproxy&quot;</code></pre><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><blockquote><p>浏览器打开 <a href="http://192.168.0.11:1080/admin" target="_blank" rel="noopener">http://192.168.0.11:1080/admin</a> 查看RabbitMQ-Server,RabbitMQ-Web 状态</p></blockquote><blockquote><p>浏览器打开 <a href="http://10.0.0.10:15673" target="_blank" rel="noopener">http://10.0.0.10:15673</a> 登录WebUI管理页面,查看服务状态 用户名:密码 / admin:admin</p></blockquote><blockquote><p>命令行执行查看集群节点：<br>rabbitmqctl cluster_status</p></blockquote><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-04_rabbitmq-cluster.sh -O openstack-rabbitmq.shsh openstack-rabbitmq.sh</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-03_MariaDB-Galera-Cluster集群</title>
      <link href="/posts/openstack-03.html"/>
      <url>/posts/openstack-03.html</url>
      <content type="html"><![CDATA[<h3 id="安装-OpenStack-客户端-工具"><a href="#安装-OpenStack-客户端-工具" class="headerlink" title="安装 OpenStack 客户端,工具"></a>安装 OpenStack 客户端,工具</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;--------------- $HOST ---------------&quot;    ssh -T $HOST &lt;&lt;&apos;EOF&apos;    # 安装 OpenStack 客户端,工具    yum -y install python-openstackclient openstack-selinux openstack-utilsEOFdone</code></pre><h3 id="安装配置-MariaDB-Galera"><a href="#安装配置-MariaDB-Galera" class="headerlink" title="安装配置 MariaDB Galera"></a>安装配置 MariaDB Galera</h3><blockquote><p>controller1,2,3 安装软件,创建配置文件,启动服务，初始化数据库,授权</p></blockquote><pre><code># 设置 Mariadb root 密码(密码为 redhat 写入家目录供后面读取)echo &quot;DBPass=&apos;redhat&apos;&quot; &gt;&gt;~/PASSsource ~/PASS# 安装配置数据库conf=&apos;/etc/my.cnf.d/openstack.cnf&apos;for HOST in controller{1..3}; do    echo &quot;--------------- $HOST ---------------&quot;    ssh -T $HOST &lt;&lt;EOF    # 安装Mariadb Galera 集群, 自动交互工具expect    yum -y install mariadb mariadb-server mariadb-galera-server expect    # 创建 openstack 数据库配置文件    echo &quot;[mysqld]&quot; &gt;$conf    echo &quot;bind-address = $HOST&quot; &gt;&gt;$conf    echo &quot;default-storage-engine = innodb&quot; &gt;&gt;$conf    echo &quot;innodb_file_per_table&quot; &gt;&gt;$conf    echo &quot;max_connections = 4096&quot; &gt;&gt;$conf    echo &quot;collation-server = utf8_general_ci&quot; &gt;&gt;$conf    echo &quot;character-set-server = utf8&quot; &gt;&gt;$conf    # 启动数据库服务,禁止跟随系统启动    systemctl start mariadb    systemctl disable mariadb    # 初始化数据库    /usr/bin/expect &lt;&lt; EOF    set timeout 30    spawn mysql_secure_installation    expect {        &quot;enter for none&quot; { send &quot;\r&quot;; exp_continue}        &quot;Y/n&quot; { send &quot;Y\r&quot; ; exp_continue}        &quot;password:&quot; { send &quot;$DBPass\r&quot;; exp_continue}        &quot;new password:&quot; { send &quot;$DBPass\r&quot;; exp_continue}        &quot;Y/n&quot; { send &quot;Y\r&quot; ; exp_continue}        eof { exit }    }    # 验证    mysql -u root -p$DBPass -e &quot;show databases;&quot;    if [ $? = 0 ]; then        echo -e &quot;\033[32m \n HOST: $HOST  MariaDB  初始化成功 \033[0m&quot;    else        echo -e &quot;\033[31m \n HOST: $HOST  MariaDB  初始化失败 \033[0m&quot;        exit    fi    # 配置数据库root 远程访问权限(Galera 集群管理用)    mysql -u root -p$DBPass -e &quot;    grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;$DBPass&apos; with grant option;     flush privileges;    select user,host,password from mysql.user;&quot;EOFdone</code></pre><h4 id="Galera配置文件"><a href="#Galera配置文件" class="headerlink" title="Galera配置文件"></a>Galera配置文件</h4><pre><code>conf=&apos;/etc/my.cnf.d/galera.cnf&apos;for HOST in controller{1..3}; do    ssh -T $HOST &lt;&lt;EOF    # 备份默认配置文件    [ -f $conf.bak ] || cp $conf{,.bak}    # 过滤配置文件中的无效行    egrep -v &quot;#|^$&quot; $conf.bak &gt;$conf    sed -i &apos;s/wsrep_on=1/wsrep_on=ON/&apos; $conf    # 配置数据库凭证    sed -i &apos;s/wsrep_sst_auth=.*/wsrep_sst_auth=root:&apos;$DBPass&apos;/&apos; $conf    echo &apos;wsrep_cluster_address=&quot;gcomm://controller1,controller2,controller3&quot;&apos; &gt;&gt;$conf    echo &quot;wsrep_node_name= $HOST&quot; &gt;&gt;$conf    echo &quot;wsrep_node_address= $HOST&quot; &gt;&gt;$confEOFdone</code></pre><h4 id="集群配置"><a href="#集群配置" class="headerlink" title="集群配置"></a>集群配置</h4><blockquote><p>初始化集群</p></blockquote><pre><code># 关闭 controller1 MariaDB 服务systemctl stop mariadb# 在 controller1 初始化集群galera_new_clustersleep 2# 重启 controller2 controller3 MariaDB 服务for HOST in controller2 controller3; dossh -T root@$HOST &lt;&lt;EOF    systemctl daemon-reload    systemctl restart mariadbEOFdonesleep 3# 启动 controller1 MariaDB 服务systemctl start mariadb</code></pre><hr><blockquote><p>查看集群节点</p></blockquote><pre><code>mysql -u root -p$DBPass -e &quot;show status like &apos;wsrep_cluster_size&apos;;&quot;mysql -u root -p$DBPass -e &quot;show status like &apos;wsrep_incoming_addresses&apos;;&quot;</code></pre><hr><blockquote><p>集群设置</p></blockquote><pre><code># 创建用于监控的mariadb 用户haproxy (haproxy代理，监控使用)mysql -u root -p$DBPass -e &quot;create user &apos;haproxy&apos;@&apos;%&apos;;flush privileges;&quot;# controller1 作为服务控制节点cat &lt;&lt;&apos;EOF&apos; &gt;&gt;/etc/rc.local# 作为第一个节点启动SQL/usr/bin/galera_new_clustersleep 5ssh controller2 &quot;systemctl start mariadb&quot;ssh controller3 &quot;systemctl start mariadb&quot;sleep 3systemctl restart mariadbEOF# 添加执行权限(系统启动后执行)chmod +x /etc/rc.d/rc.local</code></pre><h3 id="Haproxy配置"><a href="#Haproxy配置" class="headerlink" title="Haproxy配置"></a>Haproxy配置</h3><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;&gt;/etc/haproxy/haproxy.cfg########mariadb_cluster############listen mariadb_cluster  mode tcp       bind controller:3306       balance leastconn       option mysql-check user haproxy       server controller1 controller1:3306 weight 1 check inter 2000 rise 2 fall 5       server controller2 controller2:3306 weight 1 check inter 2000 rise 2 fall 5  server controller3 controller3:3306 weight 1 check inter 2000 rise 2 fall 5EOF# 同步 haproxy 配置文件scp /etc/haproxy/haproxy.cfg controller2:/etc/haproxy/haproxy.cfgscp /etc/haproxy/haproxy.cfg controller3:/etc/haproxy/haproxy.cfg# 重启服务systemctl restart haproxyssh controller2 &quot;systemctl restart haproxy&quot;ssh controller3 &quot;systemctl restart haproxy&quot;</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><blockquote><p>命令行执行查看数据库</p></blockquote><pre><code>mysql -h controller -u root -p$DBPass -e &quot;show databases;&quot;mysql -h controller1 -u root -p$DBPass -e &quot;show databases;&quot;mysql -h controller2 -u root -p$DBPass -e &quot;show databases;&quot;mysql -h controller3 -u root -p$DBPass -e &quot;show databases;&quot;# 浏览器打开 http://192.168.0.11:1080/admin 查看 mariadb_cluster 状态</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-03_mariadb-galera-cluster.sh -O openstack-mariadb-galera.shsh openstack-mariadb-galera.sh</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> Galera </tag>
            
            <tag> mariadb </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-02_Haproxy集群高可用</title>
      <link href="/posts/openstack-02.html"/>
      <url>/posts/openstack-02.html</url>
      <content type="html"><![CDATA[<pre><code>启动 controller1, controller2, controller3在在以上控制节点主机安装 http+corosync+pacemaker+pcs+haproxy</code></pre><h3 id="安装配置pscd"><a href="#安装配置pscd" class="headerlink" title="安装配置pscd"></a>安装配置pscd</h3><blockquote><p>所有节点 安装集群软件,配置服务跟随系统启动,设置集群账户密码(此密码需要所有节点相同)</p></blockquote><pre><code>for HOST in controller{1..3}; do    echo &quot;--------------- $HOST PSCD ---------------&quot;    ssh -T $HOST &lt;&lt;&apos;EOF&apos;    # 安装 corosync, pacemaker, pcs    yum -y install corosync pacemaker pcs fence-agents resource-agents      # 服务并配置其随系统启动    systemctl enable pcsd      systemctl start pcsd      # 配置群集账户密码    echo centos | passwd --stdin hacluster  EOFdone</code></pre><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><blockquote><p>验证所有控制节点主状态为：Authorized 才能开始创建集群</p></blockquote><pre><code>pcs cluster auth -u hacluster -p centos controller1 controller2 controller3</code></pre><hr><blockquote><p>创建集群</p></blockquote><pre><code>pcs cluster setup --start --name my_cluster controller1 controller2 controller3</code></pre><h3 id="配置集群"><a href="#配置集群" class="headerlink" title="配置集群"></a>配置集群</h3><blockquote><p>服务管理</p></blockquote><pre><code>pcs cluster enable --all      # 集群随系统启动pcs cluster start  --all      # 启动集群pcs cluster status            # 集群状态 所有控制节点状态为：Online</code></pre><hr><blockquote><p>集群配置</p></blockquote><pre><code>pcs property set stonith-enabled=false      # 禁用STONITHpcs property set no-quorum-policy=ignore    # 无仲裁时，选择忽略</code></pre><hr><blockquote><p>创建 VIP 资源</p></blockquote><pre><code>pcs resource create vip ocf:heartbeat:IPaddr2 ip=10.0.0.10 cidr_netmask=24 op monitor interval=28s</code></pre><hr><blockquote><p>验证状态</p></blockquote><pre><code>corosync-cfgtool -s              #验证corosynccorosync-cmapctl | grep members  #查看成员pcs status corosync              #查看corosync状态</code></pre><h3 id="安装配置http"><a href="#安装配置http" class="headerlink" title="安装配置http"></a>安装配置http</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;--------------- $HOST HTTPD ---------------&quot;    ssh -T $HOST &lt;&lt;EOF    # 安装 httpd    yum -y install httpd    # 配置 http    [ -f /etc/httpd/conf/httpd.conf.bak ] || cp /etc/httpd/conf/httpd.conf{,.bak}                              # 备份默认配置文件    sed -i &apos;s#^Listen 80#Listen 8080#&apos;  /etc/httpd/conf/httpd.conf    # 修改监听端口    echo &quot;ServerName $HOST:8080&quot; &gt;&gt;/etc/httpd/conf/httpd.conf    # 配置站点域名为主机名    echo $HOST &gt;/var/www/html/index.html                          # 生成测试页    # 启动服务,随系统启动    systemctl start httpd    systemctl enable httpdEOFdoen</code></pre><blockquote><p>验证服务状态</p></blockquote><pre><code>curl http://controller1:8080   # controller1curl http://controller2:8080   # controller2curl http://controller3:8080   # controller3</code></pre><h3 id="安装配置haproxy"><a href="#安装配置haproxy" class="headerlink" title="安装配置haproxy"></a>安装配置haproxy</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;--------------- $HOST HAPROXY ---------------&quot;    ssh -T $HOST &lt;&lt;EOF    # 安装 haproxy    yum -y install haproxy    # 允许没VIP时启动(如果没有配置此项且应用会导致 haproxy 服务无法启动)    echo &quot;net.ipv4.ip_nonlocal_bind = 1&quot; &gt;&gt;/etc/sysctl.conf    sysctl -p    # 备份默认配置    [ -f /etc/haproxy/haproxy.cfg.bak] || cp /etc/haproxy/haproxy.cfg{,.bak}    # 生成 haproxy 配置文件    cat &lt;&lt;! &gt;/etc/haproxy/haproxy.cfg    ############ 全局配置 ############    global    log 127.0.0.1 local0    log 127.0.0.1 local1 notice    daemon    nbproc 1       # 进程数量    maxconn 4096   # 最大连接数    user haproxy   # 运行用户    group haproxy  # 运行组    chroot /var/lib/haproxy    pidfile /var/run/haproxy.pid    ############ 默认配置 ############    defaults    log global    mode http            # 默认模式{ tcp|http|health }    option httplog       # 日志类别,采用httplog    option dontlognull   # 不记录健康检查日志信息    retries 2            # 2次连接失败不可用    option forwardfor    # 后端服务获得真实ip    option httpclose     # 请求完毕后主动关闭http通道    option abortonclose  # 服务器负载很高，自动结束比较久的链接    maxconn 4096         # 最大连接数    timeout connect 5m   # 连接超时    timeout client 1m    # 客户端超时    timeout server 31m   # 服务器超时    timeout check 10s    # 心跳检测超时    balance roundrobin   # 负载均衡方式，轮询    ########## 统计页面配置 ##########    listen stats      bind 0.0.0.0:1080      mode http      option httplog      log 127.0.0.1 local0 err      maxconn 10               # 最大连接数      stats refresh 30s      stats uri /admin         #状态页面 http//ip:1080/admin 访问      stats realm Haproxy\ Statistics      stats auth admin:admin   # 用户和密码:admin      stats hide-version       # 隐藏版本信息        stats admin if TRUE      # 设置手工启动/禁用    # haproxy web 代理配置    ############ WEB ############    listen dashboard_cluster        bind controller:80      balance  roundrobin        option  tcpka        option  httpchk        option  tcplog        server controller1 controller1:8080 check port 8080 inter 2000 rise 2 fall 5      server controller2 controller2:8080 check port 8080 inter 2000 rise 2 fall 5      server controller3 controller3:8080 check port 8080 inter 2000 rise 2 fall 5!    # 配置 haproxy 日志    echo &lt;&lt;! &gt;/etc/rsyslog.d/haproxy.conf    $ModLoad imudp    $UDPServerRun 514    $template Haproxy,&quot;%rawmsg% \n&quot;    local0.=info -/var/log/haproxy.log;Haproxy    local0.notice -/var/log/haproxy-status.log;Haproxy!    # 重启日志服务    systemctl restart rsyslog    # 启动haproxy ,跟随系统启动    systemctl start haproxy.service     # 启动服务    systemctl enable haproxy.service    # 随系统启动    systemctl status haproxy.service    # 运行状态EOFdone</code></pre><h3 id="验证集群"><a href="#验证集群" class="headerlink" title="验证集群"></a>验证集群</h3><blockquote><p>浏览器打开以下URL验证 Haproxy节点状态</p></blockquote><pre><code>http://192.168.0.11:1080/admin http://192.168.0.12:1080/admin http://192.168.0.13:1080/admin用户名:密码 / admin:admin</code></pre><hr><blockquote><p>HA验证</p></blockquote><pre><code># http://10.0.0.10/ 浏览器打开此URL刷新可以看到服务器轮询切换</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-02_haproxy-cluster.sh -O openstack-ha.shsh openstack-ha.sh</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> haproxy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-01_系统环境初始化</title>
      <link href="/posts/openstack-01.html"/>
      <url>/posts/openstack-01.html</url>
      <content type="html"><![CDATA[<blockquote><p>所有节点安装前需执行此页面命令初始化环境(免密码登录只需要在 controller1 执行)</p></blockquote><h3 id="关闭禁用服务"><a href="#关闭禁用服务" class="headerlink" title="关闭禁用服务"></a>关闭禁用服务</h3><pre><code># 关闭, 禁用 firewalldsystemctl stop firewalldsystemctl disable firewalldfirewall-cmd --state# 关闭, 禁用 selinuxsetenforce 0sed -i &apos;/^SELINUX=.*/c SELINUX=disabled&apos; /etc/selinux/configgrep --color=auto &apos;^SELINUX&apos; /etc/selinux/config</code></pre><h3 id="配置YUM源"><a href="#配置YUM源" class="headerlink" title="配置YUM源"></a>配置YUM源</h3><pre><code># 安装 epel-releaseyum -y install epel-release# 删除默认yum, epel 源rm -f /etc/yum.repos.d/*# 下载阿里云yum, epel 源curl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repocurl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo# 手动配置阿里云openstack源(关闭GPG验证 否则软件安装时会报错)cat &lt;&lt;&apos;EOF&apos; &gt;/etc/yum.repos.d/centos-openstack.repo[centos-openstack-pike]name=CentOS-$releasever-openstack-pikeenabled=1failovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/cloud/$basearch/openstack-pikegpgcheck=0#gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7[centos-virt-kvm-common]name=CentOS-$releasever-virt-kvm-commonenabled=1failovermethod=prioritybaseurl=https://mirrors.aliyun.com/centos/$releasever/virt/$basearch/kvm-common/gpgcheck=0#gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7EOF# 更新yum 缓存yum clean allyum makecache</code></pre><h3 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h3><pre><code>yum -y install wget vim ntpdate net-tools lsof</code></pre><h3 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h3><pre><code>/usr/sbin/ntpdate ntp6.aliyun.com echo &quot;*/3 * * * * /usr/sbin/ntpdate ntp6.aliyun.com  &amp;&gt; /dev/null&quot; &gt; /tmp/crontabcrontab /tmp/crontab</code></pre><h3 id="配置内核参数"><a href="#配置内核参数" class="headerlink" title="配置内核参数"></a>配置内核参数</h3><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/security/limits.conf* soft nofile 65536  * hard nofile 65536 EOFcat &lt;&lt;EOF &gt;&gt;/etc/sysctl.conffs.file-max=655350  net.ipv4.ip_local_port_range = 1025 65000  net.ipv4.tcp_tw_recycle = 1 EOFsysctl -p</code></pre><h3 id="配置免密码登录"><a href="#配置免密码登录" class="headerlink" title="配置免密码登录"></a>配置免密码登录</h3><blockquote><p>仅 controller1 主机执行 controller1 登录其他主机无需密码</p></blockquote><pre><code># 添加 HOST 解析cat &lt;&lt;EOF &gt;&gt;/etc/hosts10.0.0.10      controller    # vip192.168.0.11   controller1192.168.0.12   controller2192.168.0.13   controller3192.168.0.20   nfs192.168.0.21   cinder1192.168.0.31   computer01192.168.0.32   computer02EOF# 生成密钥[ -f ~/.ssh/id_dsa ] || { ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa; }# 安装 expect[ -f /usr/bin/expect ] || { yum -y install expect; }# 远程主机root密码rootpass=redhatSSH_KEY(){/usr/bin/expect &lt;&lt;EOFset timeout 30spawn ssh-copy-id -i /root/.ssh/id_dsa.pub root@$1expect {    &quot;(yes/no)?&quot; { send &quot;yes\r&quot;; exp_continue }    &quot;password:&quot; { send &quot;$rootpass\r&quot; }}expect eofEOF}# 发送公钥到远程主机SSH_KEY controller1SSH_KEY controller2SSH_KEY controller3# 验证ssh controller1 &quot;hostname&quot;ssh controller2 &quot;hostname&quot;ssh controller3 &quot;hostname&quot;</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><blockquote><p>以下所有命令在 controller1 执行</p></blockquote><blockquote><p>controller1 添加 HOST 解析</p></blockquote><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/hosts10.0.0.10      controller    # vip192.168.0.11   controller1192.168.0.12   controller2192.168.0.13   controller3192.168.0.20   nfs192.168.0.21   cinder1192.168.0.31   computer01192.168.0.32   computer02EOF</code></pre><hr><blockquote><p>controller1 初始化系统环境</p></blockquote><pre><code>curl http://home.onlycloud.xin/code/openstack-01_init.sh | sh</code></pre><hr><blockquote><p>controller1 免密码登录其他主机</p></blockquote><pre><code>wget http://home.onlycloud.xin/code/SSH_KEY -O ~/SSH_KEYsource ~/SSH_KEYSSH_KEY controller1SSH_KEY controller2SSH_KEY controller3# 验证ssh controller1 &quot;hostname&quot;ssh controller2 &quot;hostname&quot;ssh controller3 &quot;hostname&quot;</code></pre><hr><blockquote><p>controller2, 3 初始化系统环境</p></blockquote><pre><code>ssh controller2 &quot;curl http://home.onlycloud.xin/code/openstack-01_init.sh | sh&quot;ssh controller3 &quot;curl http://home.onlycloud.xin/code/openstack-01_init.sh | sh&quot;</code></pre><hr><blockquote><p>同步HOSTS 文件到 controller2, 3</p></blockquote><pre><code>scp /etc/hosts controller2:/etc/scp /etc/hosts controller3:/etc/</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> haproxy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenStack集群安装-00_虚拟机初始化</title>
      <link href="/posts/openstack-00.html"/>
      <url>/posts/openstack-00.html</url>
      <content type="html"><![CDATA[<h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><h4 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h4><blockquote><p>VMware Workstation→编辑→虚拟网络编辑器</p></blockquote><pre><code>VMnet0：    类型：桥接模式  桥接到本地能正常上网的物理网卡VMnet8:    类型：NAT模式 关闭DHCP服务 子网IP 10.0.0.0/24 默认网关(不用修改) 10.0.0.2</code></pre><h4 id="创建虚拟机配置如下"><a href="#创建虚拟机配置如下" class="headerlink" title="创建虚拟机配置如下"></a>创建虚拟机配置如下</h4><blockquote><p>系统安装成初次进入系统后,验证能上外网, 关机, 创建快照</p></blockquote><pre><code>SystemType :  CentOS 7 64位CPU        :  数量 1 内核 4Memory     :  4GNetWork    :  VMnet0  ens32NetWork2   :  VMnet8  ens33Image      :  CentOS-7-x86_64-Minimal-1708.isoTimeZone   :  Asia/Shanghaiens32      :  IP:192.168.0.10/24  GW:192.168.0.1  DNS:223.5.5.5ens33      :  IP:10.0.0.10/24     GW:10.0.0.2     DNS:223.5.5.5rootps     :  redhat</code></pre><h3 id="网络规划"><a href="#网络规划" class="headerlink" title="网络规划"></a>网络规划</h3><pre><code>controller1  :  ens32：192.168.10.11/24    ens33：10.0.0.11/24controller2  :  ens32：192.168.10.12/24    ens33：10.0.0.12/24controller3  :  ens32：192.168.10.13/24    ens33：10.0.0.13/24nfs          :  ens32：192.168.10.21/24    ens33：10.0.0.21/24cinder1      :  ens32：192.168.10.21/24    ens33：10.0.0.21/24computer01   :  ens32：192.168.10.31/24    ens33：10.0.0.31/24computer02   :  ens32：192.168.10.32/24    ens33：10.0.0.32/24</code></pre><h3 id="克隆虚拟机"><a href="#克隆虚拟机" class="headerlink" title="克隆虚拟机"></a>克隆虚拟机</h3><blockquote><p>克隆虚拟机, 更改主机名,网络配置</p></blockquote><h4 id="克隆虚拟机为-controller1"><a href="#克隆虚拟机为-controller1" class="headerlink" title="克隆虚拟机为 controller1"></a>克隆虚拟机为 controller1</h4><blockquote><p>打开<code>controller1</code>电源 SSH连接主机 192.168.0.10 修改 主机名, IP参数</p></blockquote><pre><code># 更改主机名hostnamectl set-hostname controller1# 删除网卡配置文件,重新生成配置NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 192.168.0.11/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;192.168.0.1&quot;nmcli connection reload# 删除网卡配置文件,重新生成配置NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.11/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# 关闭虚拟机创建快照</code></pre><h4 id="克隆虚拟机为-controller2"><a href="#克隆虚拟机为-controller2" class="headerlink" title="克隆虚拟机为 controller2"></a>克隆虚拟机为 controller2</h4><blockquote><p>打开<code>controller1</code>电源 SSH连接主机 192.168.0.10 修改 主机名, IP参数</p></blockquote><pre><code># 更改主机名hostnamectl set-hostname controller2# 删除网卡配置文件,重新生成配置NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 192.168.0.12/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;192.168.0.1&quot;nmcli connection reload# 删除网卡配置文件,重新生成配置NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.12/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# 关闭虚拟机创建快照</code></pre><h4 id="克隆虚拟机为-controller3"><a href="#克隆虚拟机为-controller3" class="headerlink" title="克隆虚拟机为 controller3"></a>克隆虚拟机为 controller3</h4><blockquote><p>打开<code>controller3</code>电源 SSH连接主机 192.168.0.10 修改 主机名, IP参数</p></blockquote><pre><code># 更改主机名hostnamectl set-hostname controller3# 删除网卡配置文件,重新生成配置NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 192.168.0.13/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;192.168.0.1&quot;nmcli connection reload# 删除网卡配置文件,重新生成配置NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.13/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# 关闭虚拟机创建快照</code></pre><h4 id="克隆虚拟机为-nfs"><a href="#克隆虚拟机为-nfs" class="headerlink" title="克隆虚拟机为 nfs"></a>克隆虚拟机为 nfs</h4><blockquote><p>打开nfs电源 SSH连接主机 192.168.0.10 修改 主机名, IP参数</p></blockquote><pre><code># 更改主机名hostnamectl set-hostname nfs# 删除网卡配置文件,重新生成配置NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 192.168.0.20/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;192.168.0.1&quot;nmcli connection reload# 删除网卡配置文件,重新生成配置NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.20/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# 关闭虚拟机创建快照</code></pre><h4 id="克隆虚拟机为-cinder1"><a href="#克隆虚拟机为-cinder1" class="headerlink" title="克隆虚拟机为 cinder1"></a>克隆虚拟机为 cinder1</h4><blockquote><p>此节点为存储 编辑配置添加 1块100G硬盘 后打开<code>cinder1</code>电源 SSH连接主机 192.168.0.10 修改 主机名, IP参数</p></blockquote><pre><code># 更改主机名hostnamectl set-hostname cinder1# 删除网卡配置文件,重新生成配置NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 192.168.0.21/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;192.168.0.1&quot;nmcli connection reload# 删除网卡配置文件,重新生成配置NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.21/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# 关闭虚拟机创建快照</code></pre><h4 id="克隆虚拟机为-computer01"><a href="#克隆虚拟机为-computer01" class="headerlink" title="克隆虚拟机为 computer01"></a>克隆虚拟机为 computer01</h4><blockquote><p>打开<code>computer01</code>电源 SSH连接主机 192.168.0.10 修改 主机名, IP参数</p></blockquote><pre><code># 更改主机名hostnamectl set-hostname computer01# 删除网卡配置文件,重新生成配置NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 192.168.0.31/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;192.168.0.1&quot;nmcli connection reload# 删除网卡配置文件,重新生成配置NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.31/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# 关闭虚拟机创建快照</code></pre><h4 id="克隆虚拟机为-computer02"><a href="#克隆虚拟机为-computer02" class="headerlink" title="克隆虚拟机为 computer02"></a>克隆虚拟机为 computer02</h4><blockquote><p>打开<code>computer02</code>电源 SSH连接主机 192.168.0.10 修改 主机名, IP参数</p></blockquote><pre><code># 更改主机名hostnamectl set-hostname computer02# 删除网卡配置文件,重新生成配置NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 192.168.0.32/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;192.168.0.1&quot;nmcli connection reload# 删除网卡配置文件,重新生成配置NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.32/24 ipv4.dns &quot;223.5.5.5 1.1.1.1&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# 关闭虚拟机创建快照</code></pre>]]></content>
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shell实例手册</title>
      <link href="/posts/41a5.html"/>
      <url>/posts/41a5.html</url>
      <content type="html"><![CDATA[<p>​    shell实例手册</p><p>0 说明{</p><pre><code>手册制作: 雪松更新日期: 2016-04-28欢迎系统运维加入Q群: 198173206  # 加群请回答问题欢迎运维开发加入Q群: 365534424  # 不定期技术分享请使用&quot;notepad++&quot;或其它编辑器打开此文档, &quot;alt+0&quot;将函数折叠后方便查阅请勿删除信息, 转载请说明出处, 抵制不道德行为错误在所难免, 还望指正！[python实例手册] [shell实例手册] [LazyManage运维批量管理(shell/python两个版本)]网盘更新下载地址:    http://pan.baidu.com/s/1sjsFrmXgithub更新下载地址:  https://github.com/liquanzhou/ops_doc</code></pre><p>}</p><p>1 文件{</p><pre><code>ls -rtl                 # 按时间倒叙列出所有目录和文件 ll -rttouch file              # 创建空白文件rm -rf 目录名           # 不提示删除非空目录(-r:递归删除 -f强制)dos2unix                # windows文本转linux文本unix2dos                # linux文本转windows文本enca filename           # 查看编码  安装 yum install -y encamd5sum                  # 查看md5值ln 源文件 目标文件      # 硬链接ln -s 源文件 目标文件   # 符号连接readlink -f /data       # 查看连接真实目录cat file | nl |less     # 查看上下翻页且显示行号  q退出head                    # 查看文件开头内容head -c 10m             # 截取文件中10M内容split -C 10M            # 将文件切割大小为10M -C按行tail -f file            # 查看结尾 监视日志文件tail -F file            # 监视日志并重试, 针对文件被mv的情况可以持续读取file                    # 检查文件类型umask                   # 更改默认权限uniq                    # 删除重复的行uniq -c                 # 重复的行出现次数uniq -u                 # 只显示不重复行paste a b               # 将两个文件合并用tab键分隔开paste -d&apos;+&apos; a b         # 将两个文件合并指定&apos;+&apos;符号隔开paste -s a              # 将多行数据合并到一行用tab键隔开chattr +i /etc/passwd   # 不得任意改变文件或目录 -i去掉锁 -R递归more                    # 向下分面器locate 字符串           # 搜索wc -l file              # 查看行数cp filename{,.bak}      # 快速备份一个文件\cp a b                 # 拷贝不提示 既不使用别名 cp -irev                     # 将行中的字符逆序排列comm -12 2 3            # 行和行比较匹配echo &quot;10.45aa&quot; |cksum                   # 字符串转数字编码，可做校验，也可用于文件校验iconv -f gbk -t utf8 原.txt &gt; 新.txt    # 转换编码xxd /boot/grub/stage1                   # 16进制查看hexdump -C /boot/grub/stage1            # 16进制查看rename 原模式 目标模式 文件                # 重命名 可正则watch -d -n 1 &apos;df; ls -FlAt /path&apos;      # 实时某个目录下查看最新改动过的文件cp -v  /dev/dvd  /rhel4.6.iso9660       # 制作镜像diff suzu.c suzu2.c  &gt; sz.patch         # 制作补丁patch suzu.c &lt; sz.patch                 # 安装补丁sort排序{    -t  # 指定排序时所用的栏位分隔字符    -n  # 依照数值的大小排序    -r  # 以相反的顺序来排序    -f  # 排序时，将小写字母视为大写字母    -d  # 排序时，处理英文字母、数字及空格字符外，忽略其他的字符    -c  # 检查文件是否已经按照顺序排序    -b  # 忽略每行前面开始处的空格字符    -M  # 前面3个字母依照月份的缩写进行排序    -k  # 指定域    -m  # 将几个排序好的文件进行合并    -T  # 指定临时文件目录,默认在/tmp    +&lt;起始栏位&gt;-&lt;结束栏位&gt;   # 以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。    -o  # 将排序后的结果存入指定的文    sort -n               # 按数字排序    sort -nr              # 按数字倒叙    sort -u               # 过滤重复行    sort -m a.txt c.txt   # 将两个文件内容整合到一起    sort -n -t&apos; &apos; -k 2 -k 3 a.txt     # 第二域相同，将从第三域进行升降处理    sort -n -t&apos;:&apos; -k 3r a.txt         # 以:为分割域的第三域进行倒叙排列    sort -k 1.3 a.txt                 # 从第三个字母起进行排序    sort -t&quot; &quot; -k 2n -u  a.txt        # 以第二域进行排序，如果遇到重复的，就删除}find查找{    # linux文件无创建时间    # Access 使用时间    # Modify 内容修改时间    # Change 状态改变时间(权限、属主)    # 时间默认以24小时为单位,当前时间到向前24小时为0天,向前48-72小时为2天    # -and 且 匹配两个条件 参数可以确定时间范围 -mtime +2 -and -mtime -4    # -or 或 匹配任意一个条件    find /etc -name &quot;*http*&quot;     # 按文件名查找    find . -type f               # 查找某一类型文件    find / -perm                 # 按照文件权限查找    find / -user                 # 按照文件属主查找    find / -group                # 按照文件所属的组来查找文件    find / -atime -n             # 文件使用时间在N天以内    find / -atime +n             # 文件使用时间在N天以前    find / -mtime +n             # 文件内容改变时间在N天以前    find / -ctime +n             # 文件状态改变时间在N天前    find / -mmin +30             # 按分钟查找内容改变    find / -size +1000000c -print                           # 查找文件长度大于1M字节的文件    find /etc -name &quot;*passwd*&quot; -exec grep &quot;xuesong&quot; {} \;   # 按名字查找文件传递给-exec后命令    find . -name &apos;t*&apos; -exec basename {} \;                  # 查找文件名,不取路径    find . -type f -name &quot;err*&quot; -exec  rename err ERR {} \; # 批量改名(查找err 替换为 ERR {}文件    find 路径 -name *name1* -or -name *name2*               # 查找任意一个关键字}vim编辑器{    gconf-editor           # 配置编辑器    /etc/vimrc             # 配置文件路径    vim +24 file           # 打开文件定位到指定行    vim file1 file2        # 打开多个文件    vim -O2 file1 file2    # 垂直分屏    vim -on file1 file2    # 水平分屏    Ctrl+ U                # 向前翻页    Ctrl+ D                # 向后翻页    Ctrl+ww                # 在窗口间切换    Ctrl+w +or-or=         # 增减高度    :sp filename           # 上下分割打开新文件    :vs filename           # 左右分割打开新文件    :set nu                # 打开行号    :set nonu              # 取消行号    :nohl                  # 取消高亮    :set paste             # 取消缩进    :set autoindent        # 设置自动缩进    :set ff                # 查看文本格式    :set binary            # 改为unix格式    :%s/字符1/字符2/g      # 全部替换    :200                   # 跳转到200  1 文件头    G                      # 跳到行尾    dd                     # 删除当前行 并复制 可直接p粘贴    11111dd                # 删除11111行，可用来清空文件    r                      # 替换单个字符    R                      # 替换多个字符    u                      # 撤销上次操作    *                      # 全文匹配当前光标所在字符串    $                      # 行尾    0                      # 行首    X                      # 文档加密    v =                    # 自动格式化代码    Ctrl+v                 # 可视模式    Ctrl+v I ESC           # 多行操作    Ctrl+v s ESC           # 批量取消注释}归档解压缩{    tar zxvpf gz.tar.gz -C 放到指定目录 包中的目录       # 解包tar.gz 不指定目录则全解压    tar zcvpf /$path/gz.tar.gz * # 打包gz 注意*最好用相对路径    tar zcf /$path/gz.tar.gz *   # 打包正确不提示    tar ztvpf gz.tar.gz          # 查看gz    tar xvf 1.tar -C 目录        # 解包tar    tar -cvf 1.tar *             # 打包tar    tar tvf 1.tar                # 查看tar    tar -rvf 1.tar 文件名        # 给tar追加文件    tar --exclude=/home/dmtsai --exclude=*.tar -zcvf myfile.tar.gz /home/* /etc      # 打包/home, /etc ，但排除 /home/dmtsai    tar -N &quot;2005/06/01&quot; -zcvf home.tar.gz /home      # 在 /home 当中，比 2005/06/01 新的文件才备份    tar -zcvfh home.tar.gz /home                     # 打包目录中包括连接目录    tar zcf - ./ | ssh root@IP &quot;tar zxf - -C /xxxx&quot;  # 一边压缩一边解压    zgrep 字符 1.gz              # 查看压缩包中文件字符行    bzip2  -dv 1.tar.bz2         # 解压bzip2    bzip2 -v 1.tar               # bzip2压缩    bzcat                        # 查看bzip2    gzip A                       # 直接压缩文件 # 压缩后源文件消失    gunzip A.gz                  # 直接解压文件 # 解压后源文件消失    gzip -dv 1.tar.gz            # 解压gzip到tar    gzip -v 1.tar                # 压缩tar到gz    unzip zip.zip                # 解压zip    zip zip.zip *                # 压缩zip    # rar3.6下载:  http://www.rarsoft.com/rar/rarlinux-3.6.0.tar.gz    rar a rar.rar *.jpg          # 压缩文件为rar包    unrar x rar.rar              # 解压rar包    7z a 7z.7z *                 # 7z压缩    7z e 7z.7z                   # 7z解压}文件ACL权限控制{    getfacl 1.test                      # 查看文件ACL权限    setfacl -R -m u:xuesong:rw- 1.test  # 对文件增加用户的读写权限 -R 递归}svn更新代码{    --force # 强制覆盖    /usr/bin/svn --username user --password passwd co  $Code  ${SvnPath}src/                 # 检出整个项目    /usr/bin/svn --username user --password passwd up  $Code  ${SvnPath}src/                 # 更新项目    /usr/bin/svn --username user --password passwd export  $Code$File ${SvnPath}src/$File    # 导出个别文件    /usr/bin/svn --username user --password passwd export -r 版本号 svn路径 本地路径 --force # 导出指定版本}git{    # 编译安装git-1.8.4.4    ./configure --with-curl --with-expat    make    make install    git clone git@10.10.10.10:gittest.git  ./gittest/  # 克隆项目到指定目录    git status                                         # Show the working tree(工作树) status    git branch -a                                      # 列出远程跟踪分支(remote-tracking branches)和本地分支    git checkout developing                            # 切换到developing分支    git pull                                           # 更新项目 需要cd到项目目录中    git add .                                          # 更新所有文件    git commit -m &quot;gittest up&quot;                         # 提交操作并添加备注    git push                                           # 正式提交到远程git服务器    git push [-u origin master]                        # 正式提交到远程git服务器(master分支)    git tag [-a] dev-v-0.11.54 [-m &apos;fix #67&apos;]          # 创建tag,名为dev-v-0.11.54,备注fix #67    git tag -l dev-v-0.11.54                           # 查看tag(dev-v-0.11.5)    git push origin --tags                             # 提交tag    git reset --hard                                   # 本地恢复整个项目    git rm -r -n --cached  ./img                       # -n执行命令时,不会删除任何文件,而是展示此命令要删除的文件列表预览    git rm -r --cached  ./img                          # 执行删除命令 需要commit和push让远程生效    git init --bare smc-content-check.git              # 初始化新git项目  需要手动创建此目录并给git用户权限 chown -R git:git smc-content-check.git    git config --global credential.helper store        # 记住密码    git config [--global] user.name &quot;your name&quot;        # 设置你的用户名, 希望在一个特定的项目中使用不同的用户或e-mail地址, 不要--global选项    git config [--global] user.email &quot;your email&quot;      # 设置你的e-mail地址, 每次Git提交都会使用该信息    git config [--global] user.name                    # 查看用户名    git config [--global] user.email                   # 查看用户e-mail    git config --global --edit                         # 编辑~/.gitconfig(User-specific)配置文件, 值优先级高于/etc/gitconfig(System-wide)    git config --edit                                  # 编辑.git/config(Repository specific)配置文件, 值优先级高于~/.gitconfig    从远端拉一份新的{        # You have not concluded your merge (MERGE_HEAD exists)  git拉取失败        git fetch --hard origin/master        git reset --hard origin/master    }}恢复rm删除的文件{    # debugfs针对 ext2   # ext3grep针对 ext3   # extundelete针对 ext4    df -T   # 首先查看磁盘分区格式    umount /data/     # 卸载挂载,数据丢失请首先卸载挂载,或重新挂载只读    ext3grep /dev/sdb1 --ls --inode 2         # 记录信息继续查找目录下文件inode信息    ext3grep /dev/sdb1 --ls --inode 131081    # 此处是inode    ext3grep /dev/sdb1 --restore-inode 49153  # 记录下inode信息开始恢复目录}openssl{    openssl rand 15 -base64            # 口令生成    openssl sha1 filename              # 哈希算法校验文件    openssl md5 filename               # MD5校验文件    openssl base64   filename.txt      # base64编码/解码文件(发送邮件附件之类功能会可以使用)    openssl base64 -d   filename.bin   # base64编码/解码二进制文件    openssl enc -aes-128-cbc   filename.aes-128-cbc                  # 加密文档    # 推荐使用的加密算法是bf(Blowfish)和-aes-128-cbc(运行在CBC模式的128位密匙AES加密算法)，加密强度有保障    openssl enc -d -aes-128-cbc -in filename.aes-128-cbc &gt; filename  # 解密文档}</code></pre><p>}</p><p>2 软件{</p><pre><code>rpm{    rpm -ivh lynx          # rpm安装    rpm -e lynx            # 卸载包    rpm -e lynx --nodeps   # 强制卸载    rpm -qa                # 查看所有安装的rpm包    rpm -qa | grep lynx    # 查找包是否安装    rpm -ql                # 软件包路径    rpm -Uvh               # 升级包    rpm --test lynx        # 测试    rpm -qc                # 软件包配置文档    rpm --import  /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6     # 导入rpm的签名信息    rpm --initdb           # 初始化rpm 数据库    rpm --rebuilddb        # 重建rpm数据库  在rpm和yum无响应的情况使用 先 rm -f /var/lib/rpm/__db.00* 在重建}yum{    yum list                 # 所有软件列表    yum install 包名         # 安装包和依赖包    yum -y update            # 升级所有包版本,依赖关系，系统版本内核都升级    yum -y update 软件包名   # 升级指定的软件包    yum -y upgrade           # 不改变软件设置更新软件，系统版本升级，内核不改变    yum search mail          # yum搜索相关包    yum grouplist            # 软件包组    yum -y groupinstall &quot;Virtualization&quot;   # 安装软件包组    repoquery -ql gstreamer  # 不安装软件查看包含文件    yum clean all            # 清除var下缓存}yum使用epel源{    # 包下载地址: http://download.fedoraproject.org/pub/epel   # 选择版本5\6\7    rpm -Uvh  http://mirrors.hustunique.com/epel//6/x86_64/epel-release-6-8.noarch.rpm    # 自适配版本    yum install epel-release}自定义yum源{    find /etc/yum.repos.d -name &quot;*.repo&quot; -exec mv {} {}.bak \;    vim /etc/yum.repos.d/yum.repo    [yum]    #http    baseurl=http://10.0.0.1/centos5.5    #挂载iso    #mount -o loop CentOS-5.8-x86_64-bin-DVD-1of2.iso /data/iso/    #本地    #baseurl=file:///data/iso/    enable=1    #导入key    rpm --import  /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-5}编译{    源码安装{        ./configure --help                   # 查看所有编译参数        ./configure  --prefix=/usr/local/    # 配置参数        make                                 # 编译        # make -j 8                          # 多线程编译,速度较快,但有些软件不支持        make install                         # 安装包        make clean                           # 清除编译结果    }    perl程序编译{        perl Makefile.PL        make        make test        make install    }    python程序编译{        python file.py        # 源码包编译安装        python setup.py build        python setup.py install    }    编译c程序{        gcc -g hello.c -o hello    }}</code></pre><p>}</p><p>3 系统{</p><pre><code>wall        　  　          # 给其它用户发消息whereis ls                  # 查找命令的目录which                       # 查看当前要执行的命令所在的路径clear                       # 清空整个屏幕reset                       # 重新初始化屏幕cal                         # 显示月历echo -n 123456 | md5sum     # md5加密mkpasswd                    # 随机生成密码   -l位数 -C大小 -c小写 -d数字 -s特殊字符netstat -ntupl | grep port  # 是否打开了某个端口ntpdate cn.pool.ntp.org     # 同步时间, pool.ntp.org: public ntp time server for everyone(http://www.pool.ntp.org/zh/)tzselect                    # 选择时区 #+8=(5 9 1 1) # (TZ=&apos;Asia/Shanghai&apos;; export TZ)括号内写入 /etc/profile/sbin/hwclock -w            # 时间保存到硬件/etc/shadow                 # 账户影子文件LANG=en                     # 修改语言vim /etc/sysconfig/i18n     # 修改编码  LANG=&quot;en_US.UTF-8&quot;export LC_ALL=C             # 强制字符集vi /etc/hosts               # 查询静态主机名alias                       # 别名watch uptime                # 监测命令动态刷新 监视ipcs -a                     # 查看Linux系统当前单个共享内存段的最大值ldconfig                    # 动态链接库管理命令ldd `which cmd`             # 查看命令的依赖库dist-upgrade                # 会改变配置文件,改变旧的依赖关系，改变系统版本/boot/grub/grub.conf        # grub启动项配置ps -mfL &lt;PID&gt;               # 查看指定进程启动的线程 线程数受 max user processes 限制ps uxm |wc -l               # 查看当前用户占用的进程数 [包括线程]  max user processestop -p  PID -H              # 查看指定PID进程及线程lsof |wc -l                 # 查看当前文件句柄数使用数量  open fileslsof |grep /lib             # 查看加载库文件sysctl -a                   # 查看当前所有系统内核参数sysctl -p                   # 修改内核参数/etc/sysctl.conf，让/etc/rc.d/rc.sysinit读取生效strace -p pid               # 跟踪系统调用ps -eo &quot;%p %C  %z  %a&quot;|sort -k3 -n            # 把进程按内存使用大小排序strace uptime 2&gt;&amp;1|grep open                  # 查看命令打开的相关文件grep Hugepagesize /proc/meminfo               # 内存分页大小mkpasswd -l 8  -C 2 -c 2 -d 4 -s 0            # 随机生成指定类型密码echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies    # 使TCP SYN Cookie 保护生效  # &quot;SYN Attack&quot;是一种拒绝服务的攻击方式grep Swap  /proc/25151/smaps |awk &apos;{a+=$2}END{print a}&apos;    # 查询某pid使用的swap大小开机启动脚本顺序{    /etc/profile    /etc/profile.d/*.sh    ~/bash_profile    ~/.bashrc    /etc/bashrc}进程管理{    ps -eaf               # 查看所有进程    kill -9 PID           # 强制终止某个PID进程    kill -15 PID          # 安全退出 需程序内部处理信号    cmd &amp;                 # 命令后台运行    nohup cmd &amp;           # 后台运行不受shell退出影响    ctrl+z                # 将前台放入后台(暂停)    jobs                  # 查看后台运行程序    bg 2                  # 启动后台暂停进程    fg 2                  # 调回后台进程    pstree                # 进程树    vmstat 1 9            # 每隔一秒报告系统性能信息9次    sar                   # 查看cpu等状态    lsof file             # 显示打开指定文件的所有进程    lsof -i:32768         # 查看端口的进程    renice +1 180         # 把180号进程的优先级加1    ps{        ps aux |grep -v USER | sort -nk +4 | tail       # 显示消耗内存最多的10个运行中的进程，以内存使用量排序.cpu +3        # USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND        %CPU     # 进程的cpu占用率        %MEM     # 进程的内存占用率        VSZ      # 进程虚拟大小,单位K(即总占用内存大小,包括真实内存和虚拟内存)        RSS      # 进程使用的驻留集大小即实际物理内存大小        START    # 进程启动时间和日期        占用的虚拟内存大小 = VSZ - RSS        ps -eo pid,lstart,etime,args         # 查看进程启动时间    }    top{        前五行是系统整体的统计信息。        第一行: 任务队列信息，同 uptime 命令的执行结果。内容如下：            01:06:48 当前时间            up 1:22 系统运行时间，格式为时:分            1 user 当前登录用户数            load average: 0.06, 0.60, 0.48 系统负载，即任务队列的平均长度。            三个数值分别为 1分钟、5分钟、15分钟前到现在的平均值。        第二、三行:为进程和CPU的信息。当有多个CPU时，这些内容可能会超过两行。内容如下：            Tasks: 29 total 进程总数            1 running 正在运行的进程数            28 sleeping 睡眠的进程数            0 stopped 停止的进程数            0 zombie 僵尸进程数            Cpu(s): 0.3% us 用户空间占用CPU百分比            1.0% sy 内核空间占用CPU百分比            0.0% ni 用户进程空间内改变过优先级的进程占用CPU百分比            98.7% id 空闲CPU百分比            0.0% wa 等待输入输出的CPU时间百分比            0.0% hi            0.0% si        第四、五行:为内存信息。内容如下：            Mem: 191272k total 物理内存总量            173656k used 使用的物理内存总量            17616k free 空闲内存总量            22052k buffers 用作内核缓存的内存量            Swap: 192772k total 交换区总量            0k used 使用的交换区总量            192772k free 空闲交换区总量            123988k cached 缓冲的交换区总量。            内存中的内容被换出到交换区，而后又被换入到内存，但使用过的交换区尚未被覆盖，            该数值即为这些内容已存在于内存中的交换区的大小。            相应的内存再次被换出时可不必再对交换区写入。        进程信息区,各列的含义如下:  # 显示各个进程的详细信息        序号 列名    含义        a   PID      进程id        b   PPID     父进程id        c   RUSER    Real user name        d   UID      进程所有者的用户id        e   USER     进程所有者的用户名        f   GROUP    进程所有者的组名        g   TTY      启动进程的终端名。不是从终端启动的进程则显示为 ?        h   PR       优先级        i   NI       nice值。负值表示高优先级，正值表示低优先级        j   P        最后使用的CPU，仅在多CPU环境下有意义        k   %CPU     上次更新到现在的CPU时间占用百分比        l   TIME     进程使用的CPU时间总计，单位秒        m   TIME+    进程使用的CPU时间总计，单位1/100秒        n   %MEM     进程使用的物理内存百分比        o   VIRT     进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES        p   SWAP     进程使用的虚拟内存中，被换出的大小，单位kb。        q   RES      进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA        r   CODE     可执行代码占用的物理内存大小，单位kb        s   DATA     可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb        t   SHR      共享内存大小，单位kb        u   nFLT     页面错误次数        v   nDRT     最后一次写入到现在，被修改过的页面数。        w   S        进程状态。            D=不可中断的睡眠状态            R=运行            S=睡眠            T=跟踪/停止            Z=僵尸进程 父进程在但并不等待子进程        x   COMMAND  命令名/命令行        y   WCHAN    若该进程在睡眠，则显示睡眠中的系统函数名        z   Flags    任务标志，参考 sched.h    }    列出正在占用swap的进程{        #!/bin/bash        echo -e &quot;PID\t\tSwap\t\tProc_Name&quot;        # 拿出/proc目录下所有以数字为名的目录（进程名是数字才是进程，其他如sys,net等存放的是其他信息）        for pid in `ls -l /proc | grep ^d | awk &apos;{ print $9 }&apos;| grep -v [^0-9]`        do            # 让进程释放swap的方法只有一个：就是重启该进程。或者等其自动释放。放            # 如果进程会自动释放，那么我们就不会写脚本来找他了，找他都是因为他没有自动释放。            # 所以我们要列出占用swap并需要重启的进程，但是init这个进程是系统里所有进程的祖先进程            # 重启init进程意味着重启系统，这是万万不可以的，所以就不必检测他了，以免对系统造成影响。            if [ $pid -eq 1 ];then continue;fi            grep -q &quot;Swap&quot; /proc/$pid/smaps 2&gt;/dev/null            if [ $? -eq 0 ];then                swap=$(grep Swap /proc/$pid/smaps \                    | gawk &apos;{ sum+=$2;} END{ print sum }&apos;)                proc_name=$(ps aux | grep -w &quot;$pid&quot; | grep -v grep \                    | awk &apos;{ for(i=11;i&lt;=NF;i++){ printf(&quot;%s &quot;,$i); }}&apos;)                if [ $swap -gt 0 ];then                    echo -e &quot;${pid}\t${swap}\t${proc_name}&quot;                fi            fi        done | sort -k2 -n | awk -F&apos;\t&apos; &apos;{            pid[NR]=$1;            size[NR]=$2;            name[NR]=$3;        }        END{            for(id=1;id&lt;=length(pid);id++)            {                if(size[id]&lt;1024)                    printf(&quot;%-10s\t%15sKB\t%s\n&quot;,pid[id],size[id],name[id]);                else if(size[id]&lt;1048576)                    printf(&quot;%-10s\t%15.2fMB\t%s\n&quot;,pid[id],size[id]/1024,name[id]);                else                    printf(&quot;%-10s\t%15.2fGB\t%s\n&quot;,pid[id],size[id]/1048576,name[id]);            }        }&apos;    }    linux操作系统提供的信号{        kill -l                    # 查看linux提供的信号        trap &quot;echo aaa&quot;  2 3 15    # shell使用 trap 捕捉退出信号        # 发送信号一般有两种原因:        #   1(被动式)  内核检测到一个系统事件.例如子进程退出会像父进程发送SIGCHLD信号.键盘按下control+c会发送SIGINT信号        #   2(主动式)  通过系统调用kill来向指定进程发送信号        # 进程结束信号 SIGTERM 和 SIGKILL 的区别:  SIGTERM 比较友好，进程能捕捉这个信号，根据您的需要来关闭程序。在关闭程序之前，您可以结束打开的记录文件和完成正在做的任务。在某些情况下，假如进程正在进行作业而且不能中断，那么进程可以忽略这个SIGTERM信号。        # 如果一个进程收到一个SIGUSR1信号，然后执行信号绑定函数，第二个SIGUSR2信号又来了，第一个信号没有被处理完毕的话，第二个信号就会丢弃。        SIGHUP  1          A     # 终端挂起或者控制进程终止        SIGINT  2          A     # 键盘终端进程(如control+c)        SIGQUIT 3          C     # 键盘的退出键被按下        SIGILL  4          C     # 非法指令        SIGABRT 6          C     # 由abort(3)发出的退出指令        SIGFPE  8          C     # 浮点异常        SIGKILL 9          AEF   # Kill信号  立刻停止        SIGSEGV 11         C     # 无效的内存引用        SIGPIPE 13         A     # 管道破裂: 写一个没有读端口的管道        SIGALRM 14         A     # 闹钟信号 由alarm(2)发出的信号        SIGTERM 15         A     # 终止信号,可让程序安全退出 kill -15        SIGUSR1 30,10,16   A     # 用户自定义信号1        SIGUSR2 31,12,17   A     # 用户自定义信号2        SIGCHLD 20,17,18   B     # 子进程结束自动向父进程发送SIGCHLD信号        SIGCONT 19,18,25         # 进程继续（曾被停止的进程）        SIGSTOP 17,19,23   DEF   # 终止进程        SIGTSTP 18,20,24   D     # 控制终端（tty）上按下停止键        SIGTTIN 21,21,26   D     # 后台进程企图从控制终端读        SIGTTOU 22,22,27   D     # 后台进程企图从控制终端写        缺省处理动作一项中的字母含义如下:            A  缺省的动作是终止进程            B  缺省的动作是忽略此信号，将该信号丢弃，不做处理            C  缺省的动作是终止进程并进行内核映像转储(dump core),内核映像转储是指将进程数据在内存的映像和进程在内核结构中的部分内容以一定格式转储到文件系统，并且进程退出执行，这样做的好处是为程序员提供了方便，使得他们可以得到进程当时执行时的数据值，允许他们确定转储的原因，并且可以调试他们的程序。            D  缺省的动作是停止进程，进入停止状况以后还能重新进行下去，一般是在调试的过程中（例如ptrace系统调用）            E  信号不能被捕获            F  信号不能被忽略    }    系统性能状态{        vmstat 1 9        r      # 等待执行的任务数。当这个值超过了cpu线程数，就会出现cpu瓶颈。        b      # 等待IO的进程数量,表示阻塞的进程。        swpd   # 虚拟内存已使用的大小，如大于0，表示机器物理内存不足，如不是程序内存泄露，那么该升级内存。        free   # 空闲的物理内存的大小        buff   # 已用的buff大小，对块设备的读写进行缓冲        cache  # cache直接用来记忆我们打开的文件,给文件做缓冲，(把空闲的物理内存的一部分拿来做文件和目录的缓存，是为了提高 程序执行的性能，当程序使用内存时，buffer/cached会很快地被使用。)        inact  # 非活跃内存大小，即被标明可回收的内存，区别于free和active -a选项时显示        active # 活跃的内存大小 -a选项时显示        si   # 每秒从磁盘读入虚拟内存的大小，如果这个值大于0，表示物理内存不够用或者内存泄露，要查找耗内存进程解决掉。        so   # 每秒虚拟内存写入磁盘的大小，如果这个值大于0，同上。        bi   # 块设备每秒接收的块数量，这里的块设备是指系统上所有的磁盘和其他块设备，默认块大小是1024byte        bo   # 块设备每秒发送的块数量，例如读取文件，bo就要大于0。bi和bo一般都要接近0，不然就是IO过于频繁，需要调整。        in   # 每秒CPU的中断次数，包括时间中断。in和cs这两个值越大，会看到由内核消耗的cpu时间会越多        cs   # 每秒上下文切换次数，例如我们调用系统函数，就要进行上下文切换，线程的切换，也要进程上下文切换，这个值要越小越好，太大了，要考虑调低线程或者进程的数目,例如在apache和nginx这种web服务器中，我们一般做性能测试时会进行几千并发甚至几万并发的测试，选择web服务器的进程可以由进程或者线程的峰值一直下调，压测，直到cs到一个比较小的值，这个进程和线程数就是比较合适的值了。系统调用也是，每次调用系统函数，我们的代码就会进入内核空间，导致上下文切换，这个是很耗资源，也要尽量避免频繁调用系统函数。上下文切换次数过多表示你的CPU大部分浪费在上下文切换，导致CPU干正经事的时间少了，CPU没有充分利用。        us   # 用户进程执行消耗cpu时间(user time)  us的值比较高时，说明用户进程消耗的cpu时间多，但是如果长期超过50%的使用，那么我们就该考虑优化程序算法或其他措施        sy   # 系统CPU时间，如果太高，表示系统调用时间长，例如是IO操作频繁。        id   # 空闲 CPU时间，一般来说，id + us + sy = 100,一般认为id是空闲CPU使用率，us是用户CPU使用率，sy是系统CPU使用率。        wt   # 等待IOCPU时间。Wa过高时，说明io等待比较严重，这可能是由于磁盘大量随机访问造成的，也有可能是磁盘的带宽出现瓶颈。        如果 r 经常大于4，且id经常少于40，表示cpu的负荷很重。        如果 pi po 长期不等于0，表示内存不足。        如果 b 队列经常大于3，表示io性能不好。    }}日志管理{    history                      # 历时命令默认1000条    HISTTIMEFORMAT=&quot;%Y-%m-%d %H:%M:%S &quot;   # 让history命令显示具体时间    history  -c                  # 清除记录命令    cat $HOME/.bash_history      # 历史命令记录文件    lastb -a                     # 列出登录系统失败的用户相关信息  清空二进制日志记录文件 echo &gt; /var/log/btmp    last                         # 查看登陆过的用户信息  清空二进制日志记录文件 echo &gt; /var/log/wtmp   默认打开乱码    who /var/log/wtmp            # 查看登陆过的用户信息    lastlog                      # 用户最后登录的时间    tail -f /var/log/messages    # 系统日志    tail -f /var/log/secure      # ssh日志}selinux{    sestatus -v                    # 查看selinux状态    getenforce                     # 查看selinux模式    setenforce 0                   # 设置selinux为宽容模式(可避免阻止一些操作)    semanage port -l               # 查看selinux端口限制规则    semanage port -a -t http_port_t -p tcp 8000  # 在selinux中注册端口类型    vi /etc/selinux/config         # selinux配置文件    SELINUX=enfoceing              # 关闭selinux 把其修改为  SELINUX=disabled}查看剩余内存{    free -m    #-/+ buffers/cache:       6458       1649    #6458M为真实使用内存  1649M为真实剩余内存(剩余内存+缓存+缓冲器)    #linux会利用所有的剩余内存作为缓存，所以要保证linux运行速度，就需要保证内存的缓存大小}系统信息{    uname -a              # 查看Linux内核版本信息    cat /proc/version     # 查看内核版本    cat /etc/issue        # 查看系统版本    lsb_release /var/cache/yum/x86_64/7/epel/gen-a        # 查看系统版本  需安装 centos-release    locale -a             # 列出所有语系    locale                # 当前环境变量中所有编码    hwclock               # 查看时间    who                   # 当前在线用户    w                     # 当前在线用户    whoami                # 查看当前用户名    logname               # 查看初始登陆用户名    uptime                # 查看服务器启动时间    sar -n DEV 1 10       # 查看网卡网速流量    dmesg                 # 显示开机信息    lsmod                 # 查看内核模块}硬件信息{    more /proc/cpuinfo                                       # 查看cpu信息    lscpu                                                    # 查看cpu信息    cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c    # 查看cpu型号和逻辑核心数    getconf LONG_BIT                                         # cpu运行的位数    cat /proc/cpuinfo | grep &apos;physical id&apos; |sort| uniq -c    # 物理cpu个数    cat /proc/cpuinfo | grep flags | grep &apos; lm &apos; | wc -l     # 结果大于0支持64位    cat /proc/cpuinfo|grep flags                             # 查看cpu是否支持虚拟化   pae支持半虚拟化  IntelVT 支持全虚拟化    more /proc/meminfo                                       # 查看内存信息    dmidecode                                                # 查看全面硬件信息    dmidecode | grep &quot;Product Name&quot;                          # 查看服务器型号    dmidecode | grep -P -A5 &quot;Memory\s+Device&quot; | grep Size | grep -v Range       # 查看内存插槽    cat /proc/mdstat                                         # 查看软raid信息    cat /proc/scsi/scsi                                      # 查看Dell硬raid信息(IBM、HP需要官方检测工具)    lspci                                                    # 查看硬件信息    lspci|grep RAID                                          # 查看是否支持raid    lspci -vvv |grep Ethernet                                # 查看网卡型号    lspci -vvv |grep Kernel|grep driver                      # 查看驱动模块    modinfo tg2                                              # 查看驱动版本(驱动模块)    ethtool -i em1                                           # 查看网卡驱动版本    ethtool em1                                              # 查看网卡带宽}终端快捷键{    Ctrl+A        　    # 行前    Ctrl+E        　    # 行尾    Ctrl+S        　    # 终端锁屏    Ctrl+Q        　　  # 解锁屏    Ctrl+D      　　    # 退出}开机启动模式{    vi /etc/inittab    id:3:initdefault:    # 3为多用户命令    #ca::ctrlaltdel:/sbin/shutdown -t3 -r now   # 注释此行 禁止 ctrl+alt+del 关闭计算机}终端提示显示{    echo $PS1                   # 环境变量控制提示显示    PS1=&apos;[\u@ \H \w \A \@#]\$&apos;    PS1=&apos;[\u@\h \W]\$&apos;    export PS1=&apos;[\[\e[32m\]\[\e[31m\]\u@\[\e[36m\]\h \w\[\e[m\]]\$ &apos;     # 高亮显示终端}定时任务{    at 5pm + 3 days /bin/ls  # 单次定时任务 指定三天后下午5:00执行/bin/ls    crontab -e               # 编辑周期任务    #分钟  小时    天  月  星期   命令或脚本    1,30  1-3/2    *   *   *      命令或脚本  &gt;&gt; file.log 2&gt;&amp;1    echo &quot;40 7 * * 2 /root/sh&quot;&gt;&gt;/var/spool/cron/root    # 直接将命令写入周期任务    crontab -l                                          # 查看自动周期性任务    crontab -r                                          # 删除自动周期性任务    cron.deny和cron.allow                               # 禁止或允许用户使用周期任务    service crond start|stop|restart                    # 启动自动周期性服务    * * * * *  echo &quot;d&quot; &gt;&gt;d$(date +\%Y\%m\%d).log       # 让定时任务直接生成带日期的log  需要转义%}date{    星期日[SUN] 星期一[MON] 星期二[TUE] 星期三[WED] 星期四[THU] 星期五[FRI] 星期六[SAT]    一月[JAN] 二月[FEB] 三月[MAR] 四月[APR] 五月[MAY] 六月[JUN] 七月[JUL] 八月[AUG] 九月[SEP] 十月[OCT] 十一月[NOV] 十二月[DEC]    date -s 20091112                     # 设日期    date -s 18:30:50                     # 设时间    date -d &quot;7 days ago&quot; +%Y%m%d         # 7天前日期    date -d &quot;5 minute ago&quot; +%H:%M        # 5分钟前时间    date -d &quot;1 month ago&quot; +%Y%m%d        # 一个月前    date -d &apos;1 days&apos; +%Y-%m-%d           # 一天后    date -d &apos;1 hours&apos; +%H:%M:%S          # 一小时后    date +%Y-%m-%d -d &apos;20110902&apos;         # 日期格式转换    date +%Y-%m-%d_%X                    # 日期和时间    date +%N                             # 纳秒    date -d &quot;2012-08-13 14:00:23&quot; +%s    # 换算成秒计算(1970年至今的秒数)    date -d &quot;@1363867952&quot; +%Y-%m-%d-%T   # 将时间戳换算成日期    date -d &quot;1970-01-01 UTC 1363867952 seconds&quot; +%Y-%m-%d-%T  # 将时间戳换算成日期    date -d &quot;`awk -F. &apos;{print $1}&apos; /proc/uptime` second ago&quot; +&quot;%Y-%m-%d %H:%M:%S&quot;    # 格式化系统启动时间(多少秒前)}limits.conf{    ulimit -SHn 65535  # 临时设置文件描述符大小 进程最大打开文件柄数 还有socket最大连接数, 等同配置 nofile    ulimit -SHu 65535  # 临时设置用户最大进程数    ulimit -a          # 查看    /etc/security/limits.conf    # 文件描述符大小  open files    # lsof |wc -l   查看当前文件句柄数使用数量    * soft nofile 16384         # 设置太大，进程使用过多会把机器拖死    * hard nofile 32768    # 用户最大进程数  max user processes    # echo $((`ps uxm |wc -l`-`ps ux |wc -l`))  查看当前用户占用的进程数 [包括线程]    user soft nproc 16384    user hard nproc 32768    # 如果/etc/security/limits.d/有配置文件，将会覆盖/etc/security/limits.conf里的配置    # 即/etc/security/limits.d/的配置文件里就不要有同样的参量设置    /etc/security/limits.d/90-nproc.conf    # centos6.3的默认这个文件会覆盖 limits.conf    user soft nproc 16384    user hard nproc 32768    sysctl -p    # 修改配置文件后让系统生效}随机分配端口范围{    # 本机连其它端口用的    echo &quot;10000 65535&quot; &gt; /proc/sys/net/ipv4/ip_local_port_range}百万长链接设置{    # 内存消耗需要较大    vim /root/.bash_profile    # 添加如下2行,退出bash重新登陆    # 一个进程不能使用超过NR_OPEN文件描述符    echo 20000500 &gt; /proc/sys/fs/nr_open    # 当前用户最大文件数    ulimit -n 10000000}libc.so故障修复{    # 由于升级glibc导致libc.so不稳定,突然报错,幸好还有未退出的终端    grep: error while loading shared libraries: /lib64/libc.so.6: ELF file OS ABI invalid    # 看看当前系统有多少版本 libc.so    ls /lib64/libc-[tab]    # 更改环境变量指向其他 libc.so 文件测试    export LD_PRELOAD=/lib64/libc-2.7.so    # 如果不改变LD_PRELOAD变量,ln不能用,需要使用 /sbin/sln 命令做链接    # 当前如果好使了，在执行下面强制替换软链接。如不好使，测试其他版本的libc.so文件    ln -f -s /lib64/libc-2.7.so /lib64/libc.so.6}sudo{    echo myPassword | sudo -S ls /tmp  # 直接输入sudo的密码非交互,从标准输入读取密码而不是终端设备    visudo                             # sudo命令权限添加  /etc/sudoers    用户  别名(可用all)=NOPASSWD:命令1,命令2    user  ALL=NOPASSWD:/bin/su         # 免root密码切换root身份    wangming linuxfan=NOPASSWD:/sbin/apache start,/sbin/apache restart    UserName ALL=(ALL) ALL    UserName ALL=(ALL) NOPASSWD: ALL    peterli        ALL=(ALL)       NOPASSWD:/sbin/service    Defaults requiretty                # sudo不允许后台运行,注释此行既允许    Defaults !visiblepw                # sudo不允许远程,去掉!既允许}grub开机启动项添加{    vim /etc/grub.conf    title ms-dos    rootnoverify (hd0,0)    chainloader +1}stty{    #stty时一个用来改变并打印终端行设置的常用命令    stty iuclc          # 在命令行下禁止输出大写    stty -iuclc         # 恢复输出大写    stty olcuc          # 在命令行下禁止输出小写    stty -olcuc         # 恢复输出小写    stty size           # 打印出终端的行数和列数    stty eof &quot;string&quot;   # 改变系统默认ctrl+D来表示文件的结束    stty -echo          # 禁止回显    stty echo           # 打开回显    stty -echo;read;stty echo;read  # 测试禁止回显    stty igncr          # 忽略回车符    stty -igncr         # 恢复回车符    stty erase &apos;#&apos;      # 将#设置为退格字符    stty erase &apos;^?&apos;     # 恢复退格字符    定时输入{        timeout_read(){            timeout=$1            old_stty_settings=`stty -g`　　# save current settings            stty -icanon min 0 time 100　　# set 10seconds,not 100seconds            eval read varname　　          # =read $varname            stty &quot;$old_stty_settings&quot;　　  # recover settings        }        read -t 10 varname    # 更简单的方法就是利用read命令的-t选项    }    检测用户按键{        #!/bin/bash        old_tty_settings=$(stty -g)   # 保存老的设置(为什么?).        stty -icanon        Keypress=$(head -c1)          # 或者使用$(dd bs=1 count=1 2&gt; /dev/null)        echo &quot;Key pressed was \&quot;&quot;$Keypress&quot;\&quot;.&quot;        stty &quot;$old_tty_settings&quot;      # 恢复老的设置.        exit 0    }}iptables{    内建三个表：nat mangle 和 filter    filter预设规则表，有INPUT、FORWARD 和 OUTPUT 三个规则链    vi /etc/sysconfig/iptables    # 配置文件    INPUT    # 进入    FORWARD  # 转发    OUTPUT   # 出去    ACCEPT   # 将封包放行    REJECT   # 拦阻该封包    DROP     # 丢弃封包不予处理    -A       # 在所选择的链(INPUT等)末添加一条或更多规则    -D       # 删除一条    -E       # 修改    -p       # tcp、udp、icmp    0相当于所有all    !取反    -P       # 设置缺省策略(与所有链都不匹配强制使用此策略)    -s       # IP/掩码    (IP/24)    主机名、网络名和清楚的IP地址 !取反    -j       # 目标跳转，立即决定包的命运的专用内建目标    -i       # 进入的（网络）接口 [名称] eth0    -o       # 输出接口[名称]    -m       # 模块    --sport  # 源端口    --dport  # 目标端口    iptables -F                        # 将防火墙中的规则条目清除掉  # 注意: iptables -P INPUT ACCEPT    iptables-restore &lt; 规则文件        # 导入防火墙规则    /etc/init.d/iptables save          # 保存防火墙设置    /etc/init.d/iptables restart       # 重启防火墙服务    iptables -L -n                     # 查看规则    iptables -t nat -nL                # 查看转发    iptables实例{        iptables -L INPUT                   # 列出某规则链中的所有规则        iptables -X allowed                 # 删除某个规则链 ,不加规则链，清除所有非内建的        iptables -Z INPUT                   # 将封包计数器归零        iptables -N allowed                 # 定义新的规则链        iptables -P INPUT DROP              # 定义过滤政策        iptables -A INPUT -s 192.168.1.1    # 比对封包的来源IP   # ! 192.168.0.0/24  ! 反向对比        iptables -A INPUT -d 192.168.1.1    # 比对封包的目的地IP        iptables -A INPUT -i eth0           # 比对封包是从哪片网卡进入        iptables -A FORWARD -o eth0         # 比对封包要从哪片网卡送出 eth+表示所有的网卡        iptables -A INPUT -p tcp            # -p ! tcp 排除tcp以外的udp、icmp。-p all所有类型        iptables -D INPUT 8                 # 从某个规则链中删除一条规则        iptables -D INPUT --dport 80 -j DROP         # 从某个规则链中删除一条规则        iptables -R INPUT 8 -s 192.168.0.1 -j DROP   # 取代现行规则        iptables -I INPUT 8 --dport 80 -j ACCEPT     # 插入一条规则        iptables -A INPUT -i eth0 -j DROP            # 其它情况不允许        iptables -A INPUT -p tcp -s IP -j DROP       # 禁止指定IP访问        iptables -A INPUT -p tcp -s IP --dport port -j DROP               # 禁止指定IP访问端口        iptables -A INPUT -s IP -p tcp --dport port -j ACCEPT             # 允许在IP访问指定端口        iptables -A INPUT -p tcp --dport 22 -j DROP                       # 禁止使用某端口        iptables -A INPUT -i eth0 -p icmp -m icmp --icmp-type 8 -j DROP   # 禁止icmp端口        iptables -A INPUT -i eth0 -p icmp -j DROP                         # 禁止icmp端口        iptables -t filter -A INPUT -i eth0 -p tcp --syn -j DROP                  # 阻止所有没有经过你系统授权的TCP连接        iptables -A INPUT -f -m limit --limit 100/s --limit-burst 100 -j ACCEPT   # IP包流量限制        iptables -A INPUT -i eth0 -s 192.168.62.1/32 -p icmp -m icmp --icmp-type 8 -j ACCEPT  # 除192.168.62.1外，禁止其它人ping我的主机        iptables -A INPUT -p tcp -m tcp --dport 80 -m state --state NEW -m recent --update --seconds 5 --hitcount 20 --rttl --name WEB --rsource -j DROP  # 可防御cc攻击(未测试)    }    iptables配置实例文件{        # Generated by iptables-save v1.2.11 on Fri Feb  9 12:10:37 2007        *filter        :INPUT ACCEPT [637:58967]        :FORWARD DROP [0:0]        :OUTPUT ACCEPT [5091:1301533]        # 允许的IP或IP段访问 建议多个        -A INPUT -s 127.0.0.1 -p tcp -j ACCEPT        -A INPUT -s 192.168.0.0/255.255.0.0 -p tcp -j ACCEPT        # 开放对外开放端口        -A INPUT -p tcp --dport 80 -j ACCEPT        # 指定某端口针对IP开放        -A INPUT -s 192.168.10.37 -p tcp --dport 22 -j ACCEPT        # 拒绝所有协议(INPUT允许)        -A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,URG RST -j DROP        # 允许已建立的或相关连的通行        -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT        # 拒绝ping        -A INPUT -p tcp -m tcp -j REJECT --reject-with icmp-port-unreachable        COMMIT        # Completed on Fri Feb  9 12:10:37 2007    }    iptables配置实例{        # 允许某段IP访问任何端口        iptables -A INPUT -s 192.168.0.3/24 -p tcp -j ACCEPT        # 设定预设规则 (拒绝所有的数据包，再允许需要的,如只做WEB服务器.还是推荐三个链都是DROP)        iptables -P INPUT DROP        iptables -P FORWARD DROP        iptables -P OUTPUT ACCEPT        # 注意: 直接设置这三条会掉线        # 开启22端口        iptables -A INPUT -p tcp --dport 22 -j ACCEPT        # 如果OUTPUT 设置成DROP的，要写上下面一条        iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT        # 注:不写导致无法SSH.其他的端口一样,OUTPUT设置成DROP的话,也要添加一条链        # 如果开启了web服务器,OUTPUT设置成DROP的话,同样也要添加一条链        iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT        # 做WEB服务器,开启80端口 ,其他同理        iptables -A INPUT -p tcp --dport 80 -j ACCEPT        # 做邮件服务器,开启25,110端口        iptables -A INPUT -p tcp --dport 110 -j ACCEPT        iptables -A INPUT -p tcp --dport 25 -j ACCEPT        # 允许icmp包通过,允许ping        iptables -A OUTPUT -p icmp -j ACCEPT (OUTPUT设置成DROP的话)        iptables -A INPUT -p icmp -j ACCEPT  (INPUT设置成DROP的话)        # 允许loopback!(不然会导致DNS无法正常关闭等问题)        IPTABLES -A INPUT -i lo -p all -j ACCEPT (如果是INPUT DROP)        IPTABLES -A OUTPUT -o lo -p all -j ACCEPT(如果是OUTPUT DROP)    }    centos6的iptables基本配置{        *filter        :INPUT ACCEPT [0:0]        :FORWARD ACCEPT [0:0]        :OUTPUT ACCEPT [0:0]        -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT        -A INPUT -p icmp -j ACCEPT        -A INPUT -i lo -j ACCEPT        -A INPUT -s 222.186.135.61 -p tcp -j ACCEPT        -A INPUT -p tcp  --dport 80 -j ACCEPT        -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT        -A INPUT -j REJECT --reject-with icmp-host-prohibited        -A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,URG RST -j DROP        -A FORWARD -j REJECT --reject-with icmp-host-prohibited        COMMIT    }    添加网段转发{        # 例如通过vpn上网        echo 1 &gt; /proc/sys/net/ipv4/ip_forward       # 在内核里打开ip转发功能        iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -j MASQUERADE  # 添加网段转发        iptables -t nat -A POSTROUTING -s 10.0.0.0/255.0.0.0 -o eth0 -j SNAT --to 192.168.10.158  # 原IP网段经过哪个网卡IP出去        iptables -t nat -nL                # 查看转发    }    端口映射{        # 内网通过有外网IP的机器映射端口        # 内网主机添加路由        route add -net 10.10.20.0 netmask 255.255.255.0 gw 10.10.20.111     # 内网需要添加默认网关，并且网关开启转发        # 网关主机        echo 1 &gt; /proc/sys/net/ipv4/ip_forward       # 在内核里打开ip转发功能        iptables -t nat -A PREROUTING -d 外网IP  -p tcp --dport 9999 -j DNAT --to 10.10.20.55:22    # 进入        iptables -t nat -A POSTROUTING -s 10.10.20.0/24 -j SNAT --to 外网IP                         # 转发回去        iptables -t nat -nL                # 查看转发    }}</code></pre><p>}</p><p>4 服务{</p><pre><code>/etc/init.d/sendmail start                   # 启动服务/etc/init.d/sendmail stop                    # 关闭服务/etc/init.d/sendmail status                  # 查看服务当前状态/date/mysql/bin/mysqld_safe --user=mysql &amp;   # 启动mysql后台运行vi /etc/rc.d/rc.local                        # 开机启动执行  可用于开机启动脚本/etc/rc.d/rc3.d/S55sshd                      # 开机启动和关机关闭服务连接    # S开机start  K关机stop  55级别 后跟服务名ln -s -f /date/httpd/bin/apachectl /etc/rc.d/rc3.d/S15httpd   # 将启动程序脚本连接到开机启动目录ipvsadm -ln                                  # lvs查看后端负载机并发ipvsadm -C                                   # lvs清除规则xm list                                      # 查看xen虚拟主机列表virsh                                        # 虚拟化(xen\kvm)管理工具  yum groupinstall Virtual*./bin/httpd -M                               # 查看httpd加载模块httpd -t -D DUMP_MODULES                     # rpm包httpd查看加载模块echo 内容| /bin/mail -s &quot;标题&quot; 收件箱 -f 发件人       # 发送邮件&quot;`echo &quot;内容&quot;|iconv -f utf8 -t gbk`&quot; | /bin/mail -s &quot;`echo &quot;标题&quot;|iconv -f utf8 -t gbk`&quot; 收件箱     # 解决邮件乱码/usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg   # 检测nagios配置文件chkconfig{    chkconfig 服务名 on|off|set              # 设置非独立服务启状态    chkconfig --level 35   httpd   off       # 让服务不自动启动    chkconfig --level 35   httpd   on        # 让服务自动启动 35指的是运行级别    chkconfig --list                         # 查看所有服务的启动状态    chkconfig --list |grep httpd             # 查看某个服务的启动状态    chkconfig –-list [服务名称]              # 查看服务的状态}nginx{    yum install -y make gcc  openssl-devel pcre-devel  bzip2-devel libxml2 libxml2-devel curl-devel libmcrypt-devel libjpeg libjpeg-devel libpng libpng-devel openssl    groupadd nginx    useradd nginx -g nginx -M -s /sbin/nologin    mkdir -p /opt/nginx-tmp    wget http://labs.frickle.com/files/ngx_cache_purge-1.6.tar.gz    tar fxz ngx_cache_purge-1.6.tar.gz    # ngx_cache_purge 清除指定url缓存    # 假设一个URL为 http://192.168.12.133/test.txt    # 通过访问      http://192.168.12.133/purge/test.txt  就可以清除该URL的缓存。    tar zxvpf nginx-1.4.4.tar.gz    cd nginx-1.4.4    # ./configure --help    # --with                 # 默认不加载 需指定编译此参数才使用    # --without              # 默认加载，可用此参数禁用    # --add-module=path      # 添加模块的路径    # --add-module=/opt/ngx_module_upstream_check \         # nginx 代理状态页面    # ngx_module_upstream_check  编译前需要打对应版本补丁 patch -p1 &lt; /opt/nginx_upstream_check_module/check_1.2.6+.patch    # --add-module=/opt/ngx_module_memc \                   # 将请求页面数据存放在 memcached中    # --add-module=/opt/ngx_module_lua \                    # 支持lua脚本 yum install lua-devel lua    ./configure \    --user=nginx \    --group=nginx \    --prefix=/usr/local/nginx \    --with-http_ssl_module \    --with-http_realip_module \    --with-http_gzip_static_module \    --with-http_stub_status_module \    --add-module=/opt/ngx_cache_purge-1.6 \    --http-client-body-temp-path=/opt/nginx-tmp/client \    --http-proxy-temp-path=/opt/nginx-tmp/proxy \    --http-fastcgi-temp-path=/opt/nginx-tmp/fastcgi \    --http-uwsgi-temp-path=/opt/nginx-tmp/uwsgi \    --http-scgi-temp-path=/opt/nginx-tmp/scgi    make &amp;&amp; make install    /usr/local/nginx/sbin/nginx –t             # 检查Nginx配置文件 但并不执行    /usr/local/nginx/sbin/nginx -t -c /opt/nginx/conf/nginx.conf  # 检查Nginx配置文件    /usr/local/nginx/sbin/nginx                # 启动nginx    /usr/local/nginx/sbin/nginx -s reload      # 重载配置    /usr/local/nginx/sbin/nginx -s stop        # 关闭nginx服务}httpd{    编译参数{        # so模块用来提供DSO支持的apache核心模块        # 如果编译中包含任何DSO模块，则mod_so会被自动包含进核心。        # 如果希望核心能够装载DSO，但不实际编译任何DSO模块，则需明确指定&quot;--enable-so=static&quot;        ./configure --prefix=/usr/local/apache --enable-so --enable-mods-shared=most --enable-rewrite --enable-forward  # 实例编译        --with-mpm=worker         # 已worker方式运行        --with-apxs=/usr/local/apache/bin/apxs  # 制作apache的动态模块DSO rpm包 httpd-devel  #编译模块 apxs -i -a -c mod_foo.c        --enable-so               # 让Apache可以支持DSO模式        --enable-mods-shared=most # 告诉编译器将所有标准模块都动态编译为DSO模块        --enable-rewrite          # 支持地址重写功能        --enable-module=most      # 用most可以将一些不常用的，不在缺省常用模块中的模块编译进来        --enable-mods-shared=all  # 意思是动态加载所有模块，如果去掉-shared话，是静态加载所有模块        --enable-expires          # 可以添加文件过期的限制，有效减轻服务器压力，缓存在用户端，有效期内不会再次访问服务器，除非按f5刷新，但也导致文件更新不及时        --enable-deflate          # 压缩功能，网页可以达到40%的压缩，节省带宽成本，但会对cpu压力有一点提高        --enable-headers          # 文件头信息改写，压缩功能需要        --disable-MODULE          # 禁用MODULE模块(仅用于基本模块)        --enable-MODULE=shared    # 将MODULE编译为DSO(可用于所有模块)        --enable-mods-shared=MODULE-LIST   # 将MODULE-LIST中的所有模块都编译成DSO(可用于所有模块)        --enable-modules=MODULE-LIST       # 将MODULE-LIST静态连接进核心(可用于所有模块)        # 上述 MODULE-LIST 可以是:        1、用引号界定并且用空格分隔的模块名列表  --enable-mods-shared=&apos;headers rewrite dav&apos;        2、&quot;most&quot;(大多数模块)  --enable-mods-shared=most        3、&quot;all&quot;(所有模块)    }    转发{        #针对非80端口的请求处理        RewriteCond %{SERVER_PORT} !^80$        RewriteRule ^/(.*)         http://fully.qualified.domain.name:%{SERVER_PORT}/$1 [L,R]        RewriteCond %{HTTP_HOST} ^ss.aa.com [NC]        RewriteRule  ^(.*)  http://www.aa.com/so/$1/0/p0?  [L,R=301]        #RewriteRule 只对?前处理，所以会把?后的都保留下来        #在转发后地址后加?即可取消RewriteRule保留的字符        #R的含义是redirect，即重定向，该请求不会再被apache交给后端处理，而是直接返回给浏览器进行重定向跳转。301是返回的http状态码，具体可以参考http rfc文档，跳转都是3XX。        #L是last，即最后一个rewrite规则，如果请求被此规则命中，将不会继续再向下匹配其他规则。    }}mysql源码安装{    groupadd mysql    useradd mysql -g mysql -M -s /bin/false    tar zxvf mysql-5.0.22.tar.gz    cd mysql-5.0.22    ./configure  --prefix=/usr/local/mysql \    --with-client-ldflags=-all-static \    --with-mysqld-ldflags=-all-static \    --with-mysqld-user=mysql \    --with-extra-charsets=all \    --with-unix-socket-path=/var/tmp/mysql.sock    make  &amp;&amp;   make  install    # 生成mysql用户数据库和表文件，在安装包中输入    scripts/mysql_install_db  --user=mysql    vi ~/.bashrc    export PATH=&quot;$PATH: /usr/local/mysql/bin&quot;    # 配置文件,有large,medium,small三个，根据机器性能选择    cp support-files/my-medium.cnf /etc/my.cnf    cp support-files/mysql.server /etc/init.d/mysqld    chmod 700 /etc/init.d/mysqld    cd /usr/local    chmod 750 mysql -R    chgrp mysql mysql -R    chown mysql mysql/var -R    cp  /usr/local/mysql/libexec/mysqld mysqld.old    ln -s /usr/local/mysql/bin/mysql /sbin/mysql    ln -s /usr/local/mysql/bin/mysqladmin /sbin/mysqladmin    ln -s -f /usr/local/mysql/bin/mysqld_safe /etc/rc.d/rc3.d/S15mysql5    ln -s -f /usr/local/mysql/bin/mysqld_safe /etc/rc.d/rc0.d/K15mysql5}mysql常用命令{    ./mysql/bin/mysqld_safe --user=mysql &amp;   # 启动mysql服务    ./mysql/bin/mysqladmin -uroot -p -S ./mysql/data/mysql.sock shutdown    # 停止mysql服务    mysqlcheck -uroot -p -S mysql.sock --optimize --databases account       # 检查、修复、优化MyISAM表    mysqlbinlog slave-relay-bin.000001              # 查看二进制日志(报错加绝对路径)    mysqladmin -h myhost -u root -p create dbname   # 创建数据库    flush privileges;             # 刷新    show databases;               # 显示所有数据库    use dbname;                   # 打开数据库    show tables;                  # 显示选中数据库中所有的表    desc tables;                  # 查看表结构    drop database name;           # 删除数据库    drop table name;              # 删除表    create database name;         # 创建数据库    select 列名称 from 表名称;      # 查询    show processlist;             # 查看mysql进程    show full processlist;        # 显示进程全的语句    select user();                # 查看所有用户    show slave status\G;          # 查看主从状态    show variables;               # 查看所有参数变量    show status;                  # 运行状态    show table status             # 查看表的引擎状态    show grants for dbbackup@&apos;localhost&apos;;           # 查看用户权限    drop table if exists user                       # 表存在就删除    create table if not exists user                 # 表不存在就创建    select host,user,password from user;            # 查询用户权限 先use mysql    create table ka(ka_id varchar(6),qianshu int);  # 创建表    show variables like &apos;character_set_%&apos;;          # 查看系统的字符集和排序方式的设定    show variables like &apos;%timeout%&apos;;                # 查看超时(wait_timeout)    delete from user where user=&apos;&apos;;                 # 删除空用户    delete from user where user=&apos;sss&apos; and host=&apos;localhost&apos; ;    # 删除用户    drop user &apos;sss&apos;@&apos;localhost&apos;;                                # 使用此方法删除用户更为靠谱    ALTER TABLE mytable ENGINE = MyISAM ;                       # 改变现有的表使用的存储引擎    SHOW TABLE STATUS from  库名  where Name=&apos;表名&apos;;              # 查询表引擎    mysql -uroot -p -A -ss -h10.10.10.5 -e &quot;show databases;&quot;    # shell中获取数据不带表格 -ss参数    CREATE TABLE innodb (id int, title char(20)) ENGINE = INNODB                     # 创建表指定存储引擎的类型(MyISAM或INNODB)    grant replication slave on *.* to &apos;用户&apos;@&apos;%&apos; identified by &apos;密码&apos;;               # 创建主从复制用户    ALTER TABLE player ADD INDEX weekcredit_faction_index (weekcredit, faction);     # 添加索引    alter table name add column accountid(列名)  int(11) NOT NULL(字段不为空);          # 插入字段    update host set monitor_state=&apos;Y&apos;,hostname=&apos;xuesong&apos; where ip=&apos;192.168.1.1&apos;;     # 更新数据    自增表{        create table xuesong  (id INTEGER  PRIMARY KEY AUTO_INCREMENT, name CHAR(30) NOT NULL, age integer , sex CHAR(15) );  # 创建自增表        insert into xuesong(name,age,sex) values(%s,%s,%s)  # 自增插入数据    }    登录mysql的命令{        # 格式： mysql -h 主机地址 -u 用户名 -p 用户密码        mysql -h110.110.110.110 -P3306 -uroot -p        mysql -uroot -p -S /data1/mysql5/data/mysql.sock -A  --default-character-set=GBK    }    shell执行mysql命令{        mysql -u root -p&apos;123&apos; xuesong &lt; file.sql   # 针对指定库执行sql文件中的语句,好处不需要转义特殊符号,一条语句可以换行.不指定库执行时语句中需要先use        mysql -u$username -p$passwd -h$dbhost -P$dbport -A -e &quot;        use $dbname;        delete from data where date=(&apos;$date1&apos;);        &quot;    # 执行多条mysql命令        mysql -uroot -p -S mysql.sock -e &quot;use db;alter table gift add column accountid  int(11) NOT NULL;flush privileges;&quot;    # 不登陆mysql插入字段    }    备份数据库{        mysqldump -h host -u root -p --default-character-set=utf8 dbname &gt;dbname_backup.sql               # 不包括库名，还原需先创建库，在use        mysqldump -h host -u root -p --database --default-character-set=utf8 dbname &gt;dbname_backup.sql    # 包括库名，还原不需要创建库        /bin/mysqlhotcopy -u root -p    # mysqlhotcopy只能备份MyISAM引擎        mysqldump -u root -p -S mysql.sock --default-character-set=utf8 dbname table1 table2  &gt; /data/db.sql    # 备份表        mysqldump -uroot -p123  -d database &gt; database.sql    # 备份数据库结构        # 最小权限备份        grant select on db_name.* to dbbackup@&quot;localhost&quot; Identified by &quot;passwd&quot;;        # --single-transaction  InnoDB有时间戳 只备份开始那一刻的数据,备份过程中的数据不会备份        mysqldump -hlocalhost -P 3306 -u dbbackup --single-transaction  -p&quot;passwd&quot; --database dbname &gt;dbname.sql        # xtrabackup备份需单独安装软件 优点: 速度快,压力小,可直接恢复主从复制        innobackupex --user=root --password=&quot;&quot; --defaults-file=/data/mysql5/data/my_3306.cnf --socket=/data/mysql5/data/mysql.sock --slave-info --stream=tar --tmpdir=/data/dbbackup/temp /data/dbbackup/ 2&gt;/data/dbbackup/dbbackup.log | gzip 1&gt;/data/dbbackup/db50.tar.gz    }    还原数据库{        mysql -h host -u root -p dbname &lt; dbname_backup.sql        source 路径.sql   # 登陆mysql后还原sql文件    }    赋权限{        # 指定IP: $IP  本机: localhost   所有IP地址: %   # 通常指定多条        grant all on zabbix.* to user@&quot;$IP&quot;;             # 对现有账号赋予权限        grant select on database.* to user@&quot;%&quot; Identified by &quot;passwd&quot;;     # 赋予查询权限(没有用户，直接创建)        grant all privileges on database.* to user@&quot;$IP&quot; identified by &apos;passwd&apos;;         # 赋予指定IP指定用户所有权限(不允许对当前库给其他用户赋权限)        grant all privileges on database.* to user@&quot;localhost&quot; identified by &apos;passwd&apos; with grant option;   # 赋予本机指定用户所有权限(允许对当前库给其他用户赋权限)        grant select, insert, update, delete on database.* to user@&apos;ip&apos;identified by &quot;passwd&quot;;   # 开放管理操作指令        revoke all on *.* from user@localhost;     # 回收权限    }    更改密码{        update user set password=password(&apos;passwd&apos;) where user=&apos;root&apos;        mysqladmin -u root password &apos;xuesong&apos;    }    mysql忘记密码后重置{        cd /data/mysql5        /data/mysql5/bin/mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;        use mysql;        update user set password=password(&apos;123123&apos;) where user=&apos;root&apos;;    }    mysql主从复制失败恢复{        slave stop;        reset slave;        change master to master_host=&apos;10.10.10.110&apos;,master_port=3306,master_user=&apos;repl&apos;,master_password=&apos;repl&apos;,master_log_file=&apos;master-bin.000010&apos;,master_log_pos=107,master_connect_retry=60;        slave start;    }    sql语句使用变量{        use xuesong;        set @a=concat(&apos;my&apos;,weekday(curdate()));    # 组合时间变量        set @sql := concat(&apos;CREATE TABLE IF NOT EXISTS &apos;,@a,&apos;( id INT(11) NOT NULL )&apos;);   # 组合sql语句        select @sql;                    # 查看语句        prepare create_tb from @sql;    # 准备        execute create_tb;              # 执行    }    检测mysql主从复制延迟{        1、在从库定时执行更新主库中的一个timeout数值        2、同时取出从库中的timeout值对比判断从库与主库的延迟    }    mysql慢查询{        select * from information_schema.processlist where command in (&apos;Query&apos;) and time &gt;5\G      # 查询操作大于5S的进程        开启慢查询日志{            # 配置文件 /etc/my.conf            [mysqld]            log-slow-queries=/var/lib/mysql/slowquery.log         # 指定日志文件存放位置，可以为空，系统会给一个缺省的文件host_name-slow.log            long_query_time=5                                     # 记录超过的时间，默认为10s            log-queries-not-using-indexes                         # log下来没有使用索引的query,可以根据情况决定是否开启  可不加            log-long-format                                       # 如果设置了，所有没有使用索引的查询也将被记录    可不加            # 直接修改生效            show variables like &quot;%slow%&quot;;                         # 查看慢查询状态            set global slow_query_log=&apos;ON&apos;;                       # 开启慢查询日志 变量可能不同，看上句查询出来的变量        }        mysqldumpslow慢查询日志查看{            -s  # 是order的顺序，包括看了代码，主要有 c,t,l,r和ac,at,al,ar，分别是按照query次数，时间，lock的时间和返回的记录数来排序，前面加了a的时倒序            -t  # 是top n的意思，即为返回前面多少条的数据            -g  # 后边可以写一个正则匹配模式，大小写不敏感的            mysqldumpslow -s c -t 20 host-slow.log                # 访问次数最多的20个sql语句            mysqldumpslow -s r -t 20 host-slow.log                # 返回记录集最多的20个sql            mysqldumpslow -t 10 -s t -g &quot;left join&quot; host-slow.log # 按照时间返回前10条里面含有左连接的sql语句            show global status like &apos;%slow%&apos;;                     # 查看现在这个session有多少个慢查询            show variables like &apos;%slow%&apos;;                         # 查看慢查询日志是否开启，如果slow_query_log和log_slow_queries显示为on，说明服务器的慢查询日志已经开启            show variables like &apos;%long%&apos;;                         # 查看超时阀值            desc select * from wei where text=&apos;xishizhaohua&apos;\G;   # 扫描整张表 tepe:ALL  没有使用索引 key:NULL            create index text_index on wei(text);                 # 创建索引        }    }    mysql操作次数查询{        select * from information_schema.global_status;        com_select        com_delete        com_insert        com_update    }}mongodb{    一、启动{        # 不启动认证        ./mongod --port 27017 --fork --logpath=/opt/mongodb/mongodb.log --logappend --dbpath=/opt/mongodb/data/        # 启动认证        ./mongod --port 27017 --fork --logpath=/opt/mongodb/mongodb.log --logappend --dbpath=/opt/mongodb/data/ --auth        # 配置文件方式启动        cat /opt/mongodb/mongodb.conf          port=27017                       # 端口号          fork=true                        # 以守护进程的方式运行，创建服务器进程          auth=true                        # 开启用户认证          logappend=true                   # 日志采用追加方式          logpath=/opt/mongodb/mongodb.log # 日志输出文件路径          dbpath=/opt/mongodb/data/        # 数据库路径          shardsvr=true                    # 设置是否分片          maxConns=600                     # 数据库的最大连接数        ./mongod -f /opt/mongodb/mongodb.conf        # 其他参数        bind_ip         # 绑定IP  使用mongo登录需要指定对应IP        journal         # 开启日志功能,降低单机故障的恢复时间,取代dur参数        syncdelay       # 系统同步刷新磁盘的时间,默认60秒        directoryperdb  # 每个db单独存放目录,建议设置.与mysql独立表空间类似        repairpath      # 执行repair时的临时目录.如果没开启journal,出现异常重启,必须执行repair操作        # mongodb没有参数设置内存大小.使用os mmap机制缓存数据文件,在数据量不超过内存的情况下,效率非常高.数据量超过系统可用内存会影响写入性能    }    二、关闭{        # 方法一:登录mongodb        ./mongo        use admin        db.shutdownServer()        # 方法:kill传递信号  两种皆可        kill -2 pid        kill -15 pid    }    三、开启认证与用户管理{        ./mongo                      # 先登录        use admin                    # 切换到admin库        db.addUser(&quot;root&quot;,&quot;123456&quot;)                     # 创建用户        db.addUser(&apos;zhansan&apos;,&apos;pass&apos;,true)               # 如果用户的readOnly为true那么这个用户只能读取数据，添加一个readOnly用户zhansan        ./mongo 127.0.0.1:27017/mydb -uroot -p123456    # 再次登录,只能针对用户所在库登录        #虽然是超级管理员，但是admin不能直接登录其他数据库，否则报错        #Fri Nov 22 15:03:21.886 Error: 18 { code: 18, ok: 0.0, errmsg: &quot;auth fails&quot; } at src/mongo/shell/db.js:228        show collections                                # 查看链接状态 再次登录使用如下命令,显示错误未经授权        db.system.users.find();                         # 查看创建用户信息        db.system.users.remove({user:&quot;zhansan&quot;})        # 删除用户        #恢复密码只需要重启mongodb 不加--auth参数    }    四、登录{        192.168.1.5:28017      # http登录后可查看状态        ./mongo                # 默认登录后打开 test 库        ./mongo 192.168.1.5:27017/databaseName      # 直接连接某个库 不存在则创建  启动认证需要指定对应库才可登录    }    五、查看状态{        #登录后执行命令查看状态        db.runCommand({&quot;serverStatus&quot;:1})            globalLock         # 表示全局写入锁占用了服务器多少时间(微秒)            mem                # 包含服务器内存映射了多少数据,服务器进程的虚拟内存和常驻内存的占用情况(MB)            indexCounters      # 表示B树在磁盘检索(misses)和内存检索(hits)的次数.如果这两个比值开始上升,就要考虑添加内存了            backgroudFlushing  # 表示后台做了多少次fsync以及用了多少时间            opcounters         # 包含每种主要擦撞的次数            asserts            # 统计了断言的次数        #状态信息从服务器启动开始计算,如果过大就会复位,发送复位，所有计数都会复位,asserts中的roolovers值增加        #mongodb自带的命令        ./mongostat            insert     #每秒插入量            query      #每秒查询量            update     #每秒更新量            delete     #每秒删除量            locked     #锁定量            qr|qw      #客户端查询排队长度(读|写)            ar|aw      #活跃客户端量(读|写)            conn       #连接数            time       #当前时间    }    六、常用命令{        db.listCommands()     # 当前MongoDB支持的所有命令（同样可通过运行命令db.runCommand({&quot;listCommands&quot; : `1})来查询所有命令）        db.runCommand({&quot;buildInfo&quot; : 1})                # 返回MongoDB服务器的版本号和服务器OS的相关信息。        db.runCommand({&quot;collStats&quot; : 集合名})           # 返回该集合的统计信息，包括数据大小，已分配存储空间大小，索引的大小等。        db.runCommand({&quot;distinct&quot; : 集合名, &quot;key&quot; : 键, &quot;query&quot; : 查询文档})     # 返回特定文档所有符合查询文档指定条件的文档的指定键的所有不同的值。        db.runCommand({&quot;dropDatabase&quot; : 1})             # 清空当前数据库的信息，包括删除所有的集合和索引。        db.runCommand({&quot;isMaster&quot; : 1})                 # 检查本服务器是主服务器还是从服务器。        db.runCommand({&quot;ping&quot; : 1})                     # 检查服务器链接是否正常。即便服务器上锁，该命令也会立即返回。        db.runCommand({&quot;repaireDatabase&quot; : 1})          # 对当前数据库进行修复并压缩，如果数据库特别大，这个命令会非常耗时。        db.runCommand({&quot;serverStatus&quot; : 1})             # 查看这台服务器的管理统计信息。        # 某些命令必须在admin数据库下运行，如下两个命令：        db.runCommand({&quot;renameCollection&quot; : 集合名, &quot;to&quot;：集合名})     # 对集合重命名，注意两个集合名都要是完整的集合命名空间，如foo.bar, 表示数据库foo下的集合bar。        db.runCommand({&quot;listDatabases&quot; : 1})                           # 列出服务器上所有的数据库    }    七、进程控制{        db.currentOp()                  # 查看活动进程        db.$cmd.sys.inprog.findOne()    # 查看活动进程 与上面一样            opid   # 操作进程号            op     # 操作类型(查询\更新)            ns     # 命名空间,指操作的是哪个对象            query  # 如果操作类型是查询,这里将显示具体的查询内容            lockType  # 锁的类型,指明是读锁还是写锁        db.killOp(opid值)                         # 结束进程        db.$cmd.sys.killop.findOne({op:opid值})   # 结束进程    }    八、备份还原{        ./mongoexport -d test -c t1 -o t1.dat                 # 导出JSON格式            -c         # 指明导出集合            -d         # 使用库        ./mongoexport -d test -c t1 -csv -f num -o t1.dat     # 导出csv格式            -csv       # 指明导出csv格式            -f         # 指明需要导出那些例        db.t1.drop()                    # 登录后删除数据        ./mongoimport -d test -c t1 -file t1.dat                           # mongoimport还原JSON格式        ./mongoimport -d test -c t1 -type csv --headerline -file t1.dat    # mongoimport还原csv格式数据            --headerline                # 指明不导入第一行 因为第一行是列名        ./mongodump -d test -o /bak/mongodump                # mongodump数据备份        ./mongorestore -d test --drop /bak/mongodump/*       # mongorestore恢复            --drop      #恢复前先删除        db.t1.find()    #查看        # mongodump 虽然能不停机备份,但市区了获取实时数据视图的能力,使用fsync命令能在运行时复制数据目录并且不会损坏数据        # fsync会强制服务器将所有缓冲区的数据写入磁盘.配合lock还阻止对数据库的进一步写入,知道释放锁为止        # 备份在从库上备份，不耽误读写还能保证实时快照备份        db.runCommand({&quot;fsync&quot;:1,&quot;lock&quot;:1})   # 执行强制更新与写入锁        db.$cmd.sys.unlock.findOne()          # 解锁        db.currentOp()                        # 查看解锁是否正常    }    九、修复{        # 当停电或其他故障引起不正常关闭时,会造成部分数据损坏丢失        ./mongod --repair      # 修复操作:启动时候加上 --repair        # 修复过程:将所有文档导出,然后马上导入,忽略无效文档.完成后重建索引。时间较长,会丢弃损坏文档        # 修复数据还能起到压缩数据库的作用        db.repairDatabase()    # 运行中的mongodb可使用 repairDatabase 修复当前使用的数据库        {&quot;repairDatabase&quot;:1}   # 通过驱动程序    }    十、python使用mongodb{        原文: http://blog.nosqlfan.com/html/2989.html        easy_install pymongo      # 安装(python2.7+)        import pymongo        connection=pymongo.Connection(&apos;localhost&apos;,27017)   # 创建连接        db = connection.test_database                      # 切换数据库        collection = db.test_collection                    # 获取collection        # db和collection都是延时创建的，在添加Document时才真正创建        文档添加, _id自动创建            import datetime            post = {&quot;author&quot;: &quot;Mike&quot;,                &quot;text&quot;: &quot;My first blog post!&quot;,                &quot;tags&quot;: [&quot;mongodb&quot;, &quot;python&quot;, &quot;pymongo&quot;],                &quot;date&quot;: datetime.datetime.utcnow()}            posts = db.posts            posts.insert(post)            ObjectId(&apos;...&apos;)        批量插入            new_posts = [{&quot;author&quot;: &quot;Mike&quot;,                &quot;text&quot;: &quot;Another post!&quot;,                &quot;tags&quot;: [&quot;bulk&quot;, &quot;insert&quot;],                &quot;date&quot;: datetime.datetime(2009, 11, 12, 11, 14)},                {&quot;author&quot;: &quot;Eliot&quot;,                &quot;title&quot;: &quot;MongoDB is fun&quot;,                &quot;text&quot;: &quot;and pretty easy too!&quot;,                &quot;date&quot;: datetime.datetime(2009, 11, 10, 10, 45)}]            posts.insert(new_posts)            [ObjectId(&apos;...&apos;), ObjectId(&apos;...&apos;)]        获取所有collection            db.collection_names()    # 相当于SQL的show tables        获取单个文档            posts.find_one()        查询多个文档            for post in posts.find():                post        加条件的查询            posts.find_one({&quot;author&quot;: &quot;Mike&quot;})        高级查询            posts.find({&quot;date&quot;: {&quot;$lt&quot;: &quot;d&quot;}}).sort(&quot;author&quot;)        统计数量            posts.count()        加索引            from pymongo import ASCENDING, DESCENDING            posts.create_index([(&quot;date&quot;, DESCENDING), (&quot;author&quot;, ASCENDING)])        查看查询语句的性能            posts.find({&quot;date&quot;: {&quot;$lt&quot;: &quot;d&quot;}}).sort(&quot;author&quot;).explain()[&quot;cursor&quot;]            posts.find({&quot;date&quot;: {&quot;$lt&quot;: &quot;d&quot;}}).sort(&quot;author&quot;).explain()[&quot;nscanned&quot;]    }}JDK安装{    chmod 744 jdk-1.7.0_79-linux-i586.bin    ./jdk-1.7.0_79-linux-i586.bin    vi /etc/profile   # 添加环境变量    JAVA_HOME=/usr/java/jdk1.7.0_79    CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/tools.jar    PATH=$JAVA_HOME/bin:$PATH    export JAVA_HOME PATH CLASSPATH    . /etc/profile    # 加载新的环境变量    jps -ml           # 查看java进程}redis动态加内存{    ./redis-cli -h 10.10.10.11 -p 6401    save                                # 保存当前快照    config get *                        # 列出所有当前配置    config get maxmemory                # 查看指定配置    config set maxmemory  15360000000   # 动态修改最大内存配置参数}nfs{    # 依赖rpc服务通信 portmap[centos5] 或 rpcbind[centos6]    yum install nfs-utils portmap    # centos5安装    yum install nfs-utils rpcbind    # centos6安装    vim /etc/exports                 # 配置文件    # sync                           # 同步写入    # async                          # 暂存并非直接写入    # no_root_squash                 # 开放用户端使用root身份操作    # root_squash                    # 使用者身份为root则被压缩成匿名使用,即nobody,相对安全    # all_squash                     # 所有NFS的使用者身份都被压缩为匿名    /data/images 10.10.10.0/24(rw,sync,no_root_squash)    service  portmap restart         # 重启centos5的nfs依赖的rpc服务    service  rpcbind restart         # 重启centos6的nfs依赖的rpc服务    service  nfs restart             # 重启nfs服务  确保依赖 portmap 或 rpcbind 服务已启动    service  nfs reload              # 重载NFS服务配置文件    showmount -e                     # 服务端查看自己共享的服务    showmount -a                     # 显示已经与客户端连接上的目录信息    showmount -e 10.10.10.3          # 列出服务端可供使用的NFS共享  客户端测试能否访问nfs服务    mount -t nfs 10.10.10.3:/data/images/  /data/img   # 挂载nfs  如果延迟影响大加参数 noac    # 服务端的 portmap 或 rpcbind 被停止后，nfs仍然工作正常，但是umout财会提示： not found / mounted or server not reachable  重启服务器的portmap 或 rpcbind 也无济于事。 nfs也要跟着重启，否则nfs工作仍然是不正常的。    # 同时已挂载会造成NFS客户端df卡住和挂载目录无法访问。请先用 mount 查看当前挂载情况，记录挂载信息，在强制卸载挂载目录，重新挂载    umount -f /data/img/             # 强制卸载挂载目录  如还不可以  umount -l /data/img/    nfsstat -c                       # 客户机发送和拒绝的RPC和NFS调用数目的信息    nfsstat -cn                      # 显示和打印与客户机NFS调用相关的信息    nfsstat -r                       # 显示和打印客户机和服务器的与RPC调用相关的信息    nfsstat –s                       # 显示关于服务器接收和拒绝的RPC和NFS调用数目的信息}hdfs{    hdfs --help                  # 所有参数    hdfs dfs -help               # 运行文件系统命令在Hadoop文件系统    hdfs dfs -ls /logs           # 查看    hdfs dfs -ls /user/          # 查看用户    hdfs dfs -cat    hdfs dfs -df    hdfs dfs -du    hdfs dfs -rm    hdfs dfs -tail    hdfs dfs –put localSrc dest  # 上传文件    hdfs dfsadmin -help          # hdfs集群节点管理    hdfs dfsadmin -report        # 基本的文件系统统计信息}</code></pre><p>}</p><p>5 网络{</p><pre><code>rz   # 通过ssh上传小文件sz   # 通过ssh下载小文件ifconfig eth0 down                  # 禁用网卡ifconfig eth0 up                    # 启用网卡ifup eth0:0                         # 启用网卡mii-tool em1                        # 查看网线是否连接traceroute www.baidu.com            # 测试跳数vi /etc/resolv.conf                 # 设置DNS  nameserver IP 定义DNS服务器的IP地址nslookup www.moon.com               # 解析域名IPdig -x www.baidu.com                # 解析域名IPdig +trace -t A 域名                # 跟踪dnsdig +short txt hacker.wp.dg.cx      # 通过 DNS 来读取 Wikipedia 的hacker词条host -t txt hacker.wp.dg.cx         # 通过 DNS 来读取 Wikipedia 的hacker词条tcpdump tcp port 22                 # 抓包tcpdump -n -vv udp port 53          # 抓udp的dns包 并显示iplynx                                # 文本上网wget -P 路径 -O 重命名 http地址     # 下载  包名:wgetrc   -q 安静dhclient eth1                       # 自动获取IPmtr -r www.baidu.com                # 测试网络链路节点响应时间 # trace ping 结合ipcalc -m &quot;$ip&quot; -p &quot;$num&quot;           # 根据IP和主机最大数计算掩码curl -I www.baidu.com               # 查看网页http头curl -s www.baidu.com               # 不显示进度queryperf -d list -s DNS_IP -l 2    # BIND自带DNS压力测试  [list 文件格式:www.turku.fi A]telnet ip port                      # 测试端口是否开放,有些服务可直接输入命令得到返回状态echo &quot;show &quot; |nc $ip $port          # 适用于telnet一类登录得到命令返回nc -l -p port                       # 监听指定端口nc -nv -z 10.10.10.11 1080 |grep succeeded                            # 检查主机端口是否开放curl -o /dev/null -s -m 10 --connect-timeout 10 -w %{http_code} $URL  # 检查页面状态curl -X POST -d &quot;user=xuesong&amp;pwd=123&quot; http://www.abc.cn/Result       # 提交POST请求curl -s http://20140507.ip138.com/ic.asp                              # 通过IP138取本机出口外网IPcurl http://IP/ -H &quot;X-Forwarded-For: ip&quot; -H &quot;Host: www.ttlsa.com&quot;     # 连到指定IP的响应主机,HTTPserver只看 Host字段ifconfig eth0:0 192.168.1.221 netmask 255.255.255.0                   # 增加逻辑IP地址echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all                      # 禁pingnet rpc shutdown -I IP_ADDRESS -U username%password                   # 远程关掉一台WINDOWS机器wget --random-wait -r -p -e robots=off -U Mozilla www.example.com     # 递归方式下载整个网站sshpass -p &quot;$pwd&quot; rsync -avzP /dir  user@$IP:/dir/                    # 指定密码避免交互同步目录rsync -avzP --delete /dir user@$IP:/dir                               # 无差同步目录 可以快速清空大目录rsync -avzP -e &quot;ssh -p 22 -e -o StrictHostKeyChecking=no&quot; /dir user@$IP:/dir         # 指定ssh参数同步网卡流量查看{    watch more /proc/net/dev    # 实时监控流量文件系统 累计值    iptraf                      # 网卡流量查看工具    nethogs -d 5 eth0 eth1      # 按进程实时统计网络流量 epel源nethogs    iftop -i eth0 -n -P         # 实时流量监控    sar {        -n参数有6个不同的开关: DEV | EDEV | NFS | NFSD | SOCK | ALL        DEV显示网络接口信息        EDEV显示关于网络错误的统计数据        NFS统计活动的NFS客户端的信息        NFSD统计NFS服务器的信息        SOCK显示套 接字信息        ALL显示所有5个开关        sar -n DEV 1 10        rxpck/s   # 每秒钟接收的数据包        txpck/s   # 每秒钟发送的数据包        rxbyt/s   # 每秒钟接收的字节数        txbyt/s   # 每秒钟发送的字节数        rxcmp/s   # 每秒钟接收的压缩数据包        txcmp/s   # 每秒钟发送的压缩数据包        rxmcst/s  # 每秒钟接收的多播数据包    }}netstat{    # 几十万并发的情况下netstat会没有响应，建议使用 ss 命令    -a     # 显示所有连接中的Socket    -t     # 显示TCP连接    -u     # 显示UDP连接    -n     # 显示所有已建立的有效连接    netstat -anlp           # 查看链接    netstat -tnlp           # 只查看tcp监听端口    netstat -r              # 查看路由表}ss{    # netstat是遍历/proc下面每个PID目录，ss直接读/proc/net下面的统计信息。所以ss执行的时候消耗资源以及消耗的时间都比netstat少很多    ss -s          # 列出当前socket详细信息    ss -l          # 显示本地打开的所有端口    ss -tnlp       # 显示每个进程具体打开的socket    ss -ant        # 显示所有TCP socket    ss -u -a       # 显示所有UDP Socekt    ss dst 192.168.119.113         # 匹配远程地址    ss dst 192.168.119.113:http    # 匹配远程地址和端口号    ss dst 192.168.119.113:3844    # 匹配远程地址和端口号    ss src 192.168.119.103:16021   # 匹配本地地址和端口号    ss -o state established &apos;( dport = :smtp or sport = :smtp )&apos;        # 显示所有已建立的SMTP连接    ss -o state established &apos;( dport = :http or sport = :http )&apos;        # 显示所有已建立的HTTP连接    ss -x src /tmp/.X11-unix/*         # 找出所有连接X服务器的进程}并发数查看{    netstat -n | awk &apos;/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}&apos;    SYN_RECV     # 正在等待处理的请求    ESTABLISHED  # 正常数据传输状态,既当前并发数    TIME_WAIT    # 处理完毕，等待超时结束的请求    CLOSE_WAIT   # 客户端异常关闭,没有完成4次挥手  如大量可能存在攻击行为}ssh{    ssh -p 22 user@192.168.1.209                            # 从linux ssh登录另一台linux    ssh -p 22 root@192.168.1.209 CMD                        # 利用ssh操作远程主机    scp -P 22 文件 root@ip:/目录                            # 把本地文件拷贝到远程主机    scp -l 100000  文件 root@ip:/目录                       # 传输文件到远程，限制速度100M    sshpass -p &apos;密码&apos; ssh -n root@$IP &quot;echo hello&quot;          # 指定密码远程操作    ssh -o StrictHostKeyChecking=no $IP                     # ssh连接不提示yes    ssh -t &quot;su -&quot;                                           # 指定伪终端 客户端以交互模式工作    scp root@192.168.1.209:远程目录 本地目录                # 把远程指定文件拷贝到本地    pscp -h host.ip /a.sh /opt/sbin/                        # 批量传输文件    ssh -N -L2001:remotehost:80 user@somemachine            # 用SSH创建端口转发通道    ssh -t host_A ssh host_B                                # 嵌套使用SSH    ssh -t -p 22 $user@$Ip /bin/su - root -c {$Cmd};        # 远程su执行命令 Cmd=&quot;\&quot;/sbin/ifconfig eth0\&quot;&quot;    ssh-keygen -t rsa                                       # 生成密钥    ssh-copy-id -i xuesong@10.10.10.133                     # 传送key    vi $HOME/.ssh/authorized_keys                           # 公钥存放位置    sshfs name@server:/path/to/folder /path/to/mount/point  # 通过ssh挂载远程主机上的文件夹    fusermount -u /path/to/mount/point                      # 卸载ssh挂载的目录    ssh user@host cat /path/to/remotefile | diff /path/to/localfile -                # 用DIFF对比远程文件跟本地文件    su - user -c &quot;ssh user@192.168.1.1 \&quot;echo -e aa |mail -s test mail@163.com\&quot;&quot;    # 切换用户登录远程发送邮件    SSH反向连接{        # 外网A要控制内网B        ssh -NfR 1234:localhost:2223 user1@123.123.123.123 -p22    # 将A主机的1234端口和B主机的2223端口绑定，相当于远程端口映射        ss -ant   # 这时在A主机上sshd会listen本地1234端口        # LISTEN     0    128    127.0.0.1:1234       *:*        ssh localhost -p1234    # 在A主机连接本地1234端口    }}网卡配置文件{    vi /etc/sysconfig/network-scripts/ifcfg-eth0    DEVICE=eth0    BOOTPROTO=none    BROADCAST=192.168.1.255    HWADDR=00:0C:29:3F:E1:EA    IPADDR=192.168.1.55    NETMASK=255.255.255.0    NETWORK=192.168.1.0    ONBOOT=yes    TYPE=Ethernet    GATEWAY=192.168.1.1    #ARPCHECK=no     # 进制arp检查}route {    route                           # 查看路由表    route add default  gw 192.168.1.1  dev eth0                        # 添加默认路由    route add -net 172.16.0.0 netmask 255.255.0.0 gw 10.39.111.254     # 添加静态路由网关    route del -net 172.16.0.0 netmask 255.255.0.0 gw 10.39.111.254     # 删除静态路由网关}静态路由{    vim /etc/sysconfig/static-routes    any net 192.168.12.0/24 gw 192.168.0.254    any net 192.168.13.0/24 gw 192.168.0.254}解决ssh链接慢{    sed -i &apos;s/GSSAPIAuthentication yes/GSSAPIAuthentication no/&apos; /etc/ssh/sshd_config    sed -i &apos;/#UseDNS yes/a\UseDNS no&apos; /etc/ssh/sshd_config    /etc/init.d/sshd reload}ftp上传{    ftp -i -v -n $HOST &lt;&lt;END    user $USERNAME $PASSWORD    cd /ftp    mkdir data    cd data    mput *.tar.gz    bye</code></pre><p>END</p><pre><code>}nmap{    nmap -PT 192.168.1.1-111             # 先ping在扫描主机开放端口    nmap -O 192.168.1.1                  # 扫描出系统内核版本    nmap -sV 192.168.1.1-111             # 扫描端口的软件版本    nmap -sS 192.168.1.1-111             # 半开扫描(通常不会记录日志)    nmap -P0 192.168.1.1-111             # 不ping直接扫描    nmap -d 192.168.1.1-111              # 详细信息    nmap -D 192.168.1.1-111              # 无法找出真正扫描主机(隐藏IP)    nmap -p 20-30,139,60000-             # 端口范围  表示：扫描20到30号端口，139号端口以及所有大于60000的端口    nmap -P0 -sV -O -v 192.168.30.251    # 组合扫描(不ping、软件版本、内核版本、详细信息)    # 不支持windows的扫描(可用于判断是否是windows)    nmap -sF 192.168.1.1-111    nmap -sX 192.168.1.1-111    nmap -sN 192.168.1.1-111}流量切分线路{    # 程序判断进入IP线路，设置服务器路由规则控制返回    vi /etc/iproute2/rt_tables    #添加一条策略    252   bgp2  #注意策略的序号顺序    ip route add default via 第二个出口上线IP(非默认网关) dev eth1 table bgp2    ip route add from 本机第二个ip table bgp2    #查看    ip route list table 252    ip rule list    #成功后将语句添加开机启动}snmp{    snmptranslate .1.3.6.1.2.1.1.3.0    # 查看映射关系        DISMAN-EVENT-MIB::sysUpTimeInstance    snmpdf -v 1 -c public localhost                            # SNMP监视远程主机的磁盘空间    snmpnetstat -v 2c -c public -a 192.168.6.53                # SNMP获取指定IP的所有开放端口状态    snmpwalk -v 2c -c public 10.152.14.117 .1.3.6.1.2.1.1.3.0  # SNMP获取主机启动时间    # MIB安装(ubuntu)    # sudo apt-get install snmp-mibs-downloader    # sudo download-mibs    snmpwalk -v 2c -c public 10.152.14.117 sysUpTimeInstance   # SNMP通过MIB库获取主机启动时间}TC流量控制{    # 针对ip段下载速率控制    tc qdisc del dev eth0 root handle 1:                                                              # 删除控制1:    tc qdisc add dev eth0 root handle 1: htb r2q 1                                                    # 添加控制1:    tc class add dev eth0 parent 1: classid 1:1 htb rate 12mbit ceil 15mbit                           # 设置速率    tc filter add dev eth0 parent 1: protocol ip prio 16 u32 match ip dst 10.10.10.1/24 flowid 1:1    # 指定ip段控制规则    # 检查命令    tc -s -d qdisc show dev eth0    tc class show dev eth0    tc filter show dev eth0    限制上传下载{        tc qdisc del dev tun0 root        tc qdisc add dev tun0 root handle 2:0 htb        tc class add dev tun0 parent 2:1 classid 2:10 htb rate 30kbps        tc class add dev tun0 parent 2:2 classid 2:11 htb rate 30kbps        tc qdisc add dev tun0 parent 2:10 handle 1: sfq perturb 1        tc filter add dev tun0 protocol ip parent 2:0 u32 match ip dst 10.18.0.0/24 flowid 2:10        tc filter add dev tun0 parent ffff: protocol ip u32 match ip src 10.18.0.0/24 police rate 30kbps burst 10k drop flowid 2:11        tc qdisc del dev tun0 root                                     # 删除原有策略        tc qdisc add dev tun0 root handle 2:0 htb                      # 定义最顶层(根)队列规则，并指定 default 类别编号，为网络接口 eth1 绑定一个队列，类型为 htb，并指定了一个 handle 句柄 2:0 用于标识它下面的子类        tc class add dev tun0 parent 2:1 classid 2:10 htb rate 30kbps  # 设置一个规则速度是30kbps        tc class add dev tun0 parent 2:2 classid 2:11 htb rate 30kbps        tc qdisc add dev tun0 parent 2:10 handle 1: sfq perturb 1      # 调用随机公平算法        tc filter add dev tun0 protocol ip parent 2:0 u32 match ip dst 10.18.0.0/24 flowid 2:10  # 规则2:10应用在目标地址上，即下载        tc filter add dev tun0 parent ffff: protocol ip u32 match ip src 10.18.0.0/24 police rate 30kbps burst 10k drop flowid 2:11 # 上传限速    }}</code></pre><p>}</p><p>6 磁盘{</p><pre><code>df -Ph                                # 查看硬盘容量df -T                                 # 查看磁盘分区格式df -i                                 # 查看inode节点   如果inode用满后无法创建文件du -h 目录                            # 检测目录下所有文件大小du -sh *                              # 显示当前目录中子目录的大小mount -l                              # 查看分区挂载情况fdisk -l                              # 查看磁盘分区状态fdisk /dev/hda3                       # 分区mkfs -t ext3  /dev/hda3               # 格式化分区fsck -y /dev/sda6                     # 对文件系统修复lsof |grep delete                     # 释放进程占用磁盘空间  列出进程后，查看文件是否存在，不存在则kill掉此进程tmpwatch -afv 10   /tmp               # 删除10小时内未使用的文件  勿在重要目录使用cat /proc/filesystems                 # 查看当前系统支持文件系统mount -o remount,rw /                 # 修改只读文件系统为读写iotop                                 # 磁盘IO占用情况排序   yum install iotopsmartctl -H /dev/sda                  # 检测硬盘状态  # yum install smartmontoolssmartctl -i /dev/sda                  # 检测硬盘信息smartctl -a /dev/sda                  # 检测所有信息e2label /dev/sda5                     # 查看卷标e2label /dev/sda5 new-label           # 创建卷标ntfslabel -v /dev/sda8 new-label      # NTFS添加卷标tune2fs -j /dev/sda                   # ext2分区转ext3分区tune2fs -l /dev/sda                   # 查看文件系统信息mke2fs -b 2048 /dev/sda5              # 指定索引块大小dumpe2fs -h /dev/sda5                 # 查看超级块的信息mount -t iso9660 /dev/dvd  /mnt       # 挂载光驱mount -t ntfs-3g /dev/sdc1 /media/yidong        # 挂载ntfs硬盘mount -t nfs 10.0.0.3:/opt/images/  /data/img   # 挂载nfs 需要重载 /etc/init.d/nfs reload  重启需要先启动 portmap 服务mount -o loop  /software/rhel4.6.iso   /mnt/    # 挂载镜像文件磁盘IO性能检测{    iostat -x 1 10    % user     # 显示了在用户级(应用程序)执行时生成的 CPU 使用率百分比。    % system   # 显示了在系统级(内核)执行时生成的 CPU 使用率百分比。    % idle     # 显示了在 CPU 空闲并且系统没有未完成的磁盘 I/O 请求时的时间百分比。    % iowait   # 显示了 CPU 空闲期间系统有未完成的磁盘 I/O 请求时的时间百分比。    rrqm/s       # 每秒进行 merge 的读操作数目。即 delta(rmerge)/s    wrqm/s       # 每秒进行 merge 的写操作数目。即 delta(wmerge)/s    r/s          # 每秒完成的读 I/O 设备次数。即 delta(rio)/s    w/s          # 每秒完成的写 I/O 设备次数。即 delta(wio)/s    rsec/s       # 每秒读扇区数。即 delta(rsect)/s    wsec/s       # 每秒写扇区数。即 delta(wsect)/s    rkB/s        # 每秒读K字节数。是 rsect/s 的一半，因为每扇区大小为512字节。(需要计算)    wkB/s        # 每秒写K字节数。是 wsect/s 的一半。(需要计算)    avgrq-sz     # 平均每次设备I/O操作的数据大小 (扇区)。delta(rsect+wsect)/delta(rio+wio)    avgqu-sz     # 平均I/O队列长度。即 delta(aveq)/s/1000 (因为aveq的单位为毫秒)。    await        # 平均每次设备I/O操作的等待时间 (毫秒)。即 delta(ruse+wuse)/delta(rio+wio)    svctm        # 平均每次设备I/O操作的服务时间 (毫秒)。即 delta(use)/delta(rio+wio)    %util        # 一秒中有百分之多少的时间用于 I/O 操作，或者说一秒中有多少时间 I/O 队列是非空的。即 delta(use)/s/1000 (因为use的单位为毫秒)    IO性能衡量标准{        1、 如果 %util 接近 100%，说明产生的I/O请求太多，I/O系统已经满负荷，该磁盘可能存在瓶颈。        2、 idle 小于70% IO压力就较大了,一般读取速度有较多的wait.        3、 同时可以结合 vmstat 查看查看b参数(等待资源的进程数)和wa参数(IO等待所占用的CPU时间的百分比,高过30%时IO压力高)        4、 svctm 一般要小于 await (因为同时等待的请求的等待时间被重复计算了),svctm 的大小一般和磁盘性能有关,CPU/内存的负荷也会对其有影响,请求过多也会间接导致 svctm 的增加. await 的大小一般取决于服务时间(svctm) 以及 I/O 队列的长度和 I/O 请求的发出模式. 如果 svctm 比较接近 await,说明 I/O 几乎没有等待时间;如果 await 远大于 svctm,说明 I/O 队列太长,应用得到的响应时间变慢,如果响应时间超过了用户可以容许的范围,这时可以考虑更换更快的磁盘,调整内核 elevator 算法,优化应用,或者升级 CPU        5、 队列长度(avgqu-sz)也可作为衡量系统 I/O 负荷的指标，但由于 avgqu-sz 是按照单位时间的平均值，所以不能反映瞬间的 I/O 洪水。    }}创建swap文件方法{    dd if=/dev/zero of=/swap bs=1024 count=4096000            # 创建一个足够大的文件    # count的值等于1024 x 你想要的文件大小, 4096000是4G    mkswap /swap                      # 把这个文件变成swap文件    swapon /swap                      # 启用这个swap文件    /swap swap swap defaults 0 0      # 在每次开机的时候自动加载swap文件, 需要在 /etc/fstab 文件中增加一行    cat /proc/swaps                   # 查看swap    swapoff -a                        # 关闭swap    swapon -a                         # 开启swap}新硬盘挂载{    fdisk /dev/sdc    p    #  打印分区    d    #  删除分区    n    #  创建分区，（一块硬盘最多4个主分区，扩展占一个主分区位置。p主分区 e扩展）    w    #  保存退出    mkfs -t ext3 -L 卷标  /dev/sdc1        # 格式化相应分区    mount /dev/sdc1  /mnt                  # 挂载    vi /etc/fstab                          # 添加开机挂载分区    LABEL=/data            /data                   ext3    defaults        1 2      # 用卷标挂载    /dev/sdb1              /data4                  ext3    defaults        1 2      # 用真实分区挂载    /dev/sdb2              /data4                  ext3    noatime,defaults        1 2    第一个数字&quot;1&quot;该选项被&quot;dump&quot;命令使用来检查一个文件系统应该以多快频率进行转储，若不需要转储就设置该字段为0    第二个数字&quot;2&quot;该字段被fsck命令用来决定在启动时需要被扫描的文件系统的顺序，根文件系统&quot;/&quot;对应该字段的值应该为1，其他文件系统应该为2。若该文件系统无需在启动时扫描则设置该字段为0    当以 noatime 选项加载（mount）文件系统时，对文件的读取不会更新文件属性中的atime信息。设置noatime的重要性是消除了文件系统对文件的写操作，文件只是简单地被系统读取。由于写操作相对读来说要更消耗系统资源，所以这样设置可以明显提高服务器的性能.wtime信息仍然有效，任何时候文件被写，该信息仍被更新。}大磁盘2T和16T分区{    parted /dev/sdb                # 针对磁盘分区    (parted) mklabel gpt           # 设置为 gpt    (parted) print    (parted) mkpart  primary 0KB 22.0TB        # 指定分区大小    Is this still acceptable to you?    Yes/No? Yes    Ignore/Cancel? Ignore    (parted) print    Model: LSI MR9271-8i (scsi)    Disk /dev/sdb: 22.0TB    Sector size (logical/physical): 512B/512B    Partition Table: gpt    Number  Start   End     Size    File system  Name     Flags     1      17.4kB  22.0TB  22.0TB               primary    (parted) quit    mkfs.ext4 /dev/sdb1        # e2fsprogs升级后支持大于16T硬盘    # 大于16T的单个分区ext4格式化报错，需要升级e2fsprogs    Size of device /dev/sdb1 too big to be expressed in 32 bits using a blocksize of 4096.    yum -y install xfsprogs    mkfs.xfs -f /dev/sdb1              # 大于16T单个分区也可以使用XFS分区,但inode占用很大,对大量的小文件支持不太好}raid原理与区别{    raid0至少2块硬盘.吞吐量大,性能好,同时读写,但损坏一个就完蛋    raid1至少2块硬盘.相当镜像,一个存储,一个备份.安全性比较高.但是性能比0弱    raid5至少3块硬盘.分别存储校验信息和数据，坏了一个根据校验信息能恢复    raid6至少4块硬盘.两个独立的奇偶系统,可坏两块磁盘,写性能非常差}</code></pre><p>}</p><p>7 用户{</p><pre><code>users                   # 显示所有的登录用户groups                  # 列出当前用户和他所属的组who -q                  # 显示所有的登录用户groupadd                # 添加组useradd user            # 建立用户passwd 用户             # 修改密码userdel -r              # 删除帐号及家目录chown -R user:group     # 修改目录拥有者(R递归)chown y\.li:mysql       # 修改所有者用户中包含点&quot;.&quot;umask                   # 设置用户文件和目录的文件创建缺省屏蔽值chgrp                   # 修改用户组finger                  # 查找用户显示信息echo &quot;xuesong&quot; | passwd user --stdin       # 非交互修改密码useradd -g www -M  -s /sbin/nologin  www   # 指定组并不允许登录的用户,nologin允许使用服务useradd -g www -M  -s /bin/false  www      # 指定组并不允许登录的用户,false最为严格useradd -d /data/song -g song song         # 创建用户并指定家目录和组usermod -l 新用户名 老用户名               # 修改用户名usermod -g user group                      # 修改用户所属组usermod -d 目录 -m 用户                    # 修改用户家目录usermod -G group user                      # 将用户添加到附加组gpasswd -d user group                      # 从组中删除用户su - user -c &quot; #命令1; &quot;                   # 切换用户执行恢复密码{    # 即进入单用户模式: 在linux出现grub后，在安装的系统上面按&quot;e&quot;，然后出现grub的配置文件，按键盘移动光标到第二行&quot;Ker……&quot;，再按&quot;e&quot;，然后在这一行的结尾加上：空格 single或者空格1回车，然后按&quot;b&quot;重启，就进入了&quot;单用户模式&quot;}特殊权限{    s或 S （SUID）：对应数值4    s或 S （SGID）：对应数值2    t或 T ：对应数值1    大S：代表拥有root权限，但是没有执行权限    小s：拥有特权且拥有执行权限，这个文件可以访问系统任何root用户可以访问的资源    T或T（Sticky）：/tmp和 /var/tmp目录供所有用户暂时存取文件，亦即每位用户皆拥有完整的权限进入该目录，去浏览、删除和移动文件}</code></pre><p>}</p><p>8 脚本{</p><pre><code>#!/bin/sh         # 在脚本第一行脚本头 # sh为当前系统默认shell,可指定为bash等shellsh -x             # 执行过程sh -n             # 检查语法(a=bbk)           # 括号创建子shell运行basename /a/b/c   # 从全路径中保留最后一层文件名或目录dirname           # 取路径$RANDOM           # 随机数$$                # 进程号source FileName   # 在当前bash环境下读取并执行FileName中的命令  # 等同 . FileNamesleep 5           # 间隔睡眠5秒trap              # 在接收到信号后将要采取的行动trap &quot;&quot; 2 3       # 禁止ctrl+c$PWD              # 当前目录$HOME             # 家目录$OLDPWD           # 之前一个目录的路径cd -              # 返回上一个目录路径local ret         # 局部变量yes               # 重复打印yes |rm -i *      # 自动回答y或者其他ls -p /home       # 区分目录和文件夹ls -d /home/      # 查看匹配完整路径time a.sh         # 测试程序执行时间echo -n aa;echo bb                    # 不换行执行下一句话 将字符串原样输出echo -e &quot;s\tss\n\n\n&quot;                 # 使转义生效echo $a | cut -c2-6                   # 取字符串中字元echo {a,b,c}{a,b,c}{a,b,c}            # 排列组合(括号内一个元素分别和其他括号内元素组合)echo $((2#11010))                     # 二进制转10进制echo aaa | tee file                   # 打印同时写入文件 默认覆盖 -a追加echo {1..10}                          # 打印10个字符printf &apos;%10s\n&apos;|tr &quot; &quot; a              # 打印10个字符pwd | awk -F/ &apos;{ print $2 }&apos;          # 返回目录名tac file |sed 1,3d|tac                # 倒置读取文件  # 删除最后3行tail -3 file                          # 取最后3行outtmp=/tmp/$$`date +%s%N`.outtmp     # 临时文件定义:(){ :|:&amp; };:                         # 著名的 fork炸弹,系统执行海量的进程,直到系统僵死echo -e &quot;\e[32m颜色\e[0m&quot;             # 打印颜色echo -e &quot;\033[32m颜色\033[m&quot;          # 打印颜色echo -e &quot;\033[0;31mL\033[0;32mO\033[0;33mV\033[0;34mE\t\033[0;35mY\033[0;36mO\033[0;32mU\e[m&quot;    # 打印颜色正则表达式{    ^              # 行首定位    $              # 行尾定位    .              # 匹配除换行符以外的任意字符    *              # 匹配0或多个重复字符    +              # 重复一次或更多次    ?              # 重复零次或一次    ?              # 结束贪婪因子 .*? 表示最小匹配    []             # 匹配一组中任意一个字符    [^]            # 匹配不在指定组内的字符    \              # 用来转义元字符    &lt;              # 词首定位符(支持vi和grep)  &lt;love    &gt;              # 词尾定位符(支持vi和grep)  love&gt;    x\{m\}         # 重复出现m次    x\{m,\}        # 重复出现至少m次    x\{m,n\}       # 重复出现至少m次不超过n次    X?             # 匹配出现零次或一次的大写字母 X    X+             # 匹配一个或多个字母 X    ()             # 括号内的字符为一组    (ab|de)+       # 匹配一连串的（最少一个） abc 或 def；abc 和 def 将匹配    [[:alpha:]]    # 代表所有字母不论大小写    [[:lower:]]    # 表示小写字母    [[:upper:]]    # 表示大写字母    [[:digit:]]    # 表示数字字符    [[:digit:][:lower:]]    # 表示数字字符加小写字母    元字符{        \d       # 匹配任意一位数字        \D       # 匹配任意单个非数字字符        \w       # 匹配任意单个字母数字下划线字符，同义词是 [:alnum:]        \W       # 匹配非数字型的字符    }    字符类:空白字符{        \s       # 匹配任意的空白符        \S       # 匹配非空白字符        \b       # 匹配单词的开始或结束        \n       # 匹配换行符        \r       # 匹配回车符        \t       # 匹配制表符        \b       # 匹配退格符        \0       # 匹配空值字符    }    字符类:锚定字符{        \b       # 匹配字边界(不在[]中时)        \B       # 匹配非字边界        \A       # 匹配字符串开头        \Z       # 匹配字符串或行的末尾        \z       # 只匹配字符串末尾        \G       # 匹配前一次m//g离开之处    }    捕获{        (exp)                # 匹配exp,并捕获文本到自动命名的组里        (?&lt;name&gt;exp)         # 匹配exp,并捕获文本到名称为name的组里，也可以写成(?&apos;name&apos;exp)        (?:exp)              # 匹配exp,不捕获匹配的文本，也不给此分组分配组号    }    零宽断言{        (?=exp)              # 匹配exp前面的位置        (?&lt;=exp)             # 匹配exp后面的位置        (?!exp)              # 匹配后面跟的不是exp的位置        (?&lt;!exp)             # 匹配前面不是exp的位置        (?#comment)          # 注释不对正则表达式的处理产生任何影响，用于注释    }    特殊字符{        http://en.wikipedia.org/wiki/Ascii_table        ^H  \010 \b        ^M  \015 \r        匹配特殊字符: ctrl+V ctrl不放在按H或M 即可输出^H,用于匹配    }}流程结构{    if判断{        if [ $a == $b ]        then            echo &quot;等于&quot;        else            echo &quot;不等于&quot;        fi    }    case分支选择{        case $xs in        0) echo &quot;0&quot; ;;        1) echo &quot;1&quot; ;;        *) echo &quot;其他&quot; ;;        esac    }    while循环{        # while true  等同   while :        # 读文件为整行读入        num=1        while [ $num -lt 10 ]        do        echo $num        ((num=$num+2))        done        ###########################        grep a  a.txt | while read a        do            echo $a        done        ###########################        while read a        do            echo $a        done &lt; a.txt    }    for循环{        # 读文件已空格分隔        w=`awk -F &quot;:&quot; &apos;{print $1}&apos; c`        for d in $w        do            $d        done        ###########################        for ((i=0;i&lt;${#o[*]};i++))        do        echo ${o[$i]}        done    }    until循环{        #  当command不为0时循环        until command        do            body        done    }    流程控制{        break N     #  跳出几层循环        continue N  #  跳出几层循环，循环次数不变        continue    #  重新循环次数不变    }}变量{    A=&quot;a b c def&quot;           # 将字符串复制给变量    A=`cmd`                 # 将命令结果赋给变量    A=$(cmd)                # 将命令结果赋给变量    eval a=\$$a             # 间接调用    i=2&amp;&amp;echo $((i+3))      # 计算后打印新变量结果    i=2&amp;&amp;echo $[i+3]        # 计算后打印新变量结果    a=$((2&gt;6?5:8))          # 判断两个值满足条件的赋值给变量    $1  $2  $*              # 位置参数 *代表所有    env                     # 查看环境变量    env | grep &quot;name&quot;       # 查看定义的环境变量    set                     # 查看环境变量和本地变量    read name               # 输入变量    readonly name           # 把name这个变量设置为只读变量,不允许再次设置    readonly                # 查看系统存在的只读文件    export name             # 变量name由本地升为环境    export name=&quot;RedHat&quot;    # 直接定义name为环境变量    export Stat$nu=2222     # 变量引用变量赋值    unset name              # 变量清除    export -n name          # 去掉只读变量    shift                   # 用于移动位置变量,调整位置变量,使$3的值赋给$2.$2的值赋予$1    name + 0                # 将字符串转换为数字    number &quot; &quot;              # 将数字转换成字符串    a=&apos;ee&apos;;b=&apos;a&apos;;echo ${!b} # 间接引用name变量的值    : ${a=&quot;cc&quot;}             # 如果a有值则不改变,如果a无值则赋值a变量为cc    数组{        A=(a b c def)         # 将变量定义为数組        ${#A[*]}              # 数组个数        ${A[*]}               # 数组所有元素,大字符串        ${A[@]}               # 数组所有元素,类似列表可迭代        ${A[2]}               # 脚本的一个参数或数组第三位    }    定义变量类型{        declare 或 typeset        -r 只读(readonly一样)        -i 整形        -a 数组        -f 函数        -x export        declare -i n=0    }    系统变量{        $0   #  脚本启动名(包括路径)        $n   #  第n个参数,n=1,2,…9        $*   #  所有参数列表(不包括脚本本身)        $@   #  所有参数列表(独立字符串)        $#   #  参数个数(不包括脚本本身)        $$   #  当前程式的PID        $!   #  执行上一个指令的PID        $?   #  执行上一个指令的返回值    }    变量引用技巧{        ${name:+value}        # 如果设置了name,就把value显示,未设置则为空        ${name:-value}        # 如果设置了name,就显示它,未设置就显示value        ${name:?value}        # 未设置提示用户错误信息value         ${name:=value}        # 如未设置就把value设置并显示&lt;写入本地中&gt;        ${#A}                 # 可得到变量中字节        ${A:4:9}              # 取变量中第4位到后面9位        ${A:(-1)}             # 倒叙取最后一个字符        ${A/www/http}         # 取变量并且替换每行第一个关键字        ${A//www/http}        # 取变量并且全部替换每行关键字        定义了一个变量： file=/dir1/dir2/dir3/my.file.txt        ${file#*/}     # 去掉第一条 / 及其左边的字串：dir1/dir2/dir3/my.file.txt        ${file##*/}    # 去掉最后一条 / 及其左边的字串：my.file.txt        ${file#*.}     # 去掉第一个 .  及其左边的字串：file.txt        ${file##*.}    # 去掉最后一个 .  及其左边的字串：txt        ${file%/*}     # 去掉最后条 / 及其右边的字串：/dir1/dir2/dir3        ${file%%/*}    # 去掉第一条 / 及其右边的字串：(空值)        ${file%.*}     # 去掉最后一个 .  及其右边的字串：/dir1/dir2/dir3/my.file        ${file%%.*}    # 去掉第一个 .  及其右边的字串：/dir1/dir2/dir3/my        #   # 是去掉左边(在键盘上 # 在 $ 之左边)        #   % 是去掉右边(在键盘上 % 在 $ 之右边)        #   单一符号是最小匹配﹔两个符号是最大匹配    }}test条件判断{    # 符号 [ ] 等同  test命令    expression为字符串操作{        -n str   # 字符串str是否不为空        -z str   # 字符串str是否为空    }    expression为文件操作{        -a     # 并且，两条件为真        -b     # 是否块文件        -p     # 文件是否为一个命名管道        -c     # 是否字符文件        -r     # 文件是否可读        -d     # 是否一个目录        -s     # 文件的长度是否不为零        -e     # 文件是否存在        -S     # 是否为套接字文件        -f     # 是否普通文件        -x     # 文件是否可执行，则为真        -g     # 是否设置了文件的 SGID 位        -u     # 是否设置了文件的 SUID 位        -G     # 文件是否存在且归该组所有        -w     # 文件是否可写，则为真        -k     # 文件是否设置了的粘贴位        -t fd  # fd 是否是个和终端相连的打开的文件描述符（fd 默认为 1）        -o     # 或，一个条件为真        -O     # 文件是否存在且归该用户所有        !      # 取反    }    expression为整数操作{        expr1 -a expr2   # 如果 expr1 和 expr2 评估为真，则为真        expr1 -o expr2   # 如果 expr1 或 expr2 评估为真，则为真    }    两值比较{        整数     字符串        -lt      &lt;         # 小于        -gt      &gt;         # 大于        -le      &lt;=        # 小于或等于        -ge      &gt;=        # 大于或等于        -eq      ==        # 等于        -ne      !=        # 不等于    }    test 10 -lt 5       # 判断大小    echo $?             # 查看上句test命令返回状态  # 结果0为真,1为假    test -n &quot;hello&quot;     # 判断字符串长度是否为0    [ $? -eq 0 ] &amp;&amp; echo &quot;success&quot; || exit　　　# 判断成功提示,失败则退出}重定向{    #  标准输出 stdout 和 标准错误 stderr  标准输入stdin    cmd 1&gt; fiel              # 把 标准输出 重定向到 file 文件中    cmd &gt; file 2&gt;&amp;1          # 把 标准输出 和 标准错误 一起重定向到 file 文件中    cmd 2&gt; file              # 把 标准错误 重定向到 file 文件中    cmd 2&gt;&gt; file             # 把 标准错误 重定向到 file 文件中(追加)    cmd &gt;&gt; file 2&gt;&amp;1         # 把 标准输出 和 标准错误 一起重定向到 file 文件中(追加)    cmd &lt; file &gt;file2        # cmd 命令以 file 文件作为 stdin(标准输入)，以 file2 文件作为 标准输出    cat &lt;&gt;file               # 以读写的方式打开 file    cmd &lt; file cmd           # 命令以 file 文件作为 stdin    cmd &lt;&lt; delimiter    cmd; #从 stdin 中读入，直至遇到 delimiter 分界符</code></pre><p>delimiter</p><pre><code>    &gt;&amp;n    # 使用系统调用 dup (2) 复制文件描述符 n 并把结果用作标准输出    &lt;&amp;n    # 标准输入复制自文件描述符 n    &lt;&amp;-    # 关闭标准输入（键盘）    &gt;&amp;-    # 关闭标准输出    n&lt;&amp;-   # 表示将 n 号输入关闭    n&gt;&amp;-   # 表示将 n 号输出关闭}运算符{    $[]等同于$(())  # $[]表示形式告诉shell求中括号中的表达式的值    ~var            # 按位取反运算符,把var中所有的二进制为1的变为0,为0的变为1    var\&lt;&lt;str       # 左移运算符,把var中的二进制位向左移动str位,忽略最左端移出的各位,最右端的各位上补上0值,每做一次按位左移就有var乘2    var&gt;&gt;str        # 右移运算符,把var中所有的二进制位向右移动str位,忽略最右移出的各位,最左的各位上补0,每次做一次右移就有实现var除以2    var&amp;str         # 与比较运算符,var和str对应位,对于每个二进制来说,如果二都为1,结果为1.否则为0    var^str         # 异或运算符,比较var和str对应位,对于二进制来说如果二者互补,结果为1,否则为0    var|str         # 或运算符,比较var和str的对应位,对于每个二进制来说,如二都该位有一个1或都是1,结果为1,否则为0    运算符优先级{        级别      运算符                                  说明        1      =,+=,-=,/=,%=,*=,&amp;=,^=,|=,&lt;&lt;=,&gt;&gt;=      # 赋值运算符        2         ||                                  # 逻辑或 前面不成功执行        3         &amp;&amp;                                  # 逻辑与 前面成功后执行        4         |                                   # 按位或        5         ^                                   # 按位异或        6         &amp;                                   # 按位与        7         ==,!=                               # 等于/不等于        8         &lt;=,&gt;=,&lt;,&gt;                           # 小于或等于/大于或等于/小于/大于        9        \&lt;&lt;,&gt;&gt;                               # 按位左移/按位右移 (无转意符号)        10        +,-                                 # 加减        11        *,/,%                               # 乘,除,取余        12        ! ,~                                # 逻辑非,按位取反或补码        13        -,+                                 # 正负    }}数学运算{    $(( ))        # 整数运算    + - * / **    # 分別为 &quot;加、減、乘、除、密运算&quot;    &amp; | ^ !       # 分別为 &quot;AND、OR、XOR、NOT&quot; 运算    %             # 余数运算    let{        let # 运算        let x=16/4        let x=5**5    }    expr{        expr 14 % 9                    # 整数运算        SUM=`expr 2 \* 3`              # 乘后结果赋值给变量        LOOP=`expr $LOOP + 1`          # 增量计数(加循环即可) LOOP=0        expr length &quot;bkeep zbb&quot;        # 计算字串长度        expr substr &quot;bkeep zbb&quot; 4 9    # 抓取字串        expr index &quot;bkeep zbb&quot; e       # 抓取第一个字符数字串出现的位置        expr 30 / 3 / 2                # 运算符号有空格        expr bkeep.doc : &apos;.*&apos;          # 模式匹配(可以使用expr通过指定冒号选项计算字符串中字符数)        expr bkeep.doc : &apos;\(.*\).doc&apos;  # 在expr中可以使用字符串匹配操作，这里使用模式抽取.doc文件附属名        数值测试{            #如果试图计算非整数，则会返回错误            rr=3.4            expr $rr + 1            expr: non-numeric argument            rr=5            expr $rr + 1            6        }    }    bc{        echo &quot;m^n&quot;|bc            # 次方计算        seq -s &apos;+&apos; 1000 |bc      # 从1加到1000        seq 1 1000 |tr &quot;\n&quot; &quot;+&quot;|sed &apos;s/+$/\n/&apos;|bc   # 从1加到1000    }}grep{    -c    # 显示匹配到得行的数目，不显示内容    -h    # 不显示文件名    -i    # 忽略大小写    -l    # 只列出匹配行所在文件的文件名    -n    # 在每一行中加上相对行号    -s    # 无声操作只显示报错，检查退出状态    -v    # 反向查找    -e    # 使用正则表达式    -w    # 精确匹配    -wc   # 精确匹配次数    -o    # 查询所有匹配字段    -P    # 使用perl正则表达式    -A3   # 打印匹配行和下三行    -B3   # 打印匹配行和上三行    -C3   # 打印匹配行和上下三行    grep -v &quot;a&quot; txt                              # 过滤关键字符行    grep -w &apos;a\&gt;&apos; txt                            # 精确匹配字符串    grep -i &quot;a&quot; txt                              # 大小写敏感    grep  &quot;a[bB]&quot; txt                            # 同时匹配大小写    grep &apos;[0-9]\{3\}&apos; txt                        # 查找0-9重复三次的所在行    grep -E &quot;word1|word2|word3&quot;   file           # 任意条件匹配    grep word1 file | grep word2 |grep word3     # 同时匹配三个    echo quan@163.com |grep -Po &apos;(?&lt;=@.).*(?=.$)&apos;                           # 零宽断言截取字符串  #　63.co    echo &quot;I&apos;m singing while you&apos;re dancing&quot; |grep -Po &apos;\b\w+(?=ing\b)&apos;      # 零宽断言匹配    echo &apos;Rx Optical Power: -5.01dBm, Tx Optical Power: -2.41dBm&apos; |grep -Po &apos;(?&lt;=:).*?(?=d)&apos;           # 取出d前面数字 # ?为最小匹配    echo &apos;Rx Optical Power: -5.01dBm, Tx Optical Power: -2.41dBm&apos; | grep -Po &apos;[-0-9.]+&apos;                # 取出d前面数字 # ?为最小匹配    echo &apos;[&quot;mem&quot;,ok],[&quot;hardware&quot;,false],[&quot;filesystem&quot;,false]&apos; |grep -Po &apos;[^&quot;]+(?=&quot;,false)&apos;             # 取出false前面的字母    echo &apos;[&quot;mem&quot;,ok],[&quot;hardware&quot;,false],[&quot;filesystem&quot;,false]&apos; |grep -Po &apos;\w+&quot;,false&apos;|grep -Po &apos;^\w+&apos;   # 取出false前面的字母    grep用于if判断{        if echo abc | grep &quot;a&quot;  &gt; /dev/null 2&gt;&amp;1        then            echo &quot;abc&quot;        else            echo &quot;null&quot;        fi    }}tr{    -c          # 用字符串1中字符集的补集替换此字符集，要求字符集为ASCII    -d          # 删除字符串1中所有输入字符    -s          # 删除所有重复出现字符序列，只保留第一个:即将重复出现字符串压缩为一个字符串    [a-z]       # a-z内的字符组成的字符串    [A-Z]       # A-Z内的字符组成的字符串    [0-9]       # 数字串    \octal      # 一个三位的八进制数，对应有效的ASCII字符    [O*n]       # 表示字符O重复出现指定次数n。因此[O*2]匹配OO的字符串    tr中特定控制字符表达方式{        \a Ctrl-G    \007    # 铃声        \b Ctrl-H    \010    # 退格符        \f Ctrl-L    \014    # 走行换页        \n Ctrl-J    \012    # 新行        \r Ctrl-M    \015    # 回车        \t Ctrl-I    \011    # tab键        \v Ctrl-X    \030    }    tr A-Z a-z                             # 将所有大写转换成小写字母    tr &quot; &quot; &quot;\n&quot;                            # 将空格替换为换行    tr -s &quot;[\012]&quot; &lt; plan.txt              # 删除空行    tr -s [&quot;\n&quot;] &lt; plan.txt                # 删除空行    tr -s &quot;[\015]&quot; &quot;[\n]&quot; &lt; file           # 删除文件中的^M，并代之以换行    tr -s &quot;[\r]&quot; &quot;[\n]&quot; &lt; file             # 删除文件中的^M，并代之以换行    tr -s &quot;[:]&quot; &quot;[\011]&quot; &lt; /etc/passwd     # 替换passwd文件中所有冒号，代之以tab键    tr -s &quot;[:]&quot; &quot;[\t]&quot; &lt; /etc/passwd       # 替换passwd文件中所有冒号，代之以tab键    echo $PATH | tr &quot;:&quot; &quot;\n&quot;               # 增加显示路径可读性    1,$!tr -d &apos;\t&apos;                         # tr在vi内使用，在tr前加处理行范围和感叹号(&apos;$&apos;表示最后一行)    tr &quot;\r&quot; &quot;\n&quot;&lt;macfile &gt; unixfile        # Mac -&gt; UNIX    tr &quot;\n&quot; &quot;\r&quot;&lt;unixfile &gt; macfile        # UNIX -&gt; Mac    tr -d &quot;\r&quot;&lt;dosfile &gt; unixfile          # DOS -&gt; UNIX  Microsoft DOS/Windows 约定，文本的每行以回车字符(\r)并后跟换行符(\n)结束    awk &apos;{ print $0&quot;\r&quot; }&apos;&lt;unixfile &gt; dosfile   # UNIX -&gt; DOS：在这种情况下，需要用awk，因为tr不能插入两个字符来替换一个字符}seq{    # 不指定起始数值，则默认为 1    -s   # 选项主要改变输出的分格符, 预设是 \n    -w   # 等位补全，就是宽度相等，不足的前面补 0    -f   # 格式化输出，就是指定打印的格式    seq 10 100               # 列出10-100    seq 1 10 |tac            # 倒叙列出    seq -s &apos;+&apos; 90 100 |bc    # 从90加到100    seq -f &apos;dir%g&apos; 1 10 | xargs mkdir     # 创建dir1-10    seq -f &apos;dir%03g&apos; 1 10 | xargs mkdir   # 创建dir001-010}trap{    信号         说明    HUP(1)     # 挂起，通常因终端掉线或用户退出而引发    INT(2)     # 中断，通常因按下Ctrl+C组合键而引发    QUIT(3)    # 退出，通常因按下Ctrl+\组合键而引发    ABRT(6)    # 中止，通常因某些严重的执行错误而引发    ALRM(14)   # 报警，通常用来处理超时    TERM(15)   # 终止，通常在系统关机时发送    trap捕捉到信号之后，可以有三种反应方式：        1、执行一段程序来处理这一信号        2、接受信号的默认操作        3、忽视这一信号    第一种形式的trap命令在shell接收到 signal list 清单中数值相同的信号时，将执行双引号中的命令串：    trap &apos;commands&apos; signal-list   # 单引号，要在shell探测到信号来的时候才执行命令和变量的替换，时间一直变    trap &quot;commands&quot; signal-list   # 双引号，shell第一次设置信号的时候就执行命令和变量的替换，时间不变}awk{    # 默认是执行打印全部 print $0    # 1为真 打印$0    # 0为假 不打印    -F   # 改变FS值(分隔符)    ~    # 域匹配    ==   # 变量匹配    !~   # 匹配不包含    =    # 赋值    !=   # 不等于    +=   # 叠加    \b   # 退格    \f   # 换页    \n   # 换行    \r   # 回车    \t   # 制表符Tab    \c   # 代表任一其他字符    -F&quot;[ ]+|[%]+&quot;  # 多个空格或多个%为分隔符    [a-z]+         # 多个小写字母    [a-Z]          # 代表所有大小写字母(aAbB...zZ)    [a-z]          # 代表所有大小写字母(ab...z)    [:alnum:]      # 字母数字字符    [:alpha:]      # 字母字符    [:cntrl:]      # 控制字符    [:digit:]      # 数字字符    [:graph:]      # 非空白字符(非空格、控制字符等)    [:lower:]      # 小写字母    [:print:]      # 与[:graph:]相似，但是包含空格字符    [:punct:]      # 标点字符    [:space:]      # 所有的空白字符(换行符、空格、制表符)    [:upper:]      # 大写字母    [:xdigit:]     # 十六进制的数字(0-9a-fA-F)    [[:digit:][:lower:]]    # 数字和小写字母(占一个字符)    内建变量{        $n            # 当前记录的第 n 个字段，字段间由 FS 分隔        $0            # 完整的输入记录        ARGC          # 命令行参数的数目        ARGIND        # 命令行中当前文件的位置 ( 从 0 开始算 )        ARGV          # 包含命令行参数的数组        CONVFMT       # 数字转换格式 ( 默认值为 %.6g)        ENVIRON       # 环境变量关联数组        ERRNO         # 最后一个系统错误的描述        FIELDWIDTHS   # 字段宽度列表 ( 用空格键分隔 )        FILENAME      # 当前文件名        FNR           # 同 NR ，但相对于当前文件        FS            # 字段分隔符 ( 默认是任何空格 )        IGNORECASE    # 如果为真（即非 0 值），则进行忽略大小写的匹配        NF            # 当前记录中的字段数(列)        NR            # 当前行数        OFMT          # 数字的输出格式 ( 默认值是 %.6g)        OFS           # 输出字段分隔符 ( 默认值是一个空格 )        ORS           # 输出记录分隔符 ( 默认值是一个换行符 )        RLENGTH       # 由 match 函数所匹配的字符串的长度        RS            # 记录分隔符 ( 默认是一个换行符 )        RSTART        # 由 match 函数所匹配的字符串的第一个位置        SUBSEP        # 数组下标分隔符 ( 默认值是 /034)        BEGIN         # 先处理(可不加文件参数)        END           # 结束时处理    }    内置函数{        gsub(r,s)          # 在整个$0中用s替代r   相当于 sed &apos;s///g&apos;        gsub(r,s,t)        # 在整个t中用s替代r        index(s,t)         # 返回s中字符串t的第一位置        length(s)          # 返回s长度        match(s,r)         # 测试s是否包含匹配r的字符串        split(s,a,fs)      # 在fs上将s分成序列a        sprint(fmt,exp)    # 返回经fmt格式化后的exp        sub(r,s)           # 用$0中最左边最长的子串代替s   相当于 sed &apos;s///&apos;        substr(s,p)        # 返回字符串s中从p开始的后缀部分        substr(s,p,n)      # 返回字符串s中从p开始长度为n的后缀部分    }    awk判断{        awk &apos;{print ($1&gt;$2)?&quot;第一排&quot;$1:&quot;第二排&quot;$2}&apos;      # 条件判断 括号代表if语句判断 &quot;?&quot;代表then &quot;:&quot;代表else        awk &apos;{max=($1&gt;$2)? $1 : $2; print max}&apos;          # 条件判断 如果$1大于$2,max值为为$1,否则为$2        awk &apos;{if ( $6 &gt; 50) print $1 &quot; Too high&quot; ;\        else print &quot;Range is OK&quot;}&apos; file        awk &apos;{if ( $6 &gt; 50) { count++;print $3 } \        else { x+5; print $2 } }&apos; file    }    awk循环{        awk &apos;{i = 1; while ( i &lt;= NF ) { print NF, $i ; i++ } }&apos; file        awk &apos;{ for ( i = 1; i &lt;= NF; i++ ) print NF,$i }&apos; file    }    awk &apos;/Tom/&apos; file               # 打印匹配到得行    awk &apos;/^Tom/{print $1}&apos;         # 匹配Tom开头的行 打印第一个字段    awk &apos;$1 !~ /ly$/&apos;              # 显示所有第一个字段不是以ly结尾的行    awk &apos;$3 &lt;40&apos;                   # 如果第三个字段值小于40才打印    awk &apos;$4==90{print $5}&apos;         # 取出第四列等于90的第五列    awk &apos;/^(no|so)/&apos; test          # 打印所有以模式no或so开头的行    awk &apos;$3 * $4 &gt; 500&apos;            # 算术运算(第三个字段和第四个字段乘积大于500则显示)    awk &apos;{print NR&quot; &quot;$0}&apos;          # 加行号    awk &apos;/tom/,/suz/&apos;              # 打印tom到suz之间的行    awk &apos;{a+=$1}END{print a}&apos;      # 列求和    awk &apos;sum+=$1{print sum}&apos;       # 将$1的值叠加后赋给sum    awk &apos;{a+=$1}END{print a/NR}&apos;   # 列求平均值    awk &apos;!s[$1 $3]++&apos; file         # 根据第一列和第三列过滤重复行    awk -F&apos;[ :\t]&apos; &apos;{print $1,$2}&apos;           # 以空格、:、制表符Tab为分隔符    awk &apos;{print &quot;&apos;&quot;$a&quot;&apos;&quot;,&quot;&apos;&quot;$b&quot;&apos;&quot;}&apos;          # 引用外部变量    awk &apos;{if(NR==52){print;exit}}&apos;           # 显示第52行    awk &apos;/关键字/{a=NR+2}a==NR {print}&apos;      # 取关键字下第几行    awk &apos;gsub(/liu/,&quot;aaaa&quot;,$1){print $0}&apos;    # 只打印匹配替换后的行    ll | awk -F&apos;[ ]+|[ ][ ]+&apos; &apos;/^$/{print $8}&apos;             # 提取时间,空格不固定    awk &apos;{$1=&quot;&quot;;$2=&quot;&quot;;$3=&quot;&quot;;print}&apos;                        # 去掉前三列    echo aada:aba|awk &apos;/d/||/b/{print}&apos;                    # 匹配两内容之一    echo aada:abaa|awk -F: &apos;$1~/d/||$2~/b/{print}&apos;         # 关键列匹配两内容之一    echo Ma asdas|awk &apos;$1~/^[a-Z][a-Z]$/{print }&apos;          # 第一个域匹配正则    echo aada:aaba|awk &apos;/d/&amp;&amp;/b/{print}&apos;                   # 同时匹配两条件    awk &apos;length($1)==&quot;4&quot;{print $1}&apos;                        # 字符串位数    awk &apos;{if($2&gt;3){system (&quot;touch &quot;$1)}}&apos;                  # 执行系统命令    awk &apos;{sub(/Mac/,&quot;Macintosh&quot;,$0);print}&apos;                # 用Macintosh替换Mac    awk &apos;{gsub(/Mac/,&quot;MacIntosh&quot;,$1); print}&apos;              # 第一个域内用Macintosh替换Mac    awk -F &apos;&apos; &apos;{ for(i=1;i&lt;NF+1;i++)a+=$i  ;print a}&apos;      # 多位数算出其每位数的总和.比如 1234， 得到 10    awk &apos;{ i=$1%10;if ( i == 0 ) {print i}}&apos;               # 判断$1是否整除(awk中定义变量引用时不能带 $ )    awk &apos;BEGIN{a=0}{if ($1&gt;a) a=$1 fi}END{print a}&apos;        # 列求最大值  设定一个变量开始为0，遇到比该数大的值，就赋值给该变量，直到结束    awk &apos;BEGIN{a=11111}{if ($1&lt;a) a=$1 fi}END{print a}&apos;    # 求最小值    awk &apos;{if(A)print;A=0}/regexp/{A=1}&apos;                    # 查找字符串并将匹配行的下一行显示出来，但并不显示匹配行    awk &apos;/regexp/{print A}{A=$0}&apos;                          # 查找字符串并将匹配行的上一行显示出来，但并不显示匹配行    awk &apos;{if(!/mysql/)gsub(/1/,&quot;a&quot;);print $0}&apos;             # 将1替换成a，并且只在行中未出现字串mysql的情况下替换    awk &apos;BEGIN{srand();fr=int(100*rand());print fr;}&apos;      # 获取随机数    awk &apos;{if(NR==3)F=1}{if(F){i++;if(i%7==1)print}}&apos;       # 从第3行开始，每7行显示一次    awk &apos;{if(NF&lt;1){print i;i=0} else {i++;print $0}}&apos;      # 显示空行分割各段的行数    echo +null:null  |awk -F: &apos;$1!~&quot;^+&quot;&amp;&amp;$2!=&quot;null&quot;{print $0}&apos;       # 关键列同时匹配    awk -v RS=@ &apos;NF{for(i=1;i&lt;=NF;i++)if($i) printf $i;print &quot;&quot;}&apos;    # 指定记录分隔符    awk &apos;{b[$1]=b[$1]$2}END{for(i in b){print i,b[i]}}&apos;              # 列叠加    awk &apos;{ i=($1%100);if ( $i &gt;= 0 ) {print $0,$i}}&apos;                 # 求余数    awk &apos;{b=a;a=$1; if(NR&gt;1){print a-b}}&apos;                            # 当前行减上一行    awk &apos;{a[NR]=$1}END{for (i=1;i&lt;=NR;i++){print a[i]-a[i-1]}}&apos;      # 当前行减上一行    awk -F: &apos;{name[x++]=$1};END{for(i=0;i&lt;NR;i++)print i,name[i]}&apos;   # END只打印最后的结果,END块里面处理数组内容    awk &apos;{sum2+=$2;count=count+1}END{print sum2,sum2/count}&apos;         # $2的总和  $2总和除个数(平均值)    awk -v a=0 -F &apos;B&apos; &apos;{for (i=1;i&lt;NF;i++){ a=a+length($i)+1;print a  }}&apos;     # 打印所以B的所在位置    awk &apos;BEGIN{ &quot;date&quot; | getline d; split(d,mon) ; print mon[2]}&apos; file        # 将date值赋给d，并将d设置为数组mon，打印mon数组中第2个元素    awk &apos;BEGIN{info=&quot;this is a test2010test!&quot;;print substr(info,4,10);}&apos;      # 截取字符串(substr使用)    awk &apos;BEGIN{info=&quot;this is a test2010test!&quot;;print index(info,&quot;test&quot;)?&quot;ok&quot;:&quot;no found&quot;;}&apos;      # 匹配字符串(index使用)    awk &apos;BEGIN{info=&quot;this is a test2010test!&quot;;print match(info,/[0-9]+/)?&quot;ok&quot;:&quot;no found&quot;;}&apos;    # 正则表达式匹配查找(match使用)    awk &apos;{for(i=1;i&lt;=4;i++)printf $i&quot;&quot;FS; for(y=10;y&lt;=13;y++)  printf $y&quot;&quot;FS;print &quot;&quot;}&apos;        # 打印前4列和后4列    awk &apos;BEGIN{for(n=0;n++&lt;9;){for(i=0;i++&lt;n;)printf i&quot;x&quot;n&quot;=&quot;i*n&quot; &quot;;print &quot;&quot;}}&apos;                # 乘法口诀    awk &apos;BEGIN{info=&quot;this is a test&quot;;split(info,tA,&quot; &quot;);print length(tA);for(k in tA){print k,tA[k];}}&apos;             # 字符串分割(split使用)    awk &apos;{if (system (&quot;grep &quot;$2&quot; tmp/* &gt; /dev/null 2&gt;&amp;1&quot;) == 0 ) {print $1,&quot;Y&quot;} else {print $1,&quot;N&quot;} }&apos; a            # 执行系统命令判断返回状态    awk  &apos;{for(i=1;i&lt;=NF;i++) a[i,NR]=$i}END{for(i=1;i&lt;=NF;i++) {for(j=1;j&lt;=NR;j++) printf a[i,j] &quot; &quot;;print &quot;&quot;}}&apos;   # 将多行转多列    netstat -an|awk -v A=$IP -v B=$PORT &apos;BEGIN{print &quot;Clients\tGuest_ip&quot;}$4~A&quot;:&quot;B{split($5,ip,&quot;:&quot;);a[ip[1]]++}END{for(i in a)print a[i]&quot;\t&quot;i|&quot;sort -nr&quot;}&apos;    # 统计IP连接个数    cat 1.txt|awk -F&quot; # &quot; &apos;{print &quot;insert into user (user,password,email)values(&quot;&quot;&apos;\&apos;&apos;&quot;$1&quot;&apos;\&apos;\,&apos;&quot;&quot;&apos;\&apos;&apos;&quot;$2&quot;&apos;\&apos;\,&apos;&quot;&quot;&apos;\&apos;&apos;&quot;$3&quot;&apos;\&apos;\)\;&apos;&quot;}&apos; &gt;&gt;insert_1.txt     # 处理sql语句    awk &apos;BEGIN{printf &quot;what is your name?&quot;;getline name &lt; &quot;/dev/tty&quot; } $1 ~name {print &quot;FOUND&quot; name &quot; on line &quot;, NR &quot;.&quot;} END{print &quot;see you,&quot; name &quot;.&quot;}&apos; file  # 两文件匹配    取本机IP{        /sbin/ifconfig |awk -v RS=&quot;Bcast:&quot; &apos;{print $NF}&apos;|awk -F: &apos;/addr/{print $2}&apos;        /sbin/ifconfig |awk &apos;/inet/&amp;&amp;$2!~&quot;127.0.0.1&quot;{split($2,a,&quot;:&quot;);print a[2]}&apos;        /sbin/ifconfig |awk -v RS=&apos;inet addr:&apos; &apos;$1!=&quot;eth0&quot;&amp;&amp;$1!=&quot;127.0.0.1&quot;{print $1}&apos;|awk &apos;{printf&quot;%s|&quot;,$0}&apos;        /sbin/ifconfig |awk  &apos;{printf(&quot;line %d,%s\n&quot;,NR,$0)}&apos;         # 指定类型(%d数字,%s字符)    }    查看磁盘空间{        df -h|awk -F&quot;[ ]+|%&quot; &apos;$5&gt;14{print $5}&apos;        df -h|awk &apos;NR!=1{if ( NF == 6 ) {print $5} else if ( NF == 5) {print $4} }&apos;        df -h|awk &apos;NR!=1 &amp;&amp; /%/{sub(/%/,&quot;&quot;);print $(NF-1)}&apos;        df -h|sed &apos;1d;/ /!N;s/\n//;s/ \+/ /;&apos;    #将磁盘分区整理成一行   可直接用 df -P    }    排列打印{        awk &apos;END{printf &quot;%-10s%-10s\n%-10s%-10s\n%-10s%-10s\n&quot;,&quot;server&quot;,&quot;name&quot;,&quot;123&quot;,&quot;12345&quot;,&quot;234&quot;,&quot;1234&quot;}&apos; txt        awk &apos;BEGIN{printf &quot;|%-10s|%-10s|\n|%-10s|%-10s|\n|%-10s|%-10s|\n&quot;,&quot;server&quot;,&quot;name&quot;,&quot;123&quot;,&quot;12345&quot;,&quot;234&quot;,&quot;1234&quot;}&apos;        awk &apos;BEGIN{        print &quot;   *** 开 始 ***   &quot;;        print &quot;+-----------------+&quot;;        printf &quot;|%-5s|%-5s|%-5s|\n&quot;,&quot;id&quot;,&quot;name&quot;,&quot;ip&quot;;        }        $1!=1 &amp;&amp; NF==4{printf &quot;|%-5s|%-5s|%-5s|\n&quot;,$1,$2,$3&quot; &quot;$11}        END{        print &quot;+-----------------+&quot;;        print &quot;   *** 结 束 ***   &quot;        }&apos; txt    }    老男孩awk经典题{        分析图片服务日志，把日志（每个图片访问次数*图片大小的总和）排行，也就是计算每个url的总访问大小        说明：本题生产环境应用：这个功能可以用于IDC网站流量带宽很高，然后通过分析服务器日志哪些元素占用流量过大，进而进行优化或裁剪该图片，压缩js等措施。        本题需要输出三个指标： 【被访问次数】    【访问次数*单个被访问文件大小】   【文件名（带URL）】        测试数据        59.33.26.105 - - [08/Dec/2010:15:43:56 +0800] &quot;GET /static/images/photos/2.jpg HTTP/1.1&quot; 200 11299        awk &apos;{array_num[$7]++;array_size[$7]+=$10}END{for(i in array_num) {print array_num[i]&quot; &quot;array_size[i]&quot; &quot;i}}&apos;    }    awk练习题{        wang     4        cui      3        zhao     4        liu      3        liu      3        chang    5        li       2        1 通过第一个域找出字符长度为4的        2 当第二列值大于3时，创建空白文件，文件名为当前行第一个域$1 (touch $1)        3 将文档中 liu 字符串替换为 hong        4 求第二列的和        5 求第二列的平均值        6 求第二列中的最大值        7 将第一列过滤重复后，列出每一项，每一项的出现次数，每一项的大小总和        1、字符串长度            awk &apos;length($1)==&quot;4&quot;{print $1}&apos;        2、执行系统命令            awk &apos;{if($2&gt;3){system (&quot;touch &quot;$1)}}&apos;        3、gsub(/r/,&quot;s&quot;,域) 在指定域(默认$0)中用s替代r  (sed &apos;s///g&apos;)            awk &apos;{gsub(/liu/,&quot;hong&quot;,$1);print $0}&apos; a.txt        4、列求和            awk &apos;{a+=$2}END{print a}&apos;        5、列求平均值            awk &apos;{a+=$2}END{print a/NR}&apos;            awk &apos;{a+=$2;b++}END{print a,a/b}&apos;        6、列求最大值            awk &apos;BEGIN{a=0}{if($2&gt;a) a=$2 }END{print a}&apos;        7、将第一列过滤重复列出每一项，每一项的出现次数，每一项的大小总和            awk &apos;{a[$1]++;b[$1]+=$2}END{for(i in a){print i,a[i],b[i]}}&apos;    }    awk处理复杂日志{        6.19：        DHB_014_号百总机服务业务日报：广州 到达数异常！        DHB_023_号百漏话提醒日报：珠海 到达数异常！        6.20：        DHB_014_号百总机服务业务日报：广州 到达数异常！到        awk -F &apos;[_ ：]+&apos; &apos;NF&gt;2{print $4,$1&quot;_&quot;$2,b |&quot;sort&quot;;next}{b=$1}&apos;        # 当前行NF小于等于2 只针对{print $4,$1&quot;_&quot;$2,b |&quot;sort&quot;;next} 有效 即 6.19：行跳过此操作,  {b=$1} 仍然执行        # 当前行NF大于2 执行到 next 强制跳过本行，即跳过后面的 {b=$1}        广州 DHB_014 6.19    }}sed{    # 先读取资料、存入模式空间、对其进行编辑、再输出、再用下一行替换模式空间内容    # 调试工具sedsed (参数 -d)   http://aurelio.net/sedsed/sedsed-1.0    -n   # 输出由编辑指令控制(取消默认的输出,必须与编辑指令一起配合)    -i   # 直接对文件操作    -e   # 多重编辑    -r   # 正则可不转移特殊字符    b    # 跳过匹配的行    p    # 打印    d    # 删除    s    # 替换    g    # 配合s全部替换    i    # 行前插入    a    # 行后插入    r    # 读    y    # 转换    q    # 退出    &amp;    # 代表查找的串内容    *    # 任意多个 前驱字符(前导符)    ?    # 0或1个 最小匹配 没加-r参数需转义 \?    $    # 最后一行    .*   # 匹配任意多个字符    \(a\)   # 保存a作为标签1(\1)    模式空间{        # 模式空间(两行两行处理) 模式匹配的范围，一般而言，模式空间是输入文本中某一行，但是可以通过使用N函数把多于一行读入模式空间        # 暂存空间里默认存储一个空行        n   # 读入下一行(覆盖上一行)        h   # 把模式空间里的行拷贝到暂存空间        H   # 把模式空间里的行追加到暂存空间        g   # 用暂存空间的内容替换模式空间的行        G   # 把暂存空间的内容追加到模式空间的行后        x   # 将暂存空间的内容于模式空间里的当前行互换        ！  # 对其前面的要匹配的范围取反        D   # 删除当前模式空间中直到并包含第一个换行符的所有字符(/.*/匹配模式空间中所有内容，匹配到就执行D,没匹配到就结束D)        N   # 追加下一个输入行到模式空间后面并在第二者间嵌入一个换行符，改变当前行号码,模式匹配可以延伸跨域这个内嵌换行        p   # 打印模式空间中的直到并包含第一个换行的所有字符    }    标签函数{        : lable # 建立命令标记，配合b，t函数使用跳转        b lable # 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。        t labe  # 判断分支，从最后一行开始，条件一旦满足或者T,t命令，将导致分支到带有标号的命令出，或者到脚本末尾。与b函数不同在于t在执行跳转前会先检查其前一个替换命令是否成功，如成功，则执行跳转。        sed -e &apos;{:p1;/A/s/A/AA/;/B/s/B/BB/;/[AB]\{10\}/b;b p1;}&apos;     # 文件内容第一行A第二行B:建立标签p1;两个替换函数(A替换成AA,B替换成BB)当A或者B达到10个以后调用b,返回        echo &apos;sd  f   f   [a    b      c    cddd    eee]&apos; | sed &apos;:n;s#\(\[[^ ]*\)  *#\1#;tn&apos;  # 标签函数t使用方法,替换[]里的空格        echo &quot;198723124.03&quot;|sed -r &apos;:a;s/([0-9]+)([0-9]{3})/\1,\2/;ta&apos;  # 每三个字符加一个逗号    }    引用外部变量{        sed -n &apos;&apos;$a&apos;,10p&apos;        sed -n &quot;&quot;$a&quot;,10p&quot;    }    sed 10q                                       # 显示文件中的前10行 (模拟&quot;head&quot;)    sed -n &apos;$=&apos;                                   # 计算行数(模拟 &quot;wc -l&quot;)    sed -n &apos;5,/^no/p&apos;                             # 打印从第5行到以no开头行之间的所有行    sed -i &quot;/^$f/d&quot; a     　　                  　# 删除匹配行    sed -i &apos;/aaa/,$d&apos;                             # 删除匹配行到末尾    sed -i &quot;s/=/:/&quot; c                             # 直接对文本替换    sed -i &quot;/^pearls/s/$/j/&quot;                      # 找到pearls开头在行尾加j    sed &apos;/1/,/3/p&apos; file                           # 打印1和3之间的行    sed -n &apos;1p&apos; 文件                              # 取出指定行    sed &apos;5i\aaa&apos; file                             # 在第5行之前插入行    sed &apos;5a\aaa&apos; file                             # 在第5行之后抽入行    echo a|sed -e &apos;/a/i\b&apos;                        # 在匹配行前插入一行    echo a|sed -e &apos;/a/a\b&apos;                        # 在匹配行后插入一行    echo a|sed &apos;s/a/&amp;\nb/g&apos;                       # 在匹配行后插入一行    seq 10| sed -e{1,3}&apos;s/./a/&apos;                   # 匹配1和3行替换    sed -n &apos;/regexp/!p&apos;                           # 只显示不匹配正则表达式的行    sed &apos;/regexp/d&apos;                               # 只显示不匹配正则表达式的行    sed &apos;$!N;s/\n//&apos;                              # 将每两行连接成一行    sed &apos;/baz/s/foo/bar/g&apos;                        # 只在行中出现字串&quot;baz&quot;的情况下将&quot;foo&quot;替换成&quot;bar&quot;    sed &apos;/baz/!s/foo/bar/g&apos;                       # 将&quot;foo&quot;替换成&quot;bar&quot;，并且只在行中未出现字串&quot;baz&quot;的情况下替换    echo a|sed -e &apos;s/a/#&amp;/g&apos;                      # 在a前面加#号    sed &apos;s/foo/bar/4&apos;                             # 只替换每一行中的第四个字串    sed &apos;s/\(.*\)foo/\1bar/&apos;                      # 替换每行最后一个字符串    sed &apos;s/\(.*\)foo\(.*foo\)/\1bar\2/&apos;           # 替换倒数第二个字符串    sed &apos;s/[0-9][0-9]$/&amp;5&apos;                        # 在以[0-9][0-9]结尾的行后加5    sed -n &apos; /^eth\|em[01][^:]/{n;p;}&apos;            # 匹配多个关键字    sed -n -r &apos; /eth|em[01][^:]/{n;p;}&apos;           # 匹配多个关键字    echo -e &quot;1\n2&quot;|xargs -i -t sed &apos;s/^/1/&apos; {}    # 同时处理多个文件    sed &apos;/west/,/east/s/$/*VACA*/&apos;                # 修改west和east之间的所有行，在结尾处加*VACA*    sed  &apos;s/[^1-9]*\([0-9]\+\).*/\1/&apos;             # 取出第一组数字，并且忽略掉开头的0    sed -n &apos;/regexp/{g;1!p;};h&apos;                   # 查找字符串并将匹配行的上一行显示出来，但并不显示匹配行    sed -n &apos; /regexp/{n;p;}&apos;                      # 查找字符串并将匹配行的下一行显示出来，但并不显示匹配行    sed -n &apos;s/\(mar\)got/\1ianne/p&apos;               # 保存\(mar\)作为标签1    sed -n &apos;s/\([0-9]\+\).*\(t\)/\2\1/p&apos;          # 保存多个标签    sed -i -e &apos;1,3d&apos; -e &apos;s/1/2/&apos;                  # 多重编辑(先删除1-3行，在将1替换成2)    sed -e &apos;s/@.*//g&apos; -e &apos;/^$/d&apos;                  # 删除掉@后面所有字符，和空行    sed -n -e &quot;{s/文本(正则)/替换的内容/p}&quot;       # 替换并打印出替换行    sed -n -e &quot;{s/^ *[0-9]*//p}&quot;                  # 打印并删除正则表达式的那部分内容    echo abcd|sed &apos;y/bd/BE/&apos;                      # 匹配字符替换    sed &apos;/^#/b;y/y/P/&apos; 2                          # 非#号开头的行替换字符    sed &apos;/suan/r 读入文件&apos;                        # 找到含suan的行，在后面加上读入的文件内容    sed -n &apos;/no/w 写入文件&apos;                       # 找到含no的行，写入到指定文件中    sed &apos;/regex/G&apos;                                # 在匹配式样行之后插入一空行    sed &apos;/regex/{x;p;x;G;}&apos;                       # 在匹配式样行之前和之后各插入一空行    sed &apos;n;d&apos;                                     # 删除所有偶数行    sed &apos;G;G&apos;                                     # 在每一行后面增加两空行    sed &apos;/^$/d;G&apos;                                 # 在输出的文本中每一行后面将有且只有一空行    sed &apos;n;n;n;n;G;&apos;                              # 在每5行后增加一空白行    sed -n &apos;5~5p&apos;                                 # 只打印行号为5的倍数    seq 1 30|sed  &apos;5~5s/.*/a/&apos;                    # 倍数行执行替换    sed -n &apos;3,${p;n;n;n;n;n;n;}&apos;                  # 从第3行开始，每7行显示一次    sed -n &apos;h;n;G;p&apos;                              # 奇偶调换    seq 1 10|sed &apos;1!G;h;$!d&apos;                      # 倒叙排列    ls -l|sed -n &apos;/^.rwx.*/p&apos;                     # 查找属主权限为7的文件    sed = filename | sed &apos;N;s/\n/\t/&apos;             # 为文件中的每一行进行编号(简单的左对齐方式)    sed &apos;s/^[ \t]*//&apos;                             # 将每一行前导的&quot;空白字符&quot;(空格，制表符)删除,使之左对齐    sed &apos;s/^[ \t]*//;s/[ \t]*$//&apos;                 # 将每一行中的前导和拖尾的空白字符删除    sed &apos;/{abc,def\}\/\[111,222]/s/^/00000/&apos;      # 匹配需要转行的字符: } / [    echo abcd\\nabcde |sed &apos;s/\\n/@/g&apos; |tr &apos;@&apos; &apos;\n&apos;        # 将换行符转换为换行    cat tmp|awk &apos;{print $1}&apos;|sort -n|sed -n &apos;$p&apos;           # 取一列最大值    sed -n &apos;{s/^[^\/]*//;s/\:.*//;p}&apos; /etc/passwd          # 取用户家目录(匹配不为/的字符和匹配:到结尾的字符全部删除)    sed = filename | sed &apos;N;s/^/      /; s/ *\(.\{6,\}\)\n/\1   /&apos;   # 对文件中的所有行编号(行号在左，文字右端对齐)    /sbin/ifconfig |sed &apos;s/.*inet addr:\(.*\) Bca.*/\1/g&apos; |sed -n &apos;/eth/{n;p}&apos;   # 取所有IP    修改keepalive配置剔除后端服务器{        sed -i &apos;/real_server.*10.0.1.158.*8888/,+8 s/^/#/&apos; keepalived.conf        sed -i &apos;/real_server.*10.0.1.158.*8888/,+8 s/^#//&apos; keepalived.conf    }    模仿rev功能{        echo 123 |sed &apos;/\n/!G;s/\(.\)\(.*\n\)/&amp;\2\1/;//D;s/.//;&apos;        /\n/!G;         　　　　　　# 没有\n换行符，要执行G,因为保留空间中为空，所以在模式空间追加一空行        s/\(.\)\(.*\n\)/&amp;\2\1/;     # 标签替换 &amp;\n23\n1$ (关键在于&amp; ,可以让后面//匹配到空行)        //D;            　　　　　　# D 命令会引起循环删除模式空间中的第一部分，如果删除后，模式空间中还有剩余行，则返回 D 之前的命令，重新执行，如果 D 后，模式空间中没有任何内容，则将退出。  //D 匹配空行执行D,如果上句s没有匹配到,//也无法匹配到空行, &quot;//D;&quot;命令结束        s/.//;          　　　　　　# D结束后,删除开头的 \n    }}xargs{    # 命令替换    -t 先打印命令，然后再执行    -i 用每项替换 {}    find / -perm +7000 | xargs ls -l                    # 将前面的内容，作为后面命令的参数    seq 1 10 |xargs  -i date -d &quot;{} days &quot; +%Y-%m-%d    # 列出10天日期}dialog菜单{    # 默认将所有输出用 stderr 输出，不显示到屏幕   使用参数  --stdout 可将选择赋给变量    # 退出状态  0正确  1错误    窗体类型{        --calendar          # 日历        --checklist         # 允许你显示一个选项列表，每个选项都可以被单独的选择 (复选框)        --form              # 表单,允许您建立一个带标签的文本字段，并要求填写        --fselect           # 提供一个路径，让你选择浏览的文件        --gauge             # 显示一个表，呈现出完成的百分比，就是显示出进度条。        --infobox           # 显示消息后，（没有等待响应）对话框立刻返回，但不清除屏幕(信息框)        --inputbox          # 让用户输入文本(输入框)        --inputmenu         # 提供一个可供用户编辑的菜单（可编辑的菜单框）        --menu              # 显示一个列表供用户选择(菜单框)        --msgbox(message)   # 显示一条消息,并要求用户选择一个确定按钮(消息框)        --password          # 密码框，显示一个输入框，它隐藏文本        --pause             # 显示一个表格用来显示一个指定的暂停期的状态        --radiolist         # 提供一个菜单项目组，但是只有一个项目，可以选择(单选框)        --tailbox           # 在一个滚动窗口文件中使用tail命令来显示文本        --tailboxbg         # 跟tailbox类似，但是在background模式下操作        --textbox           # 在带有滚动条的文本框中显示文件的内容  (文本框)        --timebox           # 提供一个窗口，选择小时，分钟，秒        --yesno(yes/no)     # 提供一个带有yes和no按钮的简单信息框    }    窗体参数{        --separate-output          # 对于chicklist组件,输出结果一次输出一行,得到结果不加引号        --ok-label &quot;提交&quot;          # 确定按钮名称        --cancel-label &quot;取消&quot;      # 取消按钮名称        --title &quot;标题&quot;             # 标题名称        --stdout                   # 将所有输出用 stdout 输出        --backtitle &quot;上标&quot;         # 窗体上标        --no-shadow                # 去掉窗体阴影        --menu &quot;菜单名&quot; 20 60 14   # 菜单及窗口大小        --clear                    # 完成后清屏操作        --no-cancel                # 不显示取消项        --insecure                 # 使用星号来代表每个字符        --begin &lt;y&gt; &lt;x&gt;            # 指定对话框左上角在屏幕的上的做坐标        --timeout &lt;秒&gt;             # 超时,返回的错误代码255,如果用户在指定的时间内没有给出相应动作,就按超时处理        --defaultno                # 使选择默认为no        --default-item &lt;str&gt;       # 设置在一份清单，表格或菜单中的默认项目。通常在框中的第一项是默认        --sleep 5                  # 在处理完一个对话框后静止(延迟)的时间(秒)        --max-input size           # 限制输入的字符串在给定的大小之内。如果没有指定，默认是2048        --keep-window              # 退出时不清屏和重绘窗口。当几个组件在同一个程序中运行时，对于保留窗口内容很有用的    }    dialog --title &quot;Check me&quot; --checklist &quot;Pick Numbers&quot; 15 25 3 1 &quot;one&quot; &quot;off&quot; 2 &quot;two&quot; &quot;on&quot;         # 多选界面[方括号]    dialog --title &quot;title&quot; --radiolist &quot;checklist&quot; 20 60 14 tag1 &quot;item1&quot; on tag2 &quot;item2&quot; off        # 单选界面(圆括号)    dialog --title &quot;title&quot; --menu &quot;MENU&quot; 20 60 14 tag1 &quot;item1&quot; tag2 &quot;item2&quot;                         # 单选界面    dialog --title &quot;Installation&quot; --backtitle &quot;Star Linux&quot; --gauge &quot;Linux Kernel&quot;  10 60 50         # 进度条    dialog --title &quot;标题&quot; --backtitle &quot;Dialog&quot; --yesno &quot;说明&quot; 20 60                                 # 选择yes/no    dialog --title &quot;公告标题&quot; --backtitle &quot;Dialog&quot; --msgbox &quot;内容&quot; 20 60                            # 公告    dialog --title &quot;hey&quot; --backtitle &quot;Dialog&quot; --infobox &quot;Is everything okay?&quot; 10 60                 # 显示讯息后立即离开    dialog --title &quot;hey&quot; --backtitle &quot;Dialog&quot; --inputbox &quot;Is okay?&quot; 10 60 &quot;yes&quot;                     # 输入对话框    dialog --title &quot;Array 30&quot; --backtitle &quot;All &quot; --textbox /root/txt 20 75                          # 显示文档内容    dialog --title &quot;Add&quot; --form &quot;input&quot; 12 40 4 &quot;user&quot; 1 1 &quot;&quot; 1 15 15 0 &quot;name&quot; 2 1 &quot;&quot; 2 15 15 0     # 多条输入对话框    dialog --title  &quot;Password&quot;  --insecure  --passwordbox  &quot;请输入密码&quot;  10  35                     # 星号显示输入--insecure    dialog --stdout --title &quot;日历&quot;  --calendar &quot;请选择&quot; 0 0 9 1 2010                                # 选择日期    dialog --title &quot;title&quot; --menu &quot;MENU&quot; 20 60 14 tag1 &quot;item1&quot; tag2 &quot;item2&quot; 2&gt;tmp                   # 取到结果放到文件中(以标准错误输出结果)    a=`dialog --title &quot;title&quot;  --stdout --menu &quot;MENU&quot; 20 60 14 tag1 &quot;item1&quot; tag2 &quot;item2&quot;`           # 选择操作赋给变量(使用标准输出)    dialog菜单实例{        while :        do        clear        menu=`dialog --title &quot;title&quot;  --stdout --menu &quot;MENU&quot; 20 60 14 1 system 2 custom`        [ $? -eq 0 ] &amp;&amp; echo &quot;$menu&quot; || exit         # 判断dialog执行,取消退出            while :            do                case $menu in                1)                    list=&quot;1a &quot;item1&quot; 2a &quot;item2&quot;&quot;     # 定义菜单列表变量                ;;                2)                    list=&quot;1b &quot;item3&quot; 2b &quot;item4&quot;&quot;                ;;                esac                result=`dialog --title &quot;title&quot;  --stdout --menu &quot;MENU&quot; 20 60 14 $list`                [ $? -eq 0 ] &amp;&amp; echo &quot;$result&quot; || break    # 判断dialog执行,取消返回菜单,注意:配合上层菜单循环                read            done        done    }}select菜单{    # 输入项不在菜单自动会提示重新输入    select menuitem in pick1 pick2 pick3 退出    do        echo $menuitem        case $menuitem in        退出)            exit        ;;        *)            select area in area1 area2 area3 返回            do                echo $area                case $area in                返回)                    break                ;;                *)                    echo &quot;对$area操作&quot;                ;;                esac            done        ;;        esac    done}shift{    ./cs.sh 1 2 3    #!/bin/sh    until [ $# -eq 0 ]    do        echo &quot;第一个参数为: $1 参数个数为: $#&quot;        #shift 命令执行前变量 $1 的值在shift命令执行后不可用        shift    done}getopts给脚本加参数{    #!/bin/sh    while getopts :ab: name    do        case $name in        a)            aflag=1        ;;        b)            bflag=1            bval=$OPTARG        ;;        \?)            echo &quot;USAGE:`basename $0` [-a] [-b value]&quot;            exit  1        ;;        esac    done    if [ ! -z $aflag ] ; then        echo &quot;option -a specified&quot;        echo &quot;$aflag&quot;        echo &quot;$OPTIND&quot;    fi    if [ ! -z $bflag ] ; then        echo  &quot;option -b specified&quot;        echo  &quot;$bflag&quot;        echo  &quot;$bval&quot;        echo  &quot;$OPTIND&quot;    fi    echo &quot;here  $OPTIND&quot;    shift $(($OPTIND -1))    echo &quot;$OPTIND&quot;    echo &quot; `shift $(($OPTIND -1))`  &quot;}tclsh{    set foo &quot;a bc&quot;                   # 定义变量    set b {$a};                      # 转义  b的值为&quot; $a &quot; ,而不是变量结果    set a 3; incr a 3;               # 数字的自增.  将a加3,如果要减3,则为 incr a –3;    set c [expr 20/5];               # 计算  c的值为4    puts $foo;                       # 打印变量    set qian(123) f;                 # 定义数组    set qian(1,1,1) fs;              # 多维数组    parray qian;                     # 打印数组的所有信息    string length $qian;             # 将返回变量qian的长度    string option string1 string2;   # 字符相关串操作    # option 的操作选项:    # compare           按照字典的排序方式进行比较。根据string1 &lt;,=,&gt;string2分别返回-1,0,1    # first             返回string2中第一次出现string1的位置，如果没有出现string1则返回-1    # last              和first相反    # trim              从string1中删除开头和结尾的出现在string2中的字符    # tolower           返回string1中的所有字符被转换为小写字符后的新字符串    # toupper           返回string1中的所有字符串转换为大写后的字符串    # length            返回string1的长度    set a 1;while {$a &lt; 3} { set a [incr a 1;]; };puts $a    # 判断变量a小于3既循环    for {initialization} {condition} {increment} {body}      # 初始化变量,条件,增量,具体操作    for {set i 0} {$i &lt; 10} {incr i} {puts $i;}              # 将打印出0到9    if { 表达式 } {         #运算;    } else {         #其他运算;    }    switch $x {        字符串1 { 操作1 ;}        字符串2 { 操作2 ;}    }    foreach element {0 m n b v} {    # 将在一组变元中进行循环，并且每次都将执行他的循环体           switch $element {                 # 判断element的值         }    }    expect交互{        exp_continue         # 多个spawn命令时并行        interact             # 执行完成后保持交互状态，把控制权交给控制台        expect &quot;password:&quot;   # 判断关键字符        send &quot;passwd\r&quot;      # 执行交互动作，与手工输入密码的动作等效。字符串结尾加&quot;\r&quot;        ssh后sudo{            #!/bin/bash            #sudo注释下行允许后台运行            #Defaults requiretty            #sudo去掉!允许远程            #Defaults !visiblepw            /usr/bin/expect -c &apos;            set timeout 5            spawn ssh -o StrictHostKeyChecking=no xuesong1@192.168.42.128 &quot;sudo grep xuesong1 /etc/passwd&quot;            expect {                &quot;passphrase&quot; {                    send_user &quot;sshkey\n&quot;                    send &quot;xuesong\r&quot;;                    expect {                        &quot;sudo&quot; {                        send_user &quot;sudo\n&quot;                        send &quot;xuesong\r&quot;                        interact                        }                        eof {                        send_user &quot;sudo eof\n&quot;                        }                    }                }                &quot;password:&quot; {                    send_user &quot;ssh\n&quot;                    send &quot;xuesong\r&quot;;                    expect {                        &quot;sudo&quot; {                        send_user &quot;sudo\n&quot;                        send &quot;xuesong\r&quot;                        interact                        }                        eof {                        send_user &quot;sudo eof\n&quot;                        }                    }                }                &quot;sudo&quot; {                        send_user &quot;sudo\n&quot;                        send &quot;xuesong\r&quot;                        interact                        }                eof {                    send_user &quot;ssh eof\n&quot;                }            }            &apos;        }        ssh执行命令操作{            /usr/bin/expect -c &quot;            proc jiaohu {} {                send_user expect_start                expect {                    password {                        send ${RemotePasswd}\r;                        send_user expect_eof                        expect {                            \&quot;does not exist\&quot; {                                send_user expect_failure                                exit 10                            }                            password {                                send_user expect_failure                                exit 5                            }                            Password {                                send ${RemoteRootPasswd}\r;                                send_user expect_eof                                expect {                                    incorrect {                                        send_user expect_failure                                        exit 6                                    }                                    eof                                }                            }                            eof                        }                    }                    passphrase {                        send ${KeyPasswd}\r;                        send_user expect_eof                        expect {                            \&quot;does not exist\&quot; {                                send_user expect_failure                                exit 10                            }                            passphrase{                                send_user expect_failure                                exit 7                            }                            Password {                                send ${RemoteRootPasswd}\r;                                send_user expect_eof                                expect {                                    incorrect {                                        send_user expect_failure                                        exit 6                                    }                                    eof                                }                            }                            eof                        }                    }                    Password {                        send ${RemoteRootPasswd}\r;                        send_user expect_eof                        expect {                            incorrect {                                send_user expect_failure                                exit 6                            }                            eof                        }                    }                    \&quot;No route to host\&quot; {                        send_user expect_failure                        exit 4                    }                    \&quot;Invalid argument\&quot; {                        send_user expect_failure                        exit 8                    }                    \&quot;Connection refused\&quot; {                        send_user expect_failure                        exit 9                    }                    \&quot;does not exist\&quot; {                        send_user expect_failure                        exit 10                    }                    \&quot;Connection timed out\&quot; {                        send_user expect_failure                        exit 11                    }                    timeout {                        send_user expect_failure                        exit 3                    }                    eof                }            }            set timeout $TimeOut            switch $1 {                Ssh_Cmd {                    spawn ssh -t -p $Port -o StrictHostKeyChecking=no $RemoteUser@$Ip /bin/su - root -c \\\&quot;$Cmd\\\&quot;                    jiaohu                }                Ssh_Script {                    spawn scp -P $Port -o StrictHostKeyChecking=no $ScriptPath $RemoteUser@$Ip:/tmp/${ScriptPath##*/};                    jiaohu                    spawn ssh -t -p $Port -o StrictHostKeyChecking=no $RemoteUser@$Ip /bin/su - root -c  \\\&quot;/bin/sh /tmp/${ScriptPath##*/}\\\&quot; ;                    jiaohu                }                Scp_File {                    spawn scp -P $Port -o StrictHostKeyChecking=no -r $ScpPath $RemoteUser@$Ip:${ScpRemotePath};                    jiaohu                }            }            &quot;            state=`echo $?`        }        交互双引号引用较长变量{            #!/bin/bash            RemoteUser=xuesong12            Ip=192.168.1.2            RemotePasswd=xuesong            Cmd=&quot;/bin/echo &quot;$PubKey&quot; &gt; &quot;$RemoteKey&quot;/authorized_keys&quot;            /usr/bin/expect -c &quot;            set timeout 10            spawn ssh -o StrictHostKeyChecking=no $RemoteUser@$Ip {$Cmd};            expect {                password: {                    send_user RemotePasswd\n                    send ${RemotePasswd}\r;                    interact;                }                eof {                    send_user eof\n                }            }            &quot;        }        telnet交互{            #!/bin/bash            Ip=&quot;10.0.1.53&quot;            a=&quot;\{\&apos;method\&apos;\:\&apos;doLogin\&apos;\,\&apos;params\&apos;\:\{\&apos;uName\&apos;\:\&apos;bobbietest\&apos;\}&quot;            /usr/bin/expect -c&quot;                    set timeout 15                    spawn telnet ${Ip} 8000                    expect &quot;Escape&quot;                    send &quot;${a}\\r&quot;                    expect {                            -re &quot;\&quot;err.*none\&quot;&quot; {                                    exit 0                            }                            timeout {                                    exit 1                            }                            eof {                                    exit 2                            }                    }            &quot;            echo $?        }        模拟ssh登录{            #好处:可加载环境变量            #!/bin/bash            Ip=&apos;192.168.1.6&apos;            # 循环就行            RemoteUser=&apos;user&apos;           # 普通用户            RemotePasswd=&apos;userpasswd&apos;   # 普通用户的密码            RemoteRootPasswd=&apos;rootpasswd&apos;            /usr/bin/expect -c &quot;            set timeout -1            spawn ssh -t -p $Port -o StrictHostKeyChecking=no $RemoteUser@$Ip            expect {                password {                    send_user RemotePasswd                    send ${RemotePasswd}\r;                    expect {                        \&quot;does not exist\&quot; {                            send_user \&quot;root user does not exist\n\&quot;                            exit 10                        }                        password {                            send_user \&quot;user passwd error\n\&quot;                            exit 5                        }                        Last {                            send \&quot;su - batch\n\&quot;                            expect {                                Password {                                    send_user RemoteRootPasswd                                    send ${RemoteRootPasswd}\r;                                    expect {                                        \&quot;]#\&quot; {                                            send \&quot;sh /tmp/update.sh update\n \&quot;                                            expect {                                                \&quot;]#\&quot; {                                                    send_user ${Ip}_Update_Done\n                                                }                                                eof                                            }                                        }                                    }                                }                            }                        }                    }                }                \&quot;No route to host\&quot; {                    send_user \&quot;host not found\n\&quot;                    exit 4                }                \&quot;Invalid argument\&quot; {                    send_user \&quot;incorrect parameter\n\&quot;                    exit 8                }                \&quot;Connection refused\&quot; {                    send_user \&quot;invalid port parameters\n\&quot;                    exit 9                }                \&quot;does not exist\&quot; {                    send_user \&quot;root user does not exist\&quot;                    exit 10                }                timeout {                    send_user \&quot;connection timeout \n\&quot;                    exit 3                }                eof            }            &quot;            state=`echo $?`        }    }}</code></pre><p>}</p><p>9 实例{</p><pre><code>从1叠加到100{    echo $[$(echo +{1..100})]    echo $[(100+1)*(100/2)]    seq -s &apos;+&apos; 100 |bc}判断参数是否为空-空退出并打印null{    #!/bin/sh    echo $1    name=${1:?&quot;null&quot;}    echo $name}循环数组{    for ((i=0;i&lt;${#o[*]};i++))    do        echo ${o[$i]}    done}判断路径{    if [ -d /root/Desktop/text/123 ];then        echo &quot;找到了123&quot;        if [ -d /root/Desktop/text ]        then echo &quot;找到了text&quot;        else echo &quot;没找到text&quot;        fi    else echo &quot;没找到123文件夹&quot;    fi}找出出现次数最多{    awk &apos;{print $1}&apos; file|sort |uniq -c|sort -k1r}判断脚本参数是否正确{    ./test.sh  -p 123 -P 3306 -h 127.0.0.1 -u root    #!/bin/sh    if [ $# -ne 8 ];then        echo &quot;USAGE: $0 -u user -p passwd -P port -h host&quot;        exit 1    fi    while getopts :u:p:P:h: name    do        case $name in        u)            mysql_user=$OPTARG        ;;        p)            mysql_passwd=$OPTARG        ;;        P)            mysql_port=$OPTARG        ;;        h)            mysql_host=$OPTARG        ;;        *)            echo &quot;USAGE: $0 -u user -p passwd -P port -h host&quot;            exit 1        ;;        esac    done    if [ -z $mysql_user ] || [ -z $mysql_passwd ] || [ -z $mysql_port ] || [ -z $mysql_host ]    then        echo &quot;USAGE: $0 -u user -p passwd -P port -h host&quot;        exit 1    fi    echo $mysql_user $mysql_passwd $mysql_port  $mysql_host    #结果 root 123 3306 127.0.0.1}正则匹配邮箱{    ^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$}打印表格{    #!/bin/sh    clear    awk &apos;BEGIN{    print &quot;+--------------------+--------------------+&quot;;    printf &quot;|%-20s|%-20s|\n&quot;,&quot;Name&quot;,&quot;Number&quot;;    print &quot;+--------------------+--------------------+&quot;;    }&apos;    a=`grep &quot;^[A-Z]&quot; a.txt |sort +1 -n |awk &apos;{print $1&quot;:&quot;$2}&apos;`    #cat a.txt |sort +1 -n |while read list    for list in $a    do        name=`echo $list |awk -F: &apos;{print $1}&apos;`        number=`echo $list |awk -F: &apos;{print $2}&apos;`        awk &apos;BEGIN{printf &quot;|%-20s|%-20s|\n&quot;,&quot;&apos;&quot;$name&quot;&apos;&quot;,&quot;&apos;&quot;$number&quot;&apos;&quot;;        print &quot;+--------------------+--------------------+&quot;;        }&apos;    done    awk &apos;BEGIN{    print &quot;              *** The End ***              &quot;    print &quot;                                           &quot;    }&apos;}判断日期是否合法{    #!/bin/sh    while read a    do      if echo $a | grep -q &quot;-&quot; &amp;&amp; date -d $a +%Y%m%d &gt; /dev/null 2&gt;&amp;1      then        if echo $a | grep -e &apos;^[0-9]\{4\}-[01][0-9]-[0-3][0-9]$&apos;        then            break        else            echo &quot;您输入的日期不合法，请从新输入！&quot;        fi      else        echo &quot;您输入的日期不合法，请从新输入！&quot;      fi    done    echo &quot;日期为$a&quot;}打印日期段所有日期{    #!/bin/bash    qsrq=20010101    jsrq=20010227    n=0    &gt;tmp    while :;do    current=$(date +%Y%m%d -d&quot;$n day $qsrq&quot;)    if [[ $current == $jsrq ]];then        echo $current &gt;&gt;tmp;break    else        echo $current &gt;&gt;tmp        ((n++))    fi    done    rq=`awk &apos;NR==1{print}&apos; tmp`}打印提示{    cat &lt;&lt;EOF    #内容</code></pre><p>EOF</p><pre><code>    }登陆远程执行命令{    # 特殊符号需要 \ 转义    ssh root@ip &lt;&lt; EOF    #执行命令</code></pre><p>EOF</p><pre><code>    }数学计算的小算法{    #!/bin/sh    A=1    B=1    while [ $A -le 10 ]    do        SUM=`expr $A \* $B`        echo &quot;$SUM&quot;        if [ $A = 10 ]        then            B=`expr $B + 1`            A=1        fi        A=`expr $A + 1`    done}多行合并{    sed &apos;{N;s/\n//}&apos; file                   # 将两行合并一行(去掉换行符)    awk &apos;{printf(NR%2!=0)?$0&quot; &quot;:$0&quot; \n&quot;}&apos;   # 将两行合并一行    awk &apos;{printf&quot;%s &quot;,$0}&apos;                  # 将所有行合并    awk &apos;{if (NR%4==0){print $0} else {printf&quot;%s &quot;,$0}}&apos; file    # 将4行合并为一行(可扩展)}横竖转换{    cat a.txt | xargs           # 列转行    cat a.txt | xargs -n1       # 行转列}竖行转横行{    cat file|tr &apos;\n&apos; &apos; &apos;    echo $(cat file)    #!/bin/sh    for i in `cat file`    do          a=${a}&quot; &quot;${i}    done    echo $a}取用户的根目录{    #! /bin/bash    while read name pass uid gid gecos home shell    do        echo $home    done &lt; /etc/passwd}远程打包{    ssh -n $ip &apos;find &apos;$path&apos; /data /opt -type f  -name &quot;*.sh&quot; -or -name &quot;*.py&quot; -or -name &quot;*.pl&quot; |xargs tar zcvpf /tmp/data_backup.tar.gz&apos;}把汉字转成encode格式{    echo 论坛 | tr -d &quot;\n&quot; | xxd -i | sed -e &quot;s/ 0x/%/g&quot; | tr -d &quot; ,\n&quot;    %c2%db%cc%b3    echo 论坛 | tr -d &quot;\n&quot; | xxd -i | sed -e &quot;s/ 0x/%/g&quot; | tr -d &quot; ,\n&quot; | tr &quot;[a-f]&quot; &quot;[A-F]&quot;  # 大写的    %C2%DB%CC%B3}把目录带有大写字母的文件名改为全部小写{    #!/bin/bash    for f in *;do        mv $f `echo $f |tr &quot;[A-Z]&quot; &quot;[a-z]&quot;`    done}查找连续多行，在不连续的行前插入{    #/bin/bash    lastrow=null    i=0    cat incl|while read line    do    i=`expr $i + 1`    if echo &quot;$lastrow&quot; | grep &quot;#include &lt;[A-Z].h&gt;&quot;    then        if echo &quot;$line&quot; | grep -v  &quot;#include &lt;[A-Z].h&gt;&quot;        then            sed -i &apos;&apos;$i&apos;i\\/\/All header files are include&apos; incl            i=`expr $i + 1`        fi    fi    lastrow=&quot;$line&quot;    done}查询数据库其它引擎{    #/bin/bash    path1=/data/mysql/data/    dbpasswd=db123    #MyISAM或InnoDB    engine=InnoDB    if [ -d $path1 ];then    dir=`ls -p $path1 |awk &apos;/\/$/&apos;|awk -F&apos;/&apos; &apos;{print $1}&apos;`        for db in $dir        do        number=`mysql -uroot -p$dbpasswd -A -S &quot;$path1&quot;mysql.sock -e &quot;use ${db};show table status;&quot; |grep -c $engine`            if [ $number -ne 0 ];then            echo &quot;${db}&quot;            fi        done    fi}批量修改数据库引擎{    #/bin/bash    for db in test test1 test3    do        tables=`mysql -uroot -pdb123 -A -S /data/mysql/data/mysql.sock -e &quot;use $db;show tables;&quot; |awk &apos;NR != 1{print}&apos;`        for table in $tables        do            mysql -uroot -pdb123 -A -S /data/mysql/data/mysql.sock -e &quot;use $db;alter table $table engine=MyISAM;&quot;        done    done}将shell取到的数据插入mysql数据库{    mysql -u$username -p$passwd -h$dbhost -P$dbport -A -e &quot;    use $dbname;    insert into data values (&apos;&apos;,&apos;$ip&apos;,&apos;$date&apos;,&apos;$time&apos;,&apos;$data&apos;)    &quot;}两日期间隔天数{    D1=`date -d &apos;20070409&apos; +&quot;%s&quot;`    D2=`date -d &apos;20070304 &apos; +&quot;%s&quot;`    D3=$(($D1 - $D2))    echo $(($D3/60/60/24))}while执行ssh只循环一次{    cat -    # 让cat读连接文件stdin的信息    seq 10 | while read line; do ssh localhost &quot;cat -&quot;; done        # 显示的9次是被ssh吃掉的    seq 10 | while read line; do ssh -n localhost &quot;cat -&quot;; done     # ssh加上-n参数可避免只循环一次}ssh批量执行命令{    #版本1    #!/bin/bash    while read line    do    Ip=`echo $line|awk &apos;{print $1}&apos;`    Passwd=`echo $line|awk &apos;{print $2}&apos;`    ssh -n localhost &quot;cat -&quot;    sshpass -p &quot;$Passwd&quot; ssh -n -t -o StrictHostKeyChecking=no root@$Ip &quot;id&quot;    done&lt;iplist.txt    #版本2    #!/bin/bash    Iplist=`awk &apos;{print $1}&apos; iplist.txt`    for Ip in $Iplist    do    Passwd=`awk &apos;/&apos;$Ip&apos;/{print $2}&apos; iplist.txt`    sshpass -p &quot;$Passwd&quot; ssh -n -t -o StrictHostKeyChecking=no root@$Ip &quot;id&quot;    done}在同一位置打印字符{    #!/bin/bash    echo -ne &quot;\t&quot;    for i in `seq -w 100 -1 1`    do        echo -ne &quot;$i\b\b\b&quot;;      # 关键\b退格        sleep 1;    done}多进程后台并发简易控制{    #!/bin/bash    test () {        echo $a        sleep 5    }    for a in `seq 1 30`    do        test &amp;        echo $!        ((num++))        if [ $num -eq 6 ];then        echo &quot;wait...&quot;        wait        num=0        fi    done    wait}shell并发{    #!/bin/bash    tmpfile=$$.fifo   # 创建管道名称    mkfifo $tmpfile   # 创建管道    exec 4&lt;&gt;$tmpfile  # 创建文件标示4，以读写方式操作管道$tmpfile    rm $tmpfile       # 将创建的管道文件清除    thred=4           # 指定并发个数    seq=(1 2 3 4 5 6 7 8 9 21 22 23 24 25 31 32 33 34 35) # 创建任务列表    # 为并发线程创建相应个数的占位    {    for (( i = 1;i&lt;=${thred};i++ ))    do        echo;  # 因为read命令一次读取一行，一个echo默认输出一个换行符，所以为每个线程输出一个占位换行    done    } &gt;&amp;4      # 将占位信息写入管道    for id in ${seq}  # 从任务列表 seq 中按次序获取每一个任务    do      read  # 读取一行，即fd4中的一个占位符      (./ur_command ${id};echo &gt;&amp;4 ) &amp;   # 在后台执行任务ur_command 并将任务 ${id} 赋给当前任务；任务执行完后在fd4种写入一个占位符    done &lt;&amp;4    # 指定fd4为整个for的标准输入    wait        # 等待所有在此shell脚本中启动的后台任务完成    exec 4&gt;&amp;-   # 关闭管道    #!/bin/bash    FifoFile=&quot;$$.fifo&quot;    mkfifo $FifoFile    exec 6&lt;&gt;$FifoFile    rm $FifoFile    for ((i=0;i&lt;=20;i++));do echo;done &gt;&amp;6    for u in `seq 1 $1`    do        read -u6        {            curl -s http://ch.com &gt;&gt;/dev/null            [ $? -eq 0 ] &amp;&amp; echo &quot;${u} 次成功&quot; || echo &quot;${u} 次失败&quot;            echo &gt;&amp;6        } &amp;    done    wait    exec 6&gt;&amp;-}shell并发函数{    function ConCurrentCmd()    {        #进程数        Thread=30        #列表文件        CurFileName=iplist.txt        #定义fifo文件        FifoFile=&quot;$$.fifo&quot;        #新建一个fifo类型的文件        mkfifo $FifoFile        #将fd6与此fifo类型文件以读写的方式连接起来        exec 6&lt;&gt;$FifoFile        rm $FifoFile        #事实上就是在文件描述符6中放置了$Thread个回车符        for ((i=0;i&lt;=$Thread;i++));do echo;done &gt;&amp;6        #此后标准输入将来自fd5        exec 5&lt;$CurFileName        #开始循环读取文件列表中的行        Count=0        while read -u5 line        do            read -u6            let Count+=1            # 此处定义一个子进程放到后台执行            # 一个read -u6命令执行一次,就从fd6中减去一个回车符，然后向下执行            # fd6中没有回车符的时候,就停在这了,从而实现了进程数量控制            {                echo $Count                #这段代码框就是执行具体的操作了                function                echo &gt;&amp;6                #当进程结束以后,再向fd6中追加一个回车符,即补上了read -u6减去的那个            } &amp;        done        #等待所有后台子进程结束        wait        #关闭fd6        exec 6&gt;&amp;-        #关闭fd5        exec 5&gt;&amp;-    }    并发例子{        #!/bin/bash        FifoFile=&quot;$$.fifo&quot;        mkfifo $FifoFile        exec 6&lt;&gt;$FifoFile        rm $FifoFile        for ((i=0;i&lt;=20;i++));do echo;done &gt;&amp;6        for u in `seq 1 $1`        do            read -u6            {                curl -s http://m.chinanews.com/?tt_from=shownews &gt;&gt;/dev/null                [ $? -eq 0 ] &amp;&amp; echo &quot;${u} 次成功&quot; || echo &quot;${u} 次失败&quot;                echo &gt;&amp;6            } &amp;        done        wait        exec 6&gt;&amp;-    }}函数{    ip(){        echo &quot;a 1&quot;|awk &apos;$1==&quot;&apos;&quot;$1&quot;&apos;&quot;{print $2}&apos;    }    web=a    ip $web}检测软件包是否存在{    rpm -q dialog &gt;/dev/null    if [ &quot;$?&quot; -ge 1 ];then        echo &quot;install dialog,Please wait...&quot;        yum -y install dialog        rpm -q dialog &gt;/dev/null        [ $? -ge 1 ] &amp;&amp; echo &quot;dialog installation failure,exit&quot; &amp;&amp; exit        echo &quot;dialog done&quot;        read    fi}游戏维护菜单-修改配置文件{    #!/bin/bash    conf=serverlist.xml    AreaList=`awk -F &apos;&quot;&apos; &apos;/&lt;s/{print $2}&apos; $conf`    select area in $AreaList 全部 退出    do        echo &quot;&quot;        echo $area        case $area in        退出)            exit        ;;        *)            select operate in &quot;修改版本号&quot; &quot;添加维护中&quot; &quot;删除维护中&quot; &quot;返回菜单&quot;            do                echo &quot;&quot;                echo $operate                case $operate in                修改版本号)                    echo 请输入版本号                    while read version                    do                        if echo $version | grep -w 10[12][0-9][0-9][0-9][0-9][0-9][0-9]                        then                            break                        fi                        echo 请从新输入正确的版本号                    done                    case $area in                    全部)                        case $version in                        101*)                            echo &quot;请确认操作对 $area 体验区 $operate&quot;                            read                            sed -i &apos;s/101[0-9][0-9][0-9][0-9][0-9][0-9]/&apos;$version&apos;/&apos; $conf                        ;;                        102*)                            echo &quot;请确认操作对 $area 正式区 $operate&quot;                            read                            sed -i &apos;s/102[0-9][0-9][0-9][0-9][0-9][0-9]/&apos;$version&apos;/&apos; $conf                        ;;                        esac                    ;;                    *)                        type=`awk -F &apos;&quot;&apos; &apos;/&apos;$area&apos;/{print $14}&apos; $conf |cut -c1-3`                        readtype=`echo $version |cut -c1-3`                        if [ $type != $readtype ]                        then                            echo &quot;版本号不对应，请从新操作&quot;                            continue                        fi                        echo &quot;请确认操作对 $area 区 $operate&quot;                        read                        awk -F &apos;&quot;&apos; &apos;/&apos;$area&apos;/{print $12}&apos; $conf |xargs -i sed -i &apos;/&apos;{}&apos;/s/10[12][0-9][0-9][0-9][0-9][0-9][0-9]/&apos;$version&apos;/&apos; $conf                    ;;                    esac                ;;                添加维护中)                    case $area in                    全部)                        echo &quot;请确认操作对 $area 区 $operate&quot;                        read                        awk -F &apos;&quot;&apos; &apos;/&lt;s/{print $2}&apos; $conf |xargs -i sed -i &apos;s/&apos;{}&apos;/&amp;维护中/&apos; $conf                    ;;                    *)                        echo &quot;请确认操作对 $area 区 $operate&quot;                        read                        sed -i &apos;s/&apos;$area&apos;/&amp;维护中/&apos; $conf                    ;;                    esac                ;;                删除维护中)                    case $area in                    全部)                        echo &quot;请确认操作对 $area 区 $operate&quot;                        read                        sed -i &apos;s/维护中//&apos; $conf                    ;;                    *)                        echo &quot;请确认操作对 $area 区 $operate&quot;                        read                        sed -i &apos;/&apos;$area&apos;/s/维护中//&apos; $conf                    ;;                    esac                ;;                返回菜单)                    break                ;;                esac            done        ;;        esac        echo &quot;回车重新选择区&quot;    done}keepalive剔除后端服务{    #!/bin/bash    #行数请自定义,默认8行    if [ X$2 == X ];then        echo &quot;error: IP null&quot;        read        exit    fi    case $1 in    del)        sed -i &apos;/real_server.*&apos;$2&apos;.*8888/,+8 s/^/#/&apos; /etc/keepalived/keepalived.conf        /etc/init.d/keepalived reload    ;;    add)        sed -i &apos;/real_server.*&apos;$2&apos;.*8888/,+8 s/^#//&apos; /etc/keepalived/keepalived.conf        /etc/init.d/keepalived reload    ;;    *)        echo &quot;Parameter error&quot;    ;;    esac}申诉中国反垃圾邮件联盟黑名单{    #!/bin/bash    IpList=`awk &apos;$1!~&quot;^#&quot;&amp;&amp;$1!=&quot;&quot;{print $1}&apos; host.list`    QueryAdd=&apos;http://www.anti-spam.org.cn/Rbl/Query/Result&apos;    ComplaintAdd=&apos;http://www.anti-spam.org.cn/Rbl/Getout/Submit&apos;    CONTENT=&apos;我们是一家正规的XXX。xxxxxxx。恳请将我们的发送服务器IP移出黑名单。谢谢！    处理措施：    1.XXXX。    2.XXXX。&apos;    CORP=&apos;abc.com&apos;    WWW=&apos;www.abc.cm&apos;    NAME=&apos;def&apos;    MAIL=&apos;def@163.com.cn&apos;    TEL=&apos;010-50000000&apos;    LEVEL=&apos;0&apos;    for Ip in $IpList    do        Status=`curl -d &quot;IP=$Ip&quot; $QueryAdd |grep &apos;Getout/ShowForm?IP=&apos; |grep -wc &apos;申诉脱离&apos;`        if [ $Status -ge 1 ];then            IpStatus=&quot;黑名单中&quot;            results=`curl -d &quot;IP=${Ip}&amp;CONTENT=${CONTENT}&amp;CORP=${CORP}&amp;WWW=${WWW}&amp;NAME=${NAME}&amp;MAIL=${MAIL}&amp;TEL=${TEL}&amp;LEVEL=${LEVEL}&quot; $ComplaintAdd |grep -E &apos;您的黑名单脱离申请已提交|该IP的脱离申请已被他人提交|申请由于近期内有被拒绝的记录&apos;`            echo $results            if echo $results | grep &apos;您的黑名单脱离申请已提交&apos;  &gt; /dev/null 2&gt;&amp;1            then                complaint=&apos;申诉成功&apos;            elif echo $results | grep &apos;该IP的脱离申请已被他人提交&apos;  &gt; /dev/null 2&gt;&amp;1            then                complaint=&apos;申诉重复&apos;            elif echo $results | grep &apos;申请由于近期内有被拒绝的记录&apos;  &gt; /dev/null 2&gt;&amp;1            then                complaint=&apos;申诉拒绝&apos;            else                complaint=&apos;异常&apos;            fi        else            IpStatus=&apos;正常&apos;            complaint=&apos;无需申诉&apos;        fi        echo &quot;$Ip    $IpStatus    $complaint&quot; &gt;&gt; $(date +%Y%m%d_%H%M%S).log    done</code></pre><p>}</p><pre><code>Web Server in Awk{    #gawk -f file    BEGIN {      x        = 1                         # script exits if x &lt; 1      port     = 8080                      # port number      host     = &quot;/inet/tcp/&quot; port &quot;/0/0&quot;  # host string      url      = &quot;http://localhost:&quot; port  # server url      status   = 200                       # 200 == OK      reason   = &quot;OK&quot;                      # server response      RS = ORS = &quot;\r\n&quot;                    # header line terminators      doc      = Setup()                   # html document      len      = length(doc) + length(ORS) # length of document      while (x) {         if ($1 == &quot;GET&quot;) RunApp(substr($2, 2))         if (! x) break         print &quot;HTTP/1.0&quot;, status, reason |&amp; host         print &quot;Connection: Close&quot;        |&amp; host         print &quot;Pragma: no-cache&quot;         |&amp; host         print &quot;Content-length:&quot;, len     |&amp; host         print ORS doc                    |&amp; host         close(host)     # close client connection         host |&amp; getline # wait for new client request      }      # server terminated...      doc = Bye()      len = length(doc) + length(ORS)      print &quot;HTTP/1.0&quot;, status, reason |&amp; host      print &quot;Connection: Close&quot;        |&amp; host      print &quot;Pragma: no-cache&quot;         |&amp; host      print &quot;Content-length:&quot;, len     |&amp; host      print ORS doc                    |&amp; host      close(host)    }    function Setup() {      tmp = &quot;&lt;html&gt;\      &lt;head&gt;&lt;title&gt;Simple gawk server&lt;/title&gt;&lt;/head&gt;\      &lt;body&gt;\      &lt;p&gt;&lt;a href=&quot; url &quot;/xterm&gt;xterm&lt;/a&gt;\      &lt;p&gt;&lt;a href=&quot; url &quot;/xcalc&gt;xcalc&lt;/a&gt;\      &lt;p&gt;&lt;a href=&quot; url &quot;/xload&gt;xload&lt;/a&gt;\      &lt;p&gt;&lt;a href=&quot; url &quot;/exit&gt;terminate script&lt;/a&gt;\      &lt;/body&gt;\      &lt;/html&gt;&quot;      return tmp    }    function Bye() {      tmp = &quot;&lt;html&gt;\      &lt;head&gt;&lt;title&gt;Simple gawk server&lt;/title&gt;&lt;/head&gt;\      &lt;body&gt;&lt;p&gt;Script Terminated...&lt;/body&gt;\      &lt;/html&gt;&quot;      return tmp    }    function RunApp(app) {      if (app == &quot;xterm&quot;)  {system(&quot;xterm&amp;&quot;); return}      if (app == &quot;xcalc&quot; ) {system(&quot;xcalc&amp;&quot;); return}      if (app == &quot;xload&quot; ) {system(&quot;xload&amp;&quot;); return}      if (app == &quot;exit&quot;)   {x = 0}    }}</code></pre><p>}</p><p>不定期更新下载地址：<br><a href="http://pan.baidu.com/s/1sjsFrmX" target="_blank" rel="noopener">http://pan.baidu.com/s/1sjsFrmX</a><br><a href="https://github.com/liquanzhou/ops_doc" target="_blank" rel="noopener">https://github.com/liquanzhou/ops_doc</a></p><p>请勿删除信息, 植入广告, 抵制不道德行为</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>ansible</title>
      <link href="/posts/ea2c.html"/>
      <url>/posts/ea2c.html</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p><a href="http://www.ansible.com.cn/docs/intro_installation.html" target="_blank" rel="noopener">官方文档</a></p></blockquote><h3 id="配置-YUM-EPEL"><a href="#配置-YUM-EPEL" class="headerlink" title="配置 YUM, EPEL"></a>配置 YUM, EPEL</h3><pre><code>yum -y install epel-releaserm -f /etc/yum.repos.d/*curl -o /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repocurl -o /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/*.repo</code></pre><h3 id="安装Ansible"><a href="#安装Ansible" class="headerlink" title="安装Ansible"></a>安装Ansible</h3><pre><code>yum -y install ansible</code></pre><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="1-使用秘钥"><a href="#1-使用秘钥" class="headerlink" title="1.使用秘钥"></a>1.使用秘钥</h3><h4 id="生成秘钥"><a href="#生成秘钥" class="headerlink" title="生成秘钥"></a>生成秘钥</h4><pre><code>[ -f ~/.ssh/id_dsa ] || ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa;</code></pre><h4 id="手动发送公钥"><a href="#手动发送公钥" class="headerlink" title="手动发送公钥"></a>手动发送公钥</h4><pre><code>ssh-copy-id -i ~/.ssh/id_dsa.pub 192.168.0.11ssh-copy-id -i ~/.ssh/id_dsa.pub 192.168.0.12ssh-copy-id -i ~/.ssh/id_dsa.pub 192.168.0.13ssh-copy-id -i ~/.ssh/id_dsa.pub 192.168.0.14ssh-copy-id -i ~/.ssh/id_dsa.pub 192.168.0.15ssh-copy-id -i ~/.ssh/id_dsa.pub 192.168.0.16</code></pre><h4 id="自动发送公钥"><a href="#自动发送公钥" class="headerlink" title="自动发送公钥"></a>自动发送公钥</h4><pre><code># 安装自动交互工具[ -f /usr/bin/expect ] || yum -y install expect;# 自答应函数ssh_remote(){key=$1host=$2user=$3pass=$4/usr/bin/expect &lt;&lt;EOF    set timeout 30    spawn ssh-copy-id -i $key $user@$host    expect {        &quot;(yes/no)?&quot; { send &quot;yes\r&quot;; exp_continue }        &quot;password:&quot; { send &quot;$pass\r&quot; }    }    expect eofEOF}# 发送公钥到被管理端 [函数, 公钥, 被管主机, 用户名, 密码]ssh_remote ~/.ssh/id_dsa.pub 192.168.0.11 root redhatssh_remote ~/.ssh/id_dsa.pub 192.168.0.22 root redhatssh_remote ~/.ssh/id_dsa.pub 192.168.0.33 root redhatssh_remote ~/.ssh/id_dsa.pub 192.168.0.44 root redhatssh_remote ~/.ssh/id_dsa.pub 192.168.0.55 root redhatssh_remote ~/.ssh/id_dsa.pub 192.168.0.66 root redhat</code></pre><h4 id="添加远程主机"><a href="#添加远程主机" class="headerlink" title="添加远程主机"></a>添加远程主机</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/ansible/hosts# $(date +&apos;%F %T&apos;)[master]192.168.0.11192.168.0.22192.168.0.33[node]192.168.0.44192.168.0.55192.168.0.66EOF</code></pre><hr><h3 id="2-使用密码"><a href="#2-使用密码" class="headerlink" title="2.使用密码"></a>2.使用密码</h3><blockquote><p>此方法存在安全隐患不建议使用</p></blockquote><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/ansible/hosts192.168.0.11 ansible_ssh_port=22 ansible_ssh_user=root ansible_ssh_pass=redhat192.168.0.12 ansible_ssh_port=22 ansible_ssh_user=root ansible_ssh_pass=redhat192.168.0.13 ansible_ssh_port=22 ansible_ssh_user=root ansible_ssh_pass=redhat192.168.0.14 ansible_ssh_port=22 ansible_ssh_user=root ansible_ssh_pass=redhat192.168.0.15 ansible_ssh_port=22 ansible_ssh_user=root ansible_ssh_pass=redhat192.168.0.16 ansible_ssh_port=22 ansible_ssh_user=root ansible_ssh_pass=redhatEOF</code></pre><hr><h2 id="Ansible模块"><a href="#Ansible模块" class="headerlink" title="Ansible模块"></a>Ansible模块</h2><h3 id="ping模块"><a href="#ping模块" class="headerlink" title="ping模块"></a>ping模块</h3><pre><code># ping所有主机ansible all -m ping# ping master 组的所有主机ansible master -m ping# ping node 组的所有主机ansible node -m ping# 指定被管主机用户执行命令# 条件：远程主机必须有用户 feng 本地当前用户有权限ssh 被管主机feng 的权限ansible node -m ping -u feng</code></pre><hr><blockquote><p>远程命令模块(command/script/shell)</p></blockquote><hr><h3 id="command模块"><a href="#command模块" class="headerlink" title="command模块"></a>command模块</h3><blockquote><p>command 作为 Ansible 的默认模块，可以运行远程权限范围所有的 shell 命令，不支持管道符</p></blockquote><pre><code>ansible all -m command -a &quot;/bin/echo hello&quot;            # ansible all -a &quot;/bin/echo hello&quot;ansible all -m command -a &quot;date &apos;+%F %T&apos;&quot;              # ansible all -a &quot;date &apos;+%F %T&apos;&quot;ansible all -m command -a &quot;free -m&quot;                    # ansible all -a &quot;free -m&quot;ansible all -a &quot;echo redhat | passwd --stdin feng&quot;     # 更改所有主机上用户 feng 的密码为 redhat</code></pre><h3 id="script模块"><a href="#script模块" class="headerlink" title="script模块"></a>script模块</h3><blockquote><p>script 的功能是在远程主机执行主控端存储的 shell 脚本文件，相当于 scp + shell 组合</p></blockquote><pre><code>echo -e &apos;#!/bin/bash\n\ndate +&quot;%F %T&quot;&apos; &gt;/tmp/date.sh   # 打印当前日期时间脚本ansible all -m script -a &quot;/tmp/date.sh&quot;                # 所有被管理端执行脚本</code></pre><h3 id="shell模块"><a href="#shell模块" class="headerlink" title="shell模块"></a>shell模块</h3><blockquote><p>shell 的功能是执行远程主机上的 shell 脚本文件，支持管道符</p></blockquote><pre><code>ansible master -m shell -a &quot;/tmp/date.sh&quot;</code></pre><h3 id="copy模块"><a href="#copy模块" class="headerlink" title="copy模块"></a>copy模块</h3><blockquote><p>copy 模块(实现主控端向目标主机拷贝文件，类似于 scp 功能)</p></blockquote><pre><code># 向master 组中主机拷贝 test.sh 到 /tmp 下ansible master -m copy -a &apos;src=/tmp/date.sh dest=/tmp/&apos;# 向master 组中主机拷贝 test.sh 到 /tmp 下，属主、组为 root ，权限为 0755ansible master -m copy -a &quot;src=/tmp/date.sh dest=/tmp/ owner=root group=root mode=0755&quot;</code></pre><h3 id="stat-模块"><a href="#stat-模块" class="headerlink" title="stat 模块"></a>stat 模块</h3><blockquote><p>stat 模块(获取远程文件状态信息，atime/ctime/mtime/md5/uid/gid 等信息)</p></blockquote><pre><code>ansible all -m stat -a &quot;path=/etc/rc.local&quot;</code></pre><h3 id="get-url模块"><a href="#get-url模块" class="headerlink" title="get_url模块"></a>get_url模块</h3><blockquote><p>get_url 模块(实现在远程主机下载指定 URL 到本地，支持 sha256sum 文件校验)</p></blockquote><pre><code>ansible all -m get_url -a &quot;url=http://www.baidu.com dest=/tmp/index.html mode=0740 force=yes&quot;</code></pre><h3 id="yum-模块"><a href="#yum-模块" class="headerlink" title="yum 模块"></a>yum 模块</h3><blockquote><p>yum 模块 软件包管理</p></blockquote><pre><code>ansible node -m yum -a &quot;name=vim state=latest&quot;</code></pre><h3 id="cron-模块"><a href="#cron-模块" class="headerlink" title="cron 模块"></a>cron 模块</h3><blockquote><p>注意 name 不要相同否则会被覆盖掉</p></blockquote><pre><code>ansible node -m cron -a &quot;name=&apos;check dirs&apos; minute=&apos;*/1&apos; job=&apos;ls -alh &gt; /tmp/ansible&apos;&quot;    # 每分钟执行一次ansible node -m cron -a &quot;name=&apos;check dirs&apos; hour=&apos;*/1&apos; job=&apos;ls -alh &gt; /tmp/ansible&apos;&quot;      # 每小时执行一次ansible node -m cron -a &quot;name=&apos;check date&apos; minute=&apos;*/1&apos; job=&apos;/usr/bin/date +\&apos;\%F \%T\&apos; &gt; /tmp/ansible&apos;&quot;</code></pre><h3 id="mount-模块"><a href="#mount-模块" class="headerlink" title="mount 模块"></a>mount 模块</h3><blockquote><p>mount 模块(远程主机分区挂载 此挂载是直接写入 /etc/fstab)</p></blockquote><pre><code>ansible node -m mount -a &quot;name=/mnt src=/dev/sd0 fstype=ext4 opts=ro state=present&quot;ansible node -m mount -a &quot;name=/mnt src=/dev/cdrom fstype=iso9660 opts=ro state=present&quot;    # 挂载光盘</code></pre><h3 id="service-模块"><a href="#service-模块" class="headerlink" title="service 模块"></a>service 模块</h3><blockquote><p>service 模块(远程主机系统服务管理)</p></blockquote><pre><code>ansible node -m service -a &quot;name=firewalld state=started&quot;      # 启用 node 组防火墙ansible node -m service -a &quot;name=firewalld state=stopped&quot;      # 关闭 node 组防火墙ansible node -m service -a &quot;name=firewalld state=restarted&quot;    # 重启 node 组防火墙ansible node -m service -a &quot;name=firewalld state=reloaded&quot;     # 重载 node 组防火墙</code></pre><h3 id="user-模块"><a href="#user-模块" class="headerlink" title="user 模块"></a>user 模块</h3><pre><code>ansible node -m user -a &quot;name=wang comment=&apos;user wang&apos;&quot;        # 在 node 组服务器创建用户 wangansible node -m user -a &quot;name=wang state=absent remove=yes&quot;    # 在 node 组服务器删除用户 wang</code></pre><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><blockquote><p>新增用户并更改密码</p></blockquote><pre><code>ansible node -m user -a &quot;name=feng comment=&apos;user feng&apos;&quot;   # OR ansible node -a &apos;useradd feng2&apos;echo &apos;echo redhat | passwd --stdin feng&apos; &gt; pass.shansible node -m script -a &apos;pass.sh&apos;</code></pre>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Nginx 配置</title>
      <link href="/posts/e30a.html"/>
      <url>/posts/e30a.html</url>
      <content type="html"><![CDATA[<h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><blockquote><p>不定期更新</p></blockquote><hr><h3 id="Nginx实现浏览器实时查看访问日志"><a href="#Nginx实现浏览器实时查看访问日志" class="headerlink" title="Nginx实现浏览器实时查看访问日志"></a>Nginx实现浏览器实时查看访问日志</h3><h4 id="Nginx配置文件的Server标签"><a href="#Nginx配置文件的Server标签" class="headerlink" title="Nginx配置文件的Server标签"></a>Nginx配置文件的Server标签</h4><blockquote><p>/etc/nginx/nginx.cinf</p></blockquote><pre><code>location /logs {    # Nginx日志目录    alias /application/nginx-1.9.7/logs;    # 打开目录浏览功能    autoindex on;    # 默认为on，显示出文件的确切大小，单位是bytes    # 显示出文件的大概大小，单位是kB或者MB或者GB            autoindex_exact_size off;    #默认为off，显示的文件时间为GMT时间。    #改为on后，显示的文件时间为文件的服务器时间    autoindex_localtime on;    #让浏览器不保存临时文件    add_header Cache-Control no-store;}</code></pre><h4 id="添加mime-types"><a href="#添加mime-types" class="headerlink" title="添加mime.types"></a>添加mime.types</h4><blockquote><p>/etc/nginx/mime.types <a href="http://www.w3school.com.cn/media/media_mimeref.asp" target="_blank" rel="noopener">mime参考</a></p></blockquote><pre><code>sed &quot;3a\    text/log                              log;&quot; /etc/nginx/mime.types</code></pre><h4 id="重载配置-验证"><a href="#重载配置-验证" class="headerlink" title="重载配置/验证"></a>重载配置/验证</h4><pre><code>nginx -s reload</code></pre><blockquote><p>浏览器打开 <a href="http://ServerIP/logs" target="_blank" rel="noopener">http://ServerIP/logs</a></p></blockquote><h3 id="Nginx用户认证"><a href="#Nginx用户认证" class="headerlink" title="Nginx用户认证"></a>Nginx用户认证</h3><h4 id="安装验证工具"><a href="#安装验证工具" class="headerlink" title="安装验证工具"></a>安装验证工具</h4><pre><code>yum -y install httpd-tools</code></pre><h4 id="创建认证的账号"><a href="#创建认证的账号" class="headerlink" title="创建认证的账号"></a>创建认证的账号</h4><pre><code>htpasswd -c /etc/nginx/loguser loguserNew password:Re-type new password:Adding password for user loguser#密码需要输入两次</code></pre><h4 id="编辑nginx配置文件"><a href="#编辑nginx配置文件" class="headerlink" title="编辑nginx配置文件"></a>编辑nginx配置文件</h4><blockquote><p>在需要验证的路径中配置以下内容例如：</p></blockquote><pre><code>location /logs {    alias PATH;    autoindex on;    autoindex_exact_size off;    autoindex_localtime on;    add_header Cache-Control no-store;    # Nginx认证    auth_basic &quot;Restricted&quot;;    #认证账号密码保存的文件       auth_basic_user_file  /var/log/nginx/}</code></pre>]]></content>
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> nginx配置 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CentOS7 更改网卡名称</title>
      <link href="/posts/32aa.html"/>
      <url>/posts/32aa.html</url>
      <content type="html"><![CDATA[<h3 id="系统安装完成后修改"><a href="#系统安装完成后修改" class="headerlink" title="系统安装完成后修改"></a>系统安装完成后修改</h3><blockquote><p>本方法仅测试过单网卡,如果多网卡情况下更改网卡名需自己测试</p></blockquote><h4 id="替换网卡配置"><a href="#替换网卡配置" class="headerlink" title="替换网卡配置"></a>替换网卡配置</h4><pre><code># 修改配置文件中的硬件名称sed -i &quot;s/^NAME=.*/NAME=\&quot;eth0\&quot;/&quot; /etc/sysconfig/network-scripts/ifcfg-ens33sed -i &quot;s/^DEVICE=.*/DEVICE=\&quot;eth0\&quot;/&quot; /etc/sysconfig/network-scripts/ifcfg-ens33# 更改硬件的配置文件名mv /etc/sysconfig/network-scripts/ifcfg-ens33 /etc/sysconfig/network-scripts/ifcfg-eth0</code></pre><h4 id="更新Grub"><a href="#更新Grub" class="headerlink" title="更新Grub"></a>更新Grub</h4><blockquote><p>如果是Grub2 方式启动 (判断是否存在 /etc/default/grub)</p></blockquote><pre><code># 添加内核参数kernel_options_post=&quot;net.ifnames=0 biosdevname=0&quot;# 更改Gurb 启动参数TMP_GRUB=$(gawk &apos;match($0,/^GRUB_CMDLINE_LINUX=&quot;([^&quot;]+)&quot;/,a) {printf(&quot;%s\n&quot;,a[1])}&apos; /etc/default/grub)sed -i &apos;/^GRUB_CMDLINE_LINUX=/d&apos; /etc/default/grubecho &quot;GRUB_CMDLINE_LINUX=\&quot;$TMP_GRUB $kernel_options_post\&quot;&quot; &gt;&gt; /etc/default/grub# 更新参数到 Grub 配置文件grub2-mkconfig -o /boot/grub2/grub.cfg# 重启reboot</code></pre><hr><blockquote><p>如果是 Grub 方式启动</p></blockquote><pre><code># 更新 Grub 启动参数/sbin/grubby --update-kernel=$(/sbin/grubby --default-kernel) --args=&quot;$kernel_options_post&quot;# 重启reboot</code></pre><hr><h4 id="脚本判断执行"><a href="#脚本判断执行" class="headerlink" title="脚本判断执行"></a>脚本判断执行</h4><pre><code>name=$(grep &apos;DEVICE&apos; /etc/sysconfig/network-scripts/ifcfg-* | awk -F &apos;&quot;&apos; &apos;{print $2}&apos;| head -1)echo &quot;需要修改的网卡名为：$name&quot;/bin/cp /etc/sysconfig/network-scripts/ifcfg-* /tmpif [ -f &quot;/etc/sysconfig/network-scripts/ifcfg-$name&quot; ]; then    sed -i &quot;/^NAME=/d&quot; /etc/sysconfig/network-scripts/ifcfg-$name    sed -i &quot;/^DEVICE=/d&quot; /etc/sysconfig/network-scripts/ifcfg-$name    sed -i &apos;1i NAME=&quot;eth0&quot;&apos; /etc/sysconfig/network-scripts/ifcfg-$name    sed -i &apos;2i DEVICE=&quot;eth0&quot;&apos; /etc/sysconfig/network-scripts/ifcfg-$name    /bin/cp /usr/lib/udev/rules.d/60-net.rules /etc/udev/rules.d/60-net.rules.bak    /bin/mv /etc/sysconfig/network-scripts/ifcfg-$name /etc/sysconfig/network-scripts/ifcfg-eth0    /bin/cp /etc/sysconfig/network-scripts/ifcfg-eth0  /tmp/ifcfg-eth0fiif [ -f /etc/default/grub ]; then    kernel_options_post=&quot;net.ifnames=0 biosdevname=0&quot;    TMP_GRUB=$(gawk &apos;match($0,/^GRUB_CMDLINE_LINUX=&quot;([^&quot;]+)&quot;/,a) {printf(&quot;%s\n&quot;,a[1])}&apos; /etc/default/grub)    sed -i &apos;/^GRUB_CMDLINE_LINUX=/d&apos; /etc/default/grub    echo &quot;GRUB_CMDLINE_LINUX=\&quot;$TMP_GRUB $kernel_options_post\&quot;&quot; &gt;&gt; /etc/default/grub    grub2-mkconfig -o /boot/grub2/grub.cfgelse    /sbin/grubby --update-kernel=$(/sbin/grubby --default-kernel) --args=&quot;$kernel_options_post&quot;fireboot</code></pre><h3 id="PEX-批量安装时更改"><a href="#PEX-批量安装时更改" class="headerlink" title="PEX 批量安装时更改"></a>PEX 批量安装时更改</h3><blockquote><p>此方法在多网卡状态下也可正常使用</p></blockquote><pre><code># PXE引导添加内核参数(net.ifnames=0 biosdevname=0)KERNEL http://***/vmlinuz net.ifnames=0 biosdevname=0# 无人值守自应答文件添加内核参数 (--append=&quot;net.ifnames=0 biosdevname=0&quot;)bootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda --append=&quot;net.ifnames=0 biosdevname=0&quot;</code></pre>]]></content>
      
      <categories>
          
          <category> 修改网卡名 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 修改网卡名 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Kubernetes V1.10 集群搭建</title>
      <link href="/posts/f82e.html"/>
      <url>/posts/f82e.html</url>
      <content type="html"><![CDATA[<style>/* 第一列表格宽度 */table th:nth-of-type(1){width: 10%;}/* 第二列表格宽度 */table th:nth-of-type(2){width: 30%;}/* 第三列表格宽度 */table th:nth-of-type(3){width: 60%;}/*  ... ...  */ </style><h1 id="Kubernetes-V1-10-集群文档"><a href="#Kubernetes-V1-10-集群文档" class="headerlink" title="Kubernetes V1.10 集群文档"></a>Kubernetes V1.10 集群文档</h1><p>1.服务器信息： (CentOS-7-x86_64-Minimal-1804) (keepalived 浮动IP:192.168.0.10)<br>2.lab1, lab2, lab3 为控制节点 lab4, lab5 lab6 为计算节点</p><table><thead><tr><th style="text-align:center">主机名</th><th style="text-align:center">IP</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:center">lab1</td><td style="text-align:center">192.168.0.11</td><td style="text-align:left">master, etcd, keepalived, kubeadm, kubectl, kubelet, docker-ce, cfssl</td></tr><tr><td style="text-align:center">lab2</td><td style="text-align:center">192.168.0.22</td><td style="text-align:left">master, etcd, keepalived, kubeadm, kubectl, kubelet, docker-ce</td></tr><tr><td style="text-align:center">lab3</td><td style="text-align:center">192.168.0.33</td><td style="text-align:left">master, etcd, keepalived, kubeadm, kubectl, kubelet, docker-ce</td></tr><tr><td style="text-align:center">lab4</td><td style="text-align:center">192.168.0.44</td><td style="text-align:left">node, kubeadm, kubectl, kubelet, docker-ce</td></tr><tr><td style="text-align:center">lab5</td><td style="text-align:center">192.168.0.55</td><td style="text-align:left">node, kubeadm, kubectl, kubelet, docker-ce</td></tr><tr><td style="text-align:center">lab6</td><td style="text-align:center">192.168.0.66</td><td style="text-align:left">node, kubeadm, kubectl, kubelet, docker-ce</td></tr></tbody></table><blockquote><p>以下所有的命令均在 lab1 执行(注意：需要配置好lab1 ssh连接其他节点需免密钥登陆)</p></blockquote><h3 id="初始化配置变量"><a href="#初始化配置变量" class="headerlink" title="初始化配置变量"></a>初始化配置变量</h3><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;./list192.168.0.11  lab1192.168.0.22  lab2192.168.0.33  lab3192.168.0.44  lab4192.168.0.55  lab5192.168.0.66  lab6EOF# keepalived 浮动IPexport vip=192.168.0.10while read LINE; do    IP=$(echo $LINE | awk &apos;{print $1}&apos;)    HOST=$(echo $LINE | awk &apos;{print $2}&apos;)    export $(echo $HOST=&quot;$IP&quot;)done &lt; ./list</code></pre><h3 id="配置ssh免密码登录"><a href="#配置ssh免密码登录" class="headerlink" title="配置ssh免密码登录"></a>配置ssh免密码登录</h3><pre><code># 远程root密码passwd=&apos;redhat&apos;# hostsif [ -z &quot;$(grep &apos;# kubernetes&apos; /etc/hosts)&quot; ];then    echo &apos;# kubernetes&apos; &gt;&gt;/etc/hosts    cat ./list &gt;&gt;/etc/hostsfi# 生成密钥[ -f ~/.ssh/id_dsa ] || { ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa; }# 安装 expect[ -f /usr/bin/expect ] || { yum -y install expect; }# 取出 list 中的每行while read -r LINE; do    HOST=$(echo $LINE | awk &apos;{print $2}&apos;)    # 添加公钥到远程主机    /usr/bin/expect &lt;&lt;EOF    set timeout 30    spawn ssh-copy-id -i /root/.ssh/id_dsa.pub root@$HOST    expect {        &quot;(yes/no)?&quot; { send &quot;yes\r&quot;; exp_continue }        &quot;password:&quot; { send &quot;$passwd\r&quot; }    }    expect eofEOFdone &lt; ./list</code></pre><h3 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h3><pre><code>while read LINE; do    HOST=$(echo $LINE | awk &apos;{print $2}&apos;)    echo &quot;--------------- $HOST ---------------&quot;    scp /etc/hosts $HOST:/etc/hosts    ssh -T $HOST &lt;&lt;EOF        # 配置主机名        hostnamectl set-hostname $HOST        # 配置阿里yum源        if [ ! -f &quot;/etc/yum.repos.d/Centos-7.repo&quot; ];then            yum -y install epel-release &gt;/dev/null 2&gt;&amp;1            rm -f /etc/yum.repos.d/*            curl -o /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repo            curl -o /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo            sed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/*.repo            yum makecache &gt;/dev/null 2&gt;&amp;1        fi        # Selinux, Firewalld        systemctl stop firewalld        systemctl disable firewalld        firewall-cmd --state        setenforce 0        sed -i &apos;/^SELINUX=.*/c SELINUX=disabled&apos; /etc/selinux/config        grep --color=auto &apos;^SELINUX&apos; /etc/selinux/config        # 常用工具        yum -y install wget vim ntpdate net-tools tree lrzsz lsof &gt;/dev/null 2&gt;&amp;1 &amp;&amp; echo &quot;软件安装完成&quot;        # 时间同步        ntpdate ntp.aliyun.com &amp;&amp; hwclock -w &gt;/dev/null 2&gt;&amp;1 &amp;&amp; echo &quot;时间同步成功&quot;        echo &quot;*/20 * * * * /usr/sbin/ntpdate pool.ntp.org &gt;/dev/null 2&gt;&amp;1 &amp;&amp; /usr/sbin/hwclock -w&quot; &gt;/tmp/crontab        crontab /tmp/crontab        # 关闭 Swap        swapoff -a         sed -i &apos;s/.*swap.*/#&amp;/&apos; /etc/fstab        sysctl -w vm.swappiness=0        # 内核参数优化        echo &apos;net.ipv4.ip_forward = 1&apos; &gt; /etc/sysctl.d/k8s.conf        echo &apos;net.bridge.bridge-nf-call-ip6tables = 1&apos; &gt;&gt; /etc/sysctl.d/k8s.conf        echo &apos;net.bridge.bridge-nf-call-iptables = 1&apos; &gt;&gt; /etc/sysctl.d/k8s.conf        echo &apos;vm.swappiness=0&apos; &gt;&gt; /etc/sysctl.d/k8s.conf        sysctl -p /etc/sysctl.d/k8s.conf &gt;/dev/null 2&gt;&amp;1        echo &apos;# myset&apos; &gt;&gt; /etc/security/limits.conf        echo &apos;* soft nofile 65536&apos; &gt;&gt; /etc/security/limits.conf        echo &apos;* hard nofile 65536&apos; &gt;&gt; /etc/security/limits.conf        echo &apos;* soft nproc 65536&apos; &gt;&gt; /etc/security/limits.conf        echo &apos;* hard nproc 65536&apos; &gt;&gt; /etc/security/limits.conf        echo &apos;* soft  memlock  unlimited&apos; &gt;&gt; /etc/security/limits.conf        echo &apos;* hard memlock  unlimited&apos; &gt;&gt; /etc/security/limits.confEOFdone &lt; ./list</code></pre><h3 id="安装-配置-keepalived"><a href="#安装-配置-keepalived" class="headerlink" title="安装/配置 keepalived"></a>安装/配置 keepalived</h3><blockquote><p>浮动IP优先级依次为 lab1 &gt; lab2 &gt; lab3 修改配置文件 priority 值可调整优先级</p></blockquote><h4 id="lab1"><a href="#lab1" class="headerlink" title="lab1"></a>lab1</h4><pre><code>ssh lab1 &lt;&lt;EEOOFF# install keepalivedyum install -y keepalived# lab1 keepalived.confcat &lt;&lt;EOF &gt; /etc/keepalived/keepalived.confglobal_defs {   router_id LVS_k8s}vrrp_script CheckK8sMaster {    script &quot;curl -k https://$vip:6443&quot;    interval 3    timeout 9    fall 2    rise 2}vrrp_instance VI_1 {    state MASTER    interface ens33    virtual_router_id 61    priority 100    advert_int 1    mcast_src_ip $lab1    nopreempt    authentication {        auth_type PASS        auth_pass sqP05dQgMSlzrxHj    }    unicast_peer {        $lab2        $lab3    }    virtual_ipaddress {        $vip/24    }    track_script {        CheckK8sMaster    }}EOFsystemctl enable keepalivedEEOOFF</code></pre><h4 id="lab2"><a href="#lab2" class="headerlink" title="lab2"></a>lab2</h4><pre><code>ssh lab2 &lt;&lt;EEOOFF# install keepalivedyum install -y keepalived# lab2 keepalived.confcat &lt;&lt;EOF &gt; /etc/keepalived/keepalived.confglobal_defs {   router_id LVS_k8s}global_defs {   router_id LVS_k8s}vrrp_script CheckK8sMaster {    script &quot;curl -k https://$vip:6443&quot;    interval 3    timeout 9    fall 2    rise 2}vrrp_instance VI_1 {    state BACKUP    interface ens33    virtual_router_id 61    priority 90    advert_int 1    mcast_src_ip $lab2    nopreempt    authentication {        auth_type PASS        auth_pass sqP05dQgMSlzrxHj    }    unicast_peer {        $lab1        $lab3    }    virtual_ipaddress {        $vip/24    }    track_script {        CheckK8sMaster    }}EOFsystemctl enable keepalivedEEOOFF</code></pre><h4 id="lab3"><a href="#lab3" class="headerlink" title="lab3"></a>lab3</h4><pre><code>ssh lab3 &lt;&lt;EEOOFF# install keepalivedyum install -y keepalived# lab1 keepalived.confcat &lt;&lt;EOF &gt; /etc/keepalived/keepalived.confglobal_defs {   router_id LVS_k8s}global_defs {   router_id LVS_k8s}vrrp_script CheckK8sMaster {    script &quot;curl -k https://$vip:6443&quot;    interval 3    timeout 9    fall 2    rise 2}vrrp_instance VI_1 {    state BACKUP    interface ens33    virtual_router_id 61    priority 80    advert_int 1    mcast_src_ip $lab3    nopreempt    authentication {        auth_type PASS        auth_pass sqP05dQgMSlzrxHj    }    unicast_peer {        $lab1        $lab2    }    virtual_ipaddress {        $vip/24    }    track_script {        CheckK8sMaster    }}EOFsystemctl enable keepalivedEEOOFF</code></pre><h4 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h4><pre><code>for NODE in lab1 lab2 lab3; do    echo &quot;---------- $NODE ----------&quot;    ssh $NODE &quot;systemctl restart keepalived; systemctl status keepalived&quot;done</code></pre><h3 id="生成证书文件"><a href="#生成证书文件" class="headerlink" title="生成证书文件"></a>生成证书文件</h3><h4 id="安装证书生成工具"><a href="#安装证书生成工具" class="headerlink" title="安装证书生成工具"></a>安装证书生成工具</h4><pre><code>wget -c https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 -O /usr/local/bin/cfsslwget -c https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -O /usr/local/bin/cfssljsonwget -c https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -O /usr/local/bin/cfssl-certinfochmod +x /usr/local/bin/cfssl /usr/local/bin/cfssljson /usr/local/bin/cfssl-certinfo</code></pre><h4 id="生成证书文件-1"><a href="#生成证书文件-1" class="headerlink" title="生成证书文件"></a>生成证书文件</h4><pre><code># 创建临时目录mkdir /root/ssl &amp;&amp; cd /root/ssl# 创建证书策略cat &lt;&lt;EOF &gt;ca-config.json {&quot;signing&quot;: {&quot;default&quot;: {  &quot;expiry&quot;: &quot;8760h&quot;},&quot;profiles&quot;: {  &quot;kubernetes-Soulmate&quot;: {    &quot;usages&quot;: [        &quot;signing&quot;,        &quot;key encipherment&quot;,        &quot;server auth&quot;,        &quot;client auth&quot;    ],    &quot;expiry&quot;: &quot;8760h&quot;  }}}}EOF# 创建证书区域加密方式信息cat &lt;&lt;EOF &gt;ca-csr.json {&quot;CN&quot;: &quot;kubernetes-Soulmate&quot;,&quot;key&quot;: {&quot;algo&quot;: &quot;rsa&quot;,&quot;size&quot;: 2048},&quot;names&quot;: [{  &quot;C&quot;: &quot;CN&quot;,  &quot;ST&quot;: &quot;shanghai&quot;,  &quot;L&quot;: &quot;shanghai&quot;,  &quot;O&quot;: &quot;k8s&quot;,  &quot;OU&quot;: &quot;System&quot;}]}EOF# 生成证书cfssl gencert -initca ca-csr.json | cfssljson -bare ca# 创建 Etcd 证书生成信息cat &lt;&lt;EOF &gt;etcd-csr.json {  &quot;CN&quot;: &quot;etcd&quot;,  &quot;hosts&quot;: [    &quot;127.0.0.1&quot;,    &quot;$lab1&quot;,    &quot;$lab2&quot;,    &quot;$lab3&quot;,    &quot;$vip&quot;  ],  &quot;key&quot;: {    &quot;algo&quot;: &quot;rsa&quot;,    &quot;size&quot;: 2048  },  &quot;names&quot;: [    {      &quot;C&quot;: &quot;CN&quot;,      &quot;ST&quot;: &quot;shanghai&quot;,      &quot;L&quot;: &quot;shanghai&quot;,      &quot;O&quot;: &quot;k8s&quot;,      &quot;OU&quot;: &quot;System&quot;    }  ]}EOF# 生成etcd 证书cfssl gencert -ca=ca.pem \    -ca-key=ca-key.pem \    -config=ca-config.json \    -profile=kubernetes-Soulmate etcd-csr.json | cfssljson -bare etcd# 回到家目录cd</code></pre><h4 id="同步证书文件"><a href="#同步证书文件" class="headerlink" title="同步证书文件"></a>同步证书文件</h4><pre><code>for NODE in lab1 lab2 lab3; do    echo &quot;---------- SCP Etcd certificate -=&gt; $NODE ----------&quot;    ssh $NODE &quot;mkdir -p /etc/etcd/ssl/&quot;    scp /root/ssl/{etcd.pem,etcd-key.pem,ca.pem} $NODE:/etc/etcd/ssl/done</code></pre><h3 id="安装配置Etcd"><a href="#安装配置Etcd" class="headerlink" title="安装配置Etcd"></a>安装配置Etcd</h3><h4 id="lab1-1"><a href="#lab1-1" class="headerlink" title="lab1"></a>lab1</h4><pre><code>ssh lab1 &lt;&lt;EEOOFFyum -y install etcdmkdir -p /var/lib/etcdcat &lt;&lt;EOF &gt;/etc/systemd/system/etcd.service[Unit]Description=Etcd ServerAfter=network.targetAfter=network-online.targetWants=network-online.targetDocumentation=https://github.com/coreos[Service]Type=notifyWorkingDirectory=/var/lib/etcd/ExecStart=/usr/bin/etcd \  --name lab1 \  --cert-file=/etc/etcd/ssl/etcd.pem \  --key-file=/etc/etcd/ssl/etcd-key.pem \  --peer-cert-file=/etc/etcd/ssl/etcd.pem \  --peer-key-file=/etc/etcd/ssl/etcd-key.pem \  --trusted-ca-file=/etc/etcd/ssl/ca.pem \  --peer-trusted-ca-file=/etc/etcd/ssl/ca.pem \  --initial-advertise-peer-urls https://$lab1:2380 \  --listen-peer-urls https://$lab1:2380 \  --listen-client-urls https://$lab1:2379,http://127.0.0.1:2379 \  --advertise-client-urls https://$lab1:2379 \  --initial-cluster-token etcd-cluster-0 \  --initial-cluster lab1=https://$lab1:2380,lab2=https://$lab2:2380,lab3=https://$lab3:2380 \  --initial-cluster-state new \  --data-dir=/var/lib/etcdRestart=on-failureRestartSec=5LimitNOFILE=65536[Install]WantedBy=multi-user.targetEOF    systemctl daemon-reload    systemctl enable etcdEEOOFF</code></pre><h4 id="lab2-1"><a href="#lab2-1" class="headerlink" title="lab2"></a>lab2</h4><pre><code>ssh lab2 &lt;&lt;EEOOFFyum -y install etcdmkdir -p /var/lib/etcdcat &lt;&lt;EOF &gt;/etc/systemd/system/etcd.service[Unit]Description=Etcd ServerAfter=network.targetAfter=network-online.targetWants=network-online.targetDocumentation=https://github.com/coreos[Service]Type=notifyWorkingDirectory=/var/lib/etcd/ExecStart=/usr/bin/etcd \  --name lab2 \  --cert-file=/etc/etcd/ssl/etcd.pem \  --key-file=/etc/etcd/ssl/etcd-key.pem \  --peer-cert-file=/etc/etcd/ssl/etcd.pem \  --peer-key-file=/etc/etcd/ssl/etcd-key.pem \  --trusted-ca-file=/etc/etcd/ssl/ca.pem \  --peer-trusted-ca-file=/etc/etcd/ssl/ca.pem \  --initial-advertise-peer-urls https://$lab2:2380 \  --listen-peer-urls https://$lab2:2380 \  --listen-client-urls https://$lab2:2379,http://127.0.0.1:2379 \  --advertise-client-urls https://$lab2:2379 \  --initial-cluster-token etcd-cluster-0 \  --initial-cluster lab1=https://$lab1:2380,lab2=https://$lab2:2380,lab3=https://$lab3:2380 \  --initial-cluster-state new \  --data-dir=/var/lib/etcdRestart=on-failureRestartSec=5LimitNOFILE=65536[Install]WantedBy=multi-user.targetEOF    systemctl daemon-reload    systemctl enable etcdEEOOFF</code></pre><h4 id="lab3-1"><a href="#lab3-1" class="headerlink" title="lab3"></a>lab3</h4><pre><code>ssh lab3 &lt;&lt;EEOOFFyum -y install etcdmkdir -p /var/lib/etcdcat &lt;&lt;EOF &gt;/etc/systemd/system/etcd.service[Unit]Description=Etcd ServerAfter=network.targetAfter=network-online.targetWants=network-online.targetDocumentation=https://github.com/coreos[Service]Type=notifyWorkingDirectory=/var/lib/etcd/ExecStart=/usr/bin/etcd \  --name lab3 \  --cert-file=/etc/etcd/ssl/etcd.pem \  --key-file=/etc/etcd/ssl/etcd-key.pem \  --peer-cert-file=/etc/etcd/ssl/etcd.pem \  --peer-key-file=/etc/etcd/ssl/etcd-key.pem \  --trusted-ca-file=/etc/etcd/ssl/ca.pem \  --peer-trusted-ca-file=/etc/etcd/ssl/ca.pem \  --initial-advertise-peer-urls https://$lab3:2380 \  --listen-peer-urls https://$lab3:2380 \  --listen-client-urls https://$lab3:2379,http://127.0.0.1:2379 \  --advertise-client-urls https://$lab3:2379 \  --initial-cluster-token etcd-cluster-0 \--initial-cluster lab1=https://$lab1:2380,lab2=https://$lab2:2380,lab3=https://$lab3:2380 \  --initial-cluster-state new \  --data-dir=/var/lib/etcdRestart=on-failureRestartSec=5LimitNOFILE=65536[Install]WantedBy=multi-user.targetEOF    systemctl daemon-reload    systemctl enable etcdEEOOFF</code></pre><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><pre><code>for NODE in lab1 lab2 lab3; do    {    ssh $NODE &lt;&lt;EOF        systemctl start etcdEOF } &amp;done# 查看状态etcdctl --endpoints=https://$lab1:2379,https://$lab2:2379,https://$lab3:2379 \    --ca-file=/etc/etcd/ssl/ca.pem \    --cert-file=/etc/etcd/ssl/etcd.pem \    --key-file=/etc/etcd/ssl/etcd-key.pem  cluster-health</code></pre><h3 id="安装-配置-Docker"><a href="#安装-配置-Docker" class="headerlink" title="安装/配置 Docker"></a>安装/配置 Docker</h3><pre><code>while read LINE; do    HOST=$(echo $LINE | awk &apos;{print $2}&apos;)    echo &quot;--------------- $HOST ---------------&quot;    ssh -T $HOST &lt;&lt;EOF    # Docker install    yum -y install yum-utils device-mapper-persistent-data lvm2    yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo    yum makecache fast    yum -y install docker-ce    # 配置Docker 加速    mkdir /etc/docker    if [ ! -f &quot;/etc/docker/daemon.json&quot; ];then        echo &apos;{&apos; &gt;/etc/docker/daemon.json        echo &apos;    &quot;registry-mirrors&quot;: [&quot;http://3272dd08.m.daocloud.io&quot;]&apos; &gt;&gt;/etc/docker/daemon.json        echo &apos;}&apos; &gt;&gt;/etc/docker/daemon.json    fi    # 启动服务    systemctl start docker    systemctl enable docker    # 验证    docker info    docker -vEOFdone &lt; ./list</code></pre><h3 id="安装-配置-kubelet-kubeadm-kubectl"><a href="#安装-配置-kubelet-kubeadm-kubectl" class="headerlink" title="安装/配置 kubelet kubeadm kubectl"></a>安装/配置 kubelet kubeadm kubectl</h3><pre><code>while read LINE; do    IP=$(echo $LINE | awk &apos;{print $1}&apos;)    NODE=$(echo $LINE | awk &apos;{print $2}&apos;)    ssh $NODE &lt;&lt;EOF        # 配置 kubernetes 安装源        echo &apos;[kubernetes]&apos; &gt; /etc/yum.repos.d/kubernetes.repo        echo &apos;name=Kubernetes&apos; &gt;&gt; /etc/yum.repos.d/kubernetes.repo        echo &apos;baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64&apos; &gt;&gt; /etc/yum.repos.d/kubernetes.repo        echo &apos;enabled=1&apos; &gt;&gt; /etc/yum.repos.d/kubernetes.repo        echo &apos;gpgcheck=1&apos; &gt;&gt; /etc/yum.repos.d/kubernetes.repo        echo &apos;repo_gpgcheck=1&apos; &gt;&gt; /etc/yum.repos.d/kubernetes.repo        echo &apos;gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg&apos; &gt;&gt; /etc/yum.repos.d/kubernetes.repo        # 安装        # yum install -y kubelet kubeadm kubectl        yum -y install kubelet-1.10.1-0.x86_64 kubeadm-1.10.1-0.x86_64 kubectl-1.10.1-0.x86_64 ipvsadm        systemctl enable kubelet        # 配置启动kubelet        DOCKER_CGROUPS=$(docker info | grep &apos;Cgroup&apos; | cut -d&apos; &apos; -f3)        echo &apos;KUBELET_EXTRA_ARGS=&quot;--cgroup-driver=$DOCKER_CGROUPS --pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/google_containers/pause-amd64:3.1&quot;&apos; &gt; /etc/sysconfig/kubelet        # 更换 kubelet 驱动        sed -i &apos;s/driver=systemd/driver=cgroupfs/&apos; /etc/systemd/system/kubelet.service.d/10-kubeadm.conf        # 配置kubelet使用国内可用镜像        # 修改/etc/systemd/system/kubelet.service.d/10-kubeadm.conf        # sed -i &apos;/ExecStart=$/i Environment=&quot;KUBELET_EXTRA_ARGS=--pod-infra-container-image=registry.cn-shanghai.aliyuncs.com/gcr-k8s/pause-amd64:3.0&quot;&apos;  /etc/systemd/system/kubelet.service.d/10-kubeadm.conf        sed -i &apos;/ExecStart=$/i Environment=&quot;KUBELET_EXTRA_ARGS=--v=2 --fail-swap-on=false --pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/k8sth/pause-amd64:3.0&quot;&apos;  /etc/systemd/system/kubelet.service.d/10-kubeadm.conf        # 重新载入配置 启动服务        systemctl daemon-reload        #  命令补全        yum install -y bash-completion        source /usr/share/bash-completion/bash_completion        source &lt;(kubectl completion bash)        echo &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt; ~/.bashrcEOFdone &lt; ./list</code></pre><h3 id="初始化集群"><a href="#初始化集群" class="headerlink" title="初始化集群"></a>初始化集群</h3><h4 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h4><pre><code>token=$(kubeadm token generate)cat &lt;&lt;EOF &gt; config.yaml apiVersion: kubeadm.k8s.io/v1alpha1kind: MasterConfigurationetcd:  endpoints:  - https://$lab1:2379  - https://$lab2:2379  - https://$lab3:2379  caFile: /etc/etcd/ssl/ca.pem  certFile: /etc/etcd/ssl/etcd.pem  keyFile: /etc/etcd/ssl/etcd-key.pem  dataDir: /var/lib/etcdnetworking:  podSubnet: 10.244.0.0/16kubernetesVersion: 1.10.0api:  advertiseAddress: &quot;$vip&quot;token: &quot;$token&quot;tokenTTL: &quot;0&quot;apiServerCertSANs:  - lab1  - lab2  - lab3  - $lab1  - $lab2  - $lab3  - $lab4  - $vipfeatureGates:  CoreDNS: trueimageRepository: &quot;registry.cn-hangzhou.aliyuncs.com/k8sth&quot;EOF</code></pre><h4 id="初始化-lab1"><a href="#初始化-lab1" class="headerlink" title="初始化 lab1"></a>初始化 lab1</h4><pre><code># kubeadm resetkubeadm init --config config.yaml | tee add.node.log# 配置访问权限mkdir -p $HOME/.kube/usr/bin/cp /etc/kubernetes/admin.conf $HOME/.kube/configchown $(id -u):$(id -g) $HOME/.kube/config# coredns 访问异常是因为 kube-flannel 镜像未启动kubectl get pods --all-namespaces</code></pre><h4 id="部署flannel-网络"><a href="#部署flannel-网络" class="headerlink" title="部署flannel 网络"></a>部署flannel 网络</h4><pre><code># 下载 kube-flannel.ymlwget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml# 修改镜像源# image: registry.cn-shanghai.aliyuncs.com/gcr-k8s/flannel:v0.10.0-amd64sed -i &apos;s#image:.*#image: registry.cn-shanghai.aliyuncs.com/gcr-k8s/flannel:v0.10.0-amd64#&apos; kube-flannel.yml# 创建 flannelkubectl create -f  kube-flannel.yml# 查看状态kubectl get pods --all-namespaces -o wide</code></pre><h4 id="部署-dashboard"><a href="#部署-dashboard" class="headerlink" title="部署 dashboard"></a>部署 dashboard</h4><pre><code># 下载 kubernetes-dashboard.yamlwget https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml# 更换镜像源sed -i &apos;s#image:.*#image: registry.cn-hangzhou.aliyuncs.com/k8sth/kubernetes-dashboard-amd64:v1.8.3#&apos; kubernetes-dashboard.yaml# 添加暴露端口 30000sed -i &quot;162a\  type: NodePort&quot; kubernetes-dashboard.yamlsed -i &quot;166a\      nodePort: 30000&quot; kubernetes-dashboard.yaml# 创建 dashboardkubectl create -f kubernetes-dashboard.yaml# 查看状态kubectl get pods --all-namespaces -o widekubectl -n kube-system get po,svc -l k8s-app=kubernetes-dashboard# 建立一个 service account 来绑定 cluster-admin rolekubectl -n kube-system create sa dashboardkubectl create clusterrolebinding dashboard --clusterrole cluster-admin --serviceaccount=kube-system:dashboard# 获取浏览器登录令牌# kubectl -n kube-system describe secrets $(kubectl -n kube-system get sa dashboard -o yaml | awk &apos;/dashboard-token/ {print $3}&apos;)  | awk &apos;/token:/{print $2}&apos;SECRET=$(kubectl -n kube-system get sa dashboard -o yaml | awk &apos;/dashboard-token/ {print $3}&apos;)kubectl -n kube-system describe secrets ${SECRET} | awk &apos;/token:/{print $2}&apos; | tee browser-token.log# 浏览器登录  tokenecho https://$vip:30000/#&apos;!&apos;/loginecho &apos;#######################################################################&apos;cat browser-token.logecho &apos;#######################################################################&apos;</code></pre><h4 id="初始化-lab2-lab3"><a href="#初始化-lab2-lab3" class="headerlink" title="初始化 lab2 lab3"></a>初始化 lab2 lab3</h4><pre><code># 证书密码配置文件分发到lab2 lab3scp -r /etc/kubernetes/pki  lab2:/etc/kubernetes/scp -r /etc/kubernetes/pki  lab3:/etc/kubernetes/scp /root/config.yaml lab2:/rootscp /root/config.yaml lab3:/root# lab2 lab3 初始化for NODE in lab2 lab3; do    ssh $NODE &lt;&lt;EOF        kubeadm init --config config.yaml        mkdir -p $HOME/.kube        /usr/bin/cp /etc/kubernetes/admin.conf $HOME/.kube/config        chown $(id -u):$(id -g) $HOME/.kube/configEOFdone# 查看状态kubectl get svc --namespace kube-systemkubectl get pods --all-namespaces -o wide# 查看所有节点状态kubectl get nodeskubectl get nodes -o wide</code></pre><h3 id="测试安装-heapster"><a href="#测试安装-heapster" class="headerlink" title="测试安装 heapster"></a>测试安装 heapster</h3><pre><code># 下载部署文件wget -c https://github.com/kubernetes/heapster/archive/v1.5.3.tar.gz -O heapster-1.5.3.tar.gztar xvf heapster-1.5.3.tar.gz -C /tmpmkdir kube-heapster/usr/bin/cp -r /tmp/heapster-1.5.3/deploy/kube-config/{influxdb,rbac} kube-heapster/# 替换镜像源sed -i &quot;s#image:.*#image: registry.cn-hangzhou.aliyuncs.com/k8sth/heapster-influxdb-amd64:v1.3.3#&quot; kube-heapster/influxdb/influxdb.yamlsed -i &quot;s#image:.*#image: registry.cn-hangzhou.aliyuncs.com/k8sth/heapster-grafana-amd64:v4.4.3#&quot; kube-heapster/influxdb/grafana.yamlsed -i &quot;s#image:.*#image: registry.cn-hangzhou.aliyuncs.com/k8sth/heapster-amd64:v1.4.2#&quot; kube-heapster/influxdb/heapster.yaml# 添加暴露端口 30001sed -i &quot;s/# type: NodePort/type: NodePort/&quot;  kube-heapster/influxdb/grafana.yamlsed -i &quot;70a\    nodePort: 30001&quot;   kube-heapster/influxdb/grafana.yaml# 部署 influxdb rbac grafanakubectl create -f kube-heapster/influxdb/kubectl create -f kube-heapster/rbac/# 查看容器状态kubectl get pods --all-namespaces -o wide# 查看所有节点状态kubectl get nodes -o wide# 删除# kubectl delete -f kube-heapster/influxdb/# kubectl delete -f kube-heapster/rbac/# 浏览器打开echo http://192.168.150.181:3001/#&apos;!&apos;/loginecho &apos;USER: admin  PPASSWD: admin&apos;</code></pre><h4 id="添加计算节点到集群-lab4-lab5-lab6"><a href="#添加计算节点到集群-lab4-lab5-lab6" class="headerlink" title="添加计算节点到集群 lab4 lab5 lab6"></a>添加计算节点到集群 lab4 lab5 lab6</h4><pre><code>export sha=$(openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | openssl dgst -sha256 -hex | sed &apos;s/^.* //&apos;)export token=$(kubeadm token list | awk &apos;{print $1}&apos; | head -n2 | tail -n1)for NODE in lab4 lab5 lab6; do    ssh $NODE &quot;kubeadm join 192.168.0.10:6443 --token $token --discovery-token-ca-cert-hash sha256:$sha&quot;done</code></pre><h4 id="kubeadm-join-重新生成-过期"><a href="#kubeadm-join-重新生成-过期" class="headerlink" title="kubeadm join 重新生成(过期)"></a>kubeadm join 重新生成(过期)</h4><pre><code># 查看 tokenkubeadm token list# 创建 tokentoken=$(kubeadm token create)# 获取证书 sha256值sha=$(openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | openssl dgst -sha256 -hex | sed &apos;s/^.* //&apos;)# New kubeadm join# token=$(kubeadm token list | awk &apos;{print $1}&apos; | head -n2 | tail -n1)echo kubeadm join 192.168.0.10:6443 --token $token --discovery-token-ca-cert-hash sha256:$sha</code></pre>]]></content>
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> Docker </tag>
            
            <tag> keepalived </tag>
            
            <tag> Kubernetes集群 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>软件收藏</title>
      <link href="/posts/bd77.html"/>
      <url>/posts/bd77.html</url>
      <content type="html"><![CDATA[<h3 id="U盘写入镜像工具"><a href="#U盘写入镜像工具" class="headerlink" title="U盘写入镜像工具"></a>U盘写入镜像工具</h3><pre><code>Etcher    支持系统：Windows, Linux, macOS    官网地址：https://etcher.io    软件下载源在 GitHub 下载速度慢</code></pre><hr><h3 id="记事本"><a href="#记事本" class="headerlink" title="记事本"></a>记事本</h3><pre><code>NOTEPAD2    支持系统：Windows    官网地址：https://notepad2.com    官方下载有点坑, 建议第三方站点下载</code></pre><hr><h3 id="Win系统优化工具"><a href="#Win系统优化工具" class="headerlink" title="Win系统优化工具"></a>Win系统优化工具</h3><pre><code>Dism++    支持系统：Windows    官网地址：https://www.chuyu.me/zh-Hans/index.html    功能：系统优化, 备份, 恢复, 更新, 清理, ESD转ISO</code></pre><hr><h3 id="Win系统封装工具"><a href="#Win系统封装工具" class="headerlink" title="Win系统封装工具"></a>Win系统封装工具</h3><pre><code>Easy Sysprep    支持系统：Windows [XP(x86), 7(x86/x64), 8(x86/x64), 8.1(x86/x64), 10(x86/x64)]    官网地址：https://www.itsk.com/redirect.php?id=easysysprep    功能：系统封装 将机械重复的系统安装流程化繁为简。ES很大程度上缩减了系统部署时间，加强了系统部署效率，节约了人力与时间成本万能驱动    支持系统：Windows 7/10 (注意下载对应版本)    官网地址：https://www.itsk.com/redirect.php?id=easydrv    功能：一键安装系统驱动优启通    官网地址：https://www.itsk.com/redirect.php?id=easyu    功能：U盘启动Easy Image X    支持系统：PE环境    官网地址：https://www.itsk.com/redirect.php?id=easyimagex    功能：统映像工具, 备份系统, 映像恢复, 驱动调用等功能, 用于系统安装SkyIAR    支持系统：Windows    官网地址：    功能：整合大量IDE/AHCI/RAID驱动同时, SkyIAR还可以有效解决&apos;换硬件不换系统&apos;, &apos;IDE改AHCI&apos;等与磁盘控制器工作模式息息相关的问题.    SkyIAR具备&apos;自动检测&apos;, &apos;自动筛选&apos;, &apos;一键完成&apos;等特性GoRuntime    支持系统：Windows    官网地址：https://www.itsk.com/redirect.php?id=goruntime    功能：安装系统常用运行库的工具。多种运行库一键安装，也可使用/S参数自动安装</code></pre><hr><h3 id="SSH工具"><a href="#SSH工具" class="headerlink" title="SSH工具"></a>SSH工具</h3><pre><code>Xshell/Xftp    开源版下载地址：https://www.netsarang.com/download/free_license.html    功能：TELNET/SSH客户端 FTP/SFTP客户端</code></pre><hr><h3 id="Win系统下载"><a href="#Win系统下载" class="headerlink" title="Win系统下载"></a>Win系统下载</h3><pre><code>Win7    站点：http://www.newxitong.com    特点：已封装好的镜像, 还原到系统盘即可自动开始安装系统,驱动ISO镜像下载    站点：https://msdn.itellyou.cn    特点：微软产品镜像下载, 系统, 软件    下载地址为 ed2k 需要用迅雷下载或离线到百度网盘</code></pre><hr><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><pre><code>WebUI-Aria2    站点：https://github.com/ziahamza/webui-aria2Aria2    站点：http://aria2c.com/usage.htmlPan Download    说明：百度网盘资源下载    站点：http://pandownload.com</code></pre><h3 id="查看Docker镜像的介绍"><a href="#查看Docker镜像的介绍" class="headerlink" title="查看Docker镜像的介绍"></a>查看Docker镜像的介绍</h3><pre><code>php    https://hub.docker.com/_/phpnginx    https://hub.docker.com/_/nginxvimagick/aria2    https://hub.docker.com/r/vimagick/aria2</code></pre><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><pre><code>X 探针    介绍：https://inn-studio.com/prober/    下载链接：https://api.inn-studio.com/download?id=xprober壁纸    站点：https://picsum.photosh5ai    站点：https://larsjung.de/h5ai/</code></pre><h3 id="Chrome插件"><a href="#Chrome插件" class="headerlink" title="Chrome插件"></a>Chrome插件</h3><pre><code>Charset    功能：更改页面字符编码    安装方法：https://jingyan.baidu.com/article/b0b63dbf0590db4a483070ee.html    下载地址：http://pan.baidu.com/s/1c13eOe8BaiduExporter    功能：下载百度网盘资源    下载地址：https://github.com/acgotaku/BaiduExporter/releases</code></pre><h3 id="MyCoding"><a href="#MyCoding" class="headerlink" title="MyCoding"></a>MyCoding</h3><pre><code>Kubernetes    https://git.coding.net/yx571304/kubernetes.gitDocker    https://git.coding.net/yx571304/Docker.git</code></pre>]]></content>
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> software </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>跳板机小脚本</title>
      <link href="/posts/f1ba.html"/>
      <url>/posts/f1ba.html</url>
      <content type="html"><![CDATA[<h3 id="高阶版"><a href="#高阶版" class="headerlink" title="高阶版"></a>高阶版</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir /shell</span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/shell/list</span><br><span class="line">192.168.0.60</span><br><span class="line">192.168.0.61</span><br><span class="line">192.168.0.62</span><br><span class="line">192.168.0.63</span><br><span class="line">192.168.0.64</span><br><span class="line">192.168.0.65</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><hr><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/shell/ssh-keygen-root.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程root密码</span></span><br><span class="line">passwd=<span class="string">'redhat'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成密钥</span></span><br><span class="line">[ -f ~/.ssh/id_dsa ] || &#123; ssh-keygen -t dsa -P <span class="string">''</span> -f ~/.ssh/id_dsa; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 expect</span></span><br><span class="line">[ -f /usr/bin/expect ] || &#123; yum -y install expect; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义并发数</span></span><br><span class="line">thead_num=4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以进程ID号命名管道文件</span></span><br><span class="line">tmp_fifo_file=<span class="string">"/tmp/$$.fifo"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建临时管道文件</span></span><br><span class="line">mkfifo <span class="variable">$tmp_fifo_file</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以读写方式打开tmp_fifo_file管道文件,文件描述符为4，也可以取3-9任意描述符</span></span><br><span class="line"><span class="built_in">exec</span> 4&lt;&gt;<span class="variable">$tmp_fifo_file</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除临时管道文件，也可不删除</span></span><br><span class="line">rm -f <span class="variable">$tmp_fifo_file</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用for循环向管道中输入并发数量的空行</span></span><br><span class="line"><span class="keyword">for</span> ((i=0;i&lt;<span class="variable">$thead_num</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="comment">#输出空行到定义的文件描述符4上</span></span><br><span class="line">    <span class="built_in">echo</span> &gt;&amp;4</span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环list 文件</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> -u4</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"># 添加公钥到远程主机</span></span><br><span class="line">    /usr/bin/expect &lt;&lt;EOF</span><br><span class="line">    <span class="built_in">set</span> timeout 5</span><br><span class="line">    spawn ssh-copy-id -i /root/.ssh/id_dsa.pub root@<span class="variable">$line</span></span><br><span class="line">    expect &#123;</span><br><span class="line">        <span class="string">"(yes/no)?"</span> &#123; send <span class="string">"yes\r"</span>; exp_continue &#125;</span><br><span class="line">        <span class="string">"password:"</span> &#123; send <span class="string">"<span class="variable">$passwd</span>\r"</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    expect eof</span><br><span class="line">EOF</span><br><span class="line">    <span class="built_in">echo</span>  &gt;&amp;4</span><br><span class="line">&#125; &amp;</span><br><span class="line"><span class="keyword">done</span> &lt; ./list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待所有后台进程执行完成</span></span><br><span class="line"><span class="built_in">wait</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭文件描述符的读</span></span><br><span class="line"><span class="built_in">exec</span> 4&lt;&amp;-</span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭文件描述符的写</span></span><br><span class="line"><span class="built_in">exec</span> 4&gt;&amp;-</span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><hr><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登陆shell 执行判断如果不是root用户则启动跳板机脚本</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'[ $UID -ne 0 ] &amp;&amp; . /shell/stepping-stones.sh'</span>&gt;/etc/profile.d/stepping-stones.sh</span><br></pre></td></tr></table></figure><hr><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/shell/ssh_key_useradd.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">user=<span class="string">'root'</span></span><br><span class="line">n_user=<span class="string">'okok5'</span></span><br><span class="line">passwd=<span class="string">'123456'</span></span><br><span class="line">useradd <span class="variable">$n_user</span> &amp;&amp; <span class="built_in">echo</span> <span class="variable">$passwd</span> | passwd --stdin <span class="variable">$n_user</span>;</span><br><span class="line">su - <span class="variable">$n_user</span> -c <span class="string">"ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> $(cat ./list);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    ssh <span class="variable">$user</span>@<span class="variable">$ip</span> &lt;&lt;eeooff</span><br><span class="line">           useradd <span class="variable">$n_user</span> &amp;&amp; <span class="built_in">echo</span> 123456 | passwd --stdin <span class="variable">$n_user</span></span><br><span class="line">           su - <span class="variable">$n_user</span> -c <span class="string">"ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa"</span></span><br><span class="line">eeooff</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 上传公钥</span></span><br><span class="line">    /usr/bin/expect  &lt;&lt;EOF</span><br><span class="line">    <span class="built_in">set</span> timeout 10</span><br><span class="line">    spawn ssh-copy-id -i /home/<span class="variable">$n_user</span>/.ssh/id_dsa.pub <span class="variable">$n_user</span>@<span class="variable">$ip</span></span><br><span class="line">    expect &#123;</span><br><span class="line">        <span class="string">"(yes/no)?"</span> &#123; send <span class="string">"yes\r"</span>; exp_continue &#125;</span><br><span class="line">        <span class="string">"password:"</span> &#123; send <span class="string">"<span class="variable">$passwd</span>\r"</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    expect eof</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><hr><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/shell/ssh_key_del.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> $(cat ./list);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    ssh -n <span class="variable">$user</span>@<span class="variable">$ip</span> <span class="string">"sed -i '/\"<span class="variable">$key</span>\"/d'  /home/<span class="variable">$duser</span>/.ssh/authorized_keys"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><hr><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/shell/stepping-stones.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略中断信号</span></span><br><span class="line"><span class="function"><span class="title">trapper</span></span>()&#123;</span><br><span class="line">    <span class="built_in">trap</span> <span class="string">':'</span> INT EXIT TSTP TERM HUP</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    trapper</span><br><span class="line"><span class="comment">#    clear</span></span><br><span class="line">    i=1</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">"\t <span class="variable">$i</span>) <span class="variable">$line</span>"</span></span><br><span class="line">        arr_line[<span class="variable">$i</span>]=<span class="variable">$line</span></span><br><span class="line">        <span class="built_in">let</span> i++</span><br><span class="line">    <span class="keyword">done</span> &lt; ./list</span><br><span class="line"></span><br><span class="line">    <span class="built_in">read</span> -p <span class="string">"Pls input a num :"</span> num</span><br><span class="line">    <span class="comment"># 如果输入为空</span></span><br><span class="line">    [ -z <span class="string">"<span class="variable">$num</span>"</span> ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">'Error: 请输入IP地址前的数字编号'</span>; <span class="built_in">continue</span>; &#125;</span><br><span class="line">    <span class="comment"># 如果输入的不是整数</span></span><br><span class="line">    [ -n <span class="string">"`echo <span class="variable">$num</span> | sed 's/[0-9]//g'`"</span> ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">'Error: 请输入IP地址前的数字编号'</span>; <span class="built_in">continue</span>; &#125;</span><br><span class="line">    <span class="comment"># 如果输入的不存在</span></span><br><span class="line">    [ <span class="variable">$num</span> -gt `cat /shell/list | wc -l` ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">'Error: 你输入的编号不存在'</span>; <span class="built_in">continue</span>; &#125;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"login in <span class="variable">$num</span>) <span class="variable">$&#123;arr_line[$num]&#125;</span>"</span></span><br><span class="line">    ssh <span class="variable">$&#123;arr_line[$num]&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> scritp </tag>
            
            <tag> 跳板机 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kubeadm脚本快速安装</title>
      <link href="/posts/ce34.html"/>
      <url>/posts/ce34.html</url>
      <content type="html"><![CDATA[<h2 id="kubeadm-master"><a href="#kubeadm-master" class="headerlink" title="kubeadm-master"></a>kubeadm-master</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">  初始化  <span class="comment">#</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> host</span></span><br><span class="line">echo '192.168.0.11 node01' &gt;&gt;/etc/hosts</span><br><span class="line">echo '192.168.0.22 node02' &gt;&gt;/etc/hosts</span><br><span class="line">echo '192.168.0.33 node03' &gt;&gt;/etc/hosts</span><br><span class="line">echo '192.168.0.44 node04' &gt;&gt;/etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> host name</span></span><br><span class="line">hostnamectl set-hostname node00</span><br><span class="line">hostnamectl status</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置阿里yum源</span></span><br><span class="line">yum -y install epel-release</span><br><span class="line">rm -f /etc/yum.repos.d/*</span><br><span class="line">curl -o /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">sed -i '/aliyuncs.com/d' /etc/yum.repos.d/*.repo</span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Selinux, Firewalld</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">firewall-cmd --state</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i '/^SELINUX=.*/c SELINUX=disabled' /etc/selinux/config</span><br><span class="line">grep --color=auto '^SELINUX' /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 常用工具</span></span><br><span class="line">yum -y install wget vim ntpdate net-tools tree lrzsz lsof</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 时间同步</span></span><br><span class="line">ntpdate ntp.aliyun.com &amp;&amp; hwclock -w</span><br><span class="line">echo "*/20 * * * * /usr/sbin/ntpdate pool.ntp.org &gt; /dev/null 2&gt;&amp;1 &amp;&amp; /usr/sbin/hwclock -w" &gt;/tmp/crontab</span><br><span class="line">crontab /tmp/crontab</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 Swap</span></span><br><span class="line">swapoff -a </span><br><span class="line">sed -i 's/.*swap.*/#&amp;/' /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内核参数优化</span></span><br><span class="line">echo 'net.ipv4.ip_forward = 1' &gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">echo 'net.bridge.bridge-nf-call-ip6tables = 1' &gt;&gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">echo 'net.bridge.bridge-nf-call-iptables = 1' &gt;&gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">echo 'vm.swappiness=0' &gt;&gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">sysctl -p /etc/sysctl.d/k8s.conf</span><br><span class="line">echo "sysctl -p /etc/sysctl.d/k8s.conf" &gt;&gt;/etc/profile</span><br><span class="line"></span><br><span class="line">echo '# myset' &gt;&gt; /etc/security/limits.conf</span><br><span class="line">echo '* soft nofile 65536' &gt;&gt; /etc/security/limits.conf</span><br><span class="line">echo '* hard nofile 65536' &gt;&gt; /etc/security/limits.conf</span><br><span class="line">echo '* soft nproc 65536' &gt;&gt; /etc/security/limits.conf</span><br><span class="line">echo '* hard nproc 65536' &gt;&gt; /etc/security/limits.conf</span><br><span class="line">echo '* soft  memlock  unlimited' &gt;&gt; /etc/security/limits.conf</span><br><span class="line">echo '* hard memlock  unlimited' &gt;&gt; /etc/security/limits.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">  Docker 环境安装  <span class="comment">#</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> curl https://coding.net/u/yx571304/p/Docker/git/raw/master/install.sh | sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载旧版</span></span><br><span class="line">yum -y remove docker \</span><br><span class="line">    docker-client \</span><br><span class="line">    docker-client-latest \</span><br><span class="line">    docker-common \</span><br><span class="line">    docker-latest \</span><br><span class="line">    docker-latest-logrotate \</span><br><span class="line">    docker-logrotate \</span><br><span class="line">    docker-selinux \</span><br><span class="line">    docker-engine-selinux \</span><br><span class="line">    docker-engine</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装依赖</span></span><br><span class="line">yum -y install yum-utils \</span><br><span class="line">    device-mapper-persistent-data \</span><br><span class="line">    lvm2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加安装源</span></span><br><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 Docker CE</span></span><br><span class="line">yum makecache fast</span><br><span class="line">yum -y install docker-ce-17.06.0.ce</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置 Docker镜像加速</span></span><br><span class="line">mkdir /etc/docker</span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  "registry-mirrors": ["http://3272dd08.m.daocloud.io"]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动服务</span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证安装</span></span><br><span class="line">docker -v</span><br><span class="line">docker version</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置安装源</span></span><br><span class="line">cat &lt;&lt;'EOF' &gt;/etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubeadm 及相关工具包</span></span><br><span class="line">yum -y install kubelet-1.10.0 kubeadm-1.10.0 kubectl-1.10.0 kubernetes-cni</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更换 kubelet 驱动</span></span><br><span class="line">sed -i 's/driver=systemd/driver=cgroupfs/' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动服务配置开机启动</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable kubelet</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载镜像</span></span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/kube-proxy-amd64:v1.10.0</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/kube-controller-manager-amd64:v1.10.0</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/kube-scheduler-amd64:v1.10.0</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/kube-apiserver-amd64:v1.10.0</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/etcd-amd64:3.1.12</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/kubernetes-dashboard-amd64:v1.8.3</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/heapster-grafana-amd64:v4.4.3</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/heapster-influxdb-amd64:v1.3.3</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/heapster-amd64:v1.4.2</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/k8s-dns-dnsmasq-nanny-amd64:1.14.8</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/k8s-dns-sidecar-amd64:1.14.8</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/k8s-dns-kube-dns-amd64:1.14.8</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/pause-amd64:3.1</span><br><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/alik8s/flannel:v0.10.0-amd64</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 镜像打标记</span></span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/kube-proxy-amd64:v1.10.0 k8s.gcr.io/kube-proxy-amd64:v1.10.0</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/kube-controller-manager-amd64:v1.10.0 k8s.gcr.io/kube-controller-manager-amd64:v1.10.0</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/kube-scheduler-amd64:v1.10.0 k8s.gcr.io/kube-scheduler-amd64:v1.10.0</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/kube-apiserver-amd64:v1.10.0 k8s.gcr.io/kube-apiserver-amd64:v1.10.0</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/etcd-amd64:3.1.12 k8s.gcr.io/etcd-amd64:3.1.12</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/kubernetes-dashboard-amd64:v1.8.3 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/heapster-grafana-amd64:v4.4.3 k8s.gcr.io/heapster-grafana-amd64:v4.4.3</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/heapster-influxdb-amd64:v1.3.3 k8s.gcr.io/heapster-influxdb-amd64:v1.3.3</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/heapster-amd64:v1.4.2 k8s.gcr.io/heapster-amd64:v1.4.2</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/k8s-dns-dnsmasq-nanny-amd64:1.14.8 k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.8</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/k8s-dns-sidecar-amd64:1.14.8 k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.8</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/k8s-dns-kube-dns-amd64:1.14.8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.8</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/pause-amd64:3.1 k8s.gcr.io/pause-amd64:3.1</span><br><span class="line">docker tag registry.cn-shanghai.aliyuncs.com/alik8s/flannel:v0.10.0-amd64  quay.io/coreos/flannel:v0.10.0-amd64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除源镜像</span></span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/kube-proxy-amd64:v1.10.0</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/kube-controller-manager-amd64:v1.10.0</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/kube-scheduler-amd64:v1.10.0</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/kube-apiserver-amd64:v1.10.0</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/etcd-amd64:3.1.12</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/kubernetes-dashboard-amd64:v1.8.3</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/heapster-grafana-amd64:v4.4.3</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/heapster-influxdb-amd64:v1.3.3</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/heapster-amd64:v1.4.2</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/k8s-dns-dnsmasq-nanny-amd64:1.14.8</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/k8s-dns-sidecar-amd64:1.14.8</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/k8s-dns-kube-dns-amd64:1.14.8</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/pause-amd64:3.1</span><br><span class="line">docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/flannel:v0.10.0-amd64</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载模板</span></span><br><span class="line">mkdir -p $HOME/k8s/heapster</span><br><span class="line">curl -s http://elven.vip/ks/k8s/oneinstall/yml/kube-flannel.yml &gt; $HOME/k8s/kube-flannel.yml</span><br><span class="line">curl -s http://elven.vip/ks/k8s/oneinstall/yml/kubernetes-dashboard.yaml &gt; $HOME/k8s/kubernetes-dashboard.yaml</span><br><span class="line">curl -s http://elven.vip/ks/k8s/oneinstall/yml/heapster-rbac.yaml &gt; $HOME/k8s/heapster-rbac.yaml</span><br><span class="line">curl -s http://elven.vip/ks/k8s/oneinstall/yml/heapster/influxdb.yaml &gt; $HOME/k8s/heapster/influxdb.yaml</span><br><span class="line">curl -s http://elven.vip/ks/k8s/oneinstall/yml/heapster/heapster.yaml &gt; $HOME/k8s/heapster/heapster.yaml</span><br><span class="line">curl -s http://elven.vip/ks/k8s/oneinstall/yml/heapster/grafana.yaml &gt; $HOME/k8s/heapster/grafana.yaml</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 镜像列表</span></span><br><span class="line">docker images |egrep 'k8s.gcr.io|quay.io'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 部署master节点[单节点安装]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重置</span></span><br><span class="line">kubeadm reset</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 初始化安装</span></span><br><span class="line">cd $HOME/k8s</span><br><span class="line">kubeadm init --kubernetes-version=v1.10.0  --pod-network-cidr=10.244.0.0/16 |tee /tmp/install.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> k8s node节点代码保存到 <span class="variable">$HOME</span>/k8s.add.node.txt</span></span><br><span class="line">grep 'kubeadm join' /tmp/install.log &gt;$HOME/k8s.add.node.txt</span><br><span class="line">rm -f /tmp/install.log </span><br><span class="line">sleep 2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认token有效期24小时，生成一个永不过期的</span></span><br><span class="line">Token=`kubeadm token create --ttl 0`</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> <span class="variable">$Token</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubeadm token list</span></span><br><span class="line">sed -i -r "s#(.*) --token (.*) --discovery(.*)#\1 --token $Token --discovery\3#" $HOME/k8s.add.node.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubectl认证</span></span><br><span class="line">export KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line">echo "export KUBECONFIG=/etc/kubernetes/admin.conf" &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></span><br><span class="line">echo "# used for kubectl ,k8s" &gt;/etc/profile</span><br><span class="line">echo "export KUBECONFIG=/etc/kubernetes/admin.conf" &gt;&gt;/etc/profile</span><br><span class="line"></span><br><span class="line">sleep 5</span><br><span class="line">echo -e "\033[32m查看K8S状态\033[0m" </span><br><span class="line">kubectl get cs</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 让master也运行pod</span></span><br><span class="line">kubectl taint nodes --all node-role.kubernetes.io/master-</span><br><span class="line"></span><br><span class="line">cd $HOME/</span><br><span class="line">echo -e "\033[32m部署flannel网络 \033[0m" </span><br><span class="line">kubectl create -f k8s/kube-flannel.yml</span><br><span class="line">sleep 5</span><br><span class="line">echo  </span><br><span class="line">echo -e "\033[32m部署dashboard\033[0m" </span><br><span class="line">kubectl create -f k8s/kubernetes-dashboard.yaml</span><br><span class="line"><span class="meta">#</span><span class="bash"> dashboard监控图形化</span></span><br><span class="line">sleep 5</span><br><span class="line">kubectl create -f k8s/heapster/</span><br><span class="line">kubectl create -f k8s/heapster-rbac.yaml</span><br><span class="line">sleep 10</span><br><span class="line">echo -e "\033[32m查看pod \033[0m" </span><br><span class="line">kubectl get pods --all-namespaces</span><br><span class="line"></span><br><span class="line">echo  </span><br><span class="line">echo -e "\033[32mdashboard登录令牌,保存到$HOME/k8s.token.dashboard.txt\033[0m" </span><br><span class="line">kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '&#123;print $1&#125;') |awk '/token:/&#123;print$2&#125;' &gt;$HOME/k8s.token.dashboard.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubectl get node 报错</span></span><br><span class="line">cp /etc/kubernetes/admin.conf $HOME/</span><br><span class="line">chown $(id -u):$(id -g) $HOME/admin.conf</span><br><span class="line">export KUBECONFIG=$HOME/admin.conf</span><br><span class="line">kubectl get nodes</span><br><span class="line"></span><br><span class="line">echo 'dashboard登录令牌如下:'</span><br><span class="line">echo  </span><br><span class="line">cat $HOME/k8s.token.dashboard.txt</span><br><span class="line">echo  </span><br><span class="line">echo 'dashboard登录地址 https://本机IP:30000即: '</span><br><span class="line">IP=`sed -r 's#^.*join (.*):6443.*$#\1#' $HOME/k8s.add.node.txt`</span><br><span class="line">echo "  https://$IP:30000"</span><br><span class="line">echo  </span><br><span class="line">echo '登录dashboard，输入令牌token'</span><br><span class="line">echo '推荐 火狐浏览器'</span><br><span class="line">echo '若提示 不安全的连接, 高级-&gt;添加例外'</span><br><span class="line">echo  </span><br><span class="line">echo  </span><br><span class="line">echo -e "\033[32m添加k8s node节点代码如下:\033[0m" </span><br><span class="line">echo  </span><br><span class="line">cat $HOME/k8s.add.node.txt</span><br><span class="line">echo  </span><br><span class="line">echo  "重新登录查看Node    kubectl get nodes"</span><br><span class="line">echo  "添加完node节点后执行 kubectl get nodes 查看节点"</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><hr><h2 id="kubeadm-node"><a href="#kubeadm-node" class="headerlink" title="kubeadm-node"></a>kubeadm-node</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">trap</span> <span class="string">"exit 0"</span> 2</span><br><span class="line"></span><br><span class="line">thead_num=6</span><br><span class="line"></span><br><span class="line">tmp_fifo_file=<span class="string">"/tmp/$$.fifo"</span></span><br><span class="line"></span><br><span class="line">mkfifo <span class="variable">$tmp_fifo_file</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> 4&lt;&gt;<span class="variable">$tmp_fifo_file</span></span><br><span class="line"></span><br><span class="line">rm -f <span class="variable">$tmp_fifo_file</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i=0;i&lt;<span class="variable">$thead_num</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> &gt;&amp;4</span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> -u4</span><br><span class="line">    &#123;</span><br><span class="line">    ip=$(<span class="built_in">echo</span> <span class="variable">$line</span> | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br><span class="line">    host=$(<span class="built_in">echo</span> <span class="variable">$line</span> | awk <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$ip</span></span><br><span class="line">    ssh -T root@<span class="variable">$host</span> &lt;&lt;EOF</span><br><span class="line">    &#123;</span><br><span class="line">        hostnamectl <span class="built_in">set</span>-hostname <span class="variable">$host</span></span><br><span class="line">        hostnamectl status</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># host</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'192.168.2.60 node00'</span> &gt;&gt;/etc/hosts</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'192.168.2.61 node01'</span> &gt;&gt;/etc/hosts</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'192.168.2.62 node02'</span> &gt;&gt;/etc/hosts</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'192.168.2.63 node03'</span> &gt;&gt;/etc/hosts</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'192.168.2.64 node04'</span> &gt;&gt;/etc/hosts</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'192.168.2.65 node05'</span> &gt;&gt;/etc/hosts</span><br><span class="line"></span><br><span class="line">        yum -y install epel-release</span><br><span class="line">        rm -f /etc/yum.repos.d/*</span><br><span class="line">        curl -o /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">        curl -o /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">        sed -i <span class="string">'/aliyuncs.com/d'</span> /etc/yum.repos.d/*.repo</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Selinux, Firewalld</span></span><br><span class="line">        systemctl stop firewalld</span><br><span class="line">        systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">        firewall-cmd --state</span><br><span class="line">        setenforce 0</span><br><span class="line">        sed -i <span class="string">'/^SELINUX=.*/c SELINUX=disabled'</span> /etc/selinux/config</span><br><span class="line">        grep --color=auto <span class="string">'^SELINUX'</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line">        yum -y install wget vim ntpdate net-tools tree lrzsz lsof</span><br><span class="line"></span><br><span class="line">        ntpdate ntp.aliyun.com &amp;&amp; hwclock -w</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"*/20 * * * * /usr/sbin/ntpdate pool.ntp.org &gt; /dev/null 2&gt;&amp;1 &amp;&amp; /usr/sbin/hwclock -w"</span> &gt;/tmp/crontab</span><br><span class="line">        crontab /tmp/crontab</span><br><span class="line"></span><br><span class="line">        swapoff -a </span><br><span class="line">        sed -i <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span><br><span class="line">        </span><br><span class="line">        [ <span class="string">"<span class="variable">$ip</span>"</span> == <span class="string">"192.168.0.11"</span> ] &amp;&amp; <span class="built_in">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'net.ipv4.ip_forward = 1'</span> &gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'net.bridge.bridge-nf-call-ip6tables = 1'</span> &gt;&gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'net.bridge.bridge-nf-call-iptables = 1'</span> &gt;&gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'vm.swappiness=0'</span> &gt;&gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">        sysctl -p /etc/sysctl.d/k8s.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"sysctl -p /etc/sysctl.d/k8s.conf"</span> &gt;&gt;/etc/profile</span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'# myset'</span> &gt;&gt; /etc/security/limits.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'* soft nofile 65536'</span> &gt;&gt; /etc/security/limits.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'* hard nofile 65536'</span> &gt;&gt; /etc/security/limits.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'* soft nproc 65536'</span> &gt;&gt; /etc/security/limits.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'* hard nproc 65536'</span> &gt;&gt; /etc/security/limits.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'* soft  memlock  unlimited'</span> &gt;&gt; /etc/security/limits.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'* hard memlock  unlimited'</span> &gt;&gt; /etc/security/limits.conf</span><br><span class="line"></span><br><span class="line">        yum -y remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine</span><br><span class="line"></span><br><span class="line">        yum -y install yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">        yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">        yum makecache fast</span><br><span class="line">        yum -y install docker-ce-17.06.0.ce</span><br><span class="line"></span><br><span class="line">        mkdir /etc/docker</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'&#123;'</span> &gt;/etc/docker/daemon.json</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'  "registry-mirrors": ["http://3272dd08.m.daocloud.io"]'</span> &gt;&gt;/etc/docker/daemon.json</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'&#125;'</span> &gt;&gt;/etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        systemctl start docker</span><br><span class="line">        systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line">        docker -v</span><br><span class="line">        docker version</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'[kubernetes]'</span> &gt;/etc/yum.repos.d/kubernetes.repo</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'name=Kubernetes'</span> &gt;&gt;/etc/yum.repos.d/kubernetes.repo</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64'</span> &gt;&gt;/etc/yum.repos.d/kubernetes.repo</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'enabled=1'</span> &gt;&gt;/etc/yum.repos.d/kubernetes.repo</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'gpgcheck=0'</span> &gt;&gt;/etc/yum.repos.d/kubernetes.repo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        yum -y install kubelet-1.10.0 kubeadm-1.10.0 kubectl-1.10.0 kubernetes-cni</span><br><span class="line"></span><br><span class="line">        sed -i <span class="string">'s/driver=systemd/driver=cgroupfs/'</span> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class="line"></span><br><span class="line">        systemctl daemon-reload</span><br><span class="line">        systemctl <span class="built_in">enable</span> kubelet</span><br><span class="line"></span><br><span class="line">        docker pull registry.cn-shanghai.aliyuncs.com/alik8s/kube-proxy-amd64:v1.10.0</span><br><span class="line">        docker pull registry.cn-shanghai.aliyuncs.com/alik8s/pause-amd64:3.1</span><br><span class="line">        docker pull registry.cn-shanghai.aliyuncs.com/alik8s/flannel:v0.10.0-amd64</span><br><span class="line"></span><br><span class="line">        docker tag registry.cn-shanghai.aliyuncs.com/alik8s/kube-proxy-amd64:v1.10.0 k8s.gcr.io/kube-proxy-amd64:v1.10.0</span><br><span class="line">        docker tag registry.cn-shanghai.aliyuncs.com/alik8s/pause-amd64:3.1 k8s.gcr.io/pause-amd64:3.1</span><br><span class="line">        docker tag registry.cn-shanghai.aliyuncs.com/alik8s/flannel:v0.10.0-amd64  quay.io/coreos/flannel:v0.10.0-amd64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/kube-proxy-amd64:v1.10.0</span><br><span class="line">        docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/pause-amd64:3.1</span><br><span class="line">        docker rmi registry.cn-shanghai.aliyuncs.com/alik8s/flannel:v0.10.0-amd64</span><br><span class="line"></span><br><span class="line">        docker images |egrep <span class="string">'k8s.gcr.io|quay.io'</span>     </span><br><span class="line"></span><br><span class="line">    &#125;  &gt;/tmp/<span class="variable">$host</span>.<span class="built_in">log</span> 2&gt;&amp;1</span><br><span class="line">EOF</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">""</span> &gt;&amp;4</span><br><span class="line">&#125; &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="keyword">done</span> &lt; ./list</span><br><span class="line"></span><br><span class="line"><span class="built_in">wait</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> 4&lt;&amp;-</span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> 4&gt;&amp;-</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"安装完毕后请在在node节点执行 master主机上/root/k8s.add.node.txt 中的命令 "</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
    </entry>
    
    <entry>
      <title>ssh批量免密钥</title>
      <link href="/posts/64b3.html"/>
      <url>/posts/64b3.html</url>
      <content type="html"><![CDATA[<h3 id="ssh推送密钥"><a href="#ssh推送密钥" class="headerlink" title="ssh推送密钥"></a>ssh推送密钥</h3><pre><code>#!/bin/bash# 远程root密码passwd=&apos;redhat&apos;# 主机列表cat &lt;&lt;&apos;EOF&apos; &gt;./list192.168.2.60 node00192.168.2.61 node01192.168.2.62 node02192.168.2.63 node03192.168.2.64 node04192.168.2.65 node05EOF# hostscat ./list &gt;&gt;/etc/hosts# 生成密钥[ -f ~/.ssh/id_dsa ] || { ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa; }# 安装 expect[ -f /usr/bin/expect ] || { yum -y install expect; }# 循环list 文件while read -r linedo    /usr/bin/expect &lt;&lt;EOF    set timeout 5    spawn ssh-copy-id -i /root/.ssh/id_dsa.pub root@$host    expect {        &quot;(yes/no)?&quot; { send &quot;yes\r&quot;; exp_continue }        &quot;password:&quot; { send &quot;$passwd\r&quot; }    }    expect eofEOFdone &lt; ./list</code></pre><hr><h3 id="多线程ssh推送密钥"><a href="#多线程ssh推送密钥" class="headerlink" title="多线程ssh推送密钥"></a>多线程ssh推送密钥</h3><pre><code>#!/bin/bash# 遇到终止信号则退出trap &quot;exit 0&quot; 2# 主机列表cat &lt;&lt;&apos;EOF&apos; &gt;./list192.168.2.60 node00192.168.2.61 node01192.168.2.62 node02192.168.2.63 node03192.168.2.64 node04192.168.2.65 node05EOF# hostscat ./list &gt;&gt;/etc/hosts# 远程root密码passwd=&apos;redhat&apos;# 生成密钥[ -f ~/.ssh/id_dsa ] || { ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa; }# 安装 expect[ -f /usr/bin/expect ] || { yum -y install expect; }# 自定义并发数thead_num=4# 自定义并发数thead_num=4# 以进程ID号命名管道文件tmp_fifo_file=&quot;/tmp/$$.fifo&quot;# 创建临时管道文件mkfifo $tmp_fifo_file# 以读写方式打开tmp_fifo_file管道文件,文件描述符为4，也可以取3-9任意描述符exec 4&lt;&gt;$tmp_fifo_file# 删除临时管道文件，也可不删除rm -f $tmp_fifo_file# 利用for循环向管道中输入并发数量的空行for ((i=0;i&lt;$thead_num;i++))do    #输出空行到定义的文件描述符4上    echo &gt;&amp;4done # 循环list 文件while read -r linedo    read -u4{    # 取出IP    host=$(echo $line | awk &apos;{print $2}&apos;)    # 添加公钥到远程主机    /usr/bin/expect &lt;&lt;EOF    set timeout 5    spawn ssh-copy-id -i /root/.ssh/id_dsa.pub root@$host    expect {        &quot;(yes/no)?&quot; { send &quot;yes\r&quot;; exp_continue }        &quot;password:&quot; { send &quot;$passwd\r&quot; }    }    expect eofEOF    echo &quot;&quot; &gt;&amp;4} &amp;done &lt; ./list# 等待所有后台进程执行完成wait#关闭文件描述符的读exec 4&lt;&amp;-#关闭文件描述符的写exec 4&gt;&amp;-exit 0</code></pre><hr><h3 id="快速找出某个网段的IP使用情况"><a href="#快速找出某个网段的IP使用情况" class="headerlink" title="快速找出某个网段的IP使用情况"></a>快速找出某个网段的IP使用情况</h3><pre><code>#!/bin/bashfor num in {1..254}do{    ip=&quot;192.168.0.$num&quot;    ping -c3 -w3 $ip &gt;/dev/null 2&gt;&amp;1    if [ $? -eq 0 ];then        echo $ip is ok    else        echo $ip is null    fi} &amp;done</code></pre>]]></content>
      
      <categories>
          
          <category> ssh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> expect </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>腾讯对象存储</title>
      <link href="/posts/139a.html"/>
      <url>/posts/139a.html</url>
      <content type="html"><![CDATA[<h3 id="备份数据到腾讯对象存储"><a href="#备份数据到腾讯对象存储" class="headerlink" title="备份数据到腾讯对象存储"></a>备份数据到腾讯对象存储</h3><blockquote><p><a href="https://cloud.tencent.com/document/product/436/12269" target="_blank" rel="noopener">官方文档</a></p></blockquote><h4 id="安装python-pip"><a href="#安装python-pip" class="headerlink" title="安装python-pip"></a>安装python-pip</h4><pre><code>yum -y install python-pip</code></pre><h4 id="安装cos-sdk"><a href="#安装cos-sdk" class="headerlink" title="安装cos-sdk"></a>安装cos-sdk</h4><pre><code>pip install -U cos-python-sdk-v5</code></pre><h4 id="创建简单上传脚本"><a href="#创建简单上传脚本" class="headerlink" title="创建简单上传脚本"></a>创建简单上传脚本</h4><pre><code>mkdir /usr/local/coscat &lt;&lt;&apos;EOF&apos; &gt;/usr/local/cos/cos.upload.py#!/bin/env python# -*- coding=utf-8from qcloud_cos import CosConfigfrom qcloud_cos import CosS3Clientfrom qcloud_cos import CosServiceErrorfrom qcloud_cos import CosClientErrorimport sysimport logginglogging.basicConfig(level=logging.INFO, stream=sys.stdout)if ( len(sys.argv) &gt; 5 ):    region     = sys.argv[1].decode(&apos;utf-8&apos;)    secret_id  = sys.argv[2].decode(&apos;utf-8&apos;)    secret_key = sys.argv[3].decode(&apos;utf-8&apos;)    bucket     = sys.argv[4].decode(&apos;utf-8&apos;)    domain     = sys.argv[5].decode(&apos;utf-8&apos;)    filePath   = sys.argv[6].decode(&apos;utf-8&apos;)    fileName   = filePath.split(&quot;/&quot;)[-1]else:    print(&quot;Example: python %s region secret_id secret_key Bucket RemoteDirectory LocalFile.zip&quot; % sys.argv[0])    exit()token = &apos;&apos;                 # 使用临时秘钥需要传入Token，默认为空,可不填config = CosConfig(Region=region, Secret_id=secret_id, Secret_key=secret_key, Token=token)  # 获取配置对象client = CosS3Client(config)response = client.upload_file(bucket, &apos;/%s/%s&apos; % ( domain, fileName ), filePath)print response[&apos;ETag&apos;]EOF# 简单使用方法python /usr/local/cos/cos.upload.py 存储桶地区 secret_id secret_key bucket RemoteDirectory LocalFile.zip</code></pre><h4 id="shell-备份脚本"><a href="#shell-备份脚本" class="headerlink" title="shell 备份脚本"></a>shell 备份脚本</h4><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/usr/local/cos/cos.sh#!/bin/sh#####################################################################  Web Backup version 1.0.0 Author: Jager &lt;ge@zhangge.net&gt;         ## For more information please visit https://zhangge.net/5117.html  ##----------------------------------------------------------------- ##  Copyright ©2016 zhangge.net. All rights reserved.               ##  Update version 1.1.0 Auth: yixuan SDK_Version: cos-python-sdk-v5#####################################################################isDel=yargs=$#isDel=${!args}# 设置压缩包解压密码#mypassword=123456#add_pass=&quot;-P$mypassword&quot;test -f /etc/profile &amp;&amp; . /etc/profile &gt;/dev/null 2&gt;&amp;1baseDir=$(dirname $(readlink `which cos`))#baseDir=$(cd $(dirname $0) &amp;&amp; pwd)zip --version &gt;/dev/null || yum install -y zipZIP=$(which zip)TODAY=`date +%u`PYTHON=$(which python)MYSQLDUMP=$(which mysqldump)# 新增的COS上传文件函数,请按照实际情况修改appID，认证KEY、认证密钥和Bucket名称!!!uploadToCOS(){    #             调用SDK路径      Bucket地域             secret_id                         secret_key                 Bucket名称    远程文件夹 本地文件    $PYTHON $baseDir/cos.upload.py ap-shanghai AKIDUvt7MYBu7TRdnuq21z5xreTX5yKfNKhX DRqlidYPRQQMIJFB7377DvbPEGHtbM4n backup-1252143340  $1 $2    if [[ $? -eq 0 ]] &amp;&amp;  [[ &quot;$isDel&quot; == &quot;y&quot; ]]    then        test -f $2 &amp;&amp; rm -f $2    fi}printHelp(){clearprintf &apos;=====================================Help infomation=========================================1. Use For Backup database:The $1 must be [db]    $2: [domain]    $3: [dbname]    $4: [mysqluser]    $5: [mysqlpassword]    $6: [back_path]    $7: [isDel]For example:cos db zhangge.net zhangge_db zhangge 123456 /home/wwwbackup/zhangge.net2. Use For Backup webfile:The $1 must be [file]:    $2: [domain]    $3: [site_path]    $4: [back_path]    $5: [isDel]For example:cos file zhangge.net /home/wwwroot/zhangge.net /home/wwwbackup/zhangge.net=====================================End of Hlep==============================================&apos;exit 0}backupDB(){    domain=$1    dbname=$2    mysqluser=$3    mysqlpd=$4    back_path=$5    test -d $back_path || (mkdir -p $back_path || echo &quot;$back_path not found! Please CheckOut Or feedback to zhangge.net...&quot; &amp;&amp; exit 2)    cd $back_path    #如果是要备份远程MySQL，则修改如下语句中localhost为远程MySQL地址    $MYSQLDUMP -hlocalhost -u$mysqluser -p$mysqlpd $dbname --skip-lock-tables --default-character-set=utf8 &gt;$back_path/$domain\_db_$TODAY\.sql    test -f $back_path/$domain\_db_$TODAY\.sql || (echo &quot;MysqlDump failed! Please CheckOut Or feedback to zhangge.net...&quot; &amp;&amp; exit 2)    $ZIP -P$mypassword -m $back_path/$domain\_db_$TODAY\.zip $domain\_db_$TODAY\.sql &amp;&amp; \    uploadToCOS $domain $back_path/$domain\_db_$TODAY\.zip}backupFile(){    domain=$1    site_path=$2    back_path=$3    test -d $site_path || (echo &quot;$site_path not found! Please CheckOut Or feedback to zhangge.net...&quot; &amp;&amp; exit 2)    test -d $back_path || (mkdir -p $back_path || echo &quot;$back_path not found! Please CheckOut Or feedback to zhangge.net...&quot; &amp;&amp; exit 2)    test -f $back_path/$domain\_$TODAY\.zip &amp;&amp; rm -f $back_path/$domain\_$TODAY\.zip    $ZIP $add_pass -9r $back_path/$domain\_$TODAY\.zip $site_path &amp;&amp; \    uploadToCOS $domain $back_path/$domain\_$TODAY\.zip    }while [ $1 ]; do    case $1 in        &apos;--db&apos; | &apos;db&apos; )        backupDB $2 $3 $4 $5 $6        exit        ;;        &apos;--file&apos; | &apos;file&apos; )        backupFile $2 $3 $4        exit          ;;        * )        printHelp        exit        ;;    esacdoneprintHelpEOF</code></pre><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><pre><code># 创建软连接ln -s /usr/local/cos/cos.sh /usr/bin/cos# 添加执行权限chmod +x /usr/bin/cos# 使用方法：    将 /usr/local/cos/cos.sh 文件中第30行中的参数修改为自己的即可只需要修改：        Bucket地域：点击存储桶 → 基础配置 → 所属地域        secret_id ：点击密钥管理 → 云API密钥 → SecretId        secret_key: 点击密钥管理 → 云API密钥 → SecretKey        Bucket名称：点击存储桶 → 基础配置 → 空间名称# 备份文件# file 备份文件; aria2_webui 远程目录 /tmp/aria2_webui 本地目录 /tmp 临时文件存储位置 y 备份完成后删除临时文件cos file aria2_webui /tmp/aria2_webui /tmp y# 备份数据库(如果需要为其他主机备份数据库请更改77行 -hlocalhost)# db 备份数据库 svnadmin 远程目录 svnadmin_db 数据库名 root 数据库用户名 123456 数据库用户密码 /tmp 临时文件存储位置 y 备份完成后删除临时文件cos db svnadmin svnadmin_db root 123456 /tmp y# 添加解压密码    取消第14,15行注释 password 变量值为解压密码</code></pre><h3 id="腾讯cos对象存储ftp工具"><a href="#腾讯cos对象存储ftp工具" class="headerlink" title="腾讯cos对象存储ftp工具"></a>腾讯cos对象存储ftp工具</h3><blockquote><p><a href="https://github.com/tencentyun/cos-ftp-server-V5" target="_blank" rel="noopener">官方文档</a></p></blockquote><pre><code>#下载源码git clone https://github.com/tencentyun/cos-ftp-server-V5.git# 安装cd cos-ftp-server-V5python setup.py install# 配置文件cp conf/vsftpd.conf.example conf/vsftpd.confsed -i &quot;s/cos_secretid = .*/cos_secretid = AKIDUvt7MYBu7TRdnuq21z5xreTX5yKfNKhX/&quot; conf/vsftpd.confsed -i &quot;s/cos_secretkey = .*/cos_secretkey = DRqlidYPRQQMIJFB7377DvbPEGHtbM4n/&quot; conf/vsftpd.confsed -i &quot;s/cos_bucket = .*/cos_bucket = backup-1252143340/&quot; conf/vsftpd.confsed -i &quot;s/cos_region = .*/cos_region = ap-shanghai/&quot; conf/vsftpd.conf# 创建工作目录 启动服务mkdir -p /home/cos_ftp/datapython ftp_server.py# 登陆用户 conf/vsftpd.conf 第10行 login_users 变量user: user1   user2 pass: user1   pass2Auth: RW     RW# 访问地址ftp://ServerIP:2121/</code></pre><h3 id="COSCMD-工具"><a href="#COSCMD-工具" class="headerlink" title="COSCMD 工具"></a>COSCMD 工具</h3><blockquote><p><a href="https://cloud.tencent.com/document/product/436/10976" target="_blank" rel="noopener">官方文档</a></p></blockquote><pre><code># 安装pip 更新 pip 版本yum -y install python-pippip install --upgrade pip# 安装coscmd 并更新pip install coscmdpip install coscmd -U# 创建默认配置文件cat &lt;&lt;&apos;EOF&apos; &gt;~/.cos.conf[common]secret_id = AKIDUvt7MYBu7TRdnuq21z5xreTX5yKfNKhXsecret_key = DRqlidYPRQQMIJFB7377DvbPEGHtbM4nbucket = backup-1252143340region = ap-shanghaimax_thread = 5part_size = 1schema = httpsEOF# 命令使用# 创建bucket 后缀需要替换为自己的ID&lt;1252143340&gt;coscmd -b cos-1252143340 createbucket# 删除bucketcoscmd -b cos-1252143340 deletebucket# 上传文件coscmd upload &lt;localpath&gt; &lt;cospath&gt;coscmd upload /home/aaa/123.txt bbb/123.txtcoscmd upload /home/aaa/123.txt bbb/# 上传文件夹# COSCMD 支持大文件断点上传功能。当分片上传大文件失败时，重新上传该文件只会上传失败的分块，而不会从头开始（请保证重新上传的文件的目录以及内容和上传的目录保持一致）。# COSCMD 分块上传时会对每一块进行 MD5 校验。# COSMCD 上传默认会携带 x-cos-meta-md5 的头部，值为该文件的 md5 值。# 使用 -s 参数可以使用同步上传，跳过上传 md5 一致的文件(cos 上的原文件必须是由 1.8.3.2 之后的 COSCMD 上传的，默认带有 x-cos-meta-md5 的 header)。# 使用 -H 参数设置 HTTP header 时，请务必保证格式为 json，这里是个例子：coscmd upload -H &apos;{&quot;Cache-Control&quot;:&quot;max-age=31536000&quot;,&quot;Content-Language&quot;:&quot;zh-CN&quot;}&apos; &lt;localpath&gt; &lt;cospath&gt;。# 在上传文件夹时，使用--ignore 参数可以忽略某一类文件，支持 shell 通配规则，支持多条规则，用逗号分隔。# 目前只支持上传最大 40 T 的单文件。coscmd upload -r &lt;localpath&gt; &lt;cospath&gt;  //命令格式coscmd upload -r /home/aaa/ bbb/aaa  //操作示例coscmd upload -r /home/aaa/ bbb/  //操作示例coscmd upload -r /home/aaa/ /  //上传到 bucket 根目录coscmd upload -rs /home/aaa/ /home/aaa  //同步上传，跳过 md5 相同的文件coscmd upload -rs /home/aaa/ /home/aaa --ignore *.txt,*.doc //忽略 .txt 和 .doc 的后缀文件coscmd -b cos-1252143340 upload -r cos-ftp-server-V5/ /  // 上传文件夹到指定存储桶# 下载文件coscmd download &lt;cospath&gt; &lt;localpath&gt;  //命令格式coscmd download bbb/123.txt /home/aaa/111.txt  //操作示例coscmd download bbb/123.txt /home/aaa/  //操作示例# 下载文件夹# 若本地存在同名文件，则会下载失败。使用 -f 参数覆盖本地文件。# download 接口使用分块下载，老版本的 mget 接口已经废除，请使用 download 接口。# 使用 -s 或者 --sync 参数，可以在下载文件夹时跳过本地已存在的相同文件 (前提是下载文件夹是通过 COSCMD 的 upload 接口上传的，文件携带有 x-cos-meta-md5 头部)。# 在下载文件夹时，使用 --ignore 参数可以忽略某一类文件，支持 shell 通配规则，支持多条规则，用逗号分隔。coscmd download -r &lt;cospath&gt; &lt;localpath&gt; //命令格式coscmd download -r /home/aaa/ bbb/aaa  //操作示例coscmd download -r /home/aaa/ bbb/  //操作示例coscmd download -rf / bbb/aaa  //覆盖下载当前bucket根目录下所有的文件coscmd download -rs / bbb/aaa  //同步下载当前bucket根目录下所有的文件，跳过md5校验相同的文件coscmd download -rs / bbb/aaa --ignore *.txt,*.doc //忽略.txt和.doc的后缀文件 coscmd -b cos-1252143340 download -r cos-ftp-server-V5/ /tmp/111 // 下载指定存储桶中的文件夹到本地# 删除文件coscmd delete &lt;cospath&gt;  //命令格式coscmd delete bbb/123.txt  //操作示例# 删除文件夹命coscmd delete -r &lt;cospath&gt;  //命令格式coscmd delete -r bbb/  //操作示例coscmd delete -r /  //操作示例# 复制文件coscmd copy &lt;sourcepath&gt; &lt;cospath&gt;  //命令格式coscmd copy bucket-appid.cos.ap-guangzhou.myqcloud.com/a.txt aaa/123.txt  //操作示例# 复制文件夹coscmd copy -r &lt;sourcepath&gt; &lt;cospath&gt;  //命令格式coscmd copy -r bucket-appid.cos.ap-guangzhou.myqcloud.com/coscmd/ aaa //操作示例coscmd copy -r bucket-appid.cos.ap-guangzhou.myqcloud.com/coscmd/ aaa/ //操作示例# 打印文件列表# 使用-a打印全部文件。# 使用 -r 递归打印，并且会在末尾返回列出文件的数量和大小之和。# 使用 -n num 设置打印数量的最大值。coscmd list &lt;cospath&gt;  //命令格式coscmd list -a //操作示例coscmd list bbb/123.txt  -r -n 10 //操作示例# 显示文件信息coscmd info &lt;cospath&gt;  //命令格式coscmd info bbb/123.txt //操作示例# 获取带签名的下载 URLcoscmd sigurl &lt;cospath&gt;  //命令格式coscmd signurl bbb/123.txt //操作示例coscmd signurl bbb/123.txt -t 100//操作示例</code></pre>]]></content>
      
      <categories>
          
          <category> 腾讯cos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 腾讯cos </tag>
            
            <tag> python </tag>
            
            <tag> coscmd </tag>
            
            <tag> 数据备份 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>apache 日志分析</title>
      <link href="/posts/8d77.html"/>
      <url>/posts/8d77.html</url>
      <content type="html"><![CDATA[<h2 id="Apache-日志分析"><a href="#Apache-日志分析" class="headerlink" title="Apache 日志分析"></a>Apache 日志分析</h2><h3 id="日志路径"><a href="#日志路径" class="headerlink" title="日志路径"></a>日志路径</h3><blockquote><p>如果Apache采用默认安装方式安装，那么日志的位置应该在/usr/local/apache/logs/ </p></blockquote><pre><code>访问日志文件的位置实际上是一个配置选项。如果我们检查/usr/local/apache/conf/httpd.conf配置文件，可以看到该文件中有如下这行内容：    ErrorLog &quot;/www/wwwlogs/error_log&quot;    CustomLog &quot;/www/wwwlogs/access_log&quot; common虚拟主机日志文件 /usr/local/apache/conf/vhost/***.conf</code></pre><h3 id="Apache访问日志格式"><a href="#Apache访问日志格式" class="headerlink" title="Apache访问日志格式"></a>Apache访问日志格式</h3><pre><code>[root@http ~]# cat /data/www/wwwlogs/www.*****.com-access_log_2018-06-21_123002.log  | head -n6192.168.0.109 - - [20/Jun/2018:13:15:31 +0800] &quot;PROPFIND /remote.php/**** HTTP/1.1&quot; 207 317 &quot;-&quot; &quot;Mozilla/5.0 (Windows) mirall/2.4.1 (build 9270)&quot;192.168.80.61 - - [20/Jun/2018:13:15:32 +0800] &quot;PROPFIND /remote.php/**** HTTP/1.1&quot; 207 286 &quot;-&quot; &quot;Mozilla/5.0 (Windows) mirall/2.4.1 (build 9270)&quot;192.168.80.58 - - [20/Jun/2018:13:15:33 +0800] &quot;PROPFIND /remote.php/**** HTTP/1.1&quot; 207 317 &quot;-&quot; &quot;Mozilla/5.0 (Windows) mirall/2.4.1 (build 9270)&quot;192.168.0.185 - - [20/Jun/2018:13:15:34 +0800] &quot;PROPFIND /remote.php/**** HTTP/1.1&quot; 207 312 &quot;-&quot; &quot;Mozilla/5.0 (Windows) mirall/2.4.1 (build 9270)&quot;192.168.80.69 - - [20/Jun/2018:13:15:34 +0800] &quot;PROPFIND /remote.php/**** HTTP/1.1&quot; 207 288 &quot;-&quot; &quot;Mozilla/5.0 (Windows) mirall/2.4.1 (build 9270)&quot;192.168.80.78 - - [20/Jun/2018:13:15:35 +0800] &quot;PROPFIND /remote.php/**** HTTP/1.1&quot; 207 287 &quot;-&quot; &quot;Mozilla/5.0 (Windows) mirall/2.4.1 (build 9270)&quot;日志名字段所代表的内容:  1.远程主机        192.168.0.109  2.空白(E-mail)    -  3.空白(登录名)    -  4.请求时间        [20/Jun/2018:13:15:31 +0800]  5.方法+资源+协议  PROPFIND /remote.php/**** HTTP/1.1  6.状态代码        207  7.发送字节数      317</code></pre><h3 id="统计访问量"><a href="#统计访问量" class="headerlink" title="统计访问量"></a>统计访问量</h3><blockquote><p>统计每个IP的访问量</p></blockquote><pre><code>awk &apos;{print $1}&apos; /www/wwwlogs/***-access_log_2018-06-21_123002.log | sort -n | uniq -c | sort -n   3 192.168.0.137   3 192.168.2.51 958 192.168.80.781122 192.168.80.691130 192.168.0.1851164 192.168.80.581175 192.168.80.281221 192.168.0.1091343 192.168.80.771445 192.168.80.451455 192.168.80.891754 192.168.80.613012 192.168.0.65# 1. 打印出所有IP(awk 可以用-F 指定分隔符，如果不指定分隔符，默认就以空白字符 比如空格、Tab 等# 2. 使用 sort 排序，-n 选项表示以数字的形式排序，如果不加-n，则以 ASCII 排序，日志中 IP 地址以数字的形式排序更容易区分# 3. uniq 命令是用来去重复的，一个文本中如果有多行内容是一模一样的使用 uniq 命令就可以把相同内容的行给删除掉，只留一行。而-c 选项的作用是计算重复的行数，所以在此题中使用 uniq -c 正好可以计算 IP 地址的访问数量，注意 uniq 去重的前提是首先要排序。# 3.sort -n 意思是按访问量大小来排序，请求量越大的 IP 排在越后面，如果要想排在前面，可以加一个-r 选项，即 sort –nr</code></pre>]]></content>
      
      <categories>
          
          <category> logs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> apache logs </tag>
            
            <tag> apache </tag>
            
            <tag> 日志分析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>IPXE 网络安装系统</title>
      <link href="/posts/9a51.html"/>
      <url>/posts/9a51.html</url>
      <content type="html"><![CDATA[<h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><blockquote><p>TFTP，DHCP，NGINX IP：192.168.2.44</p></blockquote><pre><code>SERVER_IP=192.168.2.44DHCP_NET=192.168.0.0DHCP_GWT=192.168.0.1DHCP_MASK=255.255.0.0DHCP_POOL=&apos;192.168.2.50 192.168.2.80&apos;LOAD_SOURCE=&apos;192.168.2.3:8000&apos;DHCP_DNS=&apos;192.168.0.9, 192.168.0.5&apos;DHCP_DNS2=&apos;223.5.5.5, 223.6.6.6&apos;</code></pre><h3 id="安装配置DHCP"><a href="#安装配置DHCP" class="headerlink" title="安装配置DHCP"></a>安装配置DHCP</h3><pre><code>yum -y install dhcp</code></pre><h3 id="配置DHCP参数"><a href="#配置DHCP参数" class="headerlink" title="配置DHCP参数"></a>配置DHCP参数</h3><pre><code>cat &lt;&lt;EOF &gt;/etc/dhcp/dhcpd.confallow booting;allow bootp;ddns-update-style interim;ignore client-updates;subnet $DHCP_NET netmask $DHCP_MASK {    option subnet-mask $DHCP_MASK;    option routers $DHCP_GWT;    option domain-name &quot;onewtech.com&quot;;    option domain-name-servers $DHCP_DNS;    range dynamic-bootp $DHCP_POOL;    default-lease-time      21600;    max-lease-time          43200;    next-server             $SERVER_IP;    filename                &quot;pxelinux.0&quot;;}EOF</code></pre><h3 id="启动服务-添加到开机启"><a href="#启动服务-添加到开机启" class="headerlink" title="启动服务,添加到开机启"></a>启动服务,添加到开机启</h3><pre><code>systemctl start dhcpdsystemctl enable dhcpd</code></pre><h3 id="TFTP安装"><a href="#TFTP安装" class="headerlink" title="TFTP安装"></a>TFTP安装</h3><pre><code>yum -y install tftp tftp-server xinetdsed -i &apos;/disable/s/yes/no/&apos;  /etc/xinetd.d/tftp</code></pre><h3 id="启动服务-添加到开机启-1"><a href="#启动服务-添加到开机启-1" class="headerlink" title="启动服务,添加到开机启"></a>启动服务,添加到开机启</h3><pre><code>systemctl start tftpsystemctl enable tftpsystemctl start xinetdsystemctl enable xinetd</code></pre><h3 id="下载启动文件"><a href="#下载启动文件" class="headerlink" title="下载启动文件"></a>下载启动文件</h3><pre><code>yum -y install wgetwget -c -O /var/lib/tftpboot/pxelinux.0 http://202.38.93.94/boot/tftp/pxelinux.0</code></pre><h3 id="配置启动菜单"><a href="#配置启动菜单" class="headerlink" title="配置启动菜单"></a>配置启动菜单</h3><pre><code>mkdir /var/lib/tftpboot/pxelinux.cfgcat &lt;&lt;EOF &gt;/var/lib/tftpboot/pxelinux.cfg/defaultdefault lpxe prompt 0LABEL lpxeKERNEL menu.c32APPEND http://$SERVER_IP/boot/menu.cgi#APPEND http://202.38.93.94/boot/menu.cgi#LABEL lpxe#KERNEL pxechn.c32#APPEND lpxelinux.0 -c http://pxe.ustc.edu.cn/boot/menu.cgi -p http://pxe.ustc.edu.cn/boot/bin/EOF</code></pre><h3 id="安装-nginx"><a href="#安装-nginx" class="headerlink" title="安装 nginx"></a>安装 nginx</h3><pre><code>yum install -y epel-releaseyum install -y nginx</code></pre><h3 id="nginx开启列出目录"><a href="#nginx开启列出目录" class="headerlink" title="nginx开启列出目录"></a>nginx开启列出目录</h3><pre><code>sed -i &apos;44a\        autoindex on;&apos; /etc/nginx/nginx.confsed -i &apos;45a\        autoindex_exact_size off;&apos; /etc/nginx/nginx.confsed -i &apos;46a\        autoindex_localtime on;&apos; /etc/nginx/nginx.confrm -rf /usr/share/nginx/html/*</code></pre><h3 id="启动服务添加到开机启动"><a href="#启动服务添加到开机启动" class="headerlink" title="启动服务添加到开机启动"></a>启动服务添加到开机启动</h3><pre><code>systemctl start nginxsystemctl enable nginx</code></pre><h3 id="配置nginx启动菜单"><a href="#配置nginx启动菜单" class="headerlink" title="配置nginx启动菜单"></a>配置nginx启动菜单</h3><pre><code>mkdir /usr/share/nginx/html/bootcat &lt;&lt;EOF &gt;/usr/share/nginx/html/boot/menu.cgidefault menu.c32MENU TITLE NETWORK SYSTEM Boot Service#MENU ROWS     15#MENU WIDTH     80#MENU HELPMSGROW 22#MENU TABMSGROW    23#MENU CMDLINEROW    23#MENU ALLOWOPTIONS 0#MENU VSHIFT    0#MENU HSHIFT    0MENU MARGIN 0MENU ROWS -9MENU TABMSGMENU TABMSGROW -3MENU CMDLINEROW -3MENU HELPMSGROW -4MENU HELPMSGENDROW -1MENU COLOR SCREEN 37;40MENU COLOR BORDER 34;40MENU COLOR TITLE 1;33;40MENU COLOR SCROLLBAR 34;46MENU COLOR SEL 30;47MENU COLOR UNSEL 36;40MENU COLOR CMDMARK 37;40MENU COLOR CMDLINE 37;40MENU COLOR TABMSG 37;40MENU COLOR DISABLED 37;40MENU COLOR HELP 32;40MENU COLOR HOTKEY 1;36;40# Windows PEMENU BEGIN ^Windows PEMENU LABEL ^Windows PELABEL -  MENU LABEL ..  TEXT HELP  &lt;-- Back  ENDTEXT  MENU EXITMENU SEPARATORLABEL winpe31  MENU LABEL Windows PE 3.1 x64  TEXT HELP  Based on Windows 7 SP1  With GUI and base Windows components.  ENDTEXT  KERNEL http://$SERVER_IP/WinPE/pe31/memdisk iso raw  INITRD http://$SERVER_IP/WinPE/pe31/pe31.iso LABEL winpe51  MENU LABEL Windows PE 5.1 x64  TEXT HELP  Based on Windows 8.1  No GUI. Almost nothing...  ENDTEXT  KERNEL /ipxe/ipxe.lkrn  INITRD /ipxe/pe51.ipxeLABEL winpe10  MENU LABEL Windows EasyU  TEXT HELP  Based on Windows 10  With GUI and base Windows components...  ENDTEXT  KERNEL http://$SERVER_IP/WinPE/pe31/memdisk iso raw  INITRD http://$SERVER_IP/WinPE/pe31/EasyU_v3.3.iso  MENU END  MENU END# Linux InstallMENU BEGIN ^Linux InstallMENU LABEL ^Linux InstallLABEL -  MENU LABEL ..  TEXT HELP  &lt;-- Back  ENDTEXT  MENU EXITMENU SEPARATOR# CentOSMENU BEGIN ^CentOS InstallersMENU LABEL ^CentOS Installers  LABEL -  MENU LABEL ..  TEXT HELP  &lt;-- Back  ENDTEXT  MENU EXITMENU SEPARATORLABEL install-centos-7-x86_64-load  MENU LABEL Install CentOS 7 x86_64-load  TEXT HELP  No help for this item  ENDTEXT  KERNEL http://192.168.2.3:8000/centos/7/os/x86_64/images/pxeboot/vmlinuz net.ifnames=0 biosdevname=0  INITRD http://192.168.2.3:8000/centos/7/os/x86_64/images/pxeboot/initrd.img ks=http://$SERVER_IP/boot/default.cfg  APPEND method=http://192.168.2.3:8000/centos/7/os/x86_64LABEL install-centos-7-x86_64  MENU LABEL Install CentOS 7 x86_64  TEXT HELP  No help for this item  ENDTEXT  KERNEL http://mirrors.ustc.edu.cn/centos/7/os/x86_64/images/pxeboot/vmlinuz  INITRD http://mirrors.ustc.edu.cn/centos/7/os/x86_64/images/pxeboot/initrd.img  APPEND method=http://mirrors.ustc.edu.cn/centos/7/os/x86_64LABEL install-centos-6-x86_64  MENU LABEL Install CentOS 6 x86_64  TEXT HELP  No help for this item  ENDTEXT  KERNEL http://mirrors.ustc.edu.cn/centos/6/os/x86_64/images/pxeboot/vmlinuz  INITRD http://mirrors.ustc.edu.cn/centos/6/os/x86_64/images/pxeboot/initrd.img  APPEND method=http://mirrors.ustc.edu.cn/centos/6/os/x86_64  MENU ENDMENU BEGIN ^Fedora InstallersMENU LABEL ^Fedora InstallersLABEL -  MENU LABEL ..  TEXT HELP  &lt;-- Back  ENDTEXT  MENU EXITMENU SEPARATORLABEL install-fedora-28-x86_64  MENU LABEL Install Fedora 28 x86_64  TEXT HELP  No help for this item  ENDTEXT  KERNEL http://mirrors.ustc.edu.cn/fedora/releases/28/Everything/x86_64/os/images/pxeboot/vmlinuz  INITRD http://mirrors.ustc.edu.cn/fedora/releases/28/Everything/x86_64/os/images/pxeboot/initrd.img  APPEND method=http://mirrors.ustc.edu.cn/fedora/releases/28/Everything/x86_64/os/LABEL install-fedora-27-x86_64  MENU LABEL Install Fedora 27 x86_64  TEXT HELP  No help for this item  ENDTEXT  KERNEL http://mirrors.ustc.edu.cn/fedora/releases/27/Everything/x86_64/os/images/pxeboot/vmlinuz  INITRD http://mirrors.ustc.edu.cn/fedora/releases/27/Everything/x86_64/os/images/pxeboot/initrd.img  APPEND method=http://mirrors.ustc.edu.cn/fedora/releases/27/Everything/x86_64/os/LABEL install-fedora-26-x86_64  MENU LABEL Install Fedora 26 x86_64  TEXT HELP  No help for this item  ENDTEXT  KERNEL http://mirrors.ustc.edu.cn/fedora/releases/26/Everything/x86_64/os/images/pxeboot/vmlinuz  INITRD http://mirrors.ustc.edu.cn/fedora/releases/26/Everything/x86_64/os/images/pxeboot/initrd.img  APPEND method=http://mirrors.ustc.edu.cn/fedora/releases/26/Everything/x86_64/os/LABEL install-fedora-25-x86_64  MENU LABEL Install Fedora 25 x86_64  TEXT HELP  No help for this item  ENDTEXT  KERNEL http://mirrors.ustc.edu.cn/fedora/releases/25/Everything/x86_64/os/images/pxeboot/vmlinuz  INITRD http://mirrors.ustc.edu.cn/fedora/releases/25/Everything/x86_64/os/images/pxeboot/initrd.img  APPEND method=http://mirrors.ustc.edu.cn/fedora/releases/25/Everything/x86_64/os/  MENU END# Arch LinuxMENU BEGIN ^Arch Linux InstallersMENU LABEL ^Arch Linux InstallersLABEL -  MENU LABEL ..  TEXT HELP  &lt;-- Back  ENDTEXT  MENU EXITMENU SEPARATORLABEL install-arch-i686  MENU LABEL Install Arch Linux i686  TEXT HELP  No help for this item  ENDTEXT  KERNEL http://mirrors.ustc.edu.cn/archlinux/iso/archboot/latest/boot/vmlinuz_i686  INITRD http://mirrors.ustc.edu.cn/archlinux/iso/archboot/latest/boot/initramfs_i686.imgLABEL install-arch-x86_64  MENU LABEL Install Arch Linux x86_64  TEXT HELP  No help for this item  ENDTEXT  KERNEL http://mirrors.ustc.edu.cn/archlinux/iso/archboot/latest/boot/vmlinuz_x86_64  INITRD http://mirrors.ustc.edu.cn/archlinux/iso/archboot/latest/boot/initramfs_x86_64.img  MENU END  MENU ENDEOF</code></pre><h3 id="下载启动文件-1"><a href="#下载启动文件-1" class="headerlink" title="下载启动文件"></a>下载启动文件</h3><pre><code>wget -r -c -p -np -nd -k -P /var/lib/tftpboot/ipxe http://202.38.93.94/boot/tftp/ipxe/wget -r -c -p -np -nd -k -P /var/lib/tftpboot http://202.38.93.94/boot/tftp/bin/rm -rf /var/lib/tftpboot/ipxe/index.html*rm -rf /var/lib/tftpboot/index.html*</code></pre><h3 id="下载WinPE启动文件"><a href="#下载WinPE启动文件" class="headerlink" title="下载WinPE启动文件"></a>下载WinPE启动文件</h3><pre><code>mkdir -p /usr/share/nginx/html/WinPE/{pe31,pe51}cd /usr/share/nginx/html/WinPE/pe51wget -c http://202.38.93.94/boot/tftp/ipxe/wimbootwget -c http://202.38.93.94/boot/bin/live/Windows/pe51/BCDwget -c http://202.38.93.94/boot/bin/live/Windows/pe51/boot.sdiwget -c http://202.38.93.94/boot/bin/live/Windows/pe51/boot.wim cd /usr/share/nginx/html/WinPE/pe31wget -c http://202.38.93.94/boot/bin/live/Windows/pe31.isowget -c http://202.38.93.94/boot/tftp/bin/memdisk</code></pre><h3 id="配置WinPE镜像路径"><a href="#配置WinPE镜像路径" class="headerlink" title="配置WinPE镜像路径"></a>配置WinPE镜像路径</h3><pre><code>cat &lt;&lt;EOF &gt;/var/lib/tftpboot/ipxe/pe51.ipxe#!ipxe:retryifconf -c dhcp || goto retrykernel http://$SERVER_IP/WinPE/pe51/wimbootinitrd http://$SERVER_IP/WinPE/pe51/BCD        BCDinitrd http://$SERVER_IP/WinPE/pe51/boot.sdi   boot.sdiinitrd http://$SERVER_IP/WinPE/pe51/boot.wim   boot.wimbootEOFcat &lt;&lt;EOF &gt;/var/lib/tftpboot/ipxe/pe31.ipxe#!ipxe:retryifconf -c dhcp || goto retryinitrd http://$SERVER_IP/WinPE/pe31/pe31.isokernel http://$SERVER_IP/WinPE/pe31/memdisk iso rawbootEOF</code></pre><h3 id="配置Centos自应答文件"><a href="#配置Centos自应答文件" class="headerlink" title="配置Centos自应答文件"></a>配置Centos自应答文件</h3><blockquote><p>全自动默认分区</p></blockquote><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/usr/share/nginx/html/boot/default.cfg#version=DEVEL# System authorization informationauth --enableshadow --passalgo=sha512# Use network installation#url --url=&quot;http://192.168.2.3:8000/centos/7/os/x86_64&quot;# Use graphical installgraphical# Run the Setup Agent on first bootfirstboot --enableignoredisk --only-use=sda# Keyboard layoutskeyboard --vckeymap=cn --xlayouts=&apos;cn&apos;# System languagelang zh_CN.UTF-8#lang en_US.UTF-8# firewalldfirewall --disabled# selinuxselinux --disabled# Network informationnetwork  --bootproto=static --device=enp3s0 --gateway=192.168.2.254 --ip=192.168.2.18 --nameserver=202.103.24.68,192.168.0.9 --netmask=255.255.0.0 --ipv6=auto --activatenetwork  --hostname=localhost.localdomain# Root passwordrootpw --iscrypted $6$NQNbZ6I7HZgr4Kk9$IWQb3QN355rDVnL1emQhgxRlF9DSnvjlU5ezbEhzehfwRjAOvmbWxKDtkum6tbUZr5tWvz61ZR8U7lirUapwK/# System servicesservices --enabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc# rebootrebootbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda --append=&quot;net.ifnames=0 biosdevname=0&quot;autopart --type=lvmclearpart --all --initlabel --drives=sda########################################################################### System bootloader configuration#bootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda#clearpart --all --initlabel --drives=sda#part pv.1888 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=304220#part /boot --fstype=&quot;xfs&quot; --ondisk=sda --size=1024#volgroup centos --pesize=4096 pv.1888#logvol /  --fstype=&quot;xfs&quot; --size=296024 --name=root --vgname=centos#logvol swap  --fstype=&quot;swap&quot; --size=8192 --name=swap --vgname=centos############################################################################%packages@^minimal@corechronykexec-tools%end%post# init#curl http://192.168.2.3:8000/init.sh | sh#curl http://192.168.2.3:8000/eth.sh | sh%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end%anacondapwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notemptypwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyokpwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty%endEOF</code></pre><blockquote><p>指定分区大小</p></blockquote><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/usr/share/nginx/html/boot/ks.cfg#version=DEVEL# System authorization informationauth --enableshadow --passalgo=sha512# Use network installation#url --url=&quot;http://192.168.2.3:8000/centos/7/os/x86_64&quot;# Use graphical installgraphical# Run the Setup Agent on first bootfirstboot --enableignoredisk --only-use=sda# Keyboard layoutskeyboard --vckeymap=cn --xlayouts=&apos;cn&apos;# System languagelang zh_CN.UTF-8#lang en_US.UTF-8# firewalldfirewall --disabled# selinuxselinux --disabled# Network informationnetwork  --bootproto=static --device=enp3s0 --gateway=192.168.2.254 --ip=192.168.2.18 --nameserver=202.103.24.68,192.168.0.9 --netmask=255.255.0.0 --ipv6=auto --activatenetwork  --hostname=localhost.localdomain# Root passwordrootpw --iscrypted $6$NQNbZ6I7HZgr4Kk9$IWQb3QN355rDVnL1emQhgxRlF9DSnvjlU5ezbEhzehfwRjAOvmbWxKDtkum6tbUZr5tWvz61ZR8U7lirUapwK/# System servicesservices --enabled=&quot;chronyd&quot;# System timezonetimezone Asia/Shanghai --isUtc# rebootreboot#bootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sda#autopart --type=lvm#clearpart --all --initlabel --drives=sda########################################################################### System bootloader configurationbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sdaclearpart --all --initlabel --drives=sdapart pv.1888 --fstype=&quot;lvmpv&quot; --ondisk=sda --size=304220part /boot --fstype=&quot;xfs&quot; --ondisk=sda --size=1024volgroup centos --pesize=4096 pv.1888logvol /  --fstype=&quot;xfs&quot; --size=296024 --name=root --vgname=centoslogvol swap  --fstype=&quot;swap&quot; --size=8192 --name=swap --vgname=centos############################################################################%packages@^minimal@corechronykexec-tools%end%post# init#curl http://192.168.2.3:8000/init.sh | sh#curl http://192.168.2.3:8000/eth.sh | sh%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end%anacondapwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notemptypwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyokpwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty%endEOF</code></pre><h3 id="重启服务-添加到开机启动"><a href="#重启服务-添加到开机启动" class="headerlink" title="重启服务,添加到开机启动"></a>重启服务,添加到开机启动</h3><pre><code>systemctl restart {dhcpd,tftp,xinetd,nginx}systemctl enable {dhcpd,tftp,xinetd,nginx}</code></pre><hr><h3 id="从网络启动LiveCD"><a href="#从网络启动LiveCD" class="headerlink" title="从网络启动LiveCD"></a>从网络启动LiveCD</h3><blockquote><p>配置NFS环境系统启动时自动加载NFS存储中的文件来初始化系统 NFS Server IP: 192.168.2.18</p></blockquote><h4 id="下载启动文件-2"><a href="#下载启动文件-2" class="headerlink" title="下载启动文件"></a>下载启动文件</h4><blockquote><p>此操作在 192.168.2.44 服务器执行</p></blockquote><pre><code># Ubuntu64mkdir /usr/share/nginx/html/ubuntu64cd /usr/share/nginx/html/ubuntu64wget -c http://pxe.ustc.edu.cn/boot/bin/live/ubuntu64/casper/initrd.lzwget -c http://pxe.ustc.edu.cn/boot/bin/live/ubuntu64/casper/vmlinuz.efiwget -c http://pxe.ustc.edu.cn/boot/conf/preseed.ubuntu.ustc.cfg# Ubuntu32mkdir /usr/share/nginx/html/ubuntu32cd /usr/share/nginx/html/ubuntu32wget -c http://pxe.ustc.edu.cn/boot/bin/live/ubuntu32/casper/vmlinuzwget -c http://pxe.ustc.edu.cn/boot/bin/live/ubuntu32/casper/initrd.lzwget -c http://pxe.ustc.edu.cn/boot/conf/preseed.ubuntu.ustc.cfg</code></pre><h4 id="安装配置NFS"><a href="#安装配置NFS" class="headerlink" title="安装配置NFS"></a>安装配置NFS</h4><pre><code># 配置变量NFS_SERVER=192.168.2.18INIT_BOOT=192.168.2.44# 安装yum -y install nfs-utils# 创建数据目录,设置权限mkdir /SSDchmod -Rf 777 /SSD# 配置NFS 权限echo &apos;/SSD 192.168.2.*(rw,sync,root_squash)&apos; &gt;/etc/exports# 启用服务,开机自启动systemctl restart rpcbindsystemctl enable rpcbindsystemctl start nfs-serversystemctl enable nfs-server</code></pre><h4 id="IPXE启动菜单添加条目"><a href="#IPXE启动菜单添加条目" class="headerlink" title="IPXE启动菜单添加条目"></a>IPXE启动菜单添加条目</h4><blockquote><p>此操作在 192.168.2.44 服务器执行</p></blockquote><pre><code>cat &lt;&lt;EOF &gt;&gt;/usr/share/nginx/html/boot/menu.cgiMENU BEGIN ^Live SystemsMENU LABEL ^Live SystemsLABEL -  MENU LABEL ..  TEXT HELP  &lt;-- Back  ENDTEXT  MENU EXITMENU SEPARATORLABEL -  MENU LABEL Ubuntu 16.04 amd64  TEXT HELP  NFS Server Ubuntu 16.04 amd64  ENDTEXT  KERNEL http://$INIT_BOOT/ubuntu64/vmlinuz.efi  INITRD http://$INIT_BOOT/ubuntu64/initrd.lz  APPEND boot=casper netboot=nfs nfsroot=$NFS_SERVER:/SSD/ubuntu64/ url=http://$INIT_BOOT/ubuntu64/preseed.ubuntu.ustc.cfg quiet splash locale=zh_CNLABEL -  MENU LABEL Ubuntu 16.04 i386  TEXT HELP  NFS Server Ubuntu 16.04 i386  ENDTEXT  KERNEL http://$INIT_BOOT/ubuntu32/vmlinuz  INITRD http://$INIT_BOOT/ubuntu32/initrd.lz  APPEND boot=casper netboot=nfs nfsroot=$NFS_SERVER:/SSD/ubuntu32/ url=http://$INIT_BOOT/ubuntu32/preseed.ubuntu.ustc.cfg quiet splash locale=zh_CN  MENU END  MENU ENDEOF</code></pre><h3 id="下载NFS启动数据"><a href="#下载NFS启动数据" class="headerlink" title="下载NFS启动数据"></a>下载NFS启动数据</h3><blockquote><p>NFS Server 操作</p></blockquote><pre><code>mount 202.38.93.94:/nfsroot /mnt/cp -a /mnt/ubuntu64/ /SSD/ubuntu64/cp -a /mnt/ubuntu32/ /SSD/ubuntu32/</code></pre>]]></content>
      
      <categories>
          
          <category> ipxe </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ipxe </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Vsftpd 安装配置</title>
      <link href="/posts/2eed.html"/>
      <url>/posts/2eed.html</url>
      <content type="html"><![CDATA[<h2 id="Vsftpd-安装"><a href="#Vsftpd-安装" class="headerlink" title="Vsftpd 安装"></a>Vsftpd 安装</h2><h3 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h3><h4 id="协议模式："><a href="#协议模式：" class="headerlink" title="协议模式："></a>协议模式：</h4><pre><code>主动模式：FTP服务器主动向客户端发起连接请求。被动模式：FTP服务器等待客户端发起连接请求（FTP的默认工作模式）。</code></pre><h4 id="认证模式："><a href="#认证模式：" class="headerlink" title="认证模式："></a>认证模式：</h4><pre><code>匿名开放模式：是一种最不安全的认证模式，任何人都可以无需密码验证而直接登录到FTP服务器。本地用户模式：是通过Linux系统本地的账户密码信息进行认证的模式，相较于匿名开放模式更安全，而且配置起来也很简单。但是如果被黑客破解了账户的信息，就可以畅通无阻地登录FTP服务器，从而完全控制整台服务器。虚拟用户模式：是这三种模式中最安全的一种认证模式，它需要为FTP服务单独建立用户数据库文件，虚拟出用来进行口令验证的账户信息，而这些账户信息在服务器系统中实际上是不存在的，仅供FTP服务程序进行认证使用。这样，即使黑客破解了账户信息也无法登录服务器，从而有效降低了破坏范围和影响。</code></pre><h4 id="安装参数说明"><a href="#安装参数说明" class="headerlink" title="安装参数说明"></a>安装参数说明</h4><pre><code># vsftpd参数详解# 参数                   作用# listen=[YES|NO]    是否以独立运行的方式监听服务# listen_address=IP地址    设置要监听的IP地址# listen_port=21    设置FTP服务的监听端口# download_enable＝[YES|NO]    是否允许下载文件# userlist_enable=[YES|NO]# userlist_deny=[YES|NO]    设置用户列表为“允许”还是“禁止”操作# max_clients=0    最大客户端连接数，0为不限制# max_per_ip=0    同一IP地址的最大连接数，0为不限制# anonymous_enable=[YES|NO]    是否允许匿名用户访问# anon_upload_enable=[YES|NO]    是否允许匿名用户上传文件# anon_umask=022    匿名用户上传文件的umask值# anon_root=/var/ftp    匿名用户的FTP根目录# anon_mkdir_write_enable=[YES|NO]    是否允许匿名用户创建目录# anon_other_write_enable=[YES|NO]    是否开放匿名用户的其他写入权限（包括重命名、删除等操作权限）# anon_max_rate=0    匿名用户的最大传输速率（字节/秒），0为不限制# local_enable=[YES|NO]    是否允许本地用户登录FTP# local_umask=022    本地用户上传文件的umask值# local_root=/var/ftp    本地用户的FTP根目录# chroot_local_user=[YES|NO]    是否将用户权限禁锢在FTP目录，以确保安全# local_max_rate=0    本地用户最大传输速率（字节/秒），0为不限制</code></pre><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre><code># 安装vsftpd, ftpyum -y install vsftpd ftp# 备份默认配置文件mv /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf_bak</code></pre><h4 id="配置匿名访问模式"><a href="#配置匿名访问模式" class="headerlink" title="配置匿名访问模式"></a>配置匿名访问模式</h4><h5 id="匿名访问模式参数"><a href="#匿名访问模式参数" class="headerlink" title="匿名访问模式参数"></a>匿名访问模式参数</h5><pre><code># 参数                   作用# anonymous_enable=YES          允许匿名访问模式# anon_umask=022           匿名用户上传文件的umask值# anon_upload_enable=YES       允许匿名用户上传文件# anon_mkdir_write_enable=YES    允许匿名用户创建目录# anon_other_write_enable=YES    允许匿名用户修改目录名称或删除目录</code></pre><h5 id="vsftpd-匿名访问模式配置文件"><a href="#vsftpd-匿名访问模式配置文件" class="headerlink" title="vsftpd 匿名访问模式配置文件"></a>vsftpd 匿名访问模式配置文件</h5><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/etc/vsftpd/vsftpd.confanonymous_enable=YESanon_umask=022anon_upload_enable=YESanon_mkdir_write_enable=YESanon_other_write_enable=YESlocal_enable=YESwrite_enable=YESlocal_umask=022dirmessage_enable=YESxferlog_enable=YESconnect_from_port_20=YESxferlog_std_format=YESlisten=NOlisten_ipv6=YESpam_service_name=vsftpduserlist_enable=YEStcp_wrappers=YESEOF</code></pre><h5 id="修改数据目录权限"><a href="#修改数据目录权限" class="headerlink" title="修改数据目录权限"></a>修改数据目录权限</h5><pre><code>ls -ld /var/ftp/pubchown -Rf ftp /var/ftp/publs -ld /var/ftp/pub</code></pre><h5 id="启动服务-添加到开机启动"><a href="#启动服务-添加到开机启动" class="headerlink" title="启动服务, 添加到开机启动"></a>启动服务, 添加到开机启动</h5><pre><code>systemctl restart vsftpdsystemctl enable vsftpd</code></pre><h5 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h5><pre><code># 连接用户：anonymous 密码为空# 匿名访问模式默认访问的是:：/var/ftp 目录ftp 192.168.2.18cd pubmkdir files</code></pre><h4 id="配置本地用户模式"><a href="#配置本地用户模式" class="headerlink" title="配置本地用户模式"></a>配置本地用户模式</h4><h5 id="本地用户模式参数"><a href="#本地用户模式参数" class="headerlink" title="本地用户模式参数"></a>本地用户模式参数</h5><pre><code># 参数               作用# anonymous_enable=NO     禁止匿名访问模式# local_enable=YES       允许本地用户模式# write_enable=YES       设置可写权限# local_umask=022        本地用户模式创建文件的umask值# userlist_deny=YES       启用“禁止用户名单”，名单文件为ftpusers和user_list# userlist_enable=YES      开启用户作用名单文件功能</code></pre><h5 id="vsftpd-本地用户模式配置文件"><a href="#vsftpd-本地用户模式配置文件" class="headerlink" title="vsftpd 本地用户模式配置文件"></a>vsftpd 本地用户模式配置文件</h5><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/etc/vsftpd/vsftpd.confanonymous_enable=NOlocal_enable=YESwrite_enable=YESlocal_umask=022dirmessage_enable=YESxferlog_enable=YESconnect_from_port_20=YESxferlog_std_format=YESlisten=NOlisten_ipv6=YESpam_service_name=vsftpduserlist_enable=YEStcp_wrappers=YESEOF</code></pre><h5 id="启动服务-添加到开机启动-1"><a href="#启动服务-添加到开机启动-1" class="headerlink" title="启动服务, 添加到开机启动"></a>启动服务, 添加到开机启动</h5><pre><code>systemctl restart vsftpdsystemctl enable vsftpd</code></pre><h5 id="禁止登陆名单"><a href="#禁止登陆名单" class="headerlink" title="禁止登陆名单"></a>禁止登陆名单</h5><blockquote><p>为了保证服务器的安全性默认禁止了root</p></blockquote><pre><code>cat /etc/vsftpd/user_list    # 禁止登陆名单cat /etc/vsftpd/ftpusers     # 禁止登陆名单</code></pre><h5 id="验证安装-1"><a href="#验证安装-1" class="headerlink" title="验证安装"></a>验证安装</h5><blockquote><p>连接用户：本地账户(注意账户名是否存在于禁止登陆名单中) 匿名访问模式默认访问的是该用户的家目录：/home/username or /root 目录</p></blockquote><pre><code>ftp 192.168.2.18cd pubmkdir files</code></pre><h4 id="配置虚拟用户模式"><a href="#配置虚拟用户模式" class="headerlink" title="配置虚拟用户模式"></a>配置虚拟用户模式</h4><h5 id="创建认证文件"><a href="#创建认证文件" class="headerlink" title="创建认证文件"></a>创建认证文件</h5><blockquote><p>创建用于进行FTP认证的用户数据库文件，其中奇数行为账户名，偶数行为密码，创建测试用户：zhangsan，lisi  密码：redhat</p></blockquote><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/etc/vsftpd/vuser.listzhangsanredhatlisiredhatEOF</code></pre><h5 id="加密数据库文件-设置权限"><a href="#加密数据库文件-设置权限" class="headerlink" title="加密数据库文件, 设置权限"></a>加密数据库文件, 设置权限</h5><pre><code>db_load -T -t hash -f /etc/vsftpd/vuser.list /etc/vsftpd/vuser.dbfile vuser.dbchmod 600 /etc/vsftpd/vuser.dbrm -f /etc/vsftpd/vuser.list</code></pre><h5 id="创建映射用户"><a href="#创建映射用户" class="headerlink" title="创建映射用户"></a>创建映射用户</h5><blockquote><p>创建vsftpd 服务程序用于存储文件的根目录以及虚拟用户映射的系统本地用户</p></blockquote><pre><code>useradd -d /var/ftproot -s /sbin/nologin virtualchmod -Rf 755 /var/ftproot/ls -ld /var/ftproot/</code></pre><h5 id="创建认证PAM文件"><a href="#创建认证PAM文件" class="headerlink" title="创建认证PAM文件"></a>创建认证PAM文件</h5><blockquote><p>用于支持虚拟用户的PAM文件，新建一个用于虚拟用户认证的PAM文件vsftpd.vu，其中PAM文件内的“db=”参数为使用db_load命令生成的账户密码数据库文件的路径，不用写数据库文件的后缀：</p></blockquote><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/etc/pam.d/vsftpd.vuauth      required     pam_userdb.so   db=/etc/vsftpd/vuseraccount    required     pam_userdb.so   db=/etc/vsftpd/vuser</code></pre><h5 id="PAM认证参数"><a href="#PAM认证参数" class="headerlink" title="PAM认证参数"></a>PAM认证参数</h5><pre><code># 利用PAM文件进行认证时使用的参数以及作用# 参数    作用# anonymous_enable=NO    禁止匿名开放模式# local_enable=YES    允许本地用户模式# guest_enable=YES    开启虚拟用户模式# guest_username=virtual    指定虚拟用户账户# pam_service_name=vsftpd.vu    指定PAM文件# allow_writeable_chroot=YES    允许对禁锢的FTP根目录执行写入操作，而且不拒绝用户的登录请求</code></pre><h5 id="vsftpd-虚拟用户模式配置文件"><a href="#vsftpd-虚拟用户模式配置文件" class="headerlink" title="vsftpd 虚拟用户模式配置文件"></a>vsftpd 虚拟用户模式配置文件</h5><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/etc/vsftpd/vsftpd.confanonymous_enable=NOlocal_enable=YESguest_enable=YESguest_username=virtualallow_writeable_chroot=YESwrite_enable=YESlocal_umask=022dirmessage_enable=YESxferlog_enable=YESconnect_from_port_20=YESxferlog_std_format=YESlisten=NOlisten_ipv6=YESpam_service_name=vsftpd.vuuserlist_enable=YEStcp_wrappers=YESEOF</code></pre><h4 id="为虚拟用户设置不同的权限"><a href="#为虚拟用户设置不同的权限" class="headerlink" title="为虚拟用户设置不同的权限"></a>为虚拟用户设置不同的权限</h4><blockquote><p>为虚拟用户设置不同的权限。虽然账户zhangsan和lisi都是用于vsftpd服务程序认证的虚拟账户，但是我们依然想对这两人进行区别对待。比如，允许张三上传、创建、修改、查看、删除文件，只允许李四查看文件。这可以通过vsftpd服务程序来实现。只需新建一个目录，在里面分别创建两个以zhangsan和lisi命名的文件，其中在名为zhangsan的文件中写入允许的相关权限</p></blockquote><h5 id="创建数据目录"><a href="#创建数据目录" class="headerlink" title="创建数据目录"></a>创建数据目录</h5><pre><code>mkdir /etc/vsftpd/vusers_dir/</code></pre><h5 id="创建访问权限"><a href="#创建访问权限" class="headerlink" title="创建访问权限"></a>创建访问权限</h5><pre><code>touch /etc/vsftpd/vusers_dir/lisi  /etc/vsftpd/vusers_dir/zhangsan# 配置张三权限cat &lt;&lt;&apos;EOF&apos; &gt;/etc/vsftpd/vusers_dir/zhangsananon_upload_enable=YESanon_mkdir_write_enable=YESanon_other_write_enable=YESEOF</code></pre><h5 id="vsftpd-虚拟用户多目录模式配置文件"><a href="#vsftpd-虚拟用户多目录模式配置文件" class="headerlink" title="vsftpd 虚拟用户多目录模式配置文件"></a>vsftpd 虚拟用户多目录模式配置文件</h5><blockquote><p>添加user_config_dir参数来定义这两个虚拟用户不同权限的配置文件所存放的路径</p></blockquote><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/etc/vsftpd/vsftpd.confanonymous_enable=NOlocal_enable=YESguest_enable=YESguest_username=virtualallow_writeable_chroot=YESwrite_enable=YESlocal_umask=022dirmessage_enable=YESxferlog_enable=YESconnect_from_port_20=YESxferlog_std_format=YESlisten=NOlisten_ipv6=YESpam_service_name=vsftpd.vuuserlist_enable=YEStcp_wrappers=YESuser_config_dir=/etc/vsftpd/vusers_dirEOF# 启动服务, 添加到开机启动systemctl restart vsftpdsystemctl enable vsftpd</code></pre><h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h5><blockquote><p>此时，不但可以使用虚拟用户模式成功登录到FTP服务器，还可以分别使用账户zhangsan和lisi来检验他们的权限</p></blockquote><pre><code>ftp 192.168.2.18cd pubmkdir files</code></pre>]]></content>
      
      <categories>
          
          <category> Vsftpd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> Vsftpd </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Samba NSF 安装及挂载</title>
      <link href="/posts/d4c3.html"/>
      <url>/posts/d4c3.html</url>
      <content type="html"><![CDATA[<h3 id="Samba安装"><a href="#Samba安装" class="headerlink" title="Samba安装"></a>Samba安装</h3><blockquote><p>环境：CentOS 7.5    IP：192.168.2.18</p></blockquote><h4 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h4><pre><code># 安装yum -y install samba# 备份配置文件cp /etc/samba/smb.conf{,.bak}# 创建用户[test:test]useradd -m -U testecho test | passwd --stdin  test# 创建数据目录，配置权限mkdir /datachown -Rf test:test /data# 添加共享目录# comment  # 共享说明# path    # 路径# public   # 只有登陆后才显示# writable  # 允许写入cat &lt;&lt;&apos;EOF&apos; &gt;&gt;/etc/samba/smb.conf[data]    comment = Share data    path = /data    public = no    writable = yesEOF# 创建Samba用户[此处密码可与本地用户密码不同]pdbedit -a -u test# 启用服务, 开机自启动服务systemctl restart smbsystemctl enable smb</code></pre><h4 id="Samba挂载"><a href="#Samba挂载" class="headerlink" title="Samba挂载"></a>Samba挂载</h4><blockquote><p>Linux 示例:</p></blockquote><pre><code># 安装yum -y install cifs-utils# 创建密码文件cat &lt;&lt;&apos;EOF&apos;  &gt;auth.smbusername=testpassword=testdomain=SAMBAEOF# 设置密码文件权限chmod -Rf 600 auth.smb# 创建挂载目录mkdir /data# 命令行挂载mount -t cifs  //192.168.2.18/data /data -o username=test,password=testmount -t cifs  //192.168.2.18/data /data -o credentials=/root/auth.smb# 写入开机自动挂载echo &quot;//192.168.2.18/data /data cifs  credentials=/root/auth.smb  0 0&quot; &gt;&gt;/etc/fstabmount -a</code></pre><h3 id="NFS-安装"><a href="#NFS-安装" class="headerlink" title="NFS 安装"></a>NFS 安装</h3><h4 id="安装配置-1"><a href="#安装配置-1" class="headerlink" title="安装配置"></a>安装配置</h4><pre><code># 安装yum -y install nfs-utils# 创建数据目录,设置权限mkdir /SSDchmod -Rf 777 /SSD# 配置连接参数# ro    只读# rw    读写# root_squash       当NFS客户端以root管理员访问时，映射为NFS服务器的匿名用户# no_root_squash    当NFS客户端以root管理员访问时，映射为NFS服务器的root管理员# all_squash        无论NFS客户端使用什么账户访问，均映射为NFS服务器的匿名用户# sync              同时将数据写入到内存与硬盘中，保证不丢失数据# async             优先将数据保存到内存，然后再写入硬盘；这样效率更高，但可能会丢失数据# 本地路径 /SSD 允许 192.168.2.0网络所有主机访问,权限读写,当NFS客户端以root管理员访问时，映射为NFS服务器的匿名用户echo &apos;/SSD 192.168.2.*(rw,sync,root_squash)&apos; &gt; /etc/exports# 启用服务,开机自启动systemctl restart rpcbindsystemctl enable rpcbindsystemctl start nfs-serversystemctl enable nfs-server# 查看状态信息showmount -e 192.168.2.18    # 显示NFS服务器的共享列表showmount -a 192.168.2.18    # 显示本机挂载的文件资源的情况NFS资源的情况</code></pre><h4 id="NFS-挂载"><a href="#NFS-挂载" class="headerlink" title="NFS 挂载"></a>NFS 挂载</h4><blockquote><p>Linux 示例：</p></blockquote><pre><code># 安装yum -y install nfs-utils# 命令行挂载mkdir /SSDmount -t nfs 192.168.2.18:/SSD /SSD# 开机自动挂载echo &apos;192.168.2.18:/SSD  /SSD  nfs defaults  0 0&apos; &gt;&gt;/etc/fstabmount -a</code></pre><h3 id="Autofs-自动挂载"><a href="#Autofs-自动挂载" class="headerlink" title="Autofs 自动挂载"></a>Autofs 自动挂载</h3><blockquote><p>Autofs与Mount/Umount的不同之处在于，它是一种看守程序。如果它检测到用户正试图访问一个尚未 挂接的文件系统，它就会自动检测该文件系统，如果存在，那么Autofs会自动将其挂接。另一方面，如果它检测到某个已挂接的文件系统在一段时间内没有被使用，那么Autofs会自动将其卸载。因此一旦运行了Autofs后，用户就不再需要手动完成文件系统的挂接和卸载(节省服务器资源不用时刻连接)</p></blockquote><pre><code># 安装yum -y install autofs# 添加iso 文件自动挂载 [在主配置文件添加配置文件路径,注意配置文件名不要与现有脚本文件重名]sed -i &apos;6a /media   /etc/iso.misc&apos; /etc/auto.master# 创建挂载配置信息cat &lt;&lt;&apos;EOF&apos; &gt;/etc/iso.misciso   -fstype=iso9660,ro,nosuid,nodev :/dev/cdromEOF# 启动服务,开机自动开启服务systemctl start autofssystemctl enable autofs# 添加NFS 自动挂载sed -i &apos;14a /-   /etc/nfs.net&apos; /etc/auto.master# 创建挂载配置信息cat &lt;&lt;&apos;EOF&apos; &gt;/etc/nfs.net/SSD  -fstype=nfs,rw,soft,intr,vers=4.1 192.168.2.18:/SSDEOF# 重启服务systemctl restart autofs# 添加Samba 自动挂载sed -i &apos;15a /-   /etc/cifs.net&apos; /etc/auto.master# 创建挂载配置信息cat &lt;&lt;&apos;EOF&apos; &gt;/etc/cifs.net/data  -fstype=cifs,rw,noperm,credentials=/root/auth.smb ://192.168.2.18/data#/data  -fstype=cifs,rw,noperm,user=test,pass=test ://192.168.2.18/dataEOF# 重启服务systemctl restart autofs</code></pre><hr><h3 id="补充示例"><a href="#补充示例" class="headerlink" title="补充示例"></a>补充示例</h3><blockquote><p>允许匿名访问公共资源读写, 允许密码登陆访问家目录,公共资源,及指定目录的读写<br>test用户拥有 /samba/data /data/public /home/test 文件夹读写权限<br>匿名用户拥有 /data/public 文件夹读写权限(windows 访问时输入任意字母做用户名密码为空)</p></blockquote><h4 id="配置本地权限"><a href="#配置本地权限" class="headerlink" title="配置本地权限"></a>配置本地权限</h4><blockquote><p>创建公共组<code>sambashare</code></p></blockquote><pre><code>yum -y install samba                 # 安装软件useradd -m -U test                   # 创建用户testecho test | passwd --stdin  test     # 设置test用户密码为testgroupadd -g 65530 sambashare         # 创建 sambashare 组usermod -a -G sambashare test        # 将 test 用户添加到 sambashare 组pdbedit -a -u test                   # 创建samba 用户 [输入 test Samba密码 可与本地密码不同]</code></pre><h4 id="Samba-配置"><a href="#Samba-配置" class="headerlink" title="Samba 配置"></a>Samba 配置</h4><pre><code># 备份配置文件cp /etc/samba/smb.conf{,.bak}# 创建数据目录,配置权限mkdir -p /samba/datamkdir /samba/publicchown -Rf test:sambashare /samba/datachown -Rf nobody:sambashare /samba/publicchmod -Rf 770 /sambals -la /samba# 创建测试文件touch /samba/data/mount /samba/public/mount# Samba 配置文件cat &lt;&lt;&apos;EOF&apos; &gt;/etc/samba/smb.conf[global]    workgroup = SAMBA    server string = Samba Server Version %v    log file = /var/log/samba/log.%m    max log size = 50    security = user    passdb backend = tdbsam    map to guest = bad user    guest account = nobody    load printers = yes    cups options = raw[homes]    comment = Home Directories    valid users = %S, %D%w%S    browseable = No    read only = No    inherit acls = Yes[data]    comment = Directory: /samba/data    path = /samba/data    public = no    writable = yes    browseable = no[public]    comment = Directory: /samba/public    path = /samba/public    public = yes    writable = yes    guest ok = yes    browseable = yesEOF# 启动服务systemctl restart smbsystemctl enable smb</code></pre><h4 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h4><pre><code># 创建密码文件cat &lt;&lt;&apos;EOF&apos;  &gt;/root/auth.smbusername=testpassword=testdomain=SAMBAEOF# 设置文件权限chmod -Rf 600 auth.smb# 创建挂载目录mkdir -p /samba/public /samba/data# 创建测试文件touch /samba/data/no /samba/public/no# 命令行挂载(匿名访问输入任意字符做密码)mount -t cifs  //192.168.2.18/public /samba/publicmount -t cifs  //192.168.2.18/data /samba/data -o credentials=/root/auth.smbmount -t cifs  //192.168.2.18/data /samba/data -o username=test,password=test# 开机自动挂载mkdir /dataecho &quot;//192.168.2.18/data /samba/data cifs  credentials=/root/auth.smb  0 0&quot; &gt;&gt;/etc/fstabmount -a# Autofs 自动挂载yum -y install autofssed -i &apos;18a /-   /etc/cifs.net&apos; /etc/auto.mastercat &lt;&lt;&apos;EOF&apos; &gt;/etc/cifs.net/samba/data  -fstype=cifs,rw,noperm,credentials=/root/auth.smb ://192.168.2.18/dataEOFsystemctl restart autofs</code></pre>]]></content>
      
      <categories>
          
          <category> FilesService </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFS </tag>
            
            <tag> Samba </tag>
            
            <tag> Autofs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LVM 分区调整</title>
      <link href="/posts/8d2e.html"/>
      <url>/posts/8d2e.html</url>
      <content type="html"><![CDATA[<h2 id="Linux-LVM逻辑卷分区调整"><a href="#Linux-LVM逻辑卷分区调整" class="headerlink" title="Linux LVM逻辑卷分区调整"></a>Linux LVM逻辑卷分区调整</h2><h3 id="命令说明"><a href="#命令说明" class="headerlink" title="命令说明"></a>命令说明</h3><pre><code>lvextend -L 120G /dev/centos/home     # 增大至120Glvextend -L +20G /dev/centos/home     # 增加20Glvreduce -L 50G /dev/centos/home      # 减小至50Glvreduce -L -8G /dev/centos/home      # 减小8G# EXT3/4 文件系统(文件系统支持热增大和减小)resize2fs /dev/centos/home            # 执行调整# XFS 文件系统(注意：XFS文件系统在做减小操作时需备份[被减小分区]的数据,做减小分区操作则此分区必须格式化)xfs_growfs /dev/centos/home           # 执行调整</code></pre><h3 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h3><h4 id="查看分区信息"><a href="#查看分区信息" class="headerlink" title="查看分区信息"></a>查看分区信息</h4><pre><code>lsblk[root@localhost ~]# lsblk NAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTsda               8:0    0 298.1G  0 disk ├─sda1            8:1    0     1G  0 part /boot└─sda2            8:2    0 297.1G  0 part   ├─centos-root 253:0    0    50G  0 lvm  /      # 根分区  ├─centos-swap 253:1    0   3.9G  0 lvm  [SWAP] # swap分区  └─centos-home 253:2    0 243.2G  0 lvm  /home  # home分区sdb               8:16   0  55.9G  0 disk └─sdb1            8:17   0  55.9G  0 part /SSD</code></pre><h4 id="查看文件系统"><a href="#查看文件系统" class="headerlink" title="查看文件系统"></a>查看文件系统</h4><pre><code>df -hT[root@localhost ~]# df -hT文件系统                类型      容量  已用  可用 已用% 挂载点/dev/mapper/centos-root xfs        50G  1.5G   49G    3% /devtmpfs                devtmpfs  1.8G     0  1.8G    0% /devtmpfs                   tmpfs     1.9G     0  1.9G    0% /dev/shmtmpfs                   tmpfs     1.9G  8.9M  1.9G    1% /runtmpfs                   tmpfs     1.9G     0  1.9G    0% /sys/fs/cgroup/dev/sdb1               xfs        56G  4.3G   52G    8% /SSD/dev/sda1               xfs      1014M  143M  872M   15% /boot/dev/mapper/centos-home xfs       244G  320M  243G    1% /home  # 分区类型XFStmpfs                   tmpfs     371M     0  371M    0% /run/user/0</code></pre><h4 id="查看LV路径"><a href="#查看LV路径" class="headerlink" title="查看LV路径"></a>查看LV路径</h4><pre><code>lvdisplay[root@localhost ~]# lvdisplay        --- Logical volume ---        LV Path                /dev/centos/swap    # Swap区路径        LV Name                swap        VG Name                centos        LV UUID                8YWTtu-YeqR-Gt0d-bO8L-bBeb-fb1B-nFsoQS        LV Write Access        read/write        LV Creation host, time localhost.localdomain, 2018-06-14 13:18:02 +0800        LV Status              available        # open                 2        LV Size                &lt;3.88 GiB        Current LE             993        Segments               2        Allocation             inherit        Read ahead sectors     auto        - currently set to     256        Block device           253:1        --- Logical volume ---        LV Path                /dev/centos/home    # home区路径        LV Name                home        VG Name                centos        LV UUID                eUprjm-hGrH-1xO7-FBrC-AEpK-qTcY-NSeTTP        LV Write Access        read/write        LV Creation host, time localhost.localdomain, 2018-06-14 13:18:02 +0800        LV Status              available        # open                 0        LV Size                &lt;243.21 GiB        Current LE             62261        Segments               3        Allocation             inherit        Read ahead sectors     auto        - currently set to     256        Block device           253:2        --- Logical volume ---        LV Path                /dev/centos/root    # 根分区路径        LV Name                root        VG Name                centos        LV UUID                YZv2zk-pf1A-XwxZ-HGDk-Xftu-TRgo-VoePMp        LV Write Access        read/write        LV Creation host, time localhost.localdomain, 2018-06-14 13:18:04 +0800        LV Status              available        # open                 1        LV Size                50.00 GiB        Current LE             12800        Segments               1        Allocation             inherit        Read ahead sectors     auto        - currently set to     256        Block device           253:0  free -m        [root@localhost ~]# free -m                                    total        used        free      shared  buff/cache   available        Mem:           3709         105        3476           8         127        3409        Swap:          8067           0        8067</code></pre><h3 id="XFS-LVM"><a href="#XFS-LVM" class="headerlink" title="XFS LVM"></a>XFS LVM</h3><blockquote><p>XFS文件系统, xfs因为只能增大, 如果要减小, 只能在减小后将逻辑分区重新格式化(mkfs.xfs)才能挂载<br>示例：备份 home 分区数据, 减小home分区 4G 增加到Swap 分区, 格式化分区, 挂载, 恢复数据(系统：CentOS 7.5)</p></blockquote><h4 id="备份数据"><a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h4><pre><code>mkdir -p /home/{1..100}/{1..1000}    # 创建测试文件yum -y install xfsdump               # 安装备份软件xfsdump -f /home.xfsdump /home       # 将home 分区备份到 根路径下 /home.xfsdump</code></pre><h4 id="减小home分区空间"><a href="#减小home分区空间" class="headerlink" title="减小home分区空间"></a>减小home分区空间</h4><pre><code>umount /home                          # 卸载分区lvreduce -L -4G /dev/centos/home      # 减小home分区4Gmkfs.xfs -f /dev/centos/home          # 格式化home分区mount /home                           # 挂载分区</code></pre><h4 id="增加Swap分区空间"><a href="#增加Swap分区空间" class="headerlink" title="增加Swap分区空间"></a>增加Swap分区空间</h4><pre><code>swapoff /dev/centos/swap                  # 关闭swap分区lvextend -l +100%FREE /dev/centos/swap    # 将剩余所有空间添加到swap分区mkswap /dev/centos/swap                   # 格式化分区swapon /dev/centos/swap                   # 启用swap分区</code></pre><h4 id="恢复home数据"><a href="#恢复home数据" class="headerlink" title="恢复home数据"></a>恢复home数据</h4><pre><code>xfsrestore -f /home.xfsdump /home</code></pre><h4 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h4><blockquote><p>为了确认分区正常请重启系统</p></blockquote><pre><code>lsblk[root@localhost ~]# lsblk     NAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT    sda               8:0    0 298.1G  0 disk     ├─sda1            8:1    0     1G  0 part /boot    └─sda2            8:2    0 297.1G  0 part         ├─centos-root 253:0    0    50G  0 lvm  /        ├─centos-swap 253:1    0   7.9G  0 lvm  [SWAP]        └─centos-home 253:2    0 239.2G  0 lvm  /home    sdb               8:16   0  55.9G  0 disk     └─sdb1            8:17   0  55.9G  0 part /SSD</code></pre><h4 id="减小Swap分区增加根分区"><a href="#减小Swap分区增加根分区" class="headerlink" title="减小Swap分区增加根分区"></a>减小Swap分区增加根分区</h4><blockquote><p>此处不用备份信息(减小分区为swap)</p></blockquote><pre><code>swapoff /dev/centos/swap                  # 关闭swap分区lvreduce -L -4G /dev/centos/swap          # 减小swap分区4Gmkswap /dev/centos/swap                   # 格式化swap分区4Gswapon /dev/centos/swap                   # 启用swap分区lvextend -l +100%FREE /dev/centos/root    # 将剩余所有空间添加到根分区xfs_growfs /dev/centos/root               # 应用扩容# 查看信息lsblk[root@localhost ~]# lsblk     NAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT    sda               8:0    0 298.1G  0 disk     ├─sda1            8:1    0     1G  0 part /boot    └─sda2            8:2    0 297.1G  0 part         ├─centos-root 253:0    0    54G  0 lvm  /        ├─centos-swap 253:1    0   3.9G  0 lvm  [SWAP]        └─centos-home 253:2    0 239.2G  0 lvm  /home    sdb               8:16   0  55.9G  0 disk     └─sdb1            8:17   0  55.9G  0 part /SSD</code></pre>]]></content>
      
      <categories>
          
          <category> LVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Lvm </tag>
            
            <tag> ext4 </tag>
            
            <tag> ext3 </tag>
            
            <tag> 分区扩容 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Docker php环境</title>
      <link href="/posts/a9ac.html"/>
      <url>/posts/a9ac.html</url>
      <content type="html"><![CDATA[<h3 id="安装Docker环境"><a href="#安装Docker环境" class="headerlink" title="安装Docker环境"></a>安装Docker环境</h3><p><a href="https://coding.net/u/yx571304/p/Docker/git/tree/master/docker-lnmp" target="_blank" rel="noopener">coding source</a></p><h4 id="dockr环境快速安装"><a href="#dockr环境快速安装" class="headerlink" title="dockr环境快速安装"></a>dockr环境快速安装</h4><pre><code>curl https://coding.net/u/yx571304/p/Docker/git/raw/master/install.sh | sh</code></pre><h4 id="安装Docker-ce"><a href="#安装Docker-ce" class="headerlink" title="安装Docker ce"></a>安装Docker ce</h4><h5 id="卸载旧版"><a href="#卸载旧版" class="headerlink" title="卸载旧版"></a>卸载旧版</h5><pre><code>yum -y remove docker docker-client docker-client-latest \  docker-common docker-latest docker-latest-logrotate docker-engine</code></pre><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><pre><code>yum -y install yum-utils device-mapper-persistent-data lvm2</code></pre><h5 id="添加安装源"><a href="#添加安装源" class="headerlink" title="添加安装源"></a>添加安装源</h5><pre><code>yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</code></pre><h5 id="安装Docker-CE"><a href="#安装Docker-CE" class="headerlink" title="安装Docker CE"></a>安装Docker CE</h5><pre><code>yum makecache fastyum -y install docker-ce</code></pre><h5 id="配置-Docker镜像加速"><a href="#配置-Docker镜像加速" class="headerlink" title="配置 Docker镜像加速"></a>配置 Docker镜像加速</h5><pre><code>mkdir /etc/dockercat &lt;&lt;! &gt;/etc/docker/daemon.json{  &quot;registry-mirrors&quot;: [&quot;http://3272dd08.m.daocloud.io&quot;]}!</code></pre><h5 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h5><pre><code>systemctl start dockersystemctl enable docker</code></pre><h5 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h5><pre><code>docker -vdocker version</code></pre><hr><h4 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker compose"></a>安装Docker compose</h4><h5 id="获取最新版本号"><a href="#获取最新版本号" class="headerlink" title="获取最新版本号"></a>获取最新版本号</h5><pre><code>new_ver=$(curl -s https://api.github.com/repos/docker/compose/releases | grep -o &apos;&quot;tag_name&quot;: &quot;.*&quot;&apos; |head -n 1| sed &apos;s/&quot;//g;s/v//g&apos; | sed &apos;s/tag_name: //g&apos;)</code></pre><h5 id="安装-docker-compose"><a href="#安装-docker-compose" class="headerlink" title="安装 docker compose"></a>安装 docker compose</h5><pre><code>curl -L https://github.com/docker/compose/releases/download/$new_ver/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-composechmod +x /usr/local/bin/docker-compose</code></pre><h5 id="验证安装-1"><a href="#验证安装-1" class="headerlink" title="验证安装"></a>验证安装</h5><pre><code>docker-compose --version</code></pre><h3 id="安装Docker-PHP环境"><a href="#安装Docker-PHP环境" class="headerlink" title="安装Docker PHP环境"></a>安装Docker PHP环境</h3><h4 id="创建文件结构"><a href="#创建文件结构" class="headerlink" title="创建文件结构"></a>创建文件结构</h4><pre><code>mkdir -p /lnmp/{php,mysql,wwwroot,log,conf}mkdir /lnmp/log/{nginx,php,mysql}</code></pre><h4 id="获取nginx默认配置文件"><a href="#获取nginx默认配置文件" class="headerlink" title="获取nginx默认配置文件"></a>获取nginx默认配置文件</h4><pre><code>docker run --name nginx -p 80:80 -d nginxdocker cp nginx:/usr/share/nginx/html/ /lnmp/wwwroot/default/docker cp nginx:/etc/nginx/nginx.conf /lnmp/conf/nginx.confdocker cp nginx:/etc/nginx/conf.d/ /lnmp/conf/conf.d/</code></pre><h4 id="修改nginx-路径"><a href="#修改nginx-路径" class="headerlink" title="修改nginx 路径"></a>修改nginx 路径</h4><pre><code>sed -i &apos;s#/usr/share/nginx/html#/var/www/html/default#&apos; /lnmp/conf/conf.d/default.confsed -i &apos;s/#access_log/access_log/&apos; /lnmp/conf/conf.d/default.conf</code></pre><h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><pre><code>docker stop nginxdocker rm nginx</code></pre><h4 id="Build-PHP-Docker"><a href="#Build-PHP-Docker" class="headerlink" title="Build PHP Docker"></a><a href="https://hub.docker.com/_/php/" target="_blank" rel="noopener">Build PHP Docker</a></h4><pre><code>mkdir /lnmp/php/php72cat &lt;&lt;&apos;EOF&apos; &gt;/lnmp/php/php72/DockerfileFROM php:7.2-fpmCOPY ./sources.list.stretch /etc/apt/sources.listRUN apt-get update \  &amp;&amp; apt-get install -y libfreetype6-dev libjpeg62-turbo-dev libpng-dev \  &amp;&amp; docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \  &amp;&amp; docker-php-ext-install gd \  &amp;&amp; :\  &amp;&amp; apt-get install -y libicu-dev \  &amp;&amp; docker-php-ext-install intl \  &amp;&amp; :\  &amp;&amp; apt-get install -y libxml2-dev \  &amp;&amp; apt-get install -y libxslt-dev \  &amp;&amp; docker-php-ext-install soap \  &amp;&amp; docker-php-ext-install xsl \  &amp;&amp; docker-php-ext-install xmlrpc \  &amp;&amp; docker-php-ext-install wddx \  &amp;&amp; :\  &amp;&amp; apt-get install -y libbz2-dev \  &amp;&amp; docker-php-ext-install bz2 \  &amp;&amp; :\  &amp;&amp; docker-php-ext-install zip \  &amp;&amp; docker-php-ext-install pcntl \  &amp;&amp; docker-php-ext-install pdo_mysql \  &amp;&amp; docker-php-ext-install mysqli \  &amp;&amp; docker-php-ext-install mbstring \  &amp;&amp; docker-php-ext-install exif \  &amp;&amp; docker-php-ext-install bcmath \  &amp;&amp; docker-php-ext-install calendar \  &amp;&amp; docker-php-ext-install sockets \  &amp;&amp; docker-php-ext-install gettext \  &amp;&amp; docker-php-ext-install shmop \  &amp;&amp; docker-php-ext-install sysvmsg \  &amp;&amp; docker-php-ext-install sysvsem \  &amp;&amp; docker-php-ext-install sysvshm \  &amp;&amp; docker-php-ext-install opcache \  &amp;&amp; :\  &amp;&amp; pecl install igbinary \  &amp;&amp; docker-php-ext-enable igbinary \  &amp;&amp; :\  &amp;&amp; pecl install redis \  &amp;&amp; docker-php-ext-enable redis  #&amp;&amp; docker-php-ext-install pdo_firebird \  #&amp;&amp; docker-php-ext-install pdo_dblib \  #&amp;&amp; docker-php-ext-install pdo_oci \  #&amp;&amp; docker-php-ext-install pdo_odbc \  #&amp;&amp; docker-php-ext-install pdo_pgsql \  #&amp;&amp; docker-php-ext-install pgsql \  #&amp;&amp; docker-php-ext-install oci8 \  #&amp;&amp; docker-php-ext-install odbc \  #&amp;&amp; docker-php-ext-install dba \  #&amp;&amp; docker-php-ext-install interbase \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y libmcrypt-dev \  #&amp;&amp; docker-php-ext-install mcrypt \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y curl \  #&amp;&amp; apt-get install -y libcurl3 \  #&amp;&amp; apt-get install -y libcurl4-openssl-dev \  #&amp;&amp; docker-php-ext-install curl \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y libreadline-dev \  #&amp;&amp; docker-php-ext-install readline \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y libsnmp-dev \  #&amp;&amp; apt-get install -y snmp \  #&amp;&amp; docker-php-ext-install snmp \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y libpspell-dev \  #&amp;&amp; apt-get install -y aspell-en \  #&amp;&amp; docker-php-ext-install pspell \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y librecode0 \  #&amp;&amp; apt-get install -y librecode-dev \  #&amp;&amp; docker-php-ext-install recode \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y libtidy-dev \  #&amp;&amp; docker-php-ext-install tidy \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y libgmp-dev \  #&amp;&amp; ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \  #&amp;&amp; docker-php-ext-install gmp \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y postgresql-client \  #&amp;&amp; apt-get install -y mysql-client \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y libc-client-dev \  #&amp;&amp; docker-php-ext-configure imap --with-kerberos --with-imap-ssl \  #&amp;&amp; docker-php-ext-install imap \  #&amp;&amp; :\  #&amp;&amp; apt-get install -y libldb-dev \  #&amp;&amp; apt-get install -y libldap2-dev \  #&amp;&amp; docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu \  #&amp;&amp; docker-php-ext-install ldap \  # Composer  #RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer \EOF# Docker 软件源cat &lt;&lt;&apos;EOF&apos; &gt;/lnmp/php/php72/sources.list.stretchdeb http://mirrors.163.com/debian/ stretch main non-free contribdeb http://mirrors.163.com/debian/ stretch-updates main non-free contribdeb http://mirrors.163.com/debian/ stretch-backports main non-free contribdeb http://mirrors.163.com/debian-security/ stretch/updates main non-free contribdeb-src http://mirrors.163.com/debian/ stretch main non-free contribdeb-src http://mirrors.163.com/debian/ stretch-updates main non-free contribdeb-src http://mirrors.163.com/debian/ stretch-backports main non-free contribdeb-src http://mirrors.163.com/debian-security/ stretch/updates main non-free contribEOF</code></pre><h4 id="Docker-php-配置文件"><a href="#Docker-php-配置文件" class="headerlink" title="Docker php 配置文件"></a>Docker php 配置文件</h4><pre><code>cd /lnmp/php/php72docker build -t php-fpm .docker run --name php-fpm -d php-fpmmkdir /lnmp/conf/php-fpm.d/docker cp php-fpm:/usr/local/etc/php-fpm.d/www.conf /lnmp/conf/php-fpm.d/www.confsed -i &apos;s#;catch_workers_output#catch_workers_output#&apos; /lnmp/conf/php-fpm.d/www.confsed -i &quot;s#;php_admin_value\[error_log\].*#php_admin_value\[error_log\] = /var/log/php/fpm-php.www.log#g&quot; /lnmp/conf/php-fpm.d/www.confsed -i &quot;s#;php_admin_flag\[log_errors\]#php_admin_flag\[log_errors\]#g&quot; /lnmp/conf/php-fpm.d/www.conf</code></pre><h4 id="删除容器-1"><a href="#删除容器-1" class="headerlink" title="删除容器"></a>删除容器</h4><pre><code>docker stop php-fpmdocker rm php-fpm</code></pre><h4 id="获取Mariadb配置文件"><a href="#获取Mariadb配置文件" class="headerlink" title="获取Mariadb配置文件"></a>获取Mariadb配置文件</h4><pre><code>docker run --name mariadb -e MYSQL_ROOT_PASSWORD=root -d mariadbdocker cp mariadb:/etc/mysql/my.cnf /lnmp/conf/my.cnfdocker stop mariadbdocker rm mariadb</code></pre><h4 id="删除所有容器及镜像"><a href="#删除所有容器及镜像" class="headerlink" title="删除所有容器及镜像"></a>删除所有容器及镜像</h4><pre><code>docker stop `docker ps -q`docker rm `docker ps -qa`docker rmi `docker images -q`</code></pre><h3 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a><a href="https://coding.net/u/yx571304/p/Docker/git/tree/master/docker-lnmp" target="_blank" rel="noopener">docker-compose.yml</a></h3><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/lnmp/docker-compose.ymlversion: &apos;3.6&apos;services:  nginx:    image: nginx    container_name: nginx    ports:      - &quot;80:80&quot;      - &quot;443:443&quot;    volumes:      - /etc/localtime:/etc/localtime:ro      - ./wwwroot/:/var/www/html/:rw      - ./conf/conf.d:/etc/nginx/conf.d/:ro      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro      - ./log/nginx/:/var/log/nginx/:rw    networks:      - net-php    restart: always  php:    build: ./php/php72/    container_name: php-fpm    expose:      - &quot;9000&quot;    volumes:      - /etc/localtime:/etc/localtime:ro      - ./wwwroot/:/var/www/html/:rw      - ./conf/php.ini:/usr/local/etc/php/php.ini:ro      - ./conf/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro      - ./log/php/:/var/log/php/:rw    networks:      - net-php      - net-mariadb      - net-redis    restart: always  mariadb:    image: mariadb    container_name: mariadb    ports:      - 3306:3306    volumes:      - /etc/localtime:/etc/localtime:ro      - ./conf/my.cnf:/etc/mysql/my.cnf:ro      - ./log/mysql/:/var/log/mysql/:rw      - ./mysql/:/var/lib/mysql/:rw    networks:      - net-mariadb    restart: always    environment:      MYSQL_ROOT_PASSWORD: root  adminer:    image: adminer    container_name: adminer    restart: always    ports:      - 8080:8080    volumes:      - /etc/localtime:/etc/localtime:ro    networks:      - net-mariadb    restart: always  redis:    image: redis:latest    container_name: redis    ports:      - 6379:6379    volumes:      - /etc/localtime:/etc/localtime:ro    networks:      - net-redis    restart: alwaysnetworks:  net-php:  net-mariadb:  net-redis:</code></pre><h3 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h3><pre><code>docker-compose up --builddocker-compose startdocker-compose stop</code></pre>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> docker web </tag>
            
            <tag> docker nginx </tag>
            
            <tag> docker php </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Windows 网络安装系统</title>
      <link href="/posts/5304.html"/>
      <url>/posts/5304.html</url>
      <content type="html"><![CDATA[<h2 id="Win2012网络安装操作系统"><a href="#Win2012网络安装操作系统" class="headerlink" title="Win2012网络安装操作系统"></a>Win2012网络安装操作系统</h2><h4 id="虚拟机安装-Windows-Server-2012"><a href="#虚拟机安装-Windows-Server-2012" class="headerlink" title="虚拟机安装 Windows Server 2012"></a>虚拟机安装 Windows Server 2012</h4><blockquote><p>软件版本：VMware Workstation 14.1.1<br>系统：<a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">Windows Server 2012 R2 VL with Update (x64) - DVD (Chinese-Simplified)</a></p></blockquote><pre><code>:: 自定义方式创建一个 Windows Server 2012 虚拟机    :: 网络类型：桥接    :: 磁盘大小：100G    :: 自定义硬件：移除打印机, 声卡, USB控制器    :: CD/DVD：使用ISO映像文件 下载好的[cn_windows_server_2012_r2_vl_with_update_x64_dvd_6052729.iso]    :: 选择(带有 GUI 的服务器)    :: 自定义安装, 点击 新建输入大小 31076 剩下的空间新建另一个分区 点击 [驱动器 0 分区 3] 点击 格式化 然后点击 [驱动器 0 分区 2] 下一步    :: 初始化系统后 右键点击 任务栏右下角 网络图标 → 网络和共享中心 → Windows防火墙 →  启用或关闭Windows防火墙 关闭 公用, 专用网络防火墙    :: 查看当前IP 地址并配置一个固定IP(与自动获取IP同一网段) IP: 192.168.0.30    :: 更改计算机名：点击 状态栏 开始 → 这台电脑(右键) → 属性 → 高级系统设置 → 计算机名 → 更改 输入 Install 作为计算机名 (后面安装系统验证时需要使用到) 重启</code></pre><h4 id="安装配置-DHCP"><a href="#安装配置-DHCP" class="headerlink" title="安装配置 DHCP"></a>安装配置 DHCP</h4><pre><code>:: 点击 状态栏 服务器管理器 → 管理 → 添加角色和功能 勾选 DHCP:: 点击 仪表盘上 管理 左侧 通知 → 完成DHCP配置 → 提交:: 点击 仪表盘上 工具 → DHCP → Install → IPv4(右键) → 新建作用域    :: 输入名称：192.168.0.0    :: 起始IP：192.168.0.31    # 需要注意如果局域网有开启DHCP功能请将192.168.0.30-192.168.0.40 从DHCP地址池排除    :: 结束IP: 192.168.0.40</code></pre><h4 id="安装系统部署"><a href="#安装系统部署" class="headerlink" title="安装系统部署"></a>安装系统部署</h4><pre><code>:: 点击 状态栏 服务器管理器 → 添加角色和功能 勾选 Windows部署服务:: 点击 仪表盘上 工具 → Windows部署服务 点击 服务器 → Install(右键) → 配置服务 选择：独立服务器  远程安装文件夹路径：D:\RemoteInstall 勾选：响应所有客户端计算机</code></pre><h4 id="配置Win10镜像"><a href="#配置Win10镜像" class="headerlink" title="配置Win10镜像"></a>配置Win10镜像</h4><pre><code>:: 点击当前虚拟机 设置 → CD/DVD → 使用 ISO映像文件 → 浏览 选择 Win10 系统镜像:: 点击 仪表盘上 工具 → Windows部署服务 → 服务器 → Install → 安装映像(右键) → 添加安装映像 创建已命名的映像组：Windows 10 1803 文件位置：E:\sources\install.wim:: 点击 启动映像(右键) → 添加启动映像 文件位置：E:\sources\boot.wim 映像名称：Microsoft Windows 10 1803 Setup (x64):: 点击 服务器 → Install(右键) → 所有任务 → 启动:: 点击 服务器 → Install(右键) → 属性 → 启动 配置PXE启动策略 (此处默认未做修改)</code></pre><h4 id="虚拟机测试"><a href="#虚拟机测试" class="headerlink" title="虚拟机测试"></a>虚拟机测试</h4><pre><code>:: 自定义方式创建一个 Windows 7 x64 虚拟机    网络类型：桥接:: 开启虚拟机 开启后根据开机提示 按F12 (如果错过重启虚拟机):: 连接到 Install  用户名：Install\administrator  密码：(Install服务器登录密码)</code></pre><h4 id="封装系统"><a href="#封装系统" class="headerlink" title="封装系统"></a>封装系统</h4><blockquote><p>下载一个纯净系统镜像 安装当前系统补丁, 安装办公软件, 常用软件 使用封装软件进行封装, 调用万能驱动自动安装驱动程序</p></blockquote><h5 id="创建Win10虚拟机"><a href="#创建Win10虚拟机" class="headerlink" title="创建Win10虚拟机"></a>创建Win10虚拟机</h5><pre><code>:: 自定义方式创建一个 Windows 7 X64 虚拟机    :: 网络类型：桥接    :: 磁盘大小：100G    :: 自定义硬件：移除打印机, 声卡, USB控制器    :: CD/DVD：使用ISO映像文件 下载好的[cn_windows_10_business_editions_version_1803_updated_march_2018_x64_dvd_12063730]    :: 点击 菜单栏 右侧 三角形向下按钮 选择 打开电源时进入固件 使用键盘方向键 选择 Advanced → T/O Device Configuration 回车 把所有选项全部设置为 Disabled 然后按 ESC    :: 选择 Boot 将光标移动至 CD-ROM Drive 然后按+ 将它移动到第一行 按 F10 → 回车    :: 选择(Windows 10 专业版)    :: 自定义安装, 点击 新建输入大小 31275 剩下的空间新建另一个分区 点击 [驱动器 0 分区 3] 点击 格式化 然后点击 [驱动器 0 分区 2] 下一步    :: 到了区域设置(注意到了此处请不要做任何操作)按下 Ctrl + Shift + F3 自动重启后进入 Sysprep 阶段 进入系统后关闭 系统准备工具(不要点确认 !)    :: 关闭虚拟机</code></pre><h5 id="准备软件"><a href="#准备软件" class="headerlink" title="准备软件"></a>准备软件</h5><blockquote><p><a href="https://www.itsk.com/topic-software.html" target="_blank" rel="noopener">封装部署工具</a><br><a href="https://www.itsk.com/thread-387418-1-1.html" target="_blank" rel="noopener">U盘启动工具</a><br><a href="https://www.itsk.com/thread-387419-1-1.html" target="_blank" rel="noopener">万能驱动</a><br><a href="https://www.itsk.com/thread-387375-1-1.html" target="_blank" rel="noopener">系统运行库</a><br><a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">办公软件</a>, 常用软件, 激活软件<br><a href="https://www.chuyu.me/zh-Hans/index.html" target="_blank" rel="noopener">Dism++</a></p></blockquote><pre><code>:: 制作U盘启动镜像 解压优启通 运行 EasyU_v3.3.exe 点击生成 ISO 浏览保存位置到桌面 EasyU_v3.3.iso:: 开启虚拟机 配置IP 使虚拟机能上外网 或者改NAT模式(由于Install 服务器开启了PXE 没有指定DHCP 地址池的网关及 DNS 导致本机无网络):: 将准备好的软件放到一个文件内,并开启文件共享, 虚拟机内访问文件共享 将文件下载到D 盘</code></pre><h5 id="封装系统-1"><a href="#封装系统-1" class="headerlink" title="封装系统"></a>封装系统</h5><pre><code>:: 激活系统:: 系统更新补丁 点击 开始 → 设置 → 更新和安全 → 检测更新  等待安装完毕 点击开始 更新并重启:: 安装系统运行库(解压四个文件后依次安装), 再次更新系统补丁 更新并重启:: 安装 office 更新并重启:: 使用Dism++ 优化系统, 安装常用软件, 配置系统默认软件, 软件去广告, 软件的默认设置:: 关闭虚拟机 设置 CD/DVD：使用ISO映像文件 选择 桌面的 EasyU_v3.3.iso:: 运行 EasySysprep    :: 网络 域：tset.com(有域环境可以选择这个)  输入有权限加入域的 用户名和密码 勾选跳过无线配置 虚拟机自动重启 注意系统开机后立刻按任意键进入ISO 启动    :: 选择 Windows 10 PE x64    :: 进入 PE 系统后 运行EasySysprep 在部署设置 项 勾选 使用部署插件 网络设置 模式：DHCP 网络环境  勾选 域：tset.com(有域环境可以选择这个)  输入有权限加入域的 用户名和密码    :: 网络位置：工作网络 将下载的万能驱动移动到C:\Sysprep\ 更名为EasyDrv7_Win10.x64 在专用调用接口处 勾选万能驱动助理 选择路径 C:\Sysprep\EasyDrv7_Win10.x64\EasyDrv7(Win10.x64).exe    :: 待 EasySysprep 运行完毕自动退出后 点击桌面 EIX系统安装 点击分区备份 点击 点此新建映像文件 选择 D 盘 输入文件名 Win10-pro-1803.wim 点击保存 点击本地磁盘C  一键备份    :: 备份完成后 重启等待系统安装完毕 将D 盘映像文件复制出来 这个就是封装好的映像 当前安装好的虚拟机就是映像安装的结果</code></pre><h4 id="自定义映像网络安装"><a href="#自定义映像网络安装" class="headerlink" title="自定义映像网络安装"></a>自定义映像网络安装</h4><pre><code>:: 将 Windows 10镜像文件中 sources\boot.wim 和制作的映像文件 Win10-pro-1803.wim 复制到 install服务器的D 盘:: 点击 服务器管理器 仪表盘上 工具 → Windows部署服务 → 服务器 → Install → 安装映像(右键) → 添加安装映像 创建已命名的映像组：Windows 10 1803 V2 文件位置：E:\sources\install.wim:: 点击 启动映像(右键) → 添加启动映像 文件位置：E:\sources\boot.wim 映像名称：Microsoft Windows 10 1803 V2 Setup (x64):: 新建一个 Windows 7 x64 虚拟机 PXE启动后即可看到新添加的映像 选择新添加的映像 在安装的过程中会自动调用 驱动精灵</code></pre>]]></content>
      
      <categories>
          
          <category> PXE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PXE </tag>
            
            <tag> Windows 2012 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Jenkins打包Unity项目</title>
      <link href="/posts/b6fc.html"/>
      <url>/posts/b6fc.html</url>
      <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><pre><code>系统：Windows Server 2008 R2 Standard (完全安装)IP：192.168.2.90软件版本：    Java：1.8.0_171-winx64    Subversion：1.8.17    MariaDB：10.3.7-winx64    Toncat：9.0.8-winx64    Jenkins：Latest    Svnadmin：3.0.6    Unity：2017.3.1f1 (64-bit)</code></pre><h4 id="安装-Uinty"><a href="#安装-Uinty" class="headerlink" title="安装 Uinty"></a>安装 <a href="https://unity3d.com/cn/get-unity/download/archive" target="_blank" rel="noopener">Uinty</a></h4><pre><code>:: 默认方式安装:: 安装路径：C:\Program Files\Unity:: 激活：必须是 pro 版本</code></pre><h4 id="安装-Java"><a href="#安装-Java" class="headerlink" title="安装 Java"></a>安装 <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">Java</a></h4><pre><code>:: 默认方式安装:: 配置环境变量JAVA_HOME=C:\Program Files\Java\jdk1.8.0_171CLASSPATH=%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jarPath=;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin:: 验证安装 CMD:java -version</code></pre><h4 id="安装-Subversion"><a href="#安装-Subversion" class="headerlink" title="安装 Subversion"></a>安装 <a href="https://sourceforge.net/projects/win32svn/files/1.8.17/Setup-Subversion-1.8.17.msi" target="_blank" rel="noopener">Subversion</a></h4><pre><code>:: 默认方式安装:: 创建数据目录md D:\SvnData:: 安装服务sc create svn binpath= &quot;C:\Program Files (x86)\Subversion\bin\svnserve.exe --service -r D:\SvnData&quot; displayname= &quot;Subversion Server&quot; start= auto depend= Tcpip:: 启动服务net start svn</code></pre><h4 id="安装-Toncat"><a href="#安装-Toncat" class="headerlink" title="安装 Toncat"></a>安装 <a href="http://mirrors.hust.edu.cn/apache/tomcat/tomcat-9/v9.0.8/bin/apache-tomcat-9.0.8.exe" target="_blank" rel="noopener">Toncat</a></h4><pre><code># 默认方式安装# 配置管理界面# 添加登录用户账号密码 C:\Program Files\Apache Software Foundation\Tomcat 9.0\conf\tomcat-users.xml    &lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;admin-gui,manager-gui&quot;/&gt;:: 方法1：修改 C:\Program Files\Apache Software Foundation\Tomcat 9.0\conf\Catalina\localhost    :: 在上面目录中创建 manager.xml 内容为：        &lt;Context privileged=&quot;true&quot; antiResourceLocking=&quot;false&quot;              docBase=&quot;${catalina.home}/webapps/manager&quot;&gt;            &lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot; allow=&quot;^.*$&quot; /&gt;        &lt;/Context&gt;    :: 在上面目录中创建 host-manager.xml 内容为：        &lt;Context privileged=&quot;true&quot; antiResourceLocking=&quot;false&quot;              docBase=&quot;${catalina.home}/webapps/host-manager&quot;&gt;            &lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot; allow=&quot;^.*$&quot; /&gt;        &lt;/Context&gt;:: 方法2：修改 C:\Program Files\Apache Software Foundation\Tomcat 9.0\webapps    :: 更改 manager\META-INF\context.xml 文件中 allow 字段        allow=&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot; /&gt;    :: change        allow=&quot;^.*$&quot; /&gt;    :: or        allow=&quot;192.168.0.*&quot; /&gt;    :: 更改 host-manager\META-INF\context.xml 文件中 allow 字段        allow=&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot; /&gt;    :: change        allow=&quot;^.*$&quot; /&gt;    :: or        allow=&quot;192.168.0.*&quot; /&gt;:: 修改完成后重启服务net stop Tomcat9net start Tomcat9</code></pre><h4 id="安装-MariaDB"><a href="#安装-MariaDB" class="headerlink" title="安装 MariaDB"></a>安装 <a href="https://mirrors.shu.edu.cn/mariadb//mariadb-10.3.7/winx64-packages/mariadb-10.3.7-winx64.msi" target="_blank" rel="noopener">MariaDB</a></h4><blockquote><p>如果需要更改数据库存储路径需要更改注册表(服务启动时指定的配置文件)</p></blockquote><pre><code>:: 默认方式安装:: 添加环境变量Path=;C:\Program Files\MariaDB 10.3\bin:: 停止 Mysql服务net stop mysql:: 创建配置文件 C:\Program Files\MariaDB 10.3\data\my.ini:: CMD:set config=&quot;C:\Program Files\MariaDB 10.3\data\my.ini&quot;echo [mysql]&gt; %config%echo # 设置mysql客户端默认字符集&gt;&gt; %config%echo default-character-set=utf8&gt;&gt; %config%echo. &gt;&gt; %config%echo [mysqld]&gt;&gt; %config%echo # 设置3306端口&gt;&gt; %config%echo port=3306&gt;&gt; %config%echo character-set-server=utf8&gt;&gt; %config%echo # 设置mysql的安装目录&gt;&gt; %config%echo basedir=C:/Program Files/MariaDB 10.3&gt;&gt; %config%echo # 设置mysql数据库的数据的存放目录&gt;&gt; %config%echo datadir=C:/Program Files/MariaDB 10.3/data&gt;&gt; %config%echo # 允许最大连接数&gt;&gt; %config%echo max_connections=20&gt;&gt; %config%echo # 服务端使用的字符集默认为8比特编码的latin1字符集&gt;&gt; %config%echo character-set-server=utf8&gt;&gt; %config%echo # 创建新表时将使用的默认存储引擎&gt;&gt; %config%echo default-storage-engine=INNODB&gt;&gt; %config%echo innodb_buffer_pool_size=511M&gt;&gt; %config%echo. &gt;&gt; %config%echo [client]&gt;&gt; %config%echo port=3306&gt;&gt; %config%echo default-character-set=utf8&gt;&gt; %config%echo plugin-dir=C:/Program Files/MariaDB 10.3/lib/plugin&gt;&gt; %config%# END CMD:: 启动 Mysql服务net start mysql</code></pre><h4 id="安装-Svnadmin"><a href="#安装-Svnadmin" class="headerlink" title="安装 Svnadmin"></a>安装 <a href="https://github.com/jsvnadmin/jsvnadmin/releases/download/3.0.6/svnadmin-3.0.6.zip" target="_blank" rel="noopener">Svnadmin</a></h4><pre><code>:: 解压到当前文件夹然后移动到桌面:: 登陆数据库mysql -uroot -proot:: 查看字符集show variables like &apos;character%&apos;;:: 创建数据库create database if not exists svnadmin default character set utf8;:: 创建用户create user &apos;svnadmin&apos;@&apos;localhost&apos; identified by &apos;svnadmin&apos;;:: 给用户授权grant all privileges on svnadmin.* to &apos;svnadmin&apos;@&apos;localhost&apos;;:: 选择数据库use svnadmin;:: 导入svnadmin数据库source C:\Users\Administrator\Desktop\svnadmin-3.0.6\db\mysql5.sql:: 导入汉化语言source C:\Users\Administrator\Desktop\svnadmin-3.0.6\db\lang\en.sql:: 复制 war 包到 Tomcat webapps目录exit;copy C:\Users\Administrator\Desktop\svnadmin-3.0.6\svnadmin.war &quot;C:\Program Files\Apache Software Foundation\Tomcat 9.0\webapps\svnadmin.war&quot;:: 编辑数据库配置文件 C:\Program Files\Apache Software Foundation\Tomcat 9.0\webapps\svnadmin\WEB-INF\jdbc.propertiesdb=MySQLMySQL.jdbc.username=svnadminMySQL.jdbc.password=svnadmin:: 重启服务net stop tomcat9net start tomcat9:: 初始化:: 浏览器打开：http://192.168.2.90:8080/svnadmin/  admin/admin 初始化:: 创建一个测试项目    项目：test    类型：svn    路径：D:\SvnData\test    URL：svn://192.168.2.90/test    描述：测试    点击：提交:: 设置项目权限    :: 在刚创建好的项目上点击设置权限    :: 点击选择资源：[test:/]    :: 点击右侧 账户 admin → &gt;    :: 权限：可读可写    :: 点击保存</code></pre><h4 id="运行-Jenkins"><a href="#运行-Jenkins" class="headerlink" title="运行 Jenkins"></a>运行 <a href="http://mirrors.jenkins.io/war-stable/latest/jenkins.war" target="_blank" rel="noopener">Jenkins</a></h4><pre><code>:: 将下载的 jenkins.war 放到桌面:: 配置工作目录JENKINS_HOME=D:\JenkinsWorkSpace:: 重启 Toncatnet stop tomcat9net start tomcat9:: 复制 war 包到 Tomcat webapps目录copy C:\Users\Administrator\Desktop\jenkins.war &quot;C:\Program Files\Apache Software Foundation\Tomcat 9.0\webapps\jenkins.war&quot;:: 浏览器打开 http://192.168.2.90:8080/jenkins 根据提示粘贴解锁密码 Jenkins:: 配置 [Jenkins]    :: 1.安装推荐的插件        :: 输入初始化账号信息    :: 安装 Uity3D, Poll SCM 插件        :: 点击菜单栏 系统管理 → 插件管理 → 可选插件    :: 配置全局工具        :: 点击菜单栏 系统管理 → 全局工具配置 → Unity3d            别名：Unity 2017.3.1f1 (64-bit)             安装目录：C:\Program Files\Unity:: 新建任务    :: 点击菜单栏 新建任务        任务名称：Unity3D        选择：构建一个自由风格的软件项目 点击确定        源码管理：Subversion            Repository URL: svn://192.168.2.90/test            Credentials: 点击 Add → Jenkins                Username: admin                password: admin                Add            选择添加的 admin/**** 账号        Check-out Strategy: Emulate clean checkout by first deleting unversioned/ignored files, then &apos;svn update&apos;        构建环境：            勾选：Delete workspace before build starts        点击增加构建步骤选择 Invoke Unity3d Editot            Unity3d installation name: Unity 2017.3.1f1 (64-bit)            Editor command line arguments:  -quit -batchmode -executeMethod ProjectBuild.BuildForStandaloneWindows:: 点击保存 :: SVN 上传源码:: 开始构建</code></pre><h4 id="构建失败"><a href="#构建失败" class="headerlink" title="构建失败"></a>构建失败</h4><pre><code>:: 查看构建日志(可能是某些服务未启动导致):: Toncat 必须以管理员身份运行</code></pre>]]></content>
      
      
        <tags>
            
            <tag> Windows server 2008 </tag>
            
            <tag> Jenkins </tag>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>构建自己的 Docker镜像</title>
      <link href="/posts/871a.html"/>
      <url>/posts/871a.html</url>
      <content type="html"><![CDATA[<h3 id="Docker-指令"><a href="#Docker-指令" class="headerlink" title="Docker 指令"></a>Docker 指令</h3><hr><h4 id="COPY-复制文件"><a href="#COPY-复制文件" class="headerlink" title="COPY 复制文件"></a>COPY 复制文件</h4><ul><li>COPY &lt;源路径&gt;… &lt;目标路径&gt;</li><li>COPY [“&lt;源路径1&gt;”,… “&lt;目标路径&gt;”]</li></ul><pre><code>COPY package.json /usr/src/app/COPY hom* /mydir/COPY hom?.txt /mydir/</code></pre><blockquote><p>&lt;目标路径&gt; 可以是容器内的绝对路径，也可以是相对于工作目录的相对路径（工作目录可以用 WORKDIR 指令来指定）。目标路径不需要事先创建，如果目录不存在会在复制文件前先行创建缺失目录。使用 COPY 指令，源文件的各种元数据都会保留。比如读、写、执行权限、文件变更时间等。   </p></blockquote><hr><h4 id="ADD-更高级的复制"><a href="#ADD-更高级的复制" class="headerlink" title="ADD 更高级的复制"></a>ADD 更高级的复制</h4><ul><li>ADD 指令和 COPY 的格式和性质基本一致。但是在 COPY 基础上增加了一些功能。如果&lt;源路径&gt;是 url Docker引擎将自动下载，并放到&lt;目标路径&gt;文件权限 600 如果 &lt;源路径&gt; 为一个 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，ADD 指令将会自动解压缩这个压缩文件到 &lt;目标路径&gt; 去</li></ul><pre><code>ADD ubuntu-xenial-core-cloudimg-amd64-root.tar.gz /</code></pre><hr><h4 id="CMD-容器启动命令"><a href="#CMD-容器启动命令" class="headerlink" title="CMD 容器启动命令"></a>CMD 容器启动命令</h4><ul><li>shell 格式：</li></ul><pre><code>CMD &lt;命令&gt;</code></pre><ul><li>exec 格式：</li></ul><pre><code>CMD [&quot;可执行文件&quot;, &quot;参数1&quot;, &quot;参数2&quot;...]</code></pre><ul><li><p>参数列表格式：CMD [“参数1”, “参数2”…]。在指定了 ENTRYPOINT 指令后，用 CMD 指定具体的参数。</p></li><li><p>Docker 不是虚拟机，容器中的应用都应该以前台执行，而不是像虚拟机、物理机里面那样，用 upstart/systemd 去启动后台服务，容器内没有后台服务的概念。例如容器启动后开启 nginx，直接执行 nginx 可执行文件，并且要求以前台形式运行。比如：</p></li></ul><pre><code>CMD [&quot;nginx&quot;, &quot;-g&quot;, &quot;daemon off;&quot;]</code></pre><hr><h4 id="ENTRYPOINT-入口点"><a href="#ENTRYPOINT-入口点" class="headerlink" title="ENTRYPOINT 入口点"></a>ENTRYPOINT 入口点</h4><ul><li>ENTRYPOINT 的目的和 CMD 一样，都是在指定容器启动程序及参数。ENTRYPOINT 在运行时也可以替代，不过比 CMD 要略显繁琐，需要通过 docker run 的参数 –entrypoint 来指定。当指定了 ENTRYPOINT 后，CMD 的含义就发生了改变，不再是直接的运行其命令，而是将 CMD 的内容作为参数传给 ENTRYPOINT 指令，换句话说实际执行时，将变为：</li></ul><pre><code>&lt;ENTRYPOINT&gt; &quot;&lt;CMD&gt;&quot;</code></pre><h5 id="场景一：让镜像变成像命令一样使用"><a href="#场景一：让镜像变成像命令一样使用" class="headerlink" title="场景一：让镜像变成像命令一样使用"></a>场景一：让镜像变成像命令一样使用</h5><ul><li>假设我们需要一个得知自己当前公网 IP 的镜像，那么可以先用 CMD 来实现：</li></ul><pre><code>FROM centosRUN yum -y update \    &amp;&amp; yum install -y curl \    &amp;&amp; yum clean all \    &amp;&amp; rm -rf /var/cache/yumCMD [ &quot;curl&quot;, &quot;-s&quot;, &quot;http://ip.cn&quot; ]</code></pre><ul><li>假如我们使用 docker build -t myip . 来构建镜像的话，如果我们需要查询当前公网 IP，只需要执行：</li></ul><pre><code>docker run myip当前 IP：221.234.131.117 来自：湖北省武汉市 电信</code></pre><ul><li>如果我们希望加参数呢？比如从上面的 CMD 中可以看到实质的命令是 curl，那么如果我们希望显示 HTTP 头信息，就需要加上 -i 参数。那么我们在 Dockerfile 文件中用 ENTRYPOINT 来实现这个镜像：</li></ul><pre><code>FROM centosRUN yum -y update \    &amp;&amp; yum install -y curl \    &amp;&amp; yum clean all \    &amp;&amp; rm -rf /var/cache/yumENTRYPOINT [ &quot;curl&quot;, &quot;-s&quot;, &quot;http://ip.cn&quot; ]</code></pre><ul><li>这次我们再来尝试直接使用 docker run myip -i：</li></ul><pre><code>docker run myip -iHTTP/1.1 200 OKDate: Wed, 16 May 2018 09:37:17 GMTContent-Type: text/html; charset=UTF-8Transfer-Encoding: chunkedConnection: keep-aliveSet-Cookie: __cfduid=d496a06be8fc34f0b942bd80c653a18081526463437; expires=Thu, 16-May-19 09:37:17 GMT; path=/; domain=.ip.cn; HttpOnlyServer: cloudflareCF-RAY: 41bcdd62e5a36d6c-SJC当前 IP：221.234.131.117 来自：湖北省武汉市 电信</code></pre><h5 id="场景二：应用运行前的准备工作"><a href="#场景二：应用运行前的准备工作" class="headerlink" title="场景二：应用运行前的准备工作"></a>场景二：应用运行前的准备工作</h5><ul><li><p>启动容器就是启动主进程，但有些时候，启动主进程前，需要一些准备工作。</p></li><li><p>比如 mysql 类的数据库，可能需要一些数据库配置、初始化的工作，这些工作要在最终的 mysql 服务器运行之前解决。</p></li><li><p>此外，可能希望避免使用 root 用户去启动服务，从而提高安全性，而在启动服务前还需要以 root 身份执行一些必要的准备工作，最后切换到服务用户身份启动服务。或者除了服务外，其它命令依旧可以使用 root 身份执行，方便调试等。</p></li><li><p>这些准备工作是和容器 CMD 无关的，无论 CMD 为什么，都需要事先进行一个预处理的工作。这种情况下，可以写一个脚本，然后放入 ENTRYPOINT 中去执行，而这个脚本会将接到的参数（也就是 <cmd>）作为命令，在脚本最后执行。比如官方镜像 redis 中就是这么做的：</cmd></p></li></ul><pre><code>FROM alpine:3.4...RUN addgroup -S redis &amp;&amp; adduser -S -G redis redis...ENTRYPOINT [&quot;docker-entrypoint.sh&quot;]EXPOSE 6379CMD [ &quot;redis-server&quot; ]</code></pre><ul><li>可以看到其中为了 redis 服务创建了 redis 用户，并在最后指定了 ENTRYPOINT 为 docker-entrypoint.sh 脚本。</li></ul><pre><code>#!/bin/sh...# allow the container to be started with `--user`if [ &quot;$1&quot; = &apos;redis-server&apos; -a &quot;$(id -u)&quot; = &apos;0&apos; ]; then    chown -R redis .    exec su-exec redis &quot;$0&quot; &quot;$@&quot;fiexec &quot;$@&quot;</code></pre><ul><li>该脚本的内容就是根据 CMD 的内容来判断，如果是 redis-server 的话，则切换到 redis 用户身份启动服务器，否则依旧使用 root 身份执行。比如：</li></ul><pre><code>docker run -it redis iduid=0(root) gid=0(root) groups=0(root)</code></pre><hr><h4 id="ENV-设置环境变量"><a href="#ENV-设置环境变量" class="headerlink" title="ENV 设置环境变量"></a>ENV 设置环境变量</h4><ul><li>格式有两种：</li></ul><pre><code>ENV &lt;key&gt; &lt;value&gt;ENV &lt;key1&gt;=&lt;value1&gt; &lt;key2&gt;=&lt;value2&gt;...ENV &lt;key1&gt;=&lt;value1&gt; \    &lt;key2&gt;=&lt;value2&gt; \    ...</code></pre><ul><li><p>这个例子中演示了如何换行，以及对含有空格的值用双引号括起来的办法，这和 Shell 下的行为是一致的。</p></li><li><p>定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。比如在官方 node 镜像 Dockerfile 中，就有类似这样的代码：</p></li></ul><pre><code>ENV NODE_VERSION 7.2.0RUN curl -SLO &quot;https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz&quot; \   &amp;&amp; curl -SLO &quot;https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc&quot; \   &amp;&amp; gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \   &amp;&amp; grep &quot; node-v$NODE_VERSION-linux-x64.tar.xz\$&quot; SHASUMS256.txt | sha256sum -c - \   &amp;&amp; tar -xJf &quot;node-v$NODE_VERSION-linux-x64.tar.xz&quot; -C /usr/local --strip-components=1 \   &amp;&amp; rm &quot;node-v$NODE_VERSION-linux-x64.tar.xz&quot; SHASUMS256.txt.asc SHASUMS256.txt \   &amp;&amp; ln -s /usr/local/bin/node /usr/local/bin/nodejs</code></pre><ul><li><p>在这里先定义了环境变量 NODE_VERSION，其后的 RUN 这层里，多次使用 $NODE_VERSION 来进行操作定制。可以看到，将来升级镜像构建版本的时候，只需要更新 7.2.0 即可，Dockerfile 构建维护变得更轻松了。</p></li><li><p>下列指令可以支持环境变量展开： </p></li></ul><pre><code>ADD、COPY、ENV、EXPOSE、LABEL、USER、WORKDIR、VOLUME、STOPSIGNAL、ONBUILD。</code></pre><blockquote><p>通过环境变量，我们可以让一份 Dockerfile 制作更多的镜像，只需使用不同的环境变量即可。</p></blockquote><hr><h4 id="ARG-构建参数"><a href="#ARG-构建参数" class="headerlink" title="ARG 构建参数"></a>ARG 构建参数</h4><ul><li>格式：</li></ul><pre><code>ARG &lt;参数名&gt;[=&lt;默认值&gt;]</code></pre><ul><li><p>构建参数和 ENV 的效果一样，都是设置环境变量。所不同的是，ARG 所设置的构建环境的环境变量，在将来容器运行时是不会存在这些环境变量的。但是不要因此就使用 ARG 保存密码之类的信息，因为 docker history 还是可以看到所有值的。</p></li><li><p>Dockerfile 中的 ARG 指令是定义参数名称，以及定义其默认值。该默认值可以在构建命令 docker build 中用 –build-arg &lt;参数名&gt;=&lt;值&gt; 来覆盖。</p></li><li><p>这对于使用 CI 系统，用同样的构建流程构建不同的 Dockerfile 的时候比较有帮助，避免构建命令必须根据每个 Dockerfile 的内容修改。</p></li></ul><hr><h4 id="VOLUME-定义匿名卷"><a href="#VOLUME-定义匿名卷" class="headerlink" title="VOLUME 定义匿名卷"></a>VOLUME 定义匿名卷</h4><ul><li>格式为：</li></ul><pre><code>VOLUME [&quot;&lt;路径1&gt;&quot;, &quot;&lt;路径2&gt;&quot;...]VOLUME &lt;路径&gt;</code></pre><ul><li>容器运行时应该尽量保持容器存储层不发生写操作，对于数据库类需要保存动态数据的应用，其数据库文件应该保存于卷(volume)中，为了防止运行时用户忘记将动态文件所保存目录挂载为卷，在 Dockerfile 中，我们可以事先指定某些目录挂载为匿名卷，这样在运行时如果用户不指定挂载，其应用也可以正常运行，不会向容器存储层写入大量数据。</li></ul><pre><code>VOLUME /data</code></pre><ul><li>这里的 /data 目录就会在运行时自动挂载为匿名卷，任何向 /data 中写入的信息都不会记录进容器存储层，从而保证了容器存储层的无状态化。当然，运行时可以覆盖这个挂载设置。比如：</li></ul><pre><code>docker run -d -v mydata:/data xxxx</code></pre><ul><li>在这行命令中，就使用了 mydata 这个命名卷挂载到了 /data 这个位置，替代了 Dockerfile 中定义的匿名卷的挂载配置。</li></ul><hr><h4 id="EXPOSE-声明端口"><a href="#EXPOSE-声明端口" class="headerlink" title="EXPOSE 声明端口"></a>EXPOSE 声明端口</h4><ul><li>格式为 :</li></ul><pre><code>EXPOSE &lt;端口1&gt; [&lt;端口2&gt;...]。</code></pre><ul><li><p>EXPOSE 指令是声明运行时容器提供服务端口，这只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务。在 Dockerfile 中写入这样的声明有两个好处，一个是帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射；另一个用处则是在运行时使用随机端口映射时，也就是 docker run -P 时，会自动随机映射 EXPOSE 的端口。</p></li><li><p>此外，在早期 Docker 版本中还有一个特殊的用处。以前所有容器都运行于默认桥接网络中，因此所有容器互相之间都可以直接访问，这样存在一定的安全性问题。于是有了一个 Docker 引擎参数 –icc=false，当指定该参数后，容器间将默认无法互访，除非互相间使用了 –links 参数的容器才可以互通，并且只有镜像中 EXPOSE 所声明的端口才可以被访问。这个 –icc=false 的用法，在引入了 docker network 后已经基本不用了，通过自定义网络可以很轻松的实现容器间的互联与隔离。</p></li><li><p>要将 EXPOSE 和在运行时使用 -p &lt;宿主端口&gt;:&lt;容器端口&gt; 区分开来。-p，是映射宿主端口和容器端口，换句话说，就是将容器的对应端口服务公开给外界访问，而 EXPOSE 仅仅是声明容器打算使用什么端口而已，并不会自动在宿主进行端口映射。</p></li></ul><hr><h4 id="WORKDIR-指定工作目录"><a href="#WORKDIR-指定工作目录" class="headerlink" title="WORKDIR 指定工作目录"></a>WORKDIR 指定工作目录</h4><ul><li><p>格式为 </p><p>  WORKDIR &lt;工作目录路径&gt;。</p></li><li><p>使用 WORKDIR 指令可以来指定工作目录（或者称为当前目录），以后各层的当前目录就被改为指定的目录，如该目录不存在，WORKDIR 会帮你建立目录。</p></li><li><p>之前提到一些初学者常犯的错误是把 Dockerfile 等同于 Shell 脚本来书写，这种错误的理解还可能会导致出现下面这样的错误：</p></li></ul><pre><code>RUN cd /appRUN echo &quot;hello&quot; &gt; world.txt</code></pre><ul><li><p>如果将这个 Dockerfile 进行构建镜像运行后，会发现找不到 /app/world.txt 文件，或者其内容不是 hello。原因其实很简单，在 Shell 中，连续两行是同一个进程执行环境，因此前一个命令修改的内存状态，会直接影响后一个命令；而在 Dockerfile 中，这两行 RUN 命令的执行环境根本不同，是两个完全不同的容器。这就是对 Dockerfile 构建分层存储的概念不了解所导致的错误。</p></li><li><p>之前说过每一个 RUN 都是启动一个容器、执行命令、然后提交存储层文件变更。第一层 RUN cd /app 的执行仅仅是当前进程的工作目录变更，一个内存上的变化而已，其结果不会造成任何文件变更。而到第二层的时候，启动的是一个全新的容器，跟第一层的容器更完全没关系，自然不可能继承前一层构建过程中的内存变化。</p></li><li><p>因此如果需要改变以后各层的工作目录的位置，那么应该使用 WORKDIR 指令。</p></li></ul><hr><h4 id="USER-指定当前用户"><a href="#USER-指定当前用户" class="headerlink" title="USER 指定当前用户"></a>USER 指定当前用户</h4><ul><li>格式：</li></ul><pre><code>USER &lt;用户名&gt;</code></pre><ul><li><p>USER 指令和 WORKDIR 相似，都是改变环境状态并影响以后的层。WORKDIR 是改变工作目录，USER 则是改变之后层的执行 RUN, CMD 以及 ENTRYPOINT 这类命令的身份。</p></li><li><p>当然，和 WORKDIR 一样，USER 只是帮助你切换到指定用户而已，这个用户必须是事先建立好的，否则无法切换。</p></li></ul><pre><code>RUN groupadd -r redis &amp;&amp; useradd -r -g redis redisUSER redisRUN [ &quot;redis-server&quot; ]</code></pre><ul><li>如果以 root 执行的脚本，在执行期间希望改变身份，比如希望以某个已经建立好的用户来运行某个服务进程，不要使用 su 或者 sudo，这些都需要比较麻烦的配置，而且在 TTY 缺失的环境下经常出错。建议使用 gosu。</li></ul><pre><code># 建立 redis 用户，并使用 gosu 换另一个用户执行命令RUN groupadd -r redis &amp;&amp; useradd -r -g redis redis# 下载 gosuRUN wget -O /usr/local/bin/gosu &quot;https://github.com/tianon/gosu/releases/download/1.7/gosu-amd64&quot; \    &amp;&amp; chmod +x /usr/local/bin/gosu \    &amp;&amp; gosu nobody true# 设置 CMD，并以另外的用户执行CMD [ &quot;exec&quot;, &quot;gosu&quot;, &quot;redis&quot;, &quot;redis-server&quot; ]</code></pre><hr><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><h4 id="创建-Dockerfile"><a href="#创建-Dockerfile" class="headerlink" title="创建 Dockerfile"></a>创建 Dockerfile</h4><hr><h5 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/nginx/www ~/nginx/logs ~/nginx/conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># www目录将映射为nginx容器配置的虚拟目录</span></span><br><span class="line"><span class="comment"># logs目录将映射为nginx容器的日志目录</span></span><br><span class="line"><span class="comment"># conf目录里的配置文件将映射为nginx容器的配置文件</span></span><br></pre></td></tr></table></figure><hr><h5 id="创建-Dockerfile-1"><a href="#创建-Dockerfile-1" class="headerlink" title="创建 Dockerfile"></a>创建 Dockerfile</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/nginx</span><br><span class="line">cat &lt;&lt;! &gt;~/nginx/Dockerfile</span><br><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">MAINTAINER Jackie <span class="string">"www.jackieathome.net"</span></span><br><span class="line">ENV NGINX_VERSION 1.10.3</span><br><span class="line">ENV OPENSSL_VERSION 1.0.2k</span><br><span class="line">ENV PCRE_VERSION 8.40</span><br><span class="line">ENV ZLIB_VERSION 1.2.11</span><br><span class="line">ENV BUILD_ROOT /usr/<span class="built_in">local</span>/src/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了减小最终生成的镜像占用的空间，这里没有执行yum update命令，可能不是好的实践</span></span><br><span class="line"><span class="comment"># 为了加快构建速度，这里使用了163的安装源</span></span><br><span class="line"><span class="comment">#RUN yum -y update \</span></span><br><span class="line"></span><br><span class="line">RUN yum -y install curl \</span><br><span class="line">        &amp;&amp; mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup \</span><br><span class="line">        &amp;&amp; curl http://mirrors.163.com/.<span class="built_in">help</span>/CentOS7-Base-163.repo -o /etc/yum.repos.d/CentOS7-Base-163.repo \ </span><br><span class="line">        &amp;&amp; yum clean all \</span><br><span class="line">        &amp;&amp; yum makecache \</span><br><span class="line">        &amp;&amp; yum -y install gcc gcc-c++ make perl zip unzip \</span><br><span class="line">        &amp;&amp; mkdir -p <span class="variable">$BUILD_ROOT</span> \</span><br><span class="line">        &amp;&amp; <span class="built_in">cd</span> <span class="variable">$BUILD_ROOT</span> \</span><br><span class="line">        &amp;&amp; curl https://ftp.pcre.org/pub/pcre/pcre-<span class="variable">$PCRE_VERSION</span>.zip -o <span class="variable">$BUILD_ROOT</span>/pcre-<span class="variable">$PCRE_VERSION</span>.zip \</span><br><span class="line">        &amp;&amp; curl https://www.openssl.org/<span class="built_in">source</span>/openssl-<span class="variable">$OPENSSL_VERSION</span>.tar.gz -o <span class="variable">$BUILD_ROOT</span>/openssl-<span class="variable">$OPENSSL_VERSION</span>.tar.gz \</span><br><span class="line">        &amp;&amp; curl http://www.zlib.net/zlib-<span class="variable">$ZLIB_VERSION</span>.tar.gz -o <span class="variable">$BUILD_ROOT</span>/zlib-<span class="variable">$ZLIB_VERSION</span>.tar.gz \</span><br><span class="line">        &amp;&amp; curl https://nginx.org/download/nginx-<span class="variable">$NGINX_VERSION</span>.tar.gz -o <span class="variable">$BUILD_ROOT</span>/nginx-<span class="variable">$NGINX_VERSION</span>.tar.gz \</span><br><span class="line">        &amp;&amp; tar vxzf nginx-<span class="variable">$NGINX_VERSION</span>.tar.gz \</span><br><span class="line">        &amp;&amp; unzip pcre-<span class="variable">$PCRE_VERSION</span>.zip \</span><br><span class="line">        &amp;&amp; tar vxfz zlib-<span class="variable">$ZLIB_VERSION</span>.tar.gz \</span><br><span class="line">        &amp;&amp; tar vxfz openssl-<span class="variable">$OPENSSL_VERSION</span>.tar.gz \</span><br><span class="line">        &amp;&amp; <span class="built_in">cd</span> nginx-<span class="variable">$NGINX_VERSION</span> \</span><br><span class="line">        &amp;&amp; BUILD_CONFIG=<span class="string">"\</span></span><br><span class="line"><span class="string">            --prefix=/etc/nginx \</span></span><br><span class="line"><span class="string">            --sbin-path=/usr/sbin/nginx \</span></span><br><span class="line"><span class="string">            --conf-path=/etc/nginx/nginx.conf \</span></span><br><span class="line"><span class="string">            --error-log-path=/var/log/nginx/error.log \</span></span><br><span class="line"><span class="string">            --http-log-path=/var/log/nginx/access.log \</span></span><br><span class="line"><span class="string">            --pid-path=/var/run/nginx.pid \</span></span><br><span class="line"><span class="string">            --lock-path=/var/run/nginx.lock \</span></span><br><span class="line"><span class="string">            --http-client-body-temp-path=/var/cache/nginx/client_temp \</span></span><br><span class="line"><span class="string">            --http-proxy-temp-path=/var/cache/nginx/proxy_temp \</span></span><br><span class="line"><span class="string">            --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \</span></span><br><span class="line"><span class="string">            --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \</span></span><br><span class="line"><span class="string">            --http-scgi-temp-path=/var/cache/nginx/scgi_temp \</span></span><br><span class="line"><span class="string">            --with-openssl=<span class="variable">$BUILD_ROOT</span>/openssl-<span class="variable">$OPENSSL_VERSION</span> \</span></span><br><span class="line"><span class="string">            --with-pcre=<span class="variable">$BUILD_ROOT</span>/pcre-<span class="variable">$PCRE_VERSION</span> \</span></span><br><span class="line"><span class="string">            --with-zlib=<span class="variable">$BUILD_ROOT</span>/zlib-<span class="variable">$ZLIB_VERSION</span> \</span></span><br><span class="line"><span class="string">            --with-http_ssl_module \</span></span><br><span class="line"><span class="string">            --with-http_v2_module \ </span></span><br><span class="line"><span class="string">            --with-threads \</span></span><br><span class="line"><span class="string">            "</span> \</span><br><span class="line">        &amp;&amp; mkdir -p /var/cache/nginx \</span><br><span class="line">        &amp;&amp; ./configure <span class="variable">$BUILD_CONFIG</span> \</span><br><span class="line">        &amp;&amp; make &amp;&amp; make install \</span><br><span class="line">        &amp;&amp; rm -rf <span class="variable">$BUILD_ROOT</span> \</span><br><span class="line">        &amp;&amp; yum -y remove gcc gcc-c++ make perl zip unzip \</span><br><span class="line">        &amp;&amp; yum clean all</span><br><span class="line"></span><br><span class="line">EXPOSE 80 443</span><br><span class="line"></span><br><span class="line">VOLUME [<span class="string">"/etc/nginx/nginx.conf"</span>, <span class="string">"/etc/nginx/html/"</span>]</span><br><span class="line"></span><br><span class="line">CMD [<span class="string">"nginx"</span>, <span class="string">"-g"</span>, <span class="string">"daemon off;"</span>]</span><br><span class="line">!</span><br></pre></td></tr></table></figure><h5 id="创建镜像"><a href="#创建镜像" class="headerlink" title="创建镜像"></a>创建镜像</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t my-nginx .</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> build </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Docker镜像容器管理</title>
      <link href="/posts/148d.html"/>
      <url>/posts/148d.html</url>
      <content type="html"><![CDATA[<h3 id="Docker-镜像管理"><a href="#Docker-镜像管理" class="headerlink" title="Docker 镜像管理"></a>Docker 镜像管理</h3><h4 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker search &lt;image&gt;</span><br><span class="line">    --no-trunc    <span class="comment"># 显示完整镜像描述信息</span></span><br><span class="line">    -s 40    <span class="comment"># 仅列出收藏数不小于40的镜像</span></span><br></pre></td></tr></table></figure><h4 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull &lt;image&gt;</span><br></pre></td></tr></table></figure><h4 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看本地所有镜像</span></span><br><span class="line">docker images -a </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像详细信息</span></span><br><span class="line">docker images --digests</span><br></pre></td></tr></table></figure><h4 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi &lt;image&gt;</span><br></pre></td></tr></table></figure><h4 id="镜像导出"><a href="#镜像导出" class="headerlink" title="镜像导出"></a>镜像导出</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o FileName.tar &lt;image&gt;</span><br></pre></td></tr></table></figure><h4 id="镜像导入"><a href="#镜像导入" class="headerlink" title="镜像导入"></a>镜像导入</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load -i FileName.tar</span><br></pre></td></tr></table></figure><h3 id="Docker-容器管理"><a href="#Docker-容器管理" class="headerlink" title="Docker 容器管理"></a>Docker 容器管理</h3><h4 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动一个守护态的容器</span></span><br><span class="line">docker run -itd &lt;image&gt; /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器中运行的进程</span></span><br><span class="line">docker top &lt;image&gt;</span><br></pre></td></tr></table></figure><h4 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口映射</span></span><br><span class="line">docker run -it</span><br><span class="line">    -p 80:8080    <span class="comment"># 将容器中的8080端口映射到主机80端口</span></span><br><span class="line">    -p 67:67/tcp    <span class="comment"># 将容器中67端口udp映射到主机67端口</span></span><br><span class="line">    -p 67-80/udp    <span class="comment"># 映射一个端口范围</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定容器的端口映射</span></span><br><span class="line">docker port &lt;image&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 映射文件目录</span></span><br><span class="line">docker run -it</span><br><span class="line">    -v   /home/docker:/data    <span class="comment"># 将本地/home/docker映射到docker中/data目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定docker运行时的名称</span></span><br><span class="line">docker run -it</span><br><span class="line">    --name NAME    <span class="comment"># 指定名称便于管理</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器的自启动</span></span><br><span class="line">docker run -itd </span><br><span class="line">    --restart  </span><br><span class="line">        no    <span class="comment"># 容器退出时，不重启容器；</span></span><br><span class="line">        on-failure    <span class="comment"># 只有在非0状态退出时才从新启动容器；</span></span><br><span class="line">        always    <span class="comment"># 论退出状态是如何，都重启容器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行中的容器添加自启动</span></span><br><span class="line">docker update --restart=always &lt;image&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行一个容器</span></span><br><span class="line">docker run -it -p 80:8080 -v /root/data:/data --name=docker1  /bin/bash</span><br></pre></td></tr></table></figure><h4 id="容器管理"><a href="#容器管理" class="headerlink" title="容器管理"></a>容器管理</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看正在运行的容器</span></span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看全部的容器,包括运行中和已经停止的容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器的详细信息</span></span><br><span class="line">docker inspect &lt;image&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker attach &lt;image&gt;</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;image&gt; /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器标准输出 </span></span><br><span class="line">docker logs -f &lt;image&gt;</span><br></pre></td></tr></table></figure><h4 id="容器保存为镜像"><a href="#容器保存为镜像" class="headerlink" title="容器保存为镜像"></a>容器保存为镜像</h4><h5 id="保存容器为镜像"><a href="#保存容器为镜像" class="headerlink" title="保存容器为镜像"></a>保存容器为镜像</h5><blockquote><p>实际环境中不建议这样使用,此方法不便于后期维护,容易导致镜像臃肿</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker commit \</span><br><span class="line">    --author <span class="string">"Tao Wang &lt;twang2218@gmail.com&gt;"</span> \</span><br><span class="line">    --message <span class="string">"修改了默认网页"</span> \</span><br><span class="line">    webserver \</span><br><span class="line">    nginx:v2</span><br></pre></td></tr></table></figure><h5 id="查看镜像内的历史记录"><a href="#查看镜像内的历史记录" class="headerlink" title="查看镜像内的历史记录"></a>查看镜像内的历史记录</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">history</span> &lt;image&gt;</span><br></pre></td></tr></table></figure><blockquote><p>其中 –author 是指定修改的作者，而 –message 则是记录本次修改的内容</p></blockquote><h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只能删除已经停止的容器</span></span><br><span class="line">docker rm &lt;image&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强行删除运行中的容器</span></span><br><span class="line">docker rm -f &lt;image&gt;</span><br></pre></td></tr></table></figure><h4 id="容器导出"><a href="#容器导出" class="headerlink" title="容器导出"></a>容器导出</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">export</span> &lt;ID/image&gt; &gt; FileName.tar</span><br></pre></td></tr></table></figure><h4 id="容器导入"><a href="#容器导入" class="headerlink" title="容器导入"></a>容器导入</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat FileName.tar | docker import - &lt;image&gt;:&lt;version&gt;</span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="运行-Httpd"><a href="#运行-Httpd" class="headerlink" title="运行 Httpd"></a>运行 Httpd</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker search httpd</span><br><span class="line">docker pull httpd</span><br><span class="line">docker run -itd  -p 80:80 --name httpd httpd /bin/sh -c <span class="string">"httpd -k start;/bin/bash"</span></span><br></pre></td></tr></table></figure><h4 id="运行-Owncloud"><a href="#运行-Owncloud" class="headerlink" title="运行 Owncloud"></a>运行 Owncloud</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker search owncloud</span><br><span class="line">docker pull owncloud</span><br><span class="line">docker run -itd  -p 81:80 --name owncloud owncloud</span><br></pre></td></tr></table></figure><h4 id="运行-Aria2"><a href="#运行-Aria2" class="headerlink" title="运行 Aria2"></a>运行 Aria2</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 6800:6800 -p 82:80 aria2 xujinkai/aria2-with-webui</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Docker安装配置</title>
      <link href="/posts/2820.html"/>
      <url>/posts/2820.html</url>
      <content type="html"><![CDATA[<h3 id="Docker-安装"><a href="#Docker-安装" class="headerlink" title="Docker 安装"></a>Docker 安装</h3><h4 id="卸载旧版本及关联的依赖关系"><a href="#卸载旧版本及关联的依赖关系" class="headerlink" title="卸载旧版本及关联的依赖关系"></a>卸载旧版本及关联的依赖关系</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y remove docker \</span><br><span class="line">    docker-client \</span><br><span class="line">    docker-client-latest \</span><br><span class="line">    docker-common \</span><br><span class="line">    docker-latest \</span><br><span class="line">    docker-latest-logrotate \</span><br><span class="line">    docker-logrotate \</span><br><span class="line">    docker-selinux \</span><br><span class="line">    docker-engine-selinux \</span><br><span class="line">    docker-engine</span><br></pre></td></tr></table></figure><h4 id="YUM方式安装"><a href="#YUM方式安装" class="headerlink" title="YUM方式安装"></a>YUM方式安装</h4><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install yum-utils \</span><br><span class="line">    device-mapper-persistent-data \</span><br><span class="line">    lvm2</span><br></pre></td></tr></table></figure><h5 id="添加安装源"><a href="#添加安装源" class="headerlink" title="添加安装源"></a>添加安装源</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h5 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum makecache fast</span><br><span class="line">yum -y install docker-ce</span><br></pre></td></tr></table></figure><h4 id="使用脚本自动安装"><a href="#使用脚本自动安装" class="headerlink" title="使用脚本自动安装"></a>使用脚本自动安装</h4><blockquote><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，CentOS 系统上可以使用这套脚本安装：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line">sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure><h3 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br><span class="line">docker version</span><br></pre></td></tr></table></figure><h3 id="配置-Docker镜像加速"><a href="#配置-Docker镜像加速" class="headerlink" title="配置 Docker镜像加速"></a>配置 Docker镜像加速</h3><h4 id="脚本配置"><a href="#脚本配置" class="headerlink" title="脚本配置"></a>脚本配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/docker</span><br><span class="line">curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://3272dd08.m.daocloud.io</span><br></pre></td></tr></table></figure><h4 id="手动配置"><a href="#手动配置" class="headerlink" title="手动配置"></a>手动配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># daocloud</span></span><br><span class="line">mkdir /etc/docker</span><br><span class="line">cat &lt;&lt;! &gt;/etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"http://3272dd08.m.daocloud.io"</span>]</span><br><span class="line">&#125;</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清华源</span></span><br><span class="line">mkdir /etc/docker</span><br><span class="line">cat &lt;&lt;! &gt;/etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://docker.mirrors.ustc.edu.cn/"</span>]</span><br><span class="line">&#125;</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><h4 id="启动服务开机自启动"><a href="#启动服务开机自启动" class="headerlink" title="启动服务开机自启动"></a>启动服务开机自启动</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><blockquote><p><a href="https://www.hi-linux.com/posts/25523.html" target="_blank" rel="noopener">15个Docker要点</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php-nginx编译安装</title>
      <link href="/posts/7ae3.html"/>
      <url>/posts/7ae3.html</url>
      <content type="html"><![CDATA[<h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><pre><code>系统：CentOS7.4-1708-Mini源码路径：/usr/local/src/安装路径：/usr/local/依赖软件：zlib, openssl, c-ares, curl, libiconv, libmcrypt, mhash, mcrypt, icu, libxml2, libxslt, libjpeg, libpng, libwebp, freetype2, libXpm, libgd修复：pycurl (安装curl导致yum不能使用,pycurl库文件问题)</code></pre><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><blockquote><p><a href="http://php.net/manual/zh/" target="_blank" rel="noopener">官方文档</a></p></blockquote><h4 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h4><pre><code>yum -y install gcc gcc-c++ vim wget ntpdate lrzsz python-devel patch \unzip autoconf bzip2-develmkdir /soft</code></pre><h4 id="修改时区"><a href="#修改时区" class="headerlink" title="修改时区"></a>修改时区</h4><pre><code>rm -f /etc/localtimeln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></pre><h4 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h4><pre><code>setenforce 0sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/config</code></pre><h4 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h4><pre><code>ntpdate ntp.aliyun.com &amp;&amp; hwclock -wecho &quot;*/20 * * * * $(which ntpdate) pool.ntp.org &gt; /dev/null 2&gt;&amp;1 &amp;&amp; \$(which hwclock) -w&quot; &gt;&gt; /var/spool/cron/rootchmod 600 /var/spool/cron/root</code></pre><h3 id="安装依赖环境"><a href="#安装依赖环境" class="headerlink" title="安装依赖环境"></a>安装依赖环境</h3><h4 id="zlib"><a href="#zlib" class="headerlink" title="zlib"></a>zlib</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 下载 解压</span><br><span class="line">cd /soft</span><br><span class="line">wget -c http://www.zlib.net/zlib-1.2.11.tar.gz</span><br><span class="line">tar xvf zlib-1.2.11.tar.gz -C /usr/local/src/</span><br><span class="line">cd /usr/local/src/zlib-1.2.11/</span><br><span class="line"></span><br><span class="line"># 编译 安装</span><br><span class="line">CFLAGS=&quot;-O3 -fPIC&quot; ./configure --prefix=/usr/local/zlib  --shared</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"># 配置环境变量</span><br><span class="line">export C_INCLUDE_PATH=/usr/local/zlib/include</span><br><span class="line">echo &apos;/usr/local/zlib/lib&apos; &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libz</span><br></pre></td></tr></table></figure><h4 id="openssl"><a href="#openssl" class="headerlink" title="openssl"></a>openssl</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://www.openssl.org/<span class="built_in">source</span>/openssl-1.1.0h.tar.gz</span><br><span class="line">tar xvf openssl-1.1.0h.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/openssl-1.1.0h/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./config -fPIC --prefix=/usr/<span class="built_in">local</span>/openssl zlib-dynamic shared \</span><br><span class="line">--openssldir=/usr/<span class="built_in">local</span>/openssl</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">wget -O /usr/<span class="built_in">local</span>/openssl/cacert.pem http://curl.haxx.se/ca/cacert.pem</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/openssl/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libssl.so</span><br><span class="line">ldconfig -v | grep libcrypto.so</span><br></pre></td></tr></table></figure><h4 id="C-ares"><a href="#C-ares" class="headerlink" title="C-ares"></a>C-ares</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget https://c-ares.haxx.se/download/c-ares-1.14.0.tar.gz</span><br><span class="line">tar xvf c-ares-1.14.0.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/c-ares-1.14.0/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/c-ares --<span class="built_in">disable</span>-static</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/c-ares/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libcares.so</span><br></pre></td></tr></table></figure><h4 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://curl.haxx.se/download/curl-7.59.0.tar.gz</span><br><span class="line">tar xvf curl-7.59.0.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/curl-7.59.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/curl --<span class="built_in">disable</span>-static \</span><br><span class="line">    --<span class="built_in">enable</span>-threaded-resolver --<span class="built_in">enable</span>-ares=/usr/<span class="built_in">local</span>/c-ares \</span><br><span class="line">    --without-nss --with-ssl=/usr/<span class="built_in">local</span>/openssl --with-zlib=/usr/<span class="built_in">local</span>/zlib</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/curl/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libcurl</span><br></pre></td></tr></table></figure><h4 id="pycurl"><a href="#pycurl" class="headerlink" title="pycurl"></a>pycurl</h4><blockquote><p>修复安装curl导致yum异常</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://dl.bintray.com/pycurl/pycurl/pycurl-7.43.0.1.tar.gz</span><br><span class="line">tar xvf pycurl-7.43.0.1.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/pycurl-7.43.0.1/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">python setup.py install --curl-config=/usr/<span class="built_in">local</span>/curl/bin/curl-config \</span><br><span class="line">--with-openssl --openssl-dir=/usr/<span class="built_in">local</span>/openssl</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/curl/bin/curl-config /usr/<span class="built_in">local</span>/bin/curl-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="libiconv"><a href="#libiconv" class="headerlink" title="libiconv"></a>libiconv</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c ftp.gnu.org/pub/gnu/libiconv/libiconv-1.15.tar.gz</span><br><span class="line">tar xvf libiconv-1.15.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libiconv-1.15/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libiconv</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libiconv/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libiconv</span><br><span class="line">ldconfig -v | grep libcharset</span><br></pre></td></tr></table></figure><h4 id="libmcrypt"><a href="#libmcrypt" class="headerlink" title="libmcrypt"></a>libmcrypt</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://jaist.dl.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz</span><br><span class="line">tar xvf libmcrypt-2.5.8.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libmcrypt-2.5.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装libmcrypt</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libmcrypt</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装libltdl</span></span><br><span class="line"><span class="built_in">cd</span> libltdl</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libltdl --<span class="built_in">enable</span>-ltdl-install</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libmcrypt/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libltdl/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libmcrypt</span><br><span class="line">ldconfig -v | grep libltdl</span><br></pre></td></tr></table></figure><h4 id="mhash"><a href="#mhash" class="headerlink" title="mhash"></a>mhash</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://jaist.dl.sourceforge.net/project/mhash/mhash/0.9.9.9/mhash-0.9.9.9.tar.gz</span><br><span class="line">tar xvf mhash-0.9.9.9.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/mhash-0.9.9.9/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/mhash</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/mhash/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libmhash</span><br></pre></td></tr></table></figure><h4 id="mcrypt"><a href="#mcrypt" class="headerlink" title="mcrypt"></a>mcrypt</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://sourceforge.net/projects/mcrypt/files/MCrypt/2.6.8/mcrypt-2.6.8.tar.gz</span><br><span class="line">tar xvf mcrypt-2.6.8.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/mcrypt-2.6.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置编译变量</span></span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=/usr/<span class="built_in">local</span>/mhash/lib</span><br><span class="line"><span class="built_in">export</span> C_INCLUDE_PATH=/usr/<span class="built_in">local</span>/mhash/include</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/libmcrypt/bin/libmcrypt-config /usr/<span class="built_in">local</span>/bin/libmcrypt-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/mcrypt --with-libmcrypt-prefix=/usr/<span class="built_in">local</span>/libmcrypt \</span><br><span class="line">    --with-libiconv-prefix=/usr/<span class="built_in">local</span>/libiconv</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line">mull</span><br></pre></td></tr></table></figure><h4 id="ICU"><a href="#ICU" class="headerlink" title="ICU"></a>ICU</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://download.icu-project.org/files/icu4c/60rc/icu4c-60rc-src.tgz</span><br><span class="line">tar xvf icu4c-60rc-src.tgz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/icu/<span class="built_in">source</span>/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/icu4c</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/icu4c/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libicu</span><br></pre></td></tr></table></figure><h4 id="libxml2"><a href="#libxml2" class="headerlink" title="libxml2"></a>libxml2</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://distfiles.macports.org/libxml2/libxml2-2.9.7.tar.gz</span><br><span class="line">tar xvf libxml2-2.9.7.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libxml2-2.9.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libxml2 --<span class="built_in">disable</span>-static --with-history --with-sax1 \</span><br><span class="line">    --with-zlib=/usr/<span class="built_in">local</span>/zlib --with-http --with-python=/usr/bin/python --with-iconv=/usr/<span class="built_in">local</span>/libiconv</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/libxml2/bin/xml2-config /usr/<span class="built_in">local</span>/bin/xml2-config</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libxml2/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libxml2</span><br></pre></td></tr></table></figure><h4 id="libxslt"><a href="#libxslt" class="headerlink" title="libxslt"></a>libxslt</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://distfiles.macports.org/libxslt/libxslt-1.1.32.tar.gz</span><br><span class="line">tar xvf libxslt-1.1.32.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libxslt-1.1.32</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libxslt --<span class="built_in">disable</span>-static --with-python=/usr/bin/python \</span><br><span class="line">    --with-libxml-prefix=/usr/<span class="built_in">local</span>/libxml2</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/libxslt/bin/xslt-config /usr/<span class="built_in">local</span>/bin/xslt-config</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libxslt/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libxslt</span><br></pre></td></tr></table></figure><h4 id="libjpeg"><a href="#libjpeg" class="headerlink" title="libjpeg"></a>libjpeg</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://distfiles.macports.org/jpeg/jpegsrc.v9c.tar.gz</span><br><span class="line">tar xvf jpegsrc.v9c.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/jpeg-9c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libjpeg --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-static</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libjpeg/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libjpeg</span><br></pre></td></tr></table></figure><h4 id="libpng"><a href="#libpng" class="headerlink" title="libpng"></a>libpng</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://distfiles.macports.org/libpng/libpng-1.6.34.tar.xz</span><br><span class="line">tar xvf libpng-1.6.34.tar.xz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libpng-1.6.34</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 补丁</span></span><br><span class="line">wget -c https://downloads.sourceforge.net/sourceforge/libpng-apng/libpng-1.6.34-apng.patch.gz</span><br><span class="line">gzip -d libpng-1.6.34-apng.patch.gz</span><br><span class="line">patch -d . -p1 &lt; libpng-1.6.34-apng.patch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=/usr/<span class="built_in">local</span>/zlib/lib</span><br><span class="line"><span class="built_in">export</span> C_INCLUDE_PATH=/usr/<span class="built_in">local</span>/zlib/include</span><br><span class="line">LIBS=-lpthread ./configure --prefix=/usr/<span class="built_in">local</span>/libpng --<span class="built_in">disable</span>-static --with-zlib-prefix=/usr/<span class="built_in">local</span>/zlib</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/libpng/bin/libpng-config /usr/<span class="built_in">local</span>/bin/libpng-config</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libpng/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libpng</span><br></pre></td></tr></table></figure><h4 id="libwebp"><a href="#libwebp" class="headerlink" title="libwebp"></a>libwebp</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://downloads.webmproject.org/releases/webp/libwebp-1.0.0.tar.gz</span><br><span class="line">tar xvf libwebp-1.0.0.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libwebp-1.0.0/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libwebp --<span class="built_in">enable</span>-libwebpmux --<span class="built_in">enable</span>-libwebpdemux \</span><br><span class="line">    --<span class="built_in">enable</span>-libwebpdecoder --<span class="built_in">enable</span>-libwebpextras --<span class="built_in">enable</span>-swap-16bit-csp --<span class="built_in">disable</span>-static \</span><br><span class="line">    --with-jpeglibdir=/usr/<span class="built_in">local</span>/libjpeg/lib --with-jpegincludedir=/usr/<span class="built_in">local</span>/libjpeg/include \</span><br><span class="line">    --with-pnglibdir=/usr/<span class="built_in">local</span>/libpng/lib --with-pngincludedir=/usr/<span class="built_in">local</span>/libpng/include</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libwebp/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libwebp</span><br></pre></td></tr></table></figure><h4 id="freetype2"><a href="#freetype2" class="headerlink" title="freetype2"></a>freetype2</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://download.savannah.gnu.org/releases/freetype/freetype-2.9.tar.gz</span><br><span class="line">tar xvf freetype-2.9.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/freetype-2.9/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=/usr/<span class="built_in">local</span>/zlib/lib</span><br><span class="line"><span class="built_in">export</span> C_INCLUDE_PATH=/usr/<span class="built_in">local</span>/zlib/include</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/freetype2  --<span class="built_in">disable</span>-static --with-zlib=yes --with-png=yes --with-bzip2=yes</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/freetype2/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libfreetype</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/freetype2/include/freetype2/freetype/ /usr/<span class="built_in">local</span>/freetype2/include/freetype</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/freetype2/include/freetype2/ft2build.h /usr/<span class="built_in">local</span>/freetype2/include/ft2build.h</span><br></pre></td></tr></table></figure><h4 id="libXpm"><a href="#libXpm" class="headerlink" title="libXpm"></a>libXpm</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line">yum -y install libX11-devel</span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://www.x.org/archive//individual/lib/libXpm-3.5.12.tar.gz</span><br><span class="line">tar xvf libXpm-3.5.12.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libXpm-3.5.12/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libXpm</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libXpm/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libXpm</span><br></pre></td></tr></table></figure><h4 id="libgd"><a href="#libgd" class="headerlink" title="libgd"></a>libgd</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://github.com/libgd/libgd/releases/download/gd-2.2.5/libgd-2.2.5.tar.gz</span><br><span class="line">tar xvf libgd-2.2.5.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libgd-2.2.5/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line"><span class="built_in">export</span> LIBS=<span class="string">"-L/usr/local/freetype2/lib -lfreetype"</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libgd --with-png=/usr/<span class="built_in">local</span>/libpng \</span><br><span class="line">    --with-webp=/usr/<span class="built_in">local</span>/libwebp --with-freetype=/usr/<span class="built_in">local</span>/freetype2 \</span><br><span class="line">    --with-png=/usr/<span class="built_in">local</span>/libpng --with-xpm=/usr/<span class="built_in">local</span>/libXpm  \</span><br><span class="line">    --with-jpeg=/usr/<span class="built_in">local</span>/libjpeg --with-webp=/usr/<span class="built_in">local</span>/libwebp \</span><br><span class="line">    --with-libiconv-prefix=/usr/<span class="built_in">local</span>/libiconv</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libgd/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libgd</span><br></pre></td></tr></table></figure><h3 id="安装php"><a href="#安装php" class="headerlink" title="安装php"></a>安装php</h3><blockquote><p>创建运行用户</p></blockquote><pre><code>run_user=wwwuseradd -M -s /sbin/nologin ${run_user}</code></pre><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 解压</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://mirrors.sohu.com/php/php-7.1.17.tar.gz</span><br><span class="line">tar xvf php-7.1.17.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/php-7.1.17/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 安装</span></span><br><span class="line">./buildconf --force</span><br><span class="line"><span class="built_in">export</span> C_INCLUDE_PATH=/usr/<span class="built_in">local</span>/libXpm/include:/usr/<span class="built_in">local</span>/freetype2/include</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/php --with-config-file-path=/usr/<span class="built_in">local</span>/php/etc \</span><br><span class="line">    --with-config-file-scan-dir=/usr/<span class="built_in">local</span>/php/etc/php.d --with-fpm-user=<span class="variable">$&#123;run_user&#125;</span> \</span><br><span class="line">    --with-fpm-group=<span class="variable">$&#123;run_user&#125;</span> --<span class="built_in">enable</span>-fpm --<span class="built_in">enable</span>-opcache --<span class="built_in">enable</span>-fileinfo \</span><br><span class="line">    --<span class="built_in">enable</span>-mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd \</span><br><span class="line">    --with-iconv-dir=/usr/<span class="built_in">local</span>/libiconv --with-freetype-dir=/usr/<span class="built_in">local</span>/freetype2 \</span><br><span class="line">    --with-jpeg-dir=/usr/<span class="built_in">local</span>/libjpeg --with-png-dir=/usr/<span class="built_in">local</span>/libpng --with-zlib=/usr/<span class="built_in">local</span>/zlib \</span><br><span class="line">    --with-webp-dir=/usr/<span class="built_in">local</span>/libwebp --with-icu-dir=/usr/<span class="built_in">local</span>/icu4c \</span><br><span class="line">    --with-libxml-dir=/usr/<span class="built_in">local</span>/libxml2 --<span class="built_in">enable</span>-xml --<span class="built_in">disable</span>-rpath --<span class="built_in">enable</span>-bcmath \</span><br><span class="line">    --<span class="built_in">enable</span>-shmop --<span class="built_in">enable</span>-exif --<span class="built_in">enable</span>-sysvsem --<span class="built_in">enable</span>-inline-optimization \</span><br><span class="line">    --with-curl=/usr/<span class="built_in">local</span>/curl --<span class="built_in">enable</span>-mbregex --with-xpm-dir=/usr/<span class="built_in">local</span>/libXpm \</span><br><span class="line">    --<span class="built_in">enable</span>-mbstring --with-mcrypt=/usr/<span class="built_in">local</span>/libmcrypt --with-gd=/usr/<span class="built_in">local</span>/libgd \</span><br><span class="line">    --<span class="built_in">enable</span>-gd-native-ttf --with-openssl=/usr/<span class="built_in">local</span>/openssl --with-mhash=/usr/<span class="built_in">local</span>/mhash \</span><br><span class="line">    --<span class="built_in">enable</span>-pcntl --<span class="built_in">enable</span>-sockets --with-xmlrpc --<span class="built_in">enable</span>-ftp --<span class="built_in">enable</span>-intl --with-xsl=/usr/<span class="built_in">local</span>/libxslt \</span><br><span class="line">    --with-gettext --<span class="built_in">enable</span>-zip --<span class="built_in">enable</span>-soap --<span class="built_in">disable</span>-debug </span><br><span class="line">make ZEND_EXTRA_LIBS=<span class="string">'-liconv'</span> &amp;&amp; make install</span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/php/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep php</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export PATH=/usr/local/php/bin:\$PATH"</span> &gt;&gt; /etc/profile</span><br><span class="line">sed -i <span class="string">"s@^export PATH=\(.*\)@export PATH=/usr/local/php/sbin:\1@"</span> /etc/profile</span><br></pre></td></tr></table></figure><h4 id="配置php-ini"><a href="#配置php-ini" class="headerlink" title="配置php.ini"></a>配置<code>php.ini</code></h4><blockquote><p>创建php.ini配置文件</p></blockquote><pre><code>mkdir /usr/local/php/etc/php.d/bin/cp php.ini-production /usr/local/php/etc/php.ini</code></pre><blockquote><p>优化php.ini参数</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取系统内存参数</span></span><br><span class="line">Mem=`free -m | awk <span class="string">'/Mem:/&#123;print $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$Mem</span> -le 640 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=512M</span><br><span class="line">    Memory_limit=64</span><br><span class="line">    THREAD=1</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 640 -a <span class="variable">$Mem</span> -le 1280 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=1G</span><br><span class="line">    Memory_limit=128</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 1280 -a <span class="variable">$Mem</span> -le 2500 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=2G</span><br><span class="line">    Memory_limit=192</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 2500 -a <span class="variable">$Mem</span> -le 3500 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=3G</span><br><span class="line">    Memory_limit=256</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 3500 -a <span class="variable">$Mem</span> -le 4500 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=4G</span><br><span class="line">    Memory_limit=320</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 4500 -a <span class="variable">$Mem</span> -le 8000 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=6G</span><br><span class="line">    Memory_limit=384</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 8000 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=8G</span><br><span class="line">    Memory_limit=448</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 优化参数</span></span><br><span class="line">sed -i <span class="string">"s@^memory_limit.*@memory_limit = <span class="variable">$&#123;Memory_limit&#125;</span>M@"</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^output_buffering =@output_buffering = On\noutput_buffering =@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^;cgi.fix_pathinfo.*@cgi.fix_pathinfo=0@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^short_open_tag = Off@short_open_tag = On@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^expose_php = On@expose_php = Off@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^request_order.*@request_order = "CGP"@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^;date.timezone.*@date.timezone = Asia/Shanghai@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^post_max_size.*@post_max_size = 100M@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^upload_max_filesize.*@upload_max_filesize = 50M@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^max_execution_time.*@max_execution_time = 600@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^;realpath_cache_size.*@realpath_cache_size = 2M@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^disable_functions.*@disable_functions = passthru,exec,system,chroot,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,fsocket,popen@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">[ -e /usr/sbin/sendmail ] &amp;&amp; sed -i <span class="string">'s@^;sendmail_path.*@sendmail_path = /usr/sbin/sendmail -t -i@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br></pre></td></tr></table></figure><h4 id="配置php-opcache"><a href="#配置php-opcache" class="headerlink" title="配置php-opcache"></a>配置<code>php-opcache</code></h4><blockquote><p>创建配置文件</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /usr/<span class="built_in">local</span>/php/etc/php.d/02-opcache.ini</span><br><span class="line">[opcache]</span><br><span class="line">zend_extension=opcache.so</span><br><span class="line">opcache.enable=1</span><br><span class="line">opcache.enable_cli=1</span><br><span class="line">opcache.memory_consumption=<span class="variable">$&#123;Memory_limit&#125;</span></span><br><span class="line">opcache.interned_strings_buffer=8</span><br><span class="line">opcache.max_accelerated_files=100000</span><br><span class="line">opcache.max_wasted_percentage=5</span><br><span class="line">opcache.use_cwd=1</span><br><span class="line">opcache.validate_timestamps=1</span><br><span class="line">opcache.revalidate_freq=60</span><br><span class="line">opcache.save_comments=0</span><br><span class="line">opcache.fast_shutdown=1</span><br><span class="line">opcache.consistency_checks=0</span><br><span class="line">;opcache.optimization_level=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="配置php-fpm"><a href="#配置php-fpm" class="headerlink" title="配置php-fpm"></a>配置<code>php-fpm</code></h4><blockquote><p>创建服务</p></blockquote><pre><code>/bin/cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpmchmod +x /etc/init.d/php-fpmchkconfig --add php-fpmchkconfig php-fpm on</code></pre><blockquote><p>创建php-fpm配置文件</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf </span><br><span class="line">;;;;;;;;;;;;;;;;;;;;;</span><br><span class="line">; FPM Configuration ;</span><br><span class="line">;;;;;;;;;;;;;;;;;;;;;</span><br><span class="line"></span><br><span class="line">;;;;;;;;;;;;;;;;;;</span><br><span class="line">; Global Options ;</span><br><span class="line">;;;;;;;;;;;;;;;;;;</span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">pid = run/php-fpm.pid</span><br><span class="line">error_log = <span class="built_in">log</span>/php-fpm.log</span><br><span class="line">log_level = warning</span><br><span class="line"></span><br><span class="line">emergency_restart_threshold = 30</span><br><span class="line">emergency_restart_interval = 60s</span><br><span class="line">process_control_timeout = 5s</span><br><span class="line">daemonize = yes</span><br><span class="line"></span><br><span class="line">;;;;;;;;;;;;;;;;;;;;</span><br><span class="line">; Pool Definitions ;</span><br><span class="line">;;;;;;;;;;;;;;;;;;;;</span><br><span class="line"></span><br><span class="line">[<span class="variable">$&#123;run_user&#125;</span>]</span><br><span class="line">listen = /dev/shm/php-cgi.sock</span><br><span class="line">listen.backlog = -1</span><br><span class="line">listen.allowed_clients = 127.0.0.1</span><br><span class="line">listen.owner = <span class="variable">$&#123;run_user&#125;</span></span><br><span class="line">listen.group = <span class="variable">$&#123;run_user&#125;</span></span><br><span class="line">listen.mode = 0666</span><br><span class="line">user = <span class="variable">$&#123;run_user&#125;</span></span><br><span class="line">group = <span class="variable">$&#123;run_user&#125;</span></span><br><span class="line"></span><br><span class="line">pm = dynamic</span><br><span class="line">pm.max_children = 12</span><br><span class="line">pm.start_servers = 8</span><br><span class="line">pm.min_spare_servers = 6</span><br><span class="line">pm.max_spare_servers = 12</span><br><span class="line">pm.max_requests = 2048</span><br><span class="line">pm.process_idle_timeout = 10s</span><br><span class="line">request_terminate_timeout = 120</span><br><span class="line">request_slowlog_timeout = 0</span><br><span class="line"></span><br><span class="line">pm.status_path = /php-fpm_status</span><br><span class="line">slowlog = <span class="built_in">log</span>/slow.log</span><br><span class="line">rlimit_files = 51200</span><br><span class="line">rlimit_core = 0</span><br><span class="line"></span><br><span class="line">catch_workers_output = yes</span><br><span class="line">;env[HOSTNAME] = <span class="variable">$HOSTNAME</span></span><br><span class="line">env[PATH] = /usr/<span class="built_in">local</span>/bin:/usr/bin:/bin</span><br><span class="line">env[TMP] = /tmp</span><br><span class="line">env[TMPDIR] = /tmp</span><br><span class="line">env[TEMP] = /tmp</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p><code>php-fpm</code>优化</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="variable">$Mem</span> -le 3000 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">"s@^pm.max_children.*@pm.max_children = <span class="variable">$(($Mem/3/20)</span>)@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.start_servers.*@pm.start_servers = <span class="variable">$(($Mem/3/30)</span>)@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.min_spare_servers.*@pm.min_spare_servers = <span class="variable">$(($Mem/3/40)</span>)@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.max_spare_servers.*@pm.max_spare_servers = <span class="variable">$(($Mem/3/20)</span>)@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 3000 -a <span class="variable">$Mem</span> -le 4500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">"s@^pm.max_children.*@pm.max_children = 50@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.start_servers.*@pm.start_servers = 30@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.min_spare_servers.*@pm.min_spare_servers = 20@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.max_spare_servers.*@pm.max_spare_servers = 50@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 4500 -a <span class="variable">$Mem</span> -le 6500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">"s@^pm.max_children.*@pm.max_children = 60@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.start_servers.*@pm.start_servers = 40@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.min_spare_servers.*@pm.min_spare_servers = 30@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.max_spare_servers.*@pm.max_spare_servers = 60@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 6500 -a <span class="variable">$Mem</span> -le 8500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">"s@^pm.max_children.*@pm.max_children = 70@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.start_servers.*@pm.start_servers = 50@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.min_spare_servers.*@pm.min_spare_servers = 40@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.max_spare_servers.*@pm.max_spare_servers = 70@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 8500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">"s@^pm.max_children.*@pm.max_children = 80@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.start_servers.*@pm.start_servers = 60@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.min_spare_servers.*@pm.min_spare_servers = 50@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.max_spare_servers.*@pm.max_spare_servers = 80@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><h4 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h4><pre><code># 创建运行用户run_user=wwwid -u ${run_user} &gt;/dev/null 2&gt;&amp;1[ $? -ne 0 ] &amp;&amp; useradd -M -s /sbin/nologin ${run_user}# 创建数据目录,权限mkdir -p /data/wwwlogs/chmod 640 /data/wwwlogs/mkdir -p /data/wwwroot/default/chmod 640 /data/wwwroot/default/ -Rchown www.www /data/wwwroot/default/ -R</code></pre><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://mirrors.sohu.com/nginx/nginx-1.14.0.tar.gz</span><br><span class="line">tar -zxvf nginx-1.14.0.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/nginx-1.14.0</span><br><span class="line"><span class="comment"># close debug</span></span><br><span class="line">sed -i <span class="string">'s@CFLAGS="$CFLAGS -g"@#CFLAGS="$CFLAGS -g"@'</span> auto/cc/gcc</span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=/usr/<span class="built_in">local</span>/jemalloc/lib</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx --user=<span class="variable">$&#123;run_user&#125;</span> --group=<span class="variable">$&#123;run_user&#125;</span> --with-pcre=/usr/<span class="built_in">local</span>/src/pcre-8.42 \</span><br><span class="line">    --with-pcre-jit --with-zlib=/usr/<span class="built_in">local</span>/src/zlib-1.2.11/ --with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1.1.0h \</span><br><span class="line">    --with-perl=/bin/perl --with-http_flv_module --with-http_mp4_module --with-http_gzip_static_module \</span><br><span class="line">    --with-http_gunzip_module --with-http_auth_request_module --with-http_ssl_module --with-http_v2_module\</span><br><span class="line">    --with-http_stub_status_module --with-http_realip_module --with-ld-opt=<span class="string">'-ljemalloc'</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"s@^export PATH=\(.*\)@export PATH=/usr/local/nginx/sbin:\1@"</span> /etc/profile</span><br><span class="line">. /etc/profile</span><br></pre></td></tr></table></figure><h4 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/init.d/nginx</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># nginx - this script starts and stops the nginx daemon</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># chkconfig:   - 85 15</span></span><br><span class="line"><span class="comment"># description:  NGINX is an HTTP(S) server, HTTP(S) reverse \</span></span><br><span class="line"><span class="comment">#               proxy and IMAP/POP3 proxy server</span></span><br><span class="line"><span class="comment"># processname: nginx</span></span><br><span class="line"><span class="comment"># config:      /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="comment"># config:      /etc/sysconfig/nginx</span></span><br><span class="line"><span class="comment"># pidfile:     /var/run/nginx.pid</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source function library.</span></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that networking is up.</span></span><br><span class="line">[ <span class="string">"<span class="variable">$NETWORKING</span>"</span> = <span class="string">"no"</span> ] &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line">nginx=<span class="string">"/usr/local/nginx/sbin/nginx"</span></span><br><span class="line">prog=$(basename <span class="variable">$nginx</span>)</span><br><span class="line"></span><br><span class="line">NGINX_CONF_FILE=<span class="string">"/usr/local/nginx/conf/nginx.conf"</span></span><br><span class="line"></span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span><br><span class="line"></span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">make_dirs</span></span>() &#123;</span><br><span class="line">  <span class="comment"># make required directories</span></span><br><span class="line">  user=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">"configure arguments:.*--user="</span> | sed <span class="string">'s/[^*]*--user=\([^ ]*\).*/\1/g'</span> -`</span><br><span class="line">  <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$user</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">"`grep <span class="variable">$user</span> /etc/passwd`"</span> ]; <span class="keyword">then</span></span><br><span class="line">      useradd -M -s /bin/nologin <span class="variable">$user</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    options=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">'configure arguments:'</span>`</span><br><span class="line">    <span class="keyword">for</span> opt <span class="keyword">in</span> <span class="variable">$options</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ `<span class="built_in">echo</span> <span class="variable">$opt</span> | grep <span class="string">'.*-temp-path'</span>` ]; <span class="keyword">then</span></span><br><span class="line">          value=`<span class="built_in">echo</span> <span class="variable">$opt</span> | cut -d <span class="string">"="</span> -f 2`</span><br><span class="line">          <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$value</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="comment"># echo "creating" $value</span></span><br><span class="line">            mkdir -p <span class="variable">$value</span> &amp;&amp; chown -R <span class="variable">$user</span> <span class="variable">$value</span></span><br><span class="line">          <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">  [ -x <span class="variable">$nginx</span> ] || <span class="built_in">exit</span> 5</span><br><span class="line">  [ -f <span class="variable">$NGINX_CONF_FILE</span> ] || <span class="built_in">exit</span> 6</span><br><span class="line">  make_dirs</span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span></span><br><span class="line">  daemon <span class="variable">$nginx</span> -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">  retval=$?</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; touch <span class="variable">$lockfile</span></span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span></span><br><span class="line">  killproc <span class="variable">$prog</span> -QUIT</span><br><span class="line">  retval=$?</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; rm -f <span class="variable">$lockfile</span></span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">restart</span></span>() &#123;</span><br><span class="line">  configtest || <span class="built_in">return</span> $?</span><br><span class="line">  stop</span><br><span class="line">  sleep 1</span><br><span class="line">  start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line">  configtest || <span class="built_in">return</span> $?</span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span></span><br><span class="line">  killproc <span class="variable">$nginx</span> -HUP</span><br><span class="line">  RETVAL=$?</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">force_reload</span></span>() &#123;</span><br><span class="line">  restart</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">configtest</span></span>() &#123;</span><br><span class="line">  <span class="variable">$nginx</span> -t -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rh_status</span></span>() &#123;</span><br><span class="line">  status <span class="variable">$prog</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rh_status_q</span></span>() &#123;</span><br><span class="line">  rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">    rh_status_q &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line">    <span class="variable">$1</span></span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">    <span class="variable">$1</span></span><br><span class="line">    ;;</span><br><span class="line">  restart|configtest)</span><br><span class="line">    <span class="variable">$1</span></span><br><span class="line">    ;;</span><br><span class="line">  reload)</span><br><span class="line">    rh_status_q || <span class="built_in">exit</span> 7</span><br><span class="line">    <span class="variable">$1</span></span><br><span class="line">    ;;</span><br><span class="line">  force-reload)</span><br><span class="line">    force_reload</span><br><span class="line">    ;;</span><br><span class="line">  status)</span><br><span class="line">    rh_status</span><br><span class="line">    ;;</span><br><span class="line">  condrestart|try-restart)</span><br><span class="line">    rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|reload|configtest&#125;"</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chmod +x /etc/init.d/nginx</span><br><span class="line">chkconfig --add nginx</span><br><span class="line">chkconfig nginx on</span><br><span class="line">sed -i <span class="string">"s@/usr/local/nginx@/usr/local/nginx@g"</span> /etc/init.d/nginx</span><br></pre></td></tr></table></figure><h4 id="nginx配置文件"><a href="#nginx配置文件" class="headerlink" title="nginx配置文件"></a>nginx配置文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">user www www;</span><br><span class="line">worker_processes auto;</span><br><span class="line"></span><br><span class="line">error_log /data/wwwlogs/error_nginx.log crit;</span><br><span class="line">pid /var/run/nginx.pid;</span><br><span class="line">worker_rlimit_nofile 51200;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">  use epoll;</span><br><span class="line">  worker_connections 51200;</span><br><span class="line">  multi_accept on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">  include mime.types;</span><br><span class="line">  default_type application/octet-stream;</span><br><span class="line">  server_names_hash_bucket_size 128;</span><br><span class="line">  client_header_buffer_size 32k;</span><br><span class="line">  large_client_header_buffers 4 32k;</span><br><span class="line">  client_max_body_size 1024m;</span><br><span class="line">  client_body_buffer_size 10m;</span><br><span class="line">  sendfile on;</span><br><span class="line">  tcp_nopush on;</span><br><span class="line">  keepalive_timeout 120;</span><br><span class="line">  server_tokens off;</span><br><span class="line">  tcp_nodelay on;</span><br><span class="line"></span><br><span class="line">  fastcgi_connect_timeout 300;</span><br><span class="line">  fastcgi_send_timeout 300;</span><br><span class="line">  fastcgi_read_timeout 300;</span><br><span class="line">  fastcgi_buffer_size 64k;</span><br><span class="line">  fastcgi_buffers 4 64k;</span><br><span class="line">  fastcgi_busy_buffers_size 128k;</span><br><span class="line">  fastcgi_temp_file_write_size 128k;</span><br><span class="line">  fastcgi_intercept_errors on;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#Gzip Compression</span></span><br><span class="line">  gzip on;</span><br><span class="line">  gzip_buffers 16 8k;</span><br><span class="line">  gzip_comp_level 6;</span><br><span class="line">  gzip_http_version 1.1;</span><br><span class="line">  gzip_min_length 256;</span><br><span class="line">  gzip_proxied any;</span><br><span class="line">  gzip_vary on;</span><br><span class="line">  gzip_types</span><br><span class="line">    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml</span><br><span class="line">    text/javascript application/javascript application/x-javascript</span><br><span class="line">    text/x-json application/json application/x-web-app-manifest+json</span><br><span class="line">    text/css text/plain text/x-component</span><br><span class="line">    font/opentype application/x-font-ttf application/vnd.ms-fontobject</span><br><span class="line">    image/x-icon;</span><br><span class="line">  gzip_disable <span class="string">"MSIE [1-6]\.(?!.*SV1)"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.</span></span><br><span class="line">  open_file_cache max=1000 inactive=20s;</span><br><span class="line">  open_file_cache_valid 30s;</span><br><span class="line">  open_file_cache_min_uses 2;</span><br><span class="line">  open_file_cache_errors on;</span><br><span class="line"></span><br><span class="line"><span class="comment">######################## default ############################</span></span><br><span class="line">  server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name _;</span><br><span class="line">    access_log /data/wwwlogs/access_nginx.log combined;</span><br><span class="line">    root /data/wwwroot/default;</span><br><span class="line">    index index.html index.htm index.php;</span><br><span class="line">    <span class="comment">#error_page 404 /404.html;</span></span><br><span class="line">    <span class="comment">#error_page 502 /502.html;</span></span><br><span class="line">    location /nginx_status &#123;</span><br><span class="line">      stub_status on;</span><br><span class="line">      access_log off;</span><br><span class="line">      allow 127.0.0.1;</span><br><span class="line">      deny all;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ [^/]\.php(/|$) &#123;</span><br><span class="line">      <span class="comment">#fastcgi_pass remote_php_ip:9000;</span></span><br><span class="line">      fastcgi_pass unix:/dev/shm/php-cgi.sock;</span><br><span class="line">      fastcgi_index index.php;</span><br><span class="line">      include fastcgi.conf;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ &#123;</span><br><span class="line">      expires 30d;</span><br><span class="line">      access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(js|css)?$ &#123;</span><br><span class="line">      expires 7d;</span><br><span class="line">      access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ /\.ht &#123;</span><br><span class="line">      deny all;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">########################## vhost #############################</span></span><br><span class="line">  include vhost/*.conf;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"s@/data/wwwroot/default@/data/wwwroot/default@"</span> /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">sed -i <span class="string">"s@/data/wwwlogs@/data/wwwlogs@g"</span> /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">sed -i <span class="string">"s@^user www www@user <span class="variable">$&#123;run_user&#125;</span> <span class="variable">$&#123;run_user&#125;</span>@"</span> /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><h4 id="nginx-proxy"><a href="#nginx-proxy" class="headerlink" title="nginx-proxy"></a>nginx-proxy</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/<span class="built_in">local</span>/nginx/conf/proxy.conf &lt;&lt; EOF</span><br><span class="line">proxy_connect_timeout 300s;</span><br><span class="line">proxy_send_timeout 900;</span><br><span class="line">proxy_read_timeout 900;</span><br><span class="line">proxy_buffer_size 32k;</span><br><span class="line">proxy_buffers 4 64k;</span><br><span class="line">proxy_busy_buffers_size 128k;</span><br><span class="line">proxy_redirect off;</span><br><span class="line">proxy_hide_header Vary;</span><br><span class="line">proxy_set_header Accept-Encoding <span class="string">''</span>;</span><br><span class="line">proxy_set_header Referer \<span class="variable">$http_referer</span>;</span><br><span class="line">proxy_set_header Cookie \<span class="variable">$http_cookie</span>;</span><br><span class="line">proxy_set_header Host \<span class="variable">$host</span>;</span><br><span class="line">proxy_set_header X-Real-IP \<span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For \<span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_set_header X-Forwarded-Proto \<span class="variable">$scheme</span>;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="nginx-log"><a href="#nginx-log" class="headerlink" title="nginx-log"></a>nginx-log</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/logrotate.d/nginx &lt;&lt; EOF</span><br><span class="line">/data/wwwlogs/*nginx.log &#123;</span><br><span class="line">    daily</span><br><span class="line">    rotate 5</span><br><span class="line">    missingok</span><br><span class="line">    dateext</span><br><span class="line">    compress</span><br><span class="line">    notifempty</span><br><span class="line">    sharedscripts</span><br><span class="line">    postrotate</span><br><span class="line">        [ -e /var/run/nginx.pid ] &amp;&amp; <span class="built_in">kill</span> -USR1 \`cat /var/run/nginx.pid\`</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="安装探针"><a href="#安装探针" class="headerlink" title="安装探针"></a>安装探针</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://mirrors.linuxeye.com/oneinstack/src/tz.zip</span><br><span class="line">unzip tz.zip -d /data/wwwroot/default</span><br><span class="line">wget -O /data/wwwroot/default/index.php https://api.inn-studio.com/download?id=xprober</span><br></pre></td></tr></table></figure><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><ul><li>注意：如果使用<code>service</code>方式启动服务则只能以<code>service</code>方式查看,关闭或重启服务</li><li>如果使用<code>systemctl</code>方式启动服务则只能以<code>systemctl</code>方式查看,关闭或重启服务</li></ul><blockquote><p>service</p></blockquote><pre><code>service php-fpm stopservice php-fpm startservice php-fpm statusservice php-fpm restartservice nginx stopservice nginx startservice nginx statusservice nginx restart</code></pre><blockquote><p>systemctl</p></blockquote><pre><code>systemctl stop php-fpmsystemctl start php-fpmsystemctl status php-fpmsystemctl restart php-fpmsystemctl stop nginxsystemctl start nginxsystemctl status nginxsystemctl restart nginx</code></pre><h3 id="一键安装脚本"><a href="#一键安装脚本" class="headerlink" title="一键安装脚本"></a>一键安装脚本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># 初始化安装环境</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> gcc gcc-c++ vim wget ntpdate lrzsz python-devel patch unzip autoconf bzip2-devel; <span class="keyword">do</span> yum -y install <span class="variable">$i</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#yum -y install gcc gcc-c++ vim wget ntpdate lrzsz python-devel patch unzip autoconf bzip2 bzip2-devel</span></span><br><span class="line">mkdir /soft</span><br><span class="line"></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">'s/SELINUX=.*/SELINUX=disabled/'</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line">rm -f /etc/localtime</span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line">ntpdate ntp.aliyun.com &amp;&amp; hwclock -w</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"*/20 * * * * <span class="variable">$(which ntpdate)</span> pool.ntp.org &gt; /dev/null 2&gt;&amp;1 &amp;&amp; <span class="variable">$(which hwclock)</span> -w"</span> &gt;&gt; /var/spool/cron/root</span><br><span class="line">chmod 600 /var/spool/cron/root</span><br><span class="line"></span><br><span class="line">startime=$(date +<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># 系统 优化</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">yum -y update bash glibc</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/profile.d/oneinstack.sh </span><br><span class="line">HISTSIZE=10000</span><br><span class="line">PS1=<span class="string">"\[\e[37;40m\][\[\e[32;40m\]\u\[\e[37;40m\]@\h \[\e[35;40m\]\W\[\e[0m\]]\\\\$ "</span></span><br><span class="line">HISTTIMEFORMAT=<span class="string">"%F %T \$(whoami) "</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> l=<span class="string">'ls -AFhlt'</span></span><br><span class="line"><span class="built_in">alias</span> lh=<span class="string">'l | head'</span></span><br><span class="line"><span class="built_in">alias</span> vi=vim</span><br><span class="line"></span><br><span class="line">GREP_OPTIONS=<span class="string">"--color=auto"</span></span><br><span class="line"><span class="built_in">alias</span> grep=<span class="string">'grep --color'</span></span><br><span class="line"><span class="built_in">alias</span> egrep=<span class="string">'egrep --color'</span></span><br><span class="line"><span class="built_in">alias</span> fgrep=<span class="string">'fgrep --color'</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[ -z <span class="string">"<span class="variable">$(grep ^'PROMPT_COMMAND=' /etc/bashrc)</span>"</span> ] &amp;&amp; cat &lt;&lt;EOF  &gt;&gt;/etc/bashrc </span><br><span class="line">PROMPT_COMMAND=<span class="string">'&#123; msg=\$(history 1 | &#123; read x y; echo \$y; &#125;);logger "[euid=\$(whoami)]":\$(who am i):[\`pwd\`]"\$msg"; &#125;'</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/security/limits.conf</span></span><br><span class="line">[ -e /etc/security/limits.d/*nproc.conf ] &amp;&amp; rename nproc.conf nproc.conf_bk /etc/security/limits.d/*nproc.conf</span><br><span class="line">sed -i <span class="string">'/^# End of file/,$d'</span> /etc/security/limits.conf</span><br><span class="line">cat &gt;&gt; /etc/security/limits.conf &lt;&lt;EOF</span><br><span class="line"><span class="comment"># End of file</span></span><br><span class="line">* soft nproc 1000000</span><br><span class="line">* hard nproc 1000000</span><br><span class="line">* soft nofile 1000000</span><br><span class="line">* hard nofile 1000000</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/hosts</span></span><br><span class="line">[ <span class="string">"<span class="variable">$(hostname -i | awk '&#123;print $1&#125;')</span>"</span> != <span class="string">"127.0.0.1"</span> ] &amp;&amp; sed -i <span class="string">"s@127.0.0.1.*localhost@&amp;\n127.0.0.1 <span class="variable">$(hostname)</span>@g"</span> /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># ip_conntrack table full dropping packets</span></span><br><span class="line">[ ! -e <span class="string">"/etc/sysconfig/modules/iptables.modules"</span> ] &amp;&amp; &#123; <span class="built_in">echo</span> -e <span class="string">"modprobe nf_conntrack\nmodprobe nf_conntrack_ipv4"</span> &gt; /etc/sysconfig/modules/iptables.modules; chmod +x /etc/sysconfig/modules/iptables.modules; &#125;</span><br><span class="line">modprobe nf_conntrack</span><br><span class="line">modprobe nf_conntrack_ipv4</span><br><span class="line"><span class="built_in">echo</span> options nf_conntrack hashsize=131072 &gt; /etc/modprobe.d/nf_conntrack.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/sysctl.conf</span></span><br><span class="line">[ ! -e <span class="string">"/etc/sysctl.conf_bk"</span> ] &amp;&amp; /bin/mv /etc/sysctl.conf&#123;,_bk&#125;</span><br><span class="line">cat &gt; /etc/sysctl.conf &lt;&lt; EOF</span><br><span class="line">fs.file-max=1000000</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 6000</span><br><span class="line">net.ipv4.tcp_sack = 1</span><br><span class="line">net.ipv4.tcp_window_scaling = 1</span><br><span class="line">net.ipv4.tcp_rmem = 4096 87380 4194304</span><br><span class="line">net.ipv4.tcp_wmem = 4096 16384 4194304</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line">net.core.netdev_max_backlog = 32768</span><br><span class="line">net.core.somaxconn = 32768</span><br><span class="line">net.core.wmem_default = 8388608</span><br><span class="line">net.core.rmem_default = 8388608</span><br><span class="line">net.core.rmem_max = 16777216</span><br><span class="line">net.core.wmem_max = 16777216</span><br><span class="line">net.ipv4.tcp_timestamps = 1</span><br><span class="line">net.ipv4.tcp_fin_timeout = 20</span><br><span class="line">net.ipv4.tcp_synack_retries = 2</span><br><span class="line">net.ipv4.tcp_syn_retries = 2</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line"><span class="comment">#net.ipv4.tcp_tw_len = 1</span></span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_mem = 94500000 915000000 927000000</span><br><span class="line">net.ipv4.tcp_max_orphans = 3276800</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65000</span><br><span class="line">net.nf_conntrack_max = 6553500</span><br><span class="line">net.netfilter.nf_conntrack_max = 6553500</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_established = 3600</span><br><span class="line">EOF</span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s@LANG=.*$@LANG="en_US.UTF-8"@g'</span> /etc/locale.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Zlib Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://www.zlib.net/zlib-1.2.11.tar.gz</span><br><span class="line">tar xvf zlib-1.2.11.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/zlib-1.2.11/</span><br><span class="line">CFLAGS=<span class="string">"-O3 -fPIC"</span> ./configure --prefix=/usr/<span class="built_in">local</span>/zlib  --shared</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">export</span> C_INCLUDE_PATH=/usr/<span class="built_in">local</span>/zlib/include</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/zlib/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Openssl Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://www.openssl.org/<span class="built_in">source</span>/openssl-1.1.0h.tar.gz</span><br><span class="line">tar xvf openssl-1.1.0h.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/openssl-1.1.0h/</span><br><span class="line">./config -fPIC --prefix=/usr/<span class="built_in">local</span>/openssl zlib-dynamic shared \</span><br><span class="line">--openssldir=/usr/<span class="built_in">local</span>/openssl</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">wget -O /usr/<span class="built_in">local</span>/openssl/cacert.pem http://curl.haxx.se/ca/cacert.pem</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/openssl/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libssl.so</span><br><span class="line">ldconfig -v | grep libcrypto.so</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># C-ares Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget https://c-ares.haxx.se/download/c-ares-1.14.0.tar.gz</span><br><span class="line">tar xvf c-ares-1.14.0.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/c-ares-1.14.0/</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/c-ares --<span class="built_in">disable</span>-static</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/c-ares/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libcares.so</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Curl Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://curl.haxx.se/download/curl-7.59.0.tar.gz</span><br><span class="line">tar xvf curl-7.59.0.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/curl-7.59.0</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/curl --<span class="built_in">disable</span>-static \</span><br><span class="line">    --<span class="built_in">enable</span>-threaded-resolver --<span class="built_in">enable</span>-ares=/usr/<span class="built_in">local</span>/c-ares \</span><br><span class="line">    --without-nss --with-ssl=/usr/<span class="built_in">local</span>/openssl --with-zlib=/usr/<span class="built_in">local</span>/zlib</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/curl/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libcurl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Pycurl Install (修复yum命令异常)</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://dl.bintray.com/pycurl/pycurl/pycurl-7.43.0.1.tar.gz</span><br><span class="line">tar xvf pycurl-7.43.0.1.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/pycurl-7.43.0.1/</span><br><span class="line">python setup.py install --curl-config=/usr/<span class="built_in">local</span>/curl/bin/curl-config \</span><br><span class="line">--with-openssl --openssl-dir=/usr/<span class="built_in">local</span>/openssl</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/curl/bin/curl-config /usr/<span class="built_in">local</span>/bin/curl-config</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Libiconv Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c ftp.gnu.org/pub/gnu/libiconv/libiconv-1.15.tar.gz</span><br><span class="line">tar xvf libiconv-1.15.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libiconv-1.15/</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libiconv</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libiconv/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libiconv</span><br><span class="line">ldconfig -v | grep libcharset</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Libmcrypt Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://jaist.dl.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz</span><br><span class="line">tar xvf libmcrypt-2.5.8.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libmcrypt-2.5.8</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libmcrypt</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">cd</span> libltdl</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libltdl --<span class="built_in">enable</span>-ltdl-install</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libmcrypt/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libltdl/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libmcrypt</span><br><span class="line">ldconfig -v | grep libltdl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Mhash Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://jaist.dl.sourceforge.net/project/mhash/mhash/0.9.9.9/mhash-0.9.9.9.tar.gz</span><br><span class="line">tar xvf mhash-0.9.9.9.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/mhash-0.9.9.9/</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/mhash</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/mhash/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libmhash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Mcrypt Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://sourceforge.net/projects/mcrypt/files/MCrypt/2.6.8/mcrypt-2.6.8.tar.gz</span><br><span class="line">tar xvf mcrypt-2.6.8.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/mcrypt-2.6.8</span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=/usr/<span class="built_in">local</span>/mhash/lib</span><br><span class="line"><span class="built_in">export</span> C_INCLUDE_PATH=/usr/<span class="built_in">local</span>/mhash/include</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/libmcrypt/bin/libmcrypt-config /usr/<span class="built_in">local</span>/bin/libmcrypt-config</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/mcrypt --with-libmcrypt-prefix=/usr/<span class="built_in">local</span>/libmcrypt \</span><br><span class="line">    --with-libiconv-prefix=/usr/<span class="built_in">local</span>/libiconv</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># ICU Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://download.icu-project.org/files/icu4c/60rc/icu4c-60rc-src.tgz</span><br><span class="line">tar xvf icu4c-60rc-src.tgz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/icu/<span class="built_in">source</span>/</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/icu4c</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/icu4c/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libicu</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Lbxml2 Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://distfiles.macports.org/libxml2/libxml2-2.9.7.tar.gz</span><br><span class="line">tar xvf libxml2-2.9.7.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libxml2-2.9.7</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libxml2 --<span class="built_in">disable</span>-static --with-history --with-sax1 \</span><br><span class="line">    --with-zlib=/usr/<span class="built_in">local</span>/zlib --with-http --with-python=/usr/bin/python --with-iconv=/usr/<span class="built_in">local</span>/libiconv</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/libxml2/bin/xml2-config /usr/<span class="built_in">local</span>/bin/xml2-config</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libxml2/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libxml2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Libxslt Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://distfiles.macports.org/libxslt/libxslt-1.1.32.tar.gz</span><br><span class="line">tar xvf libxslt-1.1.32.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libxslt-1.1.32</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libxslt --<span class="built_in">disable</span>-static --with-python=/usr/bin/python \</span><br><span class="line">    --with-libxml-prefix=/usr/<span class="built_in">local</span>/libxml2</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/libxslt/bin/xslt-config /usr/<span class="built_in">local</span>/bin/xslt-config</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libxslt/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libxslt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Libjpeg Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://distfiles.macports.org/jpeg/jpegsrc.v9c.tar.gz</span><br><span class="line">tar xvf jpegsrc.v9c.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/jpeg-9c</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libjpeg --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-static</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libjpeg/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libjpeg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Libpng Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://distfiles.macports.org/libpng/libpng-1.6.34.tar.xz</span><br><span class="line">tar xvf libpng-1.6.34.tar.xz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libpng-1.6.34</span><br><span class="line">wget -c https://downloads.sourceforge.net/sourceforge/libpng-apng/libpng-1.6.34-apng.patch.gz</span><br><span class="line">gzip -d libpng-1.6.34-apng.patch.gz</span><br><span class="line">patch -d . -p1 &lt; libpng-1.6.34-apng.patch</span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=/usr/<span class="built_in">local</span>/zlib/lib</span><br><span class="line"><span class="built_in">export</span> C_INCLUDE_PATH=/usr/<span class="built_in">local</span>/zlib/include</span><br><span class="line">LIBS=-lpthread ./configure --prefix=/usr/<span class="built_in">local</span>/libpng --<span class="built_in">disable</span>-static --with-zlib-prefix=/usr/<span class="built_in">local</span>/zlib</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/libpng/bin/libpng-config /usr/<span class="built_in">local</span>/bin/libpng-config</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libpng/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libpng</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Libwebp Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://downloads.webmproject.org/releases/webp/libwebp-1.0.0.tar.gz</span><br><span class="line">tar xvf libwebp-1.0.0.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libwebp-1.0.0/</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libwebp --<span class="built_in">enable</span>-libwebpmux --<span class="built_in">enable</span>-libwebpdemux \</span><br><span class="line">    --<span class="built_in">enable</span>-libwebpdecoder --<span class="built_in">enable</span>-libwebpextras --<span class="built_in">enable</span>-swap-16bit-csp --<span class="built_in">disable</span>-static \</span><br><span class="line">    --with-jpeglibdir=/usr/<span class="built_in">local</span>/libjpeg/lib --with-jpegincludedir=/usr/<span class="built_in">local</span>/libjpeg/include \</span><br><span class="line">    --with-pnglibdir=/usr/<span class="built_in">local</span>/libpng/lib --with-pngincludedir=/usr/<span class="built_in">local</span>/libpng/include</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libwebp/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libwebp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Freetype Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://download.savannah.gnu.org/releases/freetype/freetype-2.9.tar.gz</span><br><span class="line">tar xvf freetype-2.9.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/freetype-2.9/</span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=/usr/<span class="built_in">local</span>/zlib/lib</span><br><span class="line"><span class="built_in">export</span> C_INCLUDE_PATH=/usr/<span class="built_in">local</span>/zlib/include</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/freetype2  --<span class="built_in">disable</span>-static --with-zlib=yes --with-png=yes --with-bzip2=yes</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/freetype2/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libfreetype</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/freetype2/include/freetype2/freetype/ /usr/<span class="built_in">local</span>/freetype2/include/freetype</span><br><span class="line">ln -sf /usr/<span class="built_in">local</span>/freetype2/include/freetype2/ft2build.h /usr/<span class="built_in">local</span>/freetype2/include/ft2build.h</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># LibXpm Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">yum -y install libX11-devel</span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://www.x.org/archive//individual/lib/libXpm-3.5.12.tar.gz</span><br><span class="line">tar xvf libXpm-3.5.12.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libXpm-3.5.12/</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libXpm</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libXpm/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libXpm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Libgd Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://github.com/libgd/libgd/releases/download/gd-2.2.5/libgd-2.2.5.tar.gz</span><br><span class="line">tar xvf libgd-2.2.5.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/libgd-2.2.5/</span><br><span class="line"><span class="built_in">export</span> LIBS=<span class="string">"-L/usr/local/freetype2/lib -lfreetype"</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/libgd --with-png=/usr/<span class="built_in">local</span>/libpng \</span><br><span class="line">    --with-webp=/usr/<span class="built_in">local</span>/libwebp --with-freetype=/usr/<span class="built_in">local</span>/freetype2 \</span><br><span class="line">    --with-png=/usr/<span class="built_in">local</span>/libpng --with-xpm=/usr/<span class="built_in">local</span>/libXpm  \</span><br><span class="line">    --with-jpeg=/usr/<span class="built_in">local</span>/libjpeg --with-webp=/usr/<span class="built_in">local</span>/libwebp \</span><br><span class="line">    --with-libiconv-prefix=/usr/<span class="built_in">local</span>/libiconv --with-zlib=/usr/<span class="built_in">local</span>/zlib</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/libgd/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep libgd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Pcre Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://ftp.pcre.org/pub/pcre/pcre-8.42.tar.gz</span><br><span class="line">tar -xvf pcre-8.42.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/pcre-8.42</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/pcre --<span class="built_in">enable</span>-utf --<span class="built_in">enable</span>-pcregrep-libz=/usr/<span class="built_in">local</span>/zlib --<span class="built_in">enable</span>-pcregrep-libbz2 --<span class="built_in">enable</span>-jit --<span class="built_in">enable</span>-pcre16 --<span class="built_in">enable</span>-pcre32 --<span class="built_in">enable</span>-unicode-properties</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/pcre/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Jemalloc Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c https://github.com/jemalloc/jemalloc/releases/download/5.0.1/jemalloc-5.0.1.tar.bz2</span><br><span class="line">tar xvf jemalloc-5.0.1.tar.bz2 -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/jemalloc-5.0.1/</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/jemalloc</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/jemalloc/lib/libjemalloc.so.2 /usr/lib64/libjemalloc.so.1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/jemalloc/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># PHP Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">run_user=www</span><br><span class="line">useradd -M -s /sbin/nologin <span class="variable">$&#123;run_user&#125;</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://mirrors.sohu.com/php/php-7.1.17.tar.gz</span><br><span class="line">tar xvf php-7.1.17.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/php-7.1.17/</span><br><span class="line">./buildconf --force</span><br><span class="line"><span class="built_in">export</span> C_INCLUDE_PATH=/usr/<span class="built_in">local</span>/libXpm/include:/usr/<span class="built_in">local</span>/freetype2/include</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/php --with-config-file-path=/usr/<span class="built_in">local</span>/php/etc \</span><br><span class="line">    --with-config-file-scan-dir=/usr/<span class="built_in">local</span>/php/etc/php.d --with-fpm-user=<span class="variable">$&#123;run_user&#125;</span> \</span><br><span class="line">    --with-fpm-group=<span class="variable">$&#123;run_user&#125;</span> --<span class="built_in">enable</span>-fpm --<span class="built_in">enable</span>-opcache --<span class="built_in">enable</span>-fileinfo \</span><br><span class="line">    --<span class="built_in">enable</span>-mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd \</span><br><span class="line">    --with-iconv-dir=/usr/<span class="built_in">local</span>/libiconv --with-freetype-dir=/usr/<span class="built_in">local</span>/freetype2 \</span><br><span class="line">    --with-jpeg-dir=/usr/<span class="built_in">local</span>/libjpeg --with-png-dir=/usr/<span class="built_in">local</span>/libpng --with-zlib=/usr/<span class="built_in">local</span>/zlib \</span><br><span class="line">    --with-webp-dir=/usr/<span class="built_in">local</span>/libwebp --with-icu-dir=/usr/<span class="built_in">local</span>/icu4c \</span><br><span class="line">    --with-libxml-dir=/usr/<span class="built_in">local</span>/libxml2 --<span class="built_in">enable</span>-xml --<span class="built_in">disable</span>-rpath --<span class="built_in">enable</span>-bcmath \</span><br><span class="line">    --<span class="built_in">enable</span>-shmop --<span class="built_in">enable</span>-exif --<span class="built_in">enable</span>-sysvsem --<span class="built_in">enable</span>-inline-optimization \</span><br><span class="line">    --with-curl=/usr/<span class="built_in">local</span>/curl --<span class="built_in">enable</span>-mbregex --with-xpm-dir=/usr/<span class="built_in">local</span>/libXpm \</span><br><span class="line">    --<span class="built_in">enable</span>-mbstring --with-mcrypt=/usr/<span class="built_in">local</span>/libmcrypt --with-gd=/usr/<span class="built_in">local</span>/libgd \</span><br><span class="line">    --<span class="built_in">enable</span>-gd-native-ttf --with-openssl=/usr/<span class="built_in">local</span>/openssl --with-mhash=/usr/<span class="built_in">local</span>/mhash \</span><br><span class="line">    --<span class="built_in">enable</span>-pcntl --<span class="built_in">enable</span>-sockets --with-xmlrpc --<span class="built_in">enable</span>-ftp --<span class="built_in">enable</span>-intl --with-xsl=/usr/<span class="built_in">local</span>/libxslt \</span><br><span class="line">    --with-gettext --<span class="built_in">enable</span>-zip --<span class="built_in">enable</span>-soap --<span class="built_in">disable</span>-debug --with-pcre-regex --with-pcre-jit --with-pcre-dir=/usr/<span class="built_in">local</span>/pcre</span><br><span class="line">make ZEND_EXTRA_LIBS=<span class="string">'-liconv'</span> &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/local/php/lib'</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">ldconfig -v | grep php</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export PATH=/usr/local/php/bin:/usr/local/php/sbin:\$PATH"</span> &gt;&gt; /etc/profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># PHP Config</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/php/etc/php.d</span><br><span class="line">/bin/cp php.ini-production /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line"></span><br><span class="line">Mem=`free -m | awk <span class="string">'/Mem:/&#123;print $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$Mem</span> -le 640 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=512M</span><br><span class="line">    Memory_limit=64</span><br><span class="line">    THREAD=1</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 640 -a <span class="variable">$Mem</span> -le 1280 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=1G</span><br><span class="line">    Memory_limit=128</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 1280 -a <span class="variable">$Mem</span> -le 2500 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=2G</span><br><span class="line">    Memory_limit=192</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 2500 -a <span class="variable">$Mem</span> -le 3500 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=3G</span><br><span class="line">    Memory_limit=256</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 3500 -a <span class="variable">$Mem</span> -le 4500 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=4G</span><br><span class="line">    Memory_limit=320</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 4500 -a <span class="variable">$Mem</span> -le 8000 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=6G</span><br><span class="line">    Memory_limit=384</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 8000 ]; <span class="keyword">then</span></span><br><span class="line">    Mem_level=8G</span><br><span class="line">    Memory_limit=448</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"s@^memory_limit.*@memory_limit = <span class="variable">$&#123;Memory_limit&#125;</span>M@"</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^output_buffering =@output_buffering = On\noutput_buffering =@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^;cgi.fix_pathinfo.*@cgi.fix_pathinfo=0@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^short_open_tag = Off@short_open_tag = On@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^expose_php = On@expose_php = Off@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^request_order.*@request_order = "CGP"@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^;date.timezone.*@date.timezone = Asia/Shanghai@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^post_max_size.*@post_max_size = 100M@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^upload_max_filesize.*@upload_max_filesize = 50M@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^max_execution_time.*@max_execution_time = 600@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^;realpath_cache_size.*@realpath_cache_size = 2M@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">sed -i <span class="string">'s@^disable_functions.*@disable_functions = passthru,exec,system,chroot,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,fsocket,popen@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line">[ -e /usr/sbin/sendmail ] &amp;&amp; sed -i <span class="string">'s@^;sendmail_path.*@sendmail_path = /usr/sbin/sendmail -t -i@'</span> /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># PHP Opcache</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /usr/<span class="built_in">local</span>/php/etc/php.d/02-opcache.ini</span><br><span class="line">[opcache]</span><br><span class="line">zend_extension=opcache.so</span><br><span class="line">opcache.enable=1</span><br><span class="line">opcache.enable_cli=1</span><br><span class="line">opcache.memory_consumption=<span class="variable">$&#123;Memory_limit&#125;</span></span><br><span class="line">opcache.interned_strings_buffer=8</span><br><span class="line">opcache.max_accelerated_files=100000</span><br><span class="line">opcache.max_wasted_percentage=5</span><br><span class="line">opcache.use_cwd=1</span><br><span class="line">opcache.validate_timestamps=1</span><br><span class="line">opcache.revalidate_freq=60</span><br><span class="line">opcache.save_comments=0</span><br><span class="line">opcache.fast_shutdown=1</span><br><span class="line">opcache.consistency_checks=0</span><br><span class="line">;opcache.optimization_level=0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># PHP Fpm Config</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">/bin/cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span><br><span class="line">chmod +x /etc/init.d/php-fpm</span><br><span class="line">chkconfig --add php-fpm</span><br><span class="line">chkconfig php-fpm on</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt; /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf </span><br><span class="line">;;;;;;;;;;;;;;;;;;;;;</span><br><span class="line">; FPM Configuration ;</span><br><span class="line">;;;;;;;;;;;;;;;;;;;;;</span><br><span class="line"></span><br><span class="line">;;;;;;;;;;;;;;;;;;</span><br><span class="line">; Global Options ;</span><br><span class="line">;;;;;;;;;;;;;;;;;;</span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">pid = run/php-fpm.pid</span><br><span class="line">error_log = <span class="built_in">log</span>/php-fpm.log</span><br><span class="line">log_level = warning</span><br><span class="line"></span><br><span class="line">emergency_restart_threshold = 30</span><br><span class="line">emergency_restart_interval = 60s</span><br><span class="line">process_control_timeout = 5s</span><br><span class="line">daemonize = yes</span><br><span class="line"></span><br><span class="line">;;;;;;;;;;;;;;;;;;;;</span><br><span class="line">; Pool Definitions ;</span><br><span class="line">;;;;;;;;;;;;;;;;;;;;</span><br><span class="line"></span><br><span class="line">[<span class="variable">$&#123;run_user&#125;</span>]</span><br><span class="line">listen = /dev/shm/php-cgi.sock</span><br><span class="line">listen.backlog = -1</span><br><span class="line">listen.allowed_clients = 127.0.0.1</span><br><span class="line">listen.owner = <span class="variable">$&#123;run_user&#125;</span></span><br><span class="line">listen.group = <span class="variable">$&#123;run_user&#125;</span></span><br><span class="line">listen.mode = 0666</span><br><span class="line">user = <span class="variable">$&#123;run_user&#125;</span></span><br><span class="line">group = <span class="variable">$&#123;run_user&#125;</span></span><br><span class="line"></span><br><span class="line">pm = dynamic</span><br><span class="line">pm.max_children = 12</span><br><span class="line">pm.start_servers = 8</span><br><span class="line">pm.min_spare_servers = 6</span><br><span class="line">pm.max_spare_servers = 12</span><br><span class="line">pm.max_requests = 2048</span><br><span class="line">pm.process_idle_timeout = 10s</span><br><span class="line">request_terminate_timeout = 120</span><br><span class="line">request_slowlog_timeout = 0</span><br><span class="line"></span><br><span class="line">pm.status_path = /php-fpm_status</span><br><span class="line">slowlog = <span class="built_in">log</span>/slow.log</span><br><span class="line">rlimit_files = 51200</span><br><span class="line">rlimit_core = 0</span><br><span class="line"></span><br><span class="line">catch_workers_output = yes</span><br><span class="line">;env[HOSTNAME] = <span class="variable">$HOSTNAME</span></span><br><span class="line">env[PATH] = /usr/<span class="built_in">local</span>/bin:/usr/bin:/bin</span><br><span class="line">env[TMP] = /tmp</span><br><span class="line">env[TMPDIR] = /tmp</span><br><span class="line">env[TEMP] = /tmp</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$Mem</span> -le 3000 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">"s@^pm.max_children.*@pm.max_children = <span class="variable">$(($Mem/3/20)</span>)@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.start_servers.*@pm.start_servers = <span class="variable">$(($Mem/3/30)</span>)@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.min_spare_servers.*@pm.min_spare_servers = <span class="variable">$(($Mem/3/40)</span>)@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.max_spare_servers.*@pm.max_spare_servers = <span class="variable">$(($Mem/3/20)</span>)@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 3000 -a <span class="variable">$Mem</span> -le 4500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">"s@^pm.max_children.*@pm.max_children = 50@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.start_servers.*@pm.start_servers = 30@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.min_spare_servers.*@pm.min_spare_servers = 20@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.max_spare_servers.*@pm.max_spare_servers = 50@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 4500 -a <span class="variable">$Mem</span> -le 6500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">"s@^pm.max_children.*@pm.max_children = 60@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.start_servers.*@pm.start_servers = 40@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.min_spare_servers.*@pm.min_spare_servers = 30@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.max_spare_servers.*@pm.max_spare_servers = 60@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 6500 -a <span class="variable">$Mem</span> -le 8500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">"s@^pm.max_children.*@pm.max_children = 70@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.start_servers.*@pm.start_servers = 50@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.min_spare_servers.*@pm.min_spare_servers = 40@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.max_spare_servers.*@pm.max_spare_servers = 70@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$Mem</span> -gt 8500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">"s@^pm.max_children.*@pm.max_children = 80@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.start_servers.*@pm.start_servers = 60@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.min_spare_servers.*@pm.min_spare_servers = 50@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line">    sed -i <span class="string">"s@^pm.max_spare_servers.*@pm.max_spare_servers = 80@"</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Nginx Install</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">run_user=www</span><br><span class="line">id -u <span class="variable">$&#123;run_user&#125;</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">[ $? -ne 0 ] &amp;&amp; useradd -M -s /sbin/nologin <span class="variable">$&#123;run_user&#125;</span></span><br><span class="line"></span><br><span class="line">mkdir -p /data/wwwlogs/</span><br><span class="line">chmod 640 /data/wwwlogs/</span><br><span class="line">mkdir -p /data/wwwroot/default/</span><br><span class="line">chmod 640 /data/wwwroot/default/ -R</span><br><span class="line">chown www.www /data/wwwroot/default/ -R</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://mirrors.sohu.com/nginx/nginx-1.14.0.tar.gz</span><br><span class="line">tar -zxvf nginx-1.14.0.tar.gz -C /usr/<span class="built_in">local</span>/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/nginx-1.14.0</span><br><span class="line"><span class="comment"># close debug</span></span><br><span class="line">sed -i <span class="string">'s@CFLAGS="$CFLAGS -g"@#CFLAGS="$CFLAGS -g"@'</span> auto/cc/gcc</span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=/usr/<span class="built_in">local</span>/jemalloc/lib</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx --user=<span class="variable">$&#123;run_user&#125;</span> --group=<span class="variable">$&#123;run_user&#125;</span> --with-pcre=/usr/<span class="built_in">local</span>/src/pcre-8.42 \</span><br><span class="line">    --with-pcre-jit --with-zlib=/usr/<span class="built_in">local</span>/src/zlib-1.2.11/ --with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1.1.0h \</span><br><span class="line">    --with-perl=/bin/perl --with-http_flv_module --with-http_mp4_module --with-http_gzip_static_module \</span><br><span class="line">    --with-http_gunzip_module --with-http_auth_request_module --with-http_ssl_module --with-http_v2_module\</span><br><span class="line">    --with-http_stub_status_module --with-http_realip_module --with-ld-opt=<span class="string">'-ljemalloc'</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"s@^export PATH=\(.*\)@export PATH=/usr/local/nginx/sbin:\1@"</span> /etc/profile</span><br><span class="line">. /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#sed -i "s@index index.html index.php;@index index.html index.php;\n    location ~ /php-fpm_status &#123;\n        #fastcgi_pass remote_php_ip:9000;\n        fastcgi_pass unix:/dev/shm/php-cgi.sock;\n        fastcgi_index index.php;\n        include fastcgi.conf;\n        allow 127.0.0.1;\n        deny all;\n        &#125;@" /usr/local/nginx/conf/nginx.conf</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Nginx Init</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/etc/init.d/nginx</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># nginx - this script starts and stops the nginx daemon</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># chkconfig:   - 85 15</span></span><br><span class="line"><span class="comment"># description:  NGINX is an HTTP(S) server, HTTP(S) reverse \</span></span><br><span class="line"><span class="comment">#               proxy and IMAP/POP3 proxy server</span></span><br><span class="line"><span class="comment"># processname: nginx</span></span><br><span class="line"><span class="comment"># config:      /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="comment"># config:      /etc/sysconfig/nginx</span></span><br><span class="line"><span class="comment"># pidfile:     /var/run/nginx.pid</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source function library.</span></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that networking is up.</span></span><br><span class="line">[ <span class="string">"<span class="variable">$NETWORKING</span>"</span> = <span class="string">"no"</span> ] &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line">nginx=<span class="string">"/usr/local/nginx/sbin/nginx"</span></span><br><span class="line">prog=$(basename <span class="variable">$nginx</span>)</span><br><span class="line"></span><br><span class="line">NGINX_CONF_FILE=<span class="string">"/usr/local/nginx/conf/nginx.conf"</span></span><br><span class="line"></span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span><br><span class="line"></span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">make_dirs</span></span>() &#123;</span><br><span class="line">  <span class="comment"># make required directories</span></span><br><span class="line">  user=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">"configure arguments:.*--user="</span> | sed <span class="string">'s/[^*]*--user=\([^ ]*\).*/\1/g'</span> -`</span><br><span class="line">  <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$user</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">"`grep <span class="variable">$user</span> /etc/passwd`"</span> ]; <span class="keyword">then</span></span><br><span class="line">      useradd -M -s /bin/nologin <span class="variable">$user</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    options=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">'configure arguments:'</span>`</span><br><span class="line">    <span class="keyword">for</span> opt <span class="keyword">in</span> <span class="variable">$options</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ `<span class="built_in">echo</span> <span class="variable">$opt</span> | grep <span class="string">'.*-temp-path'</span>` ]; <span class="keyword">then</span></span><br><span class="line">          value=`<span class="built_in">echo</span> <span class="variable">$opt</span> | cut -d <span class="string">"="</span> -f 2`</span><br><span class="line">          <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$value</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="comment"># echo "creating" $value</span></span><br><span class="line">            mkdir -p <span class="variable">$value</span> &amp;&amp; chown -R <span class="variable">$user</span> <span class="variable">$value</span></span><br><span class="line">          <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">  [ -x <span class="variable">$nginx</span> ] || <span class="built_in">exit</span> 5</span><br><span class="line">  [ -f <span class="variable">$NGINX_CONF_FILE</span> ] || <span class="built_in">exit</span> 6</span><br><span class="line">  make_dirs</span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span></span><br><span class="line">  daemon <span class="variable">$nginx</span> -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">  retval=$?</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; touch <span class="variable">$lockfile</span></span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span></span><br><span class="line">  killproc <span class="variable">$prog</span> -QUIT</span><br><span class="line">  retval=$?</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">  [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; rm -f <span class="variable">$lockfile</span></span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">restart</span></span>() &#123;</span><br><span class="line">  configtest || <span class="built_in">return</span> $?</span><br><span class="line">  stop</span><br><span class="line">  sleep 1</span><br><span class="line">  start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line">  configtest || <span class="built_in">return</span> $?</span><br><span class="line">  <span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span></span><br><span class="line">  killproc <span class="variable">$nginx</span> -HUP</span><br><span class="line">  RETVAL=$?</span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">force_reload</span></span>() &#123;</span><br><span class="line">  restart</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">configtest</span></span>() &#123;</span><br><span class="line">  <span class="variable">$nginx</span> -t -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rh_status</span></span>() &#123;</span><br><span class="line">  status <span class="variable">$prog</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rh_status_q</span></span>() &#123;</span><br><span class="line">  rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">    rh_status_q &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line">    <span class="variable">$1</span></span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">    <span class="variable">$1</span></span><br><span class="line">    ;;</span><br><span class="line">  restart|configtest)</span><br><span class="line">    <span class="variable">$1</span></span><br><span class="line">    ;;</span><br><span class="line">  reload)</span><br><span class="line">    rh_status_q || <span class="built_in">exit</span> 7</span><br><span class="line">    <span class="variable">$1</span></span><br><span class="line">    ;;</span><br><span class="line">  force-reload)</span><br><span class="line">    force_reload</span><br><span class="line">    ;;</span><br><span class="line">  status)</span><br><span class="line">    rh_status</span><br><span class="line">    ;;</span><br><span class="line">  condrestart|try-restart)</span><br><span class="line">    rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|reload|configtest&#125;"</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chmod +x /etc/init.d/nginx</span><br><span class="line">chkconfig --add nginx</span><br><span class="line">chkconfig nginx on</span><br><span class="line">sed -i <span class="string">"s@/usr/local/nginx@/usr/local/nginx@g"</span> /etc/init.d/nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Nginx Config</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">user www www;</span><br><span class="line">worker_processes auto;</span><br><span class="line"></span><br><span class="line">error_log /data/wwwlogs/error_nginx.log crit;</span><br><span class="line">pid /var/run/nginx.pid;</span><br><span class="line">worker_rlimit_nofile 51200;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">  use epoll;</span><br><span class="line">  worker_connections 51200;</span><br><span class="line">  multi_accept on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">  include mime.types;</span><br><span class="line">  default_type application/octet-stream;</span><br><span class="line">  server_names_hash_bucket_size 128;</span><br><span class="line">  client_header_buffer_size 32k;</span><br><span class="line">  large_client_header_buffers 4 32k;</span><br><span class="line">  client_max_body_size 1024m;</span><br><span class="line">  client_body_buffer_size 10m;</span><br><span class="line">  sendfile on;</span><br><span class="line">  tcp_nopush on;</span><br><span class="line">  keepalive_timeout 120;</span><br><span class="line">  server_tokens off;</span><br><span class="line">  tcp_nodelay on;</span><br><span class="line"></span><br><span class="line">  fastcgi_connect_timeout 300;</span><br><span class="line">  fastcgi_send_timeout 300;</span><br><span class="line">  fastcgi_read_timeout 300;</span><br><span class="line">  fastcgi_buffer_size 64k;</span><br><span class="line">  fastcgi_buffers 4 64k;</span><br><span class="line">  fastcgi_busy_buffers_size 128k;</span><br><span class="line">  fastcgi_temp_file_write_size 128k;</span><br><span class="line">  fastcgi_intercept_errors on;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#Gzip Compression</span></span><br><span class="line">  gzip on;</span><br><span class="line">  gzip_buffers 16 8k;</span><br><span class="line">  gzip_comp_level 6;</span><br><span class="line">  gzip_http_version 1.1;</span><br><span class="line">  gzip_min_length 256;</span><br><span class="line">  gzip_proxied any;</span><br><span class="line">  gzip_vary on;</span><br><span class="line">  gzip_types</span><br><span class="line">    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml</span><br><span class="line">    text/javascript application/javascript application/x-javascript</span><br><span class="line">    text/x-json application/json application/x-web-app-manifest+json</span><br><span class="line">    text/css text/plain text/x-component</span><br><span class="line">    font/opentype application/x-font-ttf application/vnd.ms-fontobject</span><br><span class="line">    image/x-icon;</span><br><span class="line">  gzip_disable <span class="string">"MSIE [1-6]\.(?!.*SV1)"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.</span></span><br><span class="line">  open_file_cache max=1000 inactive=20s;</span><br><span class="line">  open_file_cache_valid 30s;</span><br><span class="line">  open_file_cache_min_uses 2;</span><br><span class="line">  open_file_cache_errors on;</span><br><span class="line"></span><br><span class="line"><span class="comment">######################## default ############################</span></span><br><span class="line">  server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name _;</span><br><span class="line">    access_log /data/wwwlogs/access_nginx.log combined;</span><br><span class="line">    root /data/wwwroot/default;</span><br><span class="line">    index index.html index.htm index.php;</span><br><span class="line">    <span class="comment">#error_page 404 /404.html;</span></span><br><span class="line">    <span class="comment">#error_page 502 /502.html;</span></span><br><span class="line">    location /nginx_status &#123;</span><br><span class="line">      stub_status on;</span><br><span class="line">      access_log off;</span><br><span class="line">      allow 127.0.0.1;</span><br><span class="line">      deny all;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ [^/]\.php(/|$) &#123;</span><br><span class="line">      <span class="comment">#fastcgi_pass remote_php_ip:9000;</span></span><br><span class="line">      fastcgi_pass unix:/dev/shm/php-cgi.sock;</span><br><span class="line">      fastcgi_index index.php;</span><br><span class="line">      include fastcgi.conf;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ &#123;</span><br><span class="line">      expires 30d;</span><br><span class="line">      access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(js|css)?$ &#123;</span><br><span class="line">      expires 7d;</span><br><span class="line">      access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ /\.ht &#123;</span><br><span class="line">      deny all;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">########################## vhost #############################</span></span><br><span class="line">  include vhost/*.conf;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"s@/data/wwwroot/default@/data/wwwroot/default@"</span> /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">sed -i <span class="string">"s@/data/wwwlogs@/data/wwwlogs@g"</span> /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">sed -i <span class="string">"s@^user www www@user <span class="variable">$&#123;run_user&#125;</span> <span class="variable">$&#123;run_user&#125;</span>@"</span> /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Nginx Proxy</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">cat &gt; /usr/<span class="built_in">local</span>/nginx/conf/proxy.conf &lt;&lt; EOF</span><br><span class="line">proxy_connect_timeout 300s;</span><br><span class="line">proxy_send_timeout 900;</span><br><span class="line">proxy_read_timeout 900;</span><br><span class="line">proxy_buffer_size 32k;</span><br><span class="line">proxy_buffers 4 64k;</span><br><span class="line">proxy_busy_buffers_size 128k;</span><br><span class="line">proxy_redirect off;</span><br><span class="line">proxy_hide_header Vary;</span><br><span class="line">proxy_set_header Accept-Encoding <span class="string">''</span>;</span><br><span class="line">proxy_set_header Referer \<span class="variable">$http_referer</span>;</span><br><span class="line">proxy_set_header Cookie \<span class="variable">$http_cookie</span>;</span><br><span class="line">proxy_set_header Host \<span class="variable">$host</span>;</span><br><span class="line">proxy_set_header X-Real-IP \<span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For \<span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_set_header X-Forwarded-Proto \<span class="variable">$scheme</span>;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Nginx Log</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">cat &gt; /etc/logrotate.d/nginx &lt;&lt; EOF</span><br><span class="line">/data/wwwlogs/*nginx.log &#123;</span><br><span class="line">    daily</span><br><span class="line">    rotate 5</span><br><span class="line">    missingok</span><br><span class="line">    dateext</span><br><span class="line">    compress</span><br><span class="line">    notifempty</span><br><span class="line">    sharedscripts</span><br><span class="line">    postrotate</span><br><span class="line">        [ -e /var/run/nginx.pid ] &amp;&amp; <span class="built_in">kill</span> -USR1 \`cat /var/run/nginx.pid\`</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">ldconfig</span><br><span class="line">service nginx start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># 探针</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line">wget -c http://mirrors.linuxeye.com/oneinstack/src/tz.zip</span><br><span class="line">unzip tz.zip -d /data/wwwroot/default</span><br><span class="line">wget -O /data/wwwroot/default/index.php https://api.inn-studio.com/download?id=xprober</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># Service Manage</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'############# service php-fpm #############'</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"service:\n"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\tphp-fpm:"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tservice php-fpm stop"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tservice php-fpm start"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tservice php-fpm status"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tservice php-fpm restart"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\n"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\tnginx:"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tservice nginx stop"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tservice nginx start"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tservice nginx status"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tservice nginx restart"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\n\n"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'############ systemctl php-fpm ############'</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"systemctl:\n"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\tphp-fpm:"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tsystemctl stop php-fpm"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tsystemctl start php-fpm"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tsystemctl status php-fpm"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tsystemctl restart php-fpm"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\n"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\tnginx:"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tsystemctl stop nginx"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tsystemctl start nginx"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tsystemctl status nginx"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\t\tsystemctl restart nginx"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\n\n"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'############# Time #############'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Start Time: '</span><span class="variable">$startime</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'End Time: '</span>$(date +<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> nginx </tag>
            
            <tag> lnmp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mysql源码编译安装</title>
      <link href="/posts/1e53.html"/>
      <url>/posts/1e53.html</url>
      <content type="html"><![CDATA[<h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><pre><code>系统：CentOS7.4-1708-Mini源码路径：/usr/local/src安装路径：/usr/local依赖软件：cmake, ncurses, m4, bison优化：jemalloc(内存分配器)</code></pre><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h4><pre><code>yum -y install gcc gcc-c++ wget bzip2 vim ntpdate</code></pre><h4 id="修改时区"><a href="#修改时区" class="headerlink" title="修改时区"></a>修改时区</h4><pre><code>rm -f /etc/localtimeln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></pre><h4 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h4><pre><code>setenforce 0sed -i &apos;s/SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/config</code></pre><h4 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h4><pre><code>ntpdate ntp.aliyun.com &amp;&amp; hwclock -wecho &quot;*/20 * * * * $(which ntpdate) pool.ntp.org &gt; /dev/null 2&gt;&amp;1 &amp;&amp; $(which hwclock) -w&quot; &gt;&gt; /var/spool/cron/rootchmod 600 /var/spool/cron/root</code></pre><h3 id="安装依赖环境"><a href="#安装依赖环境" class="headerlink" title="安装依赖环境"></a>安装依赖环境</h3><blockquote><p>官方文档<a href="https://dev.mysql.com/doc/refman/5.7/en/source-installation.html" target="_blank" rel="noopener">源码安装Mysql</a></p></blockquote><blockquote><p>Cmake: mysql使用cmake跨平台工具预编译源码，用于设置mysql的编译参数. <a href="https://cmake.org/files/" target="_blank" rel="noopener">下载源</a></p></blockquote><pre><code>cdwget -c https://cmake.org/files/v3.11/cmake-3.11.1.tar.gztar xvf cmake-3.11.1.tar.gz -C /usr/local/src/cd /usr/local/src/cmake-3.11.1./bootstrap &amp;&amp; make &amp;&amp; make install</code></pre><blockquote><p>Ncurses: 字符终端处理库 <a href="http://ftp.gnu.org/gnu/ncurses/" target="_blank" rel="noopener">下载源</a></p></blockquote><pre><code>cdwget -c http://ftp.gnu.org/gnu/ncurses/ncurses-6.0.tar.gztar xvf ncurses-6.0.tar.gz -C /usr/local/src/cd /usr/local/src/ncurses-6.0./configure --with-shared --without-debug --without-ada --enable-overwrite  make &amp;&amp; make install</code></pre><blockquote><p>M4: GNU M4是传统Unix宏处理器的一个实现 <a href="http://ftp.gnu.org/gnu/m4/" target="_blank" rel="noopener">下载源</a></p></blockquote><pre><code>cdwget -c http://ftp.gnu.org/gnu/m4/m4-1.4.18.tar.gztar xvf m4-1.4.18.tar.gz -C /usr/local/src/cd /usr/local/src/m4-1.4.18./configure --prefix=/usr/local/m4make &amp;&amp; make installln -sf /usr/local/m4/bin/m4 /usr/bin/</code></pre><blockquote><p>Bison: Linux下C/C++语法分析器 <a href="http://ftp.gnu.org/gnu/bison/" target="_blank" rel="noopener">下载源</a></p></blockquote><pre><code>cdwget -c http://ftp.gnu.org/gnu/bison/bison-3.0.4.tar.gztar xvf bison-3.0.4.tar.gz -C /usr/local/src/cd /usr/local/src/bison-3.0.4./configure --prefix=/usr/local/bisonmake &amp;&amp; make installln -sf /usr/local/bison/bin/* /usr/bin/echo &apos;/usr/local/bison/lib/&apos; &gt; /etc/ld.so.conf.d/bison.confldconfig</code></pre><blockquote><p>Jemalloc <a href="https://github.com/jemalloc/jemalloc/releases" target="_blank" rel="noopener">下载源</a></p></blockquote><pre><code>cdwget -c https://github.com/jemalloc/jemalloc/releases/download/5.0.1/jemalloc-5.0.1.tar.bz2tar xvf jemalloc-5.0.1.tar.bz2 -C /usr/local/src/cd /usr/local/src/jemalloc-5.0.1./configure --prefix=/usr/localmake &amp;&amp; make installln -s /usr/local/lib/libjemalloc.so.2 /usr/lib64/libjemalloc.so.1[ -z &quot;`grep /usr/local/lib /etc/ld.so.conf.d/*.conf`&quot; ] &amp;&amp; echo &apos;/usr/local/lib&apos; &gt; /etc/ld.so.conf.d/local.confldconfig</code></pre><h3 id="编译安装mysql"><a href="#编译安装mysql" class="headerlink" title="编译安装mysql"></a>编译安装mysql</h3><h4 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h4><blockquote><p>创建用户</p></blockquote><pre><code>useradd -M -s /sbin/nologin mysql</code></pre><blockquote><p>定义数据路径及密码</p></blockquote><pre><code>dbrootpwd=rootmkdir -p /data/mysqlmysql_data_dir=/data/mysqlmysql_install_dir=/usr/local/mysql</code></pre><h4 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h4><blockquote><p>mysql源码中用到了C++的Boost库,要求必须安装boost1.59.0或以上版本.</p></blockquote><pre><code>cd# 下载Boost C++wget -c http://mirrors.linuxeye.com/oneinstack/src/boost_1_59_0.tar.gztar xvf boost_1_59_0.tar.gz -C /usr/local/src/# 下载 mysqlwget -c https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.22.tar.gztar xvf mysql-5.7.22.tar.gz -C /usr/local/src/cd /usr/local/src/mysql-5.7.22/# 编译cmake . -DCMAKE_INSTALL_PREFIX=${mysql_install_dir} \    -DMYSQL_DATADIR=${mysql_data_dir} \    -DSYSCONFDIR=/etc \    -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/usr/local/src/boost_1_59_0 \    -DWITH_INNOBASE_STORAGE_ENGINE=1 \    -DWITH_PARTITION_STORAGE_ENGINE=1 \    -DWITH_FEDERATED_STORAGE_ENGINE=1 \    -DWITH_BLACKHOLE_STORAGE_ENGINE=1 \    -DWITH_MYISAM_STORAGE_ENGINE=1 \    -DWITH_EMBEDDED_SERVER=1 \    -DENABLE_DTRACE=0 \    -DENABLED_LOCAL_INFILE=1 \    -DDEFAULT_CHARSET=utf8mb4 \    -DDEFAULT_COLLATION=utf8mb4_general_ci \    -DEXTRA_CHARSETS=all \    -DCMAKE_EXE_LINKER_FLAGS=&apos;-ljemalloc&apos;make -j $(grep processor /proc/cpuinfo | wc -l)make install</code></pre><h4 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h4><pre><code>/bin/cp ${mysql_install_dir}/support-files/mysql.server  /etc/init.d/mysqldsed -i &quot;s@^basedir=.*@basedir=${mysql_install_dir}@&quot; /etc/init.d/mysqldsed -i &quot;s@^datadir=.*@datadir=${mysql_data_dir}@&quot; /etc/init.d/mysqldchmod +x /etc/init.d/mysqldchkconfig --add mysqldchkconfig mysqld on</code></pre><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF  &gt;/etc/my.cnf</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">"MySQL [\\d]&gt; "</span></span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">basedir = <span class="variable">$&#123;mysql_install_dir&#125;</span></span><br><span class="line">datadir = <span class="variable">$&#123;mysql_data_dir&#125;</span></span><br><span class="line">pid-file = <span class="variable">$&#123;mysql_data_dir&#125;</span>/mysql.pid</span><br><span class="line">user = mysql</span><br><span class="line"><span class="built_in">bind</span>-address = 0.0.0.0</span><br><span class="line">server-id = 1</span><br><span class="line"></span><br><span class="line">init-connect = <span class="string">'SET NAMES utf8mb4'</span></span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line"></span><br><span class="line">skip-name-resolve</span><br><span class="line"><span class="comment">#skip-networking</span></span><br><span class="line">back_log = 300</span><br><span class="line"></span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 6000</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">table_open_cache = 128</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line">binlog_cache_size = 1M</span><br><span class="line">max_heap_table_size = 8M</span><br><span class="line">tmp_table_size = 16M</span><br><span class="line"></span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">join_buffer_size = 8M</span><br><span class="line">key_buffer_size = 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size = 8</span><br><span class="line"></span><br><span class="line">query_cache_type = 1</span><br><span class="line">query_cache_size = 8M</span><br><span class="line">query_cache_limit = 2M</span><br><span class="line"></span><br><span class="line">ft_min_word_len = 4</span><br><span class="line"></span><br><span class="line">log_bin = mysql-bin</span><br><span class="line">binlog_format = mixed</span><br><span class="line">expire_logs_days = 7</span><br><span class="line"></span><br><span class="line">log_error = <span class="variable">$&#123;mysql_data_dir&#125;</span>/mysql-error.log</span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 1</span><br><span class="line">slow_query_log_file = <span class="variable">$&#123;mysql_data_dir&#125;</span>/mysql-slow.log</span><br><span class="line"></span><br><span class="line">performance_schema = 0</span><br><span class="line">explicit_defaults_for_timestamp</span><br><span class="line"></span><br><span class="line"><span class="comment">#lower_case_table_names = 1</span></span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line"><span class="comment">#default-storage-engine = MyISAM</span></span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_open_files = 500</span><br><span class="line">innodb_buffer_pool_size = 64M</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_thread_concurrency = 0</span><br><span class="line">innodb_purge_threads = 1</span><br><span class="line">innodb_flush_log_at_trx_commit = 2</span><br><span class="line">innodb_log_buffer_size = 2M</span><br><span class="line">innodb_log_file_size = 32M</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line">innodb_max_dirty_pages_pct = 90</span><br><span class="line">innodb_lock_wait_timeout = 120</span><br><span class="line"></span><br><span class="line">bulk_insert_buffer_size = 8M</span><br><span class="line">myisam_sort_buffer_size = 8M</span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line">myisam_repair_threads = 1</span><br><span class="line"></span><br><span class="line">interactive_timeout = 28800</span><br><span class="line">wait_timeout = 28800</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">read_buffer = 4M</span><br><span class="line">write_buffer = 4M</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="数据库配置优化"><a href="#数据库配置优化" class="headerlink" title="数据库配置优化"></a>数据库配置优化</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Mem=`free -m | awk <span class="string">'/Mem:/&#123;print $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"s@max_connections.*@max_connections = <span class="variable">$(($&#123;Mem&#125;/3)</span>)@"</span> /etc/my.cnf</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;Mem&#125;</span> -gt 1500 -a <span class="variable">$&#123;Mem&#125;</span> -le 2500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">'s@^thread_cache_size.*@thread_cache_size = 16@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^query_cache_size.*@query_cache_size = 16M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 16M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^key_buffer_size.*@key_buffer_size = 16M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 128M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^tmp_table_size.*@tmp_table_size = 32M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^table_open_cache.*@table_open_cache = 256@'</span> /etc/my.cnf</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;Mem&#125;</span> -gt 2500 -a <span class="variable">$&#123;Mem&#125;</span> -le 3500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">'s@^thread_cache_size.*@thread_cache_size = 32@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^query_cache_size.*@query_cache_size = 32M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 32M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^key_buffer_size.*@key_buffer_size = 64M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 512M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^tmp_table_size.*@tmp_table_size = 64M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^table_open_cache.*@table_open_cache = 512@'</span> /etc/my.cnf</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;Mem&#125;</span> -gt 3500 ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">'s@^thread_cache_size.*@thread_cache_size = 64@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^query_cache_size.*@query_cache_size = 64M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 64M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^key_buffer_size.*@key_buffer_size = 256M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 1024M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^tmp_table_size.*@tmp_table_size = 128M@'</span> /etc/my.cnf</span><br><span class="line">    sed -i <span class="string">'s@^table_open_cache.*@table_open_cache = 1024@'</span> /etc/my.cnf</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h4><pre><code>${mysql_install_dir}/bin/mysqld --initialize-insecure --user=mysql --basedir=${mysql_install_dir} --datadir=${mysql_data_dir}chmod 600 /etc/my.cnfchown mysql.mysql -R ${mysql_data_dir}</code></pre><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><pre><code>[ -z &quot;$(grep ^&apos;export PATH=&apos; /etc/profile)&quot; ] &amp;&amp; echo &quot;export PATH=${mysql_install_dir}/bin:\$PATH&quot; &gt;&gt; /etc/profile[ -n &quot;$(grep ^&apos;export PATH=&apos; /etc/profile)&quot; -a -z &quot;$(grep ${mysql_install_dir} /etc/profile)&quot; ] &amp;&amp; sed -i &quot;s@^export PATH=\(.*\)@export PATH=${mysql_install_dir}/bin:\1@&quot; /etc/profilesource /etc/profile</code></pre><h4 id="授权root"><a href="#授权root" class="headerlink" title="授权root"></a>授权root</h4><blockquote><p>root仅本地登陆权限</p></blockquote><pre><code>${mysql_install_dir}/bin/mysql -e &quot;grant all privileges on *.* to root@&apos;127.0.0.1&apos; identified by \&quot;${dbrootpwd}\&quot; with grant option;&quot;${mysql_install_dir}/bin/mysql -e &quot;grant all privileges on *.* to root@&apos;localhost&apos; identified by \&quot;${dbrootpwd}\&quot; with grant option;&quot;${mysql_install_dir}/bin/mysql -uroot -p${dbrootpwd} -e &quot;reset master;&quot;</code></pre><h4 id="链接库"><a href="#链接库" class="headerlink" title="链接库"></a>链接库</h4><pre><code>echo &quot;${mysql_install_dir}/lib&quot; &gt; /etc/ld.so.conf.d/mysql.confldconfig</code></pre><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><pre><code>service mysqld start</code></pre><h3 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h3><blockquote><p>放行端口(–permanent永久生效，没有此参数重启后失效)</p></blockquote><pre><code>firewall-cmd --zone=public --add-port=22/tcp --permanentfirewall-cmd --zone=public --add-port=3306/tcp --permanent</code></pre><blockquote><p>重新载入</p></blockquote><pre><code>firewall-cmd --reload</code></pre><blockquote><p>查看</p></blockquote><pre><code>firewall-cmd --zone= public --query-port=22/tcpfirewall-cmd --zone= public --query-port=3306/tcp</code></pre><blockquote><p>删除</p></blockquote><pre><code>firewall-cmd --zone= public --remove-port=3306/tcp --permanent</code></pre><blockquote><p>启用防火墙</p></blockquote><pre><code>systemctl start firewalldsystemctl enable firewalld</code></pre>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搭建mirror镜像站</title>
      <link href="/posts/eafe.html"/>
      <url>/posts/eafe.html</url>
      <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><blockquote><p><a href="http://mirrors.163.com/centos/7.4.1708/isos/x86_64/CentOS-7-x86_64-Minimal-1708.iso" target="_blank" rel="noopener">下载镜像 792MB</a></p></blockquote><pre><code>系统：CentOS7.4-Mini-1708IP：192.168.3.4</code></pre><h3 id="安装rsync"><a href="#安装rsync" class="headerlink" title="安装rsync"></a>安装rsync</h3><pre><code>yum -y install rsync</code></pre><h3 id="创建存储目录"><a href="#创建存储目录" class="headerlink" title="创建存储目录"></a>创建存储目录</h3><pre><code>mkdir /mirror /scripts</code></pre><h3 id="创建同步源脚本"><a href="#创建同步源脚本" class="headerlink" title="创建同步源脚本"></a>创建同步源脚本</h3><blockquote><p><a href="https://mirrors.ustc.edu.cn/help/rsync-guide.html" target="_blank" rel="noopener">rsync 同步方式</a></p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/scripts/ustc_rsync.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">which</span> rsync &gt;/dev/null 2&gt;&amp;1;<span class="keyword">then</span> <span class="built_in">exit</span> 1;<span class="keyword">fi</span></span><br><span class="line"><span class="comment">#rsync://mirrors.163.com/centos/7/</span></span><br><span class="line"></span><br><span class="line">rsyncUrl=(</span><br><span class="line"></span><br><span class="line">    rsync://rsync.mirrors.ustc.edu.cn/repo/centos/7/</span><br><span class="line">    rsync://rsync.mirrors.ustc.edu.cn/repo/epel/7/</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">localDir=(</span><br><span class="line">    /data/mirror/centos/7/</span><br><span class="line">    /data/mirror/epel/7/</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rsync_Mirrors</span></span>() &#123;</span><br><span class="line">    <span class="comment">#rsync -vai4CH --safe-links --numeric-ids --delete --delete-delay --delay-updates $1 $2</span></span><br><span class="line">    rsync -avrt --progress <span class="variable">$1</span> <span class="variable">$2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#https://mariadb.com/kb/en/mariadb/mirroring-mariadb/</span></span><br><span class="line"><span class="comment">#https://www.percona.com/blog/2014/02/14/using-percona-rsync-repositories-set-local-centos-mirror/</span></span><br><span class="line"><span class="comment">#http://dev.mysql.com/downloads/how-to-mirror.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 0 <span class="variable">$&#123;#localDir[@]&#125;</span>`;<span class="keyword">do</span></span><br><span class="line">    [ ! -d <span class="variable">$&#123;localDir[$i]&#125;</span> ] &amp;&amp; mkdir -p <span class="variable">$&#123;localDir[$i]&#125;</span></span><br><span class="line">    rsync_Mirrors <span class="variable">$&#123;rsyncUrl[$i]&#125;</span> <span class="variable">$&#123;localDir[$i]&#125;</span></span><br><span class="line">    [ $? -eq 0 ] &amp;&amp; createrepo <span class="variable">$&#123;localDir[$i]&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="配置脚本执行权限"><a href="#配置脚本执行权限" class="headerlink" title="配置脚本执行权限"></a>配置脚本执行权限</h3><pre><code>chmod +x /scripts/ustc_rsync.sh</code></pre><h3 id="执行同步"><a href="#执行同步" class="headerlink" title="执行同步"></a>执行同步</h3><blockquote><p>同步时间比较长CentOS7，epel源加起来大概 207G</p></blockquote><pre><code>/scripts/ustc_rsync.sh</code></pre><h3 id="定时运行同步"><a href="#定时运行同步" class="headerlink" title="定时运行同步"></a>定时运行同步</h3><pre><code># 每6小时执行一次echo &apos;1 6 * * *  /bin/sh  /scripts/ustc_rsync.sh &gt;/mirror/rsync.log 2&gt;&amp;1&apos; &gt;&gt;/var/spool/cron/root</code></pre><h3 id="Web提供YUN"><a href="#Web提供YUN" class="headerlink" title="Web提供YUN"></a>Web提供YUN</h3><h4 id="Python方式-不推荐"><a href="#Python方式-不推荐" class="headerlink" title="Python方式(不推荐)"></a>Python方式(不推荐)</h4><blockquote><p>运行以下命令后浏览器打开：<a href="http://Server" target="_blank" rel="noopener">http://Server</a> IP:8000 可看到列出的目录</p></blockquote><pre><code>cd /mirror/usr/bin/nohup /usr/bin/python -m SimpleHTTPServer 8000 &gt;/mirror/python-http.log 2&gt;&amp;1 &amp;</code></pre><h4 id="Nginx方式"><a href="#Nginx方式" class="headerlink" title="Nginx方式"></a>Nginx方式</h4><blockquote><p>编译安装Nginx此编译方法可能导致YUM命令故障<a href="http://192.168.2.3/posts/7ae3.html" target="_blank" rel="noopener">参考</a> (可用YUM方式安装)<br>编译Nginx时可以直接指定 pcre, zlib, openssl 源码路径而无需编译安装这三个软件(查看nginx编译参数)</p></blockquote><h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h5><pre><code># 安装GCCyum -y install gcc gcc-c++ wget vim# 创建软件下载目录mkdir /root/software</code></pre><h5 id="安装pcre"><a href="#安装pcre" class="headerlink" title="安装pcre"></a>安装pcre</h5><blockquote><p>轻量级的Perl函数库</p></blockquote><pre><code>cd /root/softwarewget https://ftp.pcre.org/pub/pcre/pcre-8.42.tar.gztar -zxvf pcre-8.42.tar.gz -C /usr/src/cd /usr/src/pcre-8.42./configure --prefix=/usr/local/pcremakemake install</code></pre><h5 id="安装zlib"><a href="#安装zlib" class="headerlink" title="安装zlib"></a>安装zlib</h5><blockquote><p>提供数据压缩用的函式库</p></blockquote><pre><code>cd /root/softwarewget http://zlib.net/zlib-1.2.11.tar.gztar -zxvf zlib-1.2.11.tar.gz -C /usr/src/cd /usr/src/zlib-1.2.11./configure --prefix=/usr/local/zlibmakemake installln -sf /usr/local/zlib/include/* /usr/local/include/</code></pre><h5 id="安装openssl"><a href="#安装openssl" class="headerlink" title="安装openssl"></a>安装openssl</h5><pre><code>yum -y remove openssl openssl-develyum -y install perlcd /root/softwarewget https://www.openssl.org/source/openssl-1.1.1-pre5.tar.gztar -zxvf openssl-1.1.1-pre5.tar.gz -C /usr/src/cd /usr/src/openssl-1.1.1-pre5./config --prefix=/usr/local/opensslmakemake install# 链接openssl 库文件echo &quot;/usr/local/openssl/lib&quot; &gt;/etc/ld.so.conf.d/openssl.confldconfig# 命令路径添加到环境变量echo &apos;export PATH=/usr/local/openssl/bin/:$PATH&apos; &gt;&gt;/etc/profilesource /etc/profile</code></pre><h5 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h5><pre><code>cd /root/softwarewget http://mirrors.sohu.com/nginx/nginx-1.14.0.tar.gztar -zxvf nginx-1.14.0.tar.gz -C /usr/src/cd /usr/src/nginx-1.14.0./configure --prefix=/usr/local/nginx/ --with-pcre=/usr/src/pcre-8.42/ --with-zlib=/usr/src/zlib-1.2.11/ --with-openssl=/usr/local/openssl/makemake install# 命令路径添加到环境变量echo &apos;export PATH=/usr/local/nginx/sbin/:$PATH&apos; &gt;&gt;/etc/profilesource /etc/profile</code></pre><h5 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h5><pre><code>mkdir -p /data/mirrorcd /usr/local/nginx/conf/cp -a nginx.conf nginx.conf.baksed -i &apos;44s/root.*/root   \/data\/mirror;/&apos; nginx.confsed -i &apos;44a\            autoindex on;&apos; nginx.confsed -i &apos;45a\            autoindex_exact_size off;&apos; nginx.confsed -i &apos;46a\            autoindex_localtime on;&apos; nginx.confsed -i &apos;48d&apos; nginx.conf# 启动服务systemctl start nginx</code></pre><h3 id="配置repo文件"><a href="#配置repo文件" class="headerlink" title="配置repo文件"></a>配置repo文件</h3><blockquote><p>此处在服务器上执行,用于提供客户端下载<br>baseurl中配置的地址为服务器地址</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span> &gt;/mirror/local.repo</span><br><span class="line"><span class="comment"># CentOS-Base.repo</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The mirror system uses the connecting IP address of the client and the</span></span><br><span class="line"><span class="comment"># update status of each mirror to pick mirrors that are updated to and</span></span><br><span class="line"><span class="comment"># geographically close to the client.  You should use this for CentOS updates</span></span><br><span class="line"><span class="comment"># unless you are manually picking other mirrors.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If the mirrorlist= does not work for you, as a fall back you can try the</span></span><br><span class="line"><span class="comment"># remarked out baseurl= line instead.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">[base]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Base</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os</span></span><br><span class="line">baseurl=http://192.168.3.4:8000/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#released updates</span></span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Updates</span><br><span class="line"><span class="comment"># mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates</span></span><br><span class="line">baseurl=http://192.168.3.4:8000/centos/<span class="variable">$releasever</span>/updates/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that may be useful</span></span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Extras</span><br><span class="line"><span class="comment"># mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras</span></span><br><span class="line">baseurl=http://192.168.3.4:8000/centos/<span class="variable">$releasever</span>/extras/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that extend functionality of existing packages</span></span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Plus</span><br><span class="line"><span class="comment"># mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus</span></span><br><span class="line">baseurl=http://192.168.3.4:8000/centos/<span class="variable">$releasever</span>/centosplus/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line">[epel]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - <span class="variable">$basearch</span></span><br><span class="line">baseurl=http://192.168.3.4:8000/epel/7/<span class="variable">$basearch</span></span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-7&amp;arch=$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line"></span><br><span class="line">[epel-debuginfo]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - <span class="variable">$basearch</span> - Debug</span><br><span class="line">baseurl=http://192.168.3.4:8000/epel/7/<span class="variable">$basearch</span>/debug</span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-debug-7&amp;arch=$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[epel-source]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - <span class="variable">$basearch</span> - Source</span><br><span class="line">baseurl=http://192.168.3.4:8000/epel/7/SRPMS</span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-source-7&amp;arch=$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="客户端配置YUM源"><a href="#客户端配置YUM源" class="headerlink" title="客户端配置YUM源"></a>客户端配置YUM源</h3><pre><code># 安装epel源yum -y install epel-release# 备份旧的yum源mkdir /etc/yum.repos.d/old/mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/old/# 配置YUM源curl -o /etc/yum.repos.d/local.repo http://192.168.3.4:8000/local.repo# 更新缓存yum clean allyum makecache</code></pre><p>本文所同步的源来自<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener">中国科学技术大学</a><br>YUM配置文件基于<a href="http://mirrors.ustc.edu.cn/help/centos.html" target="_blank" rel="noopener">CentOS Help</a> 所修改</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> mirror </tag>
            
            <tag> yum </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VMwareESXi 虚拟硬盘格式</title>
      <link href="/posts/a826.html"/>
      <url>/posts/a826.html</url>
      <content type="html"><![CDATA[<p>本文转自<a href="http://www.mycitrix.cn/esxi-disk-mode.html" target="_blank" rel="noopener">http://www.mycitrix.cn</a></p><p>ESXi创建虚拟机磁盘时，会进行两个操作：分配空间、置零</p><p>1、厚置备延迟置零：</p><p>  默认的创建格式，创建磁盘时，直接从磁盘分配空间，但对磁盘保留数据不置零。所以当有I/O操作时，只需要做置零的操作。</p><blockquote><p>磁盘性能较好，时间短，适合于做池模式的虚拟桌面</p></blockquote><hr><p>2、厚置备置零(thick)：</p><p>  创建群集功能的磁盘。创建磁盘时，直接从磁盘分配空间，并对磁盘保留数据置零。所以当有I/O操作时，不需要等待直接执行。</p><blockquote><p>磁盘性能最好，时间长，适合于做跑运行繁重应用业务的虚拟机</p></blockquote><hr><p>3、精简置备（thin）：</p><p>  创建磁盘时，占用磁盘的空间大小根据实际使用量计算，即用多少分多少，提前不分配空间，对磁盘保留数据不置零，且最大不超过划分磁盘的大小。</p><blockquote><p>所以当有I/O操作时，需要先分配空间，在将空间置零，才能执行I/O操作。当有频繁I/O操作时，磁盘性能会有所下降，I/O不频繁时，磁盘性能较好；I/O频繁时，磁盘性能较差。时间短，适合于对磁盘I/O不频繁的业务应用虚拟机</p></blockquote><hr>]]></content>
      
      <categories>
          
          <category> Liunx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESXi </tag>
            
            <tag> 虚拟硬盘 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>跟阿铭学linux书籍资源</title>
      <link href="/posts/748f.html"/>
      <url>/posts/748f.html</url>
      <content type="html"><![CDATA[<p><a href="https://coding.net/u/aminglinux/p/resource/git/blob/master/README.md?public=true" target="_blank" rel="noopener">本文来自</a><br><a href="https://coding.net/u/aminglinux/p/aminglinux-book/git?public=true" target="_blank" rel="noopener">书籍习题答案</a></p><p>#resource<br>访问google</p><pre><code>http://coderschool.cn/1853.html</code></pre><p>CentOS7.4下载地址：</p><pre><code>64位  http://mirrors.sohu.com/centos/7.4.1708/isos/x86_64/CentOS-7-x86_64-DVD-1708.iso或者 http://mirrors.163.com/centos/7.4.1708/isos/x86_64/CentOS-7-x86_64-DVD-1708.iso 32位[如果你能安装64位，请不要下载此版本，很多问题]  http://mirror.centos.org/altarch/7.4.1708/isos/i386/CentOS-7-i386-DVD-1708.iso （安装此镜像，需要创建64位的centos虚拟机）</code></pre><p>CentOS7.0下载：</p><pre><code>64位 https://pan.baidu.com/s/1nvc9gRR</code></pre><p>CentOS6.9下载地址:</p><pre><code>32位 http://mirrors.sohu.com/centos/6.9/isos/i386/CentOS-6.9-i386-bin-DVD1.iso64位 http://mirrors.sohu.com/centos/6.9/isos/x86_64/CentOS-6.9-x86_64-bin-DVD1.iso</code></pre><p>centos6.5</p><pre><code>64位下载地址：http://pan.baidu.com/s/1sl5r02T32位下载地址：http://pan.baidu.com/s/1b4QoKe</code></pre><p>centos老版本下载地址：</p><pre><code>http://vault.centos.org/</code></pre><p>vmware10下载地址：</p><pre><code>http://pan.baidu.com/s/1eQxOVPC</code></pre><p>puTTY官方下载地址：</p><pre><code>https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html</code></pre><p>MySQL下载地址：</p><pre><code>5.1 32位二进制包： http://mirrors.sohu.com/mysql/MySQL-5.1/mysql-5.1.73-linux-i686-glibc23.tar.gz5.1_64位二进制包：http://mirrors.sohu.com/mysql/MySQL-5.1/mysql-5.1.73-linux-x86_64-glibc23.tar.gz5.5_64位二进制包：http://mirrors.sohu.com/mysql/MySQL-5.5/mysql-5.5.55-linux2.6-x86_64.tar.gz    5.5_32位二进制包：http://mirrors.sohu.com/mysql/MySQL-5.5/mysql-5.5.55-linux2.6-i686.tar.gz5.6_32位二进制包：http://mirrors.sohu.com/mysql/MySQL-5.6/mysql-5.6.36-linux-glibc2.5-i686.tar.gz5.6_64位二进制包：http://mirrors.sohu.com/mysql/MySQL-5.6/mysql-5.6.36-linux-glibc2.5-x86_64.tar.gz5.5源码包：http://mirrors.sohu.com/mysql/MySQL-5.5/mysql-5.5.55.tar.gz5.6源码包：http://mirrors.sohu.com/mysql/MySQL-5.6/mysql-5.6.36.tar.gz </code></pre><p>MariaDB下载地址：</p><pre><code>10.2.6 64位二进制包 https://downloads.mariadb.com/MariaDB/mariadb-10.2.6/bintar-linux-glibc_214-x86_64/mariadb-10.2.6-linux-glibc_214-x86_64.tar.gz10.2.6 32位二进制包 https://downloads.mariadb.com/MariaDB/mariadb-10.2.6/bintar-linux-glibc_214-x86/mariadb-10.2.6-linux-glibc_214-i686.tar.gz</code></pre><p>Apache下载地址：</p><pre><code>2.2源码包： http://219.238.7.73/files/309600000A78114F/mirror.bit.edu.cn/apache//httpd/httpd-2.2.34.tar.gz2.4源码包： http://mirrors.cnnic.cn/apache/httpd/httpd-2.4.33.tar.gzapr: http://mirrors.cnnic.cn/apache/apr/apr-1.6.3.tar.gzapr-util: http://mirrors.cnnic.cn/apache/apr/apr-util-1.6.1.tar.bz2 </code></pre><p>Nginx下载地址：</p><pre><code>1.8源码包： http://nginx.org/download/nginx-1.8.0.tar.gz1.6源码包： http://nginx.org/download/nginx-1.6.3.tar.gz1.4源码包： http://nginx.org/download/nginx-1.4.7.tar.gz</code></pre><p>PHP下载地址：</p><pre><code>5.6源码包： http://cn2.php.net/distributions/php-5.6.30.tar.bz25.5源码包： http://cn2.php.net/distributions/php-5.5.38.tar.bz25.4源码包： http://cn2.php.net/distributions/php-5.4.45.tar.bz27.1源码包： http://cn2.php.net/distributions/php-7.1.6.tar.bz2其他版本： http://php.net/releases/</code></pre><p>xftp下载地址：</p><pre><code>链接：http://pan.baidu.com/s/1eSMSLN0 密码：8os4</code></pre><p>memcache php扩展下载地址：</p><pre><code>http://www.apelearn.com/bbs/data/attachment/forum/memcache-2.2.3.tgz</code></pre><p>memcached下载地址：</p><pre><code>http://memcached.org/files/memcached-1.4.30.tar.gz</code></pre><p>redis下载地址：</p><pre><code>https://codeload.github.com/antirez/redis/tar.gz/2.8.21  (下载后改名redis-2.8.21.tar.gz)</code></pre><p>redis php扩展下载地址：</p><pre><code>https://codeload.github.com/phpredis/phpredis/zip/develop （下载后改名phpredis-develop.zip）</code></pre><p>mongodb php扩展下载地址：</p><pre><code>https://github.com/mongodb/mongo-php-driver-legacy/archive/master.zip</code></pre><p>pureftp下载地址：</p><pre><code>https://download.pureftpd.org/pub/pure-ftpd/releases/pure-ftpd-1.0.45.tar.bz2https://download.pureftpd.org/pub/pure-ftpd/releases/pure-ftpd-1.0.45.tar.gz</code></pre><p>java JDK下载地址：</p><pre><code>1.8版本 http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html1.7版本下载地址  http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html百度网盘地址： http://pan.baidu.com/s/1o8B3Hyy</code></pre><p>tomcat下载地址：</p><pre><code>源码包：https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.24/src/apache-tomcat-8.5.24-src.tar.gz二进制软件包：https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.24/bin/apache-tomcat-8.5.24.tar.gz7版本二进制：http://mirrors.hust.edu.cn/apache/tomcat/tomcat-7/v7.0.82/bin/apache-tomcat-7.0.82.tar.gz7版本源码包：http://mirrors.hust.edu.cn/apache/tomcat/tomcat-7/v7.0.82/src/apache-tomcat-7.0.82-src.tar.gz</code></pre><p>tomcat连接mysql驱动JDBC下载地址：</p><pre><code>官方地址：https://dev.mysql.com/downloads/file/?id=468318下载地址：https://cdn.mysql.com//Downloads/Connector-J/mysql-connector-java-5.1.41.tar.gz</code></pre><p>resin下载地址：</p><pre><code>官方（很慢）：http://caucho.com/download/resin-4.0.45.tar.gz阿铭提供：http://a.lishiming.net/data/resin-4.0.45.tar.gz</code></pre><p>zabbix下载</p><pre><code>官方：https://www.zabbix.com/download</code></pre><p>网络相关电子书</p><pre><code>http://pan.baidu.com/s/1kTlDi8f</code></pre><p>shell相关电子书</p><pre><code>链接:http://pan.baidu.com/s/1mg49Taw 密码:yk4bhttp://pan.baidu.com/share/link?shareid=175440432&amp;uk=235144927</code></pre><p>python基础教程</p><pre><code>http://pan.baidu.com/s/1z0Yx4在线版 http://code.ziqiangxuetang.com/python/python-tutorial.html</code></pre><p>django基础教程</p><pre><code>http://djangobook.py3k.cn/2.0/http://code.ziqiangxuetang.com/django/django-tutorial.html</code></pre><p>iTop 下载地址</p><pre><code>https://jaist.dl.sourceforge.net/project/itop/itop/2.3.4/iTop-2.3.4-3302.zip</code></pre>]]></content>
      
      
        <tags>
            
            <tag> 书籍资源 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>BT面板shell代码分析</title>
      <link href="/posts/cbbd.html"/>
      <url>/posts/cbbd.html</url>
      <content type="html"><![CDATA[<h3 id="选择下载节点"><a href="#选择下载节点" class="headerlink" title="选择下载节点"></a>选择下载节点</h3><blockquote><p>路径：/www/server/panel/install/public</p></blockquote><ul><li>功能：curl测试node节点挑选出延时最低的服务器</li><li>循环nodes：<ul><li>L6 获取Curl前 %s 1970-01-01 00:00:00 UTC到当前秒数 %N 纳秒(000000000-999999999)</li><li>L7 curl -s 静音模式 -S 显示错误 –connect-timeout 连接超时时间，-m 数据传输的最大允许时间用</li><li>L8 判断Curl是否成功</li><li>L9 获取Curl后  %s 1970-01-01 00:00:00 UTC到当前秒数 %N 纳秒(000000000-999999999)</li><li>L10 获取Curl前 1970-01-01 00:00:00 UTC到当前秒数</li><li>L11 获取Curl前 纳秒(000000000-999999999)</li><li>L12 获取Curl后 1970-01-01 00:00:00 UTC到当前秒数</li><li>L13 获取Curl后 纳秒(000000000-999999999)</li><li>L14 计算出Curl花费的微秒值</li><li>L15 转换为毫秒</li><li>L16 将毫秒值 存储到数组 values[2,3,4]</li><li>L17 将节点地址 存储到数组 urls[$time_ms] = urls[延时毫秒数]</li><li>L18 更新毫秒数组</li></ul></li><li>找出延时最低的node 并打印出来 (定义一个最大延时值做比较)</li><li>循环 values[2,3,4] = 每个节点的curl延时 数组<ul><li>L24 判断 定义的最大延时值 $j 与 循环的数组 $n 值比较 如果大于 则将 $n 赋值给 $j 循环完成 $j 就是最小值</li></ul></li><li><p>L28判断如果所有节点curl延时都大于定义的最大延时值则 使用 <code>http://download.bt.cn</code> 否则使用挑选出来的最低延时节点</p></li><li><p>L35判断如果还没有挑选出节点 则初始化 函数开始挑选</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">get_node_url</span></span>()&#123;</span><br><span class="line">    nodes=(http://125.88.182.172:5880 http://103.224.251.67 http://128.1.164.196);</span><br><span class="line">    i=1;</span><br><span class="line">    <span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$&#123;nodes[@]&#125;</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        start=`date +%s.%N`</span><br><span class="line">        result=`curl -sS --connect-timeout 3 -m 60 <span class="variable">$node</span>/check.txt`</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$result</span> = <span class="string">'True'</span> ];<span class="keyword">then</span></span><br><span class="line">            end=`date +%s.%N`</span><br><span class="line">            start_s=`<span class="built_in">echo</span> <span class="variable">$start</span> | cut -d <span class="string">'.'</span> -f 1`</span><br><span class="line">            start_ns=`<span class="built_in">echo</span> <span class="variable">$start</span> | cut -d <span class="string">'.'</span> -f 2`</span><br><span class="line">            end_s=`<span class="built_in">echo</span> <span class="variable">$end</span> | cut -d <span class="string">'.'</span> -f 1`</span><br><span class="line">            end_ns=`<span class="built_in">echo</span> <span class="variable">$end</span> | cut -d <span class="string">'.'</span> -f 2`</span><br><span class="line">            time_micro=$(( (10<span class="comment">#$end_s-10#$start_s)*1000000 + (10#$end_ns/1000 - 10#$start_ns/1000) ))</span></span><br><span class="line">            time_ms=$((<span class="variable">$time_micro</span>/1000))</span><br><span class="line">            values[<span class="variable">$i</span>]=<span class="variable">$time_ms</span>;</span><br><span class="line">            urls[<span class="variable">$time_ms</span>]=<span class="variable">$node</span></span><br><span class="line">            i=$((<span class="variable">$i</span>+1))</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    j=5000</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="variable">$&#123;values[@]&#125;</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$j</span> -gt <span class="variable">$n</span> ];<span class="keyword">then</span></span><br><span class="line">            j=<span class="variable">$n</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$j</span> = 5000 ];<span class="keyword">then</span></span><br><span class="line">        NODE_URL=<span class="string">'http://download.bt.cn'</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        NODE_URL=<span class="variable">$&#123;urls[$j]&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! <span class="variable">$NODE_URL</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'正在选择下载节点...'</span>;</span><br><span class="line">    get_node_url</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><hr><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">get_node_url</span></span>()&#123;</span><br><span class="line">    nodes=(http://125.88.182.172:5880 http://103.224.251.67 http://128.1.164.196);</span><br><span class="line">    i=1;</span><br><span class="line">    <span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$&#123;nodes[@]&#125;</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        start=`date +%s.%N`</span><br><span class="line">        result=`curl -sS --connect-timeout 3 -m 60 <span class="variable">$node</span>/check.txt`</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$result</span> = <span class="string">'True'</span> ];<span class="keyword">then</span></span><br><span class="line">            end=`date +%s.%N`</span><br><span class="line">            start_s=`<span class="built_in">echo</span> <span class="variable">$start</span> | cut -d <span class="string">'.'</span> -f 1`</span><br><span class="line">            start_ns=`<span class="built_in">echo</span> <span class="variable">$start</span> | cut -d <span class="string">'.'</span> -f 2`</span><br><span class="line">            end_s=`<span class="built_in">echo</span> <span class="variable">$end</span> | cut -d <span class="string">'.'</span> -f 1`</span><br><span class="line">            end_ns=`<span class="built_in">echo</span> <span class="variable">$end</span> | cut -d <span class="string">'.'</span> -f 2`</span><br><span class="line">            time_micro=$(( (10<span class="comment">#$end_s-10#$start_s)*1000000 + (10#$end_ns/1000 - 10#$start_ns/1000) ))</span></span><br><span class="line">            time_ms=$((<span class="variable">$time_micro</span>/1000))</span><br><span class="line">            values[<span class="variable">$i</span>]=<span class="variable">$time_ms</span>;</span><br><span class="line">            urls[<span class="variable">$time_ms</span>]=<span class="variable">$node</span></span><br><span class="line">            i=$((<span class="variable">$i</span>+1))</span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"节点: <span class="variable">$node</span>"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t 开始_UTC/纳秒: <span class="variable">$start</span>"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t 结束_UTC/纳秒: <span class="variable">$end</span>"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t 开始_UTC: <span class="variable">$start_s</span>"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t 开始_纳秒: <span class="variable">$start_ns</span>"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t 结束_UTC: <span class="variable">$end_s</span>"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t 结束_纳秒: <span class="variable">$end_ns</span>"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t 微秒: <span class="variable">$time_micro</span>"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t 微秒=秒*1000000+纳秒/1000: <span class="variable">$(( (10#$end_s-10#$start_s)</span>*1000000 + (10#<span class="variable">$end_ns</span>/1000 - 10#<span class="variable">$start_ns</span>/1000) ))"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t 毫秒=微秒*1000: <span class="variable">$time_ms</span>"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t values: values[<span class="variable">$i</span>]"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t urls[<span class="variable">$time_ms</span>]: <span class="variable">$urls</span>[<span class="variable">$time_ms</span>]"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\t 当前节点延时：<span class="variable">$time_ms</span>----节点名: <span class="variable">$node</span>"</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\n--------------------------------------------------------------------------------\n "</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    j=5000</span><br><span class="line">    <span class="comment"># 循环上一步获取到的毫秒数组</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="variable">$&#123;values[@]&#125;</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$j</span> -gt <span class="variable">$n</span> ];<span class="keyword">then</span></span><br><span class="line">            j=<span class="variable">$n</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$j</span> = 5000 ];<span class="keyword">then</span></span><br><span class="line">        NODE_URL=<span class="string">'http://download.bt.cn'</span>;</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$NODE_URL</span></span><br><span class="line">        <span class="built_in">echo</span> 当前选择的节点为  <span class="variable">$NODE_URL</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        NODE_URL=<span class="variable">$&#123;urls[$j]&#125;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$NODE_URL</span></span><br><span class="line">        <span class="built_in">echo</span> 当前选择的节点为  <span class="variable">$NODE_URL</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! <span class="variable">$NODE_URL</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'正在选择下载节点...'</span>;</span><br><span class="line">    get_node_url</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>h5ai目录列表程序完整安装使用教程</title>
      <link href="/posts/77a9.html"/>
      <url>/posts/77a9.html</url>
      <content type="html"><![CDATA[<h3 id="什么是-h5ai"><a href="#什么是-h5ai" class="headerlink" title="什么是 h5ai"></a>什么是 h5ai</h3><p>H5ai是一款功能强大 php 文件目录列表程序，由德国开发者 Lars Jung 主导开发，它提供多种文件目录列表呈现方式，支持多种主流 Web 服务器，例如 Nginx、Apache、Cherokee、Lighttpd 等，支持多国语言，可以使用本程序在线预览文本、图片、音频、视频等。</p><blockquote><p>请注意，默认情况下，放到目录下的 .php 文件将会被直接执行，并不以文本显示(本环境基于CentOS 7)</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong>1. </strong>PHP 运行环境 (apache+php/nginx+php)</p><p><strong>2. </strong><a href="https://larsjung.de/h5ai/" target="_blank" rel="noopener">官网</a>; 下载 h5ai 安装包 <a href="https://release.larsjung.de/h5ai/h5ai-0.29.0.zip" target="_blank" rel="noopener">下载地址</a></p><p><strong>3. </strong>添加<code>/_h5ai/public/index.php</code>到默认索引文件列表的末尾</p><p><strong><em>3.1. </em></strong> Apache httpd 2.2 / 2.4在 httpd.conf 或在根目录的 .htaccess 文件中，例如：</p><pre><code>DirectoryIndex  index.html  index.php  /_h5ai/public/index.php</code></pre><p><strong><em>3.2. </em></strong>lighttpd 1.4 配置文件：lighttpd.conf 例如：</p><pre><code>index-file.names += (&quot;index.html&quot;, &quot;index.php&quot;, &quot;/_h5ai/public/index.php&quot;)</code></pre><p><strong><em>3.3. </em></strong>nginx 1.2：配置文件：nginx.conf 例如：</p><pre><code>index  index.html  index.php  /_h5ai/public/index.php;</code></pre><p><strong><em>3.4. </em></strong>Cherokee 1.2: 配置文件：cherokee.conf 例如：</p><pre><code>vserver!1!directory_index = index.html,index.php,/_h5ai/public/index.php</code></pre><p><strong>4. </strong>去除被禁用的 PHP 函数：(然后重启服务)</p><blockquote><p>编辑<code>/usr/local/php/etc/php.ini</code> 删除 <code>disable_functions</code> 中被禁用的函数 <code>scandir、exec、passthru</code></p></blockquote><p><strong>5. </strong>目录结构</p><blockquote><p>需要注意的是，在文件目录下，如果有 index.html,index.php 可能会优先显示</p></blockquote><pre><code>wwwroot├── directory1│   ├── file1│   ├── file2│   └── file3├── directory2│   ├── file1│   ├── file2│   └── file3└── _h5ai    ├── CHANGELOG.md    ├── private    │   ├── cache    │   │   └── README.md    │   ├── conf    │   │   ├── l10n    │   │   │   ├── af.json    │   │   │   ├── bg.json    │   │   │   ├── cs.json.... ... ... ... ........</code></pre><h3 id="配置功能"><a href="#配置功能" class="headerlink" title="配置功能"></a>配置功能</h3><blockquote><p>到目前为止，h5ai 可以正常使用了，但是我们可以开启 _h5ai 更多功能。通过 http(s)://your_domain/_h5ai/public/index.php 可以查看 _h5ai 的功能开启情况，默认密码是空的。</p></blockquote><p><strong>1. </strong>编译安装 FFmpeg</p><blockquote><p><a href="http://www.ffmpeg.org/releases/?C=M;O=D" target="_blank" rel="noopener">最新版本下载</a></p></blockquote><pre><code>wget http://www.ffmpeg.org/releases/ffmpeg-3.0.11.tar.gztar -xvf ffmpeg-3.0.11.tar.gzcd ffmpeg-3.0.11./configure --prefix=&apos;/usr/local/ffmpeg&apos; &amp;&amp; make &amp;&amp; make install</code></pre><p><strong>2. </strong>编译安装 libav</p><blockquote><p><a href="https://libav.org/releases/" target="_blank" rel="noopener">最新版本下载</a></p></blockquote><pre><code>wget https://libav.org/releases/libav-12.3.tar.gztar -xvf libav-12.3.tar.gzcd libav-12.3./configure --prefix=&apos;/usr/local/libav&apos; &amp;&amp; make &amp;&amp; make install</code></pre><p><strong>3. </strong>略缩图功能</p><blockquote><p>将 _h5ai 中，private 与 public 文件夹中的 cache 目录设置权限为 755</p></blockquote><pre><code>chmod 755 /wwwroot/_h5ai/private _h5ai/public/cache -R</code></pre><blockquote><p>PDF 略缩图</p></blockquote><pre><code>yum install ImageMagick -y</code></pre><h3 id="options-json-中的更多功能"><a href="#options-json-中的更多功能" class="headerlink" title="options.json 中的更多功能"></a>options.json 中的更多功能</h3><blockquote><p>位于 _h5ai/private/conf 目录下</p></blockquote><p><strong>1. </strong>打包下载：</p><pre><code>搜索 “download”127 行，enabled 由 false 改为 true。</code></pre><p><strong>2. </strong>文件信息及二维码：</p><pre><code>搜索 “info”185 行，enabled 由 false 改为 true。</code></pre><p><strong>3. </strong>默认简体中文：</p><pre><code>搜索 “l10n”202 行，enabled 由 false 改为 true。</code></pre><p><strong>4. </strong>文件及文件夹多选：</p><pre><code>搜索 “select”323 行，enabled 由 false 改为 true。</code></pre><p><strong>4. </strong>开启全局搜索：</p><pre><code>搜索 “search”307 行，enabled 由 false 改为 true。</code></pre><p><strong>5. </strong>默认密码：</p><blockquote><p>首先生成自定义 sha512 密码：<a href="http://www.ttmd5.com/hash.php?type=A" target="_blank" rel="noopener">在线生成 sha512 密码</a></p></blockquote><pre><code>然后搜索 “passhash”10 行，将其密码改成自己生成的。</code></pre><h3 id="在目录头部或尾部显示-HTML-内容"><a href="#在目录头部或尾部显示-HTML-内容" class="headerlink" title="在目录头部或尾部显示 HTML 内容"></a>在目录头部或尾部显示 HTML 内容</h3><blockquote><p>在需要显示自定义 HTML 的目录下，添加 _h5ai.headers.html 和/或 _h5ai.footers.html。这个通常用于对该目录的一些说明。支持 HTML 标签。</p></blockquote><p><strong>1. </strong>头部示例：(文件名：_h5ai.header.html)</p><pre><code>&lt;div id=&quot;content-header&quot;&gt;    &lt;h1 style=&quot;text-align: center&quot;&gt;这是一个标题消息&lt;/h1&gt;    &lt;p style=&quot;text-align: center&quot;&gt;头文件是从文件中读取的_h5ai.header.html这个文件的内容将被&lt;code&gt;div&lt;/code&gt;标签包围&lt;/p&gt;&lt;/div&gt;</code></pre><p><strong>1. </strong>尾部示例：(文件名：__h5ai.footer.html)</p><pre><code>&lt;div id=&quot;content-footer&quot;&gt;    &lt;p style=&quot;text-align: center&quot;&gt;页脚从文件中读取&lt;code&gt;_h5ai.footer.html&lt;/code&gt;这个文件的内容将被&lt;code&gt;div&lt;/code&gt;标签包围。&lt;/p&gt;    &lt;p style=&quot;text-align: center&quot;&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code&gt;_h5ai*&lt;/code&gt; 默认情况下，名称的所有文件和目录都隐藏在索引中。&lt;/p&gt;&lt;/div&gt;</code></pre><p><a href="https://www.htcp.net/3643.html" target="_blank" rel="noopener">本文参考内容</a></p>]]></content>
      
      <categories>
          
          <category> h5ai </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> h5ai </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>KodExplorer</title>
      <link href="/posts/e268.html"/>
      <url>/posts/e268.html</url>
      <content type="html"><![CDATA[<h2 id="概观"><a href="#概观" class="headerlink" title="概观"></a>概观</h2><blockquote><p>KodExplorer是web的文件管理器。它也是一个web代码编辑器，它允许您直接在web浏览器中开发网站。您可以在Linux、Windows或Mac平台上运行KodExplorer，无论是在线的还是本地的。唯一的要求是让PHP 5可用。</p></blockquote><p><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/common2.png" alt=""><br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/common3.png" alt=""></p><h3 id="演示-账号-密码-demo-demo"><a href="#演示-账号-密码-demo-demo" class="headerlink" title="演示 [账号/密码: demo/demo]"></a><a href="http://demo.kodcloud.com/" target="_blank" rel="noopener">演示</a> [账号/密码: demo/demo]</h3><ul><li><a href="./ChangeLog.md">更新日志</a></li><li><a href="http://kodcloud.com#lang=en" target="_blank" rel="noopener">英文文档</a></li><li><a href="http://kodcloud.com/#lang=zh_CN" target="_blank" rel="noopener">中文文档</a></li><li><a href="https://www.paypal.me/kalcaddle" target="_blank" rel="noopener">Donate</a></li></ul><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><ul><li><a href="https://github.com/kalcaddle/KodExplorer" target="_blank" rel="noopener">github</a></li><li><a href="https://gitee.com/kalcaddle/KODExplorer" target="_blank" rel="noopener">gitee</a></li></ul><hr><h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><ul><li>使用操作系统，Rich上下文菜单和工具栏，拖放，快捷键……</li><li>提供40多种语言。</li><li><p>文件管理</p><ul><li>所有对远程服务器上的文件和文件夹的操作（复制，可爱，粘贴，移动，删除，上传，创建文件夹/文件，重命名等）</li><li>多用户支持，自定义角色组。</li><li>灵活配置访问权限，文件类型限制，用户界面和其他</li><li>剪贴板：复制，剪切，粘贴，清除</li><li>可选的文件和文件夹支持（鼠标点击＆Ctrl＆Shift＆字＆键盘快捷键）</li><li>键盘快捷键：删除删除，ctrl + A选择，ctrl + C复制，ctrl + X拼接，上/下/左/右/首页/结束等。</li><li>多个操作支持选定的文件和文件夹：移动，复制，可爱，删除，重命名，打开，存档，删除，下载等。</li><li>双击或单击即可打开文件和文件夹</li><li>Filetree：允许一次打开并显示多个子文件夹</li><li>在客户端实现自然排序</li><li>列表，图标和分割视图;</li><li>使用拖放移动/复制/克隆/删除文件</li><li>将文件或文件夹共享给其他人。</li><li>将文件夹添加到收藏夹</li><li>计算目录大小</li><li>图像文件的缩略图</li><li>规范器：文件名和文件路径的UTF-8规范器等。</li><li>Muti Charset支持，在各种情况下出现乱码的解决方案;文件名和文件路径等的清理工具</li><li>支持多个分块上传，</li><li>通过拖放HTML5支持进行背景文件上传;使用Chrome，Firefox和Edge进行文件夹上传</li><li>上传表单网址（或列表）</li><li>直接提取到当前工作目录（你不想 - 创建一个文件夹）</li><li>搜索：按文件名和文件内容搜索</li><li>基于名称的文件排除</li><li>复制直接文件的URL</li><li>档案创建/提取/预览（zip，rar，7z，tar，gzip，tgz）</li><li>Quicklook，预览常见文件类型; 图像文件，文本文件，pdf，swf，文档文件等</li><li>视频和音频播放器依靠网络浏览器功能</li></ul></li><li><p>编辑</p><ul><li>语法高亮超过120种语言</li><li>多个标签，拖放标签。</li><li>超过15个主题，选择您最喜爱的编程风格</li><li>Web开发：集成了Emmet的HTML / JS / CSS编辑器</li><li>自动缩进和缩进;换行;代码折叠</li><li>多个游标和选择;（中键选择; Ctrl + Command + G）</li><li>自动完成。</li><li>完全可定制的键绑定，包括vim和Emacs模式</li><li>用正则表达式搜索并替换;突出显示匹配的括号</li><li>在软标签和真正的标签之间切换</li><li>显示隐藏的字符</li><li>使用鼠标拖放文本</li><li>现场语法检查器（JavaScript / CoffeeScript / CSS / XQuery / HTML / PHP等）</li><li>剪切，复制和粘贴功能</li><li>Markdown支持（实时预览;转换为html等）</li><li>格式：JavaScript / CSS / HTML / JSON / PHP等</li><li>跨平台，即使在移动设备上</li><li>易于与其他系统集成</li><li>由科德本身开发，这是一个不错的尝试。</li><li>Syntax highlighting for over 120 languages</li></ul></li></ul><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1. 源码安装</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/kalcaddle/</span>KODExplorer.git</span><br><span class="line">chmod -Rf <span class="number">777</span> .<span class="regexp">/KODExplorer/</span>*</span><br></pre></td></tr></table></figure><p><strong>2. 下载安装</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/kalcaddle/</span>KODExplorer<span class="regexp">/archive/m</span>aster.zip</span><br><span class="line">unzip master.zip</span><br><span class="line">chmod -Rf <span class="number">777</span> .<span class="regexp">/*</span></span><br></pre></td></tr></table></figure><hr><h2 id="常见问题解答"><a href="#常见问题解答" class="headerlink" title="常见问题解答"></a>常见问题解答</h2><ul><li><p>忘记密码</p><blockquote><p>登录页面：请参阅“忘记密码”。</p></blockquote></li><li><p>通过拖放上传</p><blockquote><p>浏览器兼容性：Chrome，Firefox和Edge</p></blockquote></li><li><p>如何使系统更安全？</p><blockquote><p>确保管理员密码更复杂。<br>打开登录验证码。<br>设置http服务器不允许列出目录;<br>PHP安全性：设置open_basedir的路径。</p></blockquote></li></ul><hr><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><h3 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理:"></a>文件管理:</h3><ul><li><p>概观<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/file.png" alt="概观"></p></li><li><p>文件分类 (图标,列表,分割)<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/file-resize.png" alt="文件分类"></p></li><li><p>档案创建/提取/预览(zip, rar, 7z, tar, gzip, tgz)<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/file-unzip.png" alt="档案创建/提取/预览"></p></li><li><p>拖动上传<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/file-upload-drag.png" alt="拖动上传"></p></li><li><p>播放器<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/file-player.png" alt="播放器"></p></li><li><p>在线办公室视图和编辑器<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/file-open-pptx.png" alt="Online Office"></p></li></ul><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器:"></a>编辑器:</h3><ul><li><p>概观<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/editor.png" alt="Overview"></p></li><li><p>实时预览<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/editor-preview.png" alt="Live preview"></p></li><li><p>搜索文件夹<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/editor-search.png" alt="Search folder"></p></li><li><p>Markdown<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/file-markdown.png" alt="Markdown"></p></li><li><p>代码样式<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/editor-theme.png" alt="Code style"></p></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他:"></a>其他:</h3><ul><li><p>用户管理<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/system-role.png" alt="System role"></p></li><li><p>多彩的主题<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/system-theme.png" alt="Colorful Theme"></p></li><li><p>自定义主题<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/common-alpha.png" alt="Custom Theme"></p></li><li><p>语言<br><img src="https://raw.githubusercontent.com/kalcaddle/static/master/images/kod/language.png" alt="Language"></p></li></ul><hr><h2 id="软件需求"><a href="#软件需求" class="headerlink" title="软件需求"></a>软件需求</h2><ul><li><p>服务器：</p><ul><li>Windows，Linux，Mac …</li><li>PHP 5.0+</li><li>数据库：文件系统驱动程序; sqlite; mysql; …</li></ul></li><li><p>浏览器兼容性：</p><ul><li>Chrome</li><li>Firefox</li><li>Opera</li><li>IE8 +</li></ul></li></ul><blockquote><p>提示：它也可以在路由器或家庭NAS上运行</p></blockquote><hr><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p>kod 是由以下开源项目成为可能</p><ul><li><a href="https://github.com/seajs/seajs" target="_blank" rel="noopener">seajs</a> </li><li><a href="https://github.com/jquery/jquery" target="_blank" rel="noopener">jQuery</a></li><li><a href="https://github.com/ajaxorg/ace" target="_blank" rel="noopener">ace</a></li><li><a href="https://github.com/zTree/zTree_v3" target="_blank" rel="noopener">zTree</a> </li><li><a href="https://github.com/fex-team/webuploader" target="_blank" rel="noopener">webuploader</a> </li><li><a href="http://aui.github.com/artTemplate/" target="_blank" rel="noopener">artTemplate</a></li><li><a href="https://github.com/aui/artDialog" target="_blank" rel="noopener">artDialog</a></li><li><a href="http://medialize.github.com/jQuery-contextMenu/" target="_blank" rel="noopener">jQuery-contextMenu</a> </li><li>…</li></ul><hr><h2 id="许可信息"><a href="#许可信息" class="headerlink" title="许可信息"></a>许可信息</h2><p>kodcloud is issued under GPLv3.   license.<a href="http://kodcloud.com/tools/licenses/license.txt" target="_blank" rel="noopener">License</a><br>Contact: warlee#kodcloud.com<br>Copyright (C) 2013 kodcloud.com</p><hr><h2 id="版权声明"><a href="#版权声明" class="headerlink" title="版权声明"></a>版权声明</h2><p>kodexplorer 使用 GPL v3 协议.</p>]]></content>
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> session </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php简单验证</title>
      <link href="/posts/3a03.html"/>
      <url>/posts/3a03.html</url>
      <content type="html"><![CDATA[<p>原理：判断输入变量,如果通过则将一个字符串赋值给<code>$_SESSION</code>(可在全局读取变量内容) 然后跳转到指定页面,页面头部验证<code>$_SESSION</code>变量内容,如果不通过则跳转到登陆页面,销毁<code>$_SESSION</code>变量退出登陆</p><hr><h4 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h4><blockquote><p>登陆页面(login.php)</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// session开始</span></span><br><span class="line">    session_start();</span><br><span class="line"></span><br><span class="line">    $name = $_POST[<span class="string">'name'</span>];</span><br><span class="line">    $password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">    <span class="comment">// 定义用户名和密码</span></span><br><span class="line">    $uname = <span class="string">"admin"</span>;</span><br><span class="line">    $upassword = <span class="string">"12345"</span>;</span><br><span class="line">    <span class="comment">// 判断是否是点了提交按钮</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">        <span class="comment">// 判断账号密码</span></span><br><span class="line">        <span class="keyword">if</span> ($password != $upassword || $name != $uname)&#123;</span><br><span class="line">            <span class="comment">// 如果不匹配则给 $_SESSION['key'] 变量一个随机值</span></span><br><span class="line">            $msg = <span class="string">"密码错误！"</span>;</span><br><span class="line">            $_SESSION[<span class="string">'key'</span>] = md5(time().mt_rand(<span class="number">0</span>,<span class="number">1000</span>));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ($password == $upassword &amp;&amp; $name == $uname)&#123;</span><br><span class="line">            <span class="comment">// 通过给 $_SESSION['key'] 赋值指定字符串,跳转到首页进行验证</span></span><br><span class="line">            $_SESSION[<span class="string">'key'</span>] = <span class="string">"51aca69bc8fc0c8c6c654b5fb76bdf62"</span>;</span><br><span class="line">            header(<span class="string">'location:index.php'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;示例登陆页&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">#win10-login &#123;</span></span><br><span class="line">            background: url(<span class="string">'https://picsum.photos/1920/1080/?random'</span>) no-repeat fixed;</span><br><span class="line">         <span class="comment">/* background: url('./img/wallpapers/login.jpg') no-repeat fixed; */</span></span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">            background-size: <span class="number">100</span>% <span class="number">100</span>%;</span><br><span class="line">            position: fixed;</span><br><span class="line">            z-index: <span class="number">-1</span>;</span><br><span class="line">            top: <span class="number">0</span>;</span><br><span class="line">            left: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#win10-login-box &#123;</span></span><br><span class="line">            width: <span class="number">300</span>px;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            margin: <span class="number">0</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .win10-login-box-square &#123;</span><br><span class="line">            width: <span class="number">105</span>px;</span><br><span class="line">            margin: <span class="number">0</span> auto;</span><br><span class="line">            border-radius: <span class="number">50</span>%;</span><br><span class="line">            background-color: darkgray;</span><br><span class="line">            position: relative;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .win10-login-box-square::after &#123;</span><br><span class="line">            content: <span class="string">""</span>;</span><br><span class="line">            display: block;</span><br><span class="line">            padding-bottom: <span class="number">100</span>%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .win10-login-box-square .content &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input &#123;</span><br><span class="line">            width: <span class="number">90</span>%;</span><br><span class="line">            display: block;</span><br><span class="line">            border: <span class="number">0</span>;</span><br><span class="line">            margin: <span class="number">0</span> auto;</span><br><span class="line">            line-height: <span class="number">36</span>px;</span><br><span class="line">            font-size: <span class="number">20</span>px;</span><br><span class="line">            padding: <span class="number">0</span> <span class="number">1</span>em;</span><br><span class="line">            border-radius: <span class="number">5</span>px;</span><br><span class="line">            margin-bottom: <span class="number">11</span>px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .login-username, .login-password &#123;</span><br><span class="line">            width: <span class="number">91</span>%;</span><br><span class="line">            font-size: <span class="number">13</span>px;</span><br><span class="line">            color: <span class="comment">#999;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .login-password &#123;</span><br><span class="line">            width: calc(<span class="number">91</span>% - <span class="number">54</span>px);</span><br><span class="line">            -webkit-border-radius: <span class="number">2</span>px <span class="number">0</span> <span class="number">0</span> <span class="number">2</span>px;</span><br><span class="line">            -moz-border-radius: <span class="number">2</span>px <span class="number">0</span> <span class="number">0</span> <span class="number">2</span>px;</span><br><span class="line">            border-radius: <span class="number">5</span>px <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px;</span><br><span class="line">            margin: <span class="number">0</span>px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .login-submit &#123;</span><br><span class="line">            margin: <span class="number">0</span>px;</span><br><span class="line">            float: left;</span><br><span class="line">            -webkit-border-radius: <span class="number">0</span> <span class="number">5</span>px <span class="number">5</span>px <span class="number">0</span>;</span><br><span class="line">            -moz-border-radius: <span class="number">0</span> <span class="number">5</span>px <span class="number">5</span>px <span class="number">0</span>;</span><br><span class="line">            border-radius: <span class="number">0</span> <span class="number">5</span>px <span class="number">5</span>px <span class="number">0</span>;</span><br><span class="line">            background-color: <span class="comment">#009688;</span></span><br><span class="line">            width: <span class="number">54</span>px;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            height: <span class="number">36</span>px;</span><br><span class="line">            line-height: <span class="number">36</span>px;</span><br><span class="line">            padding: <span class="number">0</span> auto;</span><br><span class="line">            color: <span class="comment">#fff;</span></span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            text-align: center;</span><br><span class="line">            font-size: <span class="number">14</span>px;</span><br><span class="line">            border: none;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            opacity: <span class="number">.9</span>;</span><br><span class="line">            filter: alpha(opacity=<span class="number">90</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">"win10-login"</span>&gt;</span><br><span class="line">    &lt;div style=<span class="string">"height: 10%;min-height: 120px"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div id=<span class="string">"win10-login-box"</span>&gt;</span><br><span class="line">        &lt;div class="win10-login-box-square"&gt;</span><br><span class="line">            &lt;img src="./img/avatar.jpg" class="content"/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;p style=<span class="string">"font-size: 24px;color: white;text-align: center"</span>&gt;游客&lt;/p&gt;</span><br><span class="line">        &lt;form target=<span class="string">"_self"</span> method=<span class="string">"post"</span> action=<span class="string">""</span>&gt;</span><br><span class="line">            &lt;!--用户名--&gt;</span><br><span class="line">            &lt;input type="text" name="name" placeholder="请输入登录名" class="login-username"&gt;</span><br><span class="line">            &lt;!--密码--&gt;</span><br><span class="line">            &lt;input type="password" name="password"  placeholder="请输入密码" class="login-password"&gt;</span><br><span class="line">            &lt;!--登陆按钮--&gt;</span><br><span class="line">            &lt;input type="submit" name="submit"  value="登录" id="btn-login" class="login-submit"/&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--messig--&gt;</span><br><span class="line">    &lt;div style=<span class="string">"width:100px;margin:20px auto;color:#FFFF00"</span>&gt;</span><br><span class="line">        &lt;p &gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $msg;<span class="meta">?&gt;</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><blockquote><p>首页添加验证(index.php)</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// session开始</span></span><br><span class="line">    session_start();</span><br><span class="line">    <span class="comment">// 验证接收到的 $_SESSION['key'] 是否是预定义的,如果不是</span></span><br><span class="line">    <span class="keyword">if</span> ($_SESSION[<span class="string">'key'</span>] != <span class="string">"51aca69bc8fc0c8c6c654b5fb76bdf62"</span>)&#123;</span><br><span class="line">        header(<span class="string">'location:login.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;示例登陆页&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">#win10-login &#123;</span></span><br><span class="line">            background: url(<span class="string">'https://picsum.photos/1920/1080/?random'</span>) no-repeat fixed;</span><br><span class="line">         <span class="comment">/* background: url('./img/wallpapers/login.jpg') no-repeat fixed; */</span></span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">            background-size: <span class="number">100</span>% <span class="number">100</span>%;</span><br><span class="line">            position: fixed;</span><br><span class="line">            z-index: <span class="number">-1</span>;</span><br><span class="line">            top: <span class="number">0</span>;</span><br><span class="line">            left: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#box &#123;</span></span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">200</span>px;</span><br><span class="line">            margin: <span class="number">20</span>% auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body id=<span class="string">"win10-login"</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"box"</span>&gt;</span><br><span class="line">        &lt;p &gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $msg;<span class="meta">?&gt;</span>&lt;/p&gt;</span><br><span class="line">        &lt;a href=<span class="string">"http://www.w3school.com.cn"</span>&gt;W3School&lt;/a&gt;</span><br><span class="line">        &lt;div&gt;&lt;a href=<span class="string">'logout.php'</span>&gt;注销&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&gt; 注销页面(logout.php)</span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    session_start();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'key'</span>]))&#123;</span><br><span class="line">        header(<span class="string">'Content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">        session_unset();<span class="comment">//free all session variable</span></span><br><span class="line">        session_destroy();<span class="comment">//销毁一个会话中的全部数据</span></span><br><span class="line">        setcookie(session_name(),<span class="string">''</span>,time()<span class="number">-3600</span>);<span class="comment">//销毁与客户端的卡号</span></span><br><span class="line">        header(<span class="string">'location:index.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h4 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h4><blockquote><p>登陆页面(login.php)</p></blockquote><p>设置 session 有效期 300 秒 (300 秒内没有任何操作和刷新 session 过期需重新登陆)<br>检测 $_SESSION[‘username’] 如果值等于预定义则 跳转到首页<br>如果有 POST 提交检测 输入的值如果是预定义 将 $_POST[‘username’] 变量值存入 $_SESSION[‘username’] 否则继续验证</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    ini_set(<span class="string">'session.cookie_lifetime'</span>, <span class="number">300</span>);</span><br><span class="line">    ini_set(<span class="string">'session.gc_maxlifetime'</span>, <span class="number">300</span>);</span><br><span class="line">    <span class="comment">// 每1次访问页面,检查所有的 session 并将过期的删除</span></span><br><span class="line">    ini_set(<span class="string">'session.gc_divisor'</span>, <span class="number">1</span>);</span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">'Content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>]) &amp;&amp; $_SESSION[<span class="string">'username'</span>]===<span class="string">'admin'</span>)&#123;</span><br><span class="line">        $msg = <span class="string">"您已经登入了，请不要重新登入！"</span>;</span><br><span class="line">        header(<span class="string">"Refresh:3;url=index.php"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]) &amp;&amp; $_POST[<span class="string">'username'</span>]==<span class="string">'admin'</span> &amp;&amp; $_POST[<span class="string">'password'</span>]==<span class="string">'12345'</span> )&#123;</span><br><span class="line">            $_SESSION[<span class="string">'username'</span>]=$_POST[<span class="string">'username'</span>];</span><br><span class="line">            header(<span class="string">'location:index.php'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">"用户名或密码错误！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;示例登陆页&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">#win10-login &#123;</span></span><br><span class="line">            background: url(<span class="string">'https://picsum.photos/1920/1080/?random'</span>) no-repeat fixed;</span><br><span class="line">         <span class="comment">/* background: url('./img/wallpapers/login.jpg') no-repeat fixed; */</span></span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">            background-size: <span class="number">100</span>% <span class="number">100</span>%;</span><br><span class="line">            position: fixed;</span><br><span class="line">            z-index: <span class="number">-1</span>;</span><br><span class="line">            top: <span class="number">0</span>;</span><br><span class="line">            left: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#win10-login-box &#123;</span></span><br><span class="line">            width: <span class="number">300</span>px;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            margin: <span class="number">0</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .win10-login-box-square &#123;</span><br><span class="line">            width: <span class="number">115</span>px;</span><br><span class="line">            margin: <span class="number">0</span> auto;</span><br><span class="line">            border-radius: <span class="number">50</span>%;</span><br><span class="line">            background-color: darkgray;</span><br><span class="line">            position: relative;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .win10-login-box-square::after &#123;</span><br><span class="line">            content: <span class="string">""</span>;</span><br><span class="line">            display: block;</span><br><span class="line">            padding-bottom: <span class="number">100</span>%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .win10-login-box-square .content &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input &#123;</span><br><span class="line">            width: <span class="number">90</span>%;</span><br><span class="line">            display: block;</span><br><span class="line">            border: <span class="number">0</span>;</span><br><span class="line">            margin: <span class="number">0</span> auto;</span><br><span class="line">            line-height: <span class="number">36</span>px;</span><br><span class="line">            font-size: <span class="number">20</span>px;</span><br><span class="line">            padding: <span class="number">0</span> <span class="number">1</span>em;</span><br><span class="line">            border-radius: <span class="number">5</span>px;</span><br><span class="line">            margin-bottom: <span class="number">11</span>px;</span><br><span class="line">            background:url(<span class="number">0</span>) no-repeat;</span><br><span class="line">            background:rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .login-username, .login-password &#123;</span><br><span class="line">            width: <span class="number">91</span>%;</span><br><span class="line">            font-size: <span class="number">13</span>px;</span><br><span class="line">            color: <span class="comment">#009688;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .login-password &#123;</span><br><span class="line">            width: calc(<span class="number">91</span>% - <span class="number">54</span>px);</span><br><span class="line">            -webkit-border-radius: <span class="number">2</span>px <span class="number">0</span> <span class="number">0</span> <span class="number">2</span>px;</span><br><span class="line">            -moz-border-radius: <span class="number">2</span>px <span class="number">0</span> <span class="number">0</span> <span class="number">2</span>px;</span><br><span class="line">            border-radius: <span class="number">5</span>px <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px;</span><br><span class="line">            margin: <span class="number">0</span>px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .login-submit &#123;</span><br><span class="line">            margin: <span class="number">0</span>px;</span><br><span class="line">            float: left;</span><br><span class="line">            -webkit-border-radius: <span class="number">0</span> <span class="number">5</span>px <span class="number">5</span>px <span class="number">0</span>;</span><br><span class="line">            -moz-border-radius: <span class="number">0</span> <span class="number">5</span>px <span class="number">5</span>px <span class="number">0</span>;</span><br><span class="line">            border-radius: <span class="number">0</span> <span class="number">5</span>px <span class="number">5</span>px <span class="number">0</span>;</span><br><span class="line">            background-color: <span class="comment">#009688;</span></span><br><span class="line">            width: <span class="number">54</span>px;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            height: <span class="number">36</span>px;</span><br><span class="line">            line-height: <span class="number">36</span>px;</span><br><span class="line">            padding: <span class="number">0</span> auto;</span><br><span class="line">            color: <span class="comment">#fff;</span></span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            text-align: center;</span><br><span class="line">            font-size: <span class="number">14</span>px;</span><br><span class="line">            border: none;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            opacity: <span class="number">.9</span>;</span><br><span class="line">            filter: alpha(opacity=<span class="number">90</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">"win10-login"</span>&gt;</span><br><span class="line">    &lt;div style=<span class="string">"height: 10%;min-height: 120px"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div id=<span class="string">"win10-login-box"</span>&gt;</span><br><span class="line">        &lt;div class="win10-login-box-square"&gt;</span><br><span class="line">       &lt;!-- &lt;img src="./img/avatar.jpg" class="content"/&gt; --&gt;</span><br><span class="line">            &lt;img src="https://picsum.photos/140/140/?random" class="content"/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;p style=<span class="string">"font-size: 24px;color: white;text-align: center"</span>&gt;游客&lt;/p&gt;</span><br><span class="line">        &lt;form target=<span class="string">"_self"</span> method=<span class="string">"post"</span> action=<span class="string">""</span>&gt;</span><br><span class="line">            &lt;!--用户名--&gt;</span><br><span class="line">            &lt;input type="text" name="username" autocomplete="new-password" placeholder="请输入登录名" class="login-username"&gt;</span><br><span class="line">            &lt;!--密码--&gt;</span><br><span class="line">            &lt;input type="password" name="password" autocomplete="new-password" placeholder="请输入密码" class="login-password"&gt;</span><br><span class="line">            &lt;!--登陆按钮--&gt;</span><br><span class="line">            &lt;input type="submit" name="submit"  value="登录" id="btn-login" class="login-submit"/&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--messig--&gt;</span><br><span class="line">    &lt;div style=<span class="string">"width:150px;margin:20px auto;color:#009688"</span>&gt;</span><br><span class="line">        &lt;p &gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $msg;<span class="meta">?&gt;</span>&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><blockquote><p>首页(index.php)</p></blockquote><p>检测 $_SESSION[‘username’] 是否等于预定义值如果是则允许正常访问 否则跳转到登陆页面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    ini_set(<span class="string">'session.cookie_lifetime'</span>, <span class="number">300</span>);</span><br><span class="line">    ini_set(<span class="string">'session.gc_maxlifetime'</span>, <span class="number">300</span>);</span><br><span class="line">    ini_set(<span class="string">'session.gc_divisor'</span>, <span class="number">1</span>);</span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">'Content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>]) &amp;&amp; $_SESSION[<span class="string">'username'</span>]===<span class="string">'admin'</span>)&#123;</span><br><span class="line">        $msg = <span class="string">"您好！&#123;$_SESSION['username']&#125;,欢迎回来！"</span>;</span><br><span class="line">    &#125;  <span class="keyword">else</span> &#123;</span><br><span class="line">        header(<span class="string">'location:login.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;示例登陆页&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">#win10-login &#123;</span></span><br><span class="line">            background: url(<span class="string">'https://picsum.photos/1920/1080/?random'</span>) no-repeat fixed;</span><br><span class="line">         <span class="comment">/* background: url('./img/wallpapers/login.jpg') no-repeat fixed; */</span></span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">100</span>%;</span><br><span class="line">            background-size: <span class="number">100</span>% <span class="number">100</span>%;</span><br><span class="line">            position: fixed;</span><br><span class="line">            z-index: <span class="number">-1</span>;</span><br><span class="line">            top: <span class="number">0</span>;</span><br><span class="line">            left: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#box &#123;</span></span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">200</span>px;</span><br><span class="line">            margin: <span class="number">20</span>% auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body id=<span class="string">"win10-login"</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"box"</span>&gt;</span><br><span class="line">        &lt;p &gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $msg;<span class="meta">?&gt;</span>&lt;/p&gt;</span><br><span class="line">        &lt;a href=<span class="string">"http://www.w3school.com.cn"</span>&gt;W3School&lt;/a&gt;</span><br><span class="line">        &lt;div&gt;&lt;a href=<span class="string">'logout.php'</span>&gt;注销&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><blockquote><p>注销页面(logout.php)</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">'Content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>]) &amp;&amp; $_SESSION[<span class="string">'username'</span>]===<span class="string">'admin'</span>)&#123;</span><br><span class="line">            session_unset();<span class="comment">//free all session variable</span></span><br><span class="line">            session_destroy();<span class="comment">//销毁一个会话中的全部数据</span></span><br><span class="line">            setcookie(session_name(),<span class="string">''</span>,time()<span class="number">-3600</span>);<span class="comment">//销毁与客户端的卡号</span></span><br><span class="line">            header(<span class="string">'location:login.php'</span>);&gt;II</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            header(<span class="string">'location:index.php'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 群晖 </tag>
            
            <tag> 登陆验证 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>开源NAS操作系统不完全汇总</title>
      <link href="/posts/1478.html"/>
      <url>/posts/1478.html</url>
      <content type="html"><![CDATA[<p><a href="http://www.getnas.com/open-source-nas" target="_blank" rel="noopener">本文来自GetNAS</a></p><p>市面上能见到的 NAS 操作系统很多，有如 FreeNAS 这样意气风发的开源免费版，也有完全商业的闭源版本，更有如黑群晖之类的破解版本。NAS 系统的迭代是一个大浪淘沙的过程，活下来的系统在功能上逐渐趋同，这代表了市场的普遍需求。本页旨在汇总开源 NAS 操作系统，为大家 DIY NAS 提供一些参考。</p><p>1.<em>FreeNAS®</em>，目前最受欢迎的开源免费 NAS 操作系统之一，基于以安全和稳定著称的 FreeBSD 系统开发，由 ixsystems 公司的技术团队维护。<br><a href="http://www.freenas.org" target="_blank" rel="noopener">项目地址</a></p><p>2.<em>NAS4Free</em>，基于 FreeNAS 0.7 开发的一个分支，由原 FreeNAS 系统开发者发起创建。许多恋旧的朋友忠实的跟随，安装要求没有 FreeNAS 高，版本更新也很及时。<br><a href="http://www.nas4free.org" target="_blank" rel="noopener">项目地址</a></p><p>3.<em>OpenMediaVault</em>，由原 FreeNAS 核心开发成员 Volker Theile 发起的基于 Debian Linux 的开源 NAS 操作系统，主要面向家庭用户和小型办公环境，最近发布了针对树莓派的安装包，值得关注。<br><a href="http://www.openmediavault.org" target="_blank" rel="noopener">项目地址</a></p><p>4.<em>Openfiler</em>，另一款基于浏览器管理的开源 NAS 操作系统，许多人说他好用，因为它基于 rPath Linux 开发。2013年以后，这款 NAS 系统的开源版本再没有更新。<br><a href="http://www.openfiler.com" target="_blank" rel="noopener">项目地址</a></p><p>5.<em>NexentaStor</em>，基于 OpenSolaris 开发，与 FreeNAS 一样采用强大的 ZFS 文件系统。该系统由 Nexenta Systems 公司技术团队维护，同时提供社区开原版和商业付费版本，社区开原版有 18TB 的存储容量限制，有人说 NexentaStor 比 OpenFiler 好用。<br><a href="http://www.nexentastor.org" target="_blank" rel="noopener">项目地址</a></p><p>6.<em>RockStor</em>，一款基于 Linux 的开源 NAS 系统，采用企业级文件系统 BTRFS，提供 SMB/CIFS、NFS  以及 SFTP 常见的共享方式。第一个 ISO 镜像发布于 2014-10-02，可见这套 NAS 系统初出茅庐，暂无简体中文支持。不过官网文档已经备齐，保持关注，可能有一番作为。<br><a href="http://rockstor.com" target="_blank" rel="noopener">项目地址</a></p><p>7.<em>EasyNAS</em>，另一款非常年轻的 NAS 系统，与 RockStor 很像，同样采用企业级文件系统 BTRFS，但官方网站和文档会略逊一筹，第一个 ISO 镜像发布于 2014-05-10。<br><a href="http://www.easynas.org" target="_blank" rel="noopener">项目地址</a></p><p>8.<em>NASLite-2</em>，是少数基于 Linux 的商用 NAS 操作系统，由 Server Elements 公司出品，需要支付29.95 美元才能下载 ISO 镜像文件。<br><a href="http://www.serverelements.com/?target=NASLite-2" target="_blank" rel="noopener">项目地址</a></p><p>9.<em>NanoNAS</em>，同样出自 Server Elements 公司，它是 NASLite-2 的精简版，需支付 9.95 美元才可以下载 ISO 镜像文件。<br><a href="http://www.serverelements.com/?target=NanoNAS" target="_blank" rel="noopener">项目地址</a></p><p>10.<em>CryptoNAS</em>，以前叫做CryptoBox，是一个专注于磁盘加密的项目，提供基于 Linux 的 LiveCD，整合了 NAS 服务器加密功能，此外，也提供了安装包，可直接安装到现有 Linux 服务器上，为磁盘加密提供友好的浏览器管理界面。<br><a href="http://www.cryptonas.org" target="_blank" rel="noopener">项目地址</a></p><p>11.<em>Webmin</em>，它不是 NAS 操作系统，但可以实现基本的 samba 共享功能，webmin 是目前功能最强大的基于浏览器的 Unix 系统管理工具。可以安装在几乎所有的类 Unix 操作系统上面。特别适合刚入门的用户管理 Linux 服务器。<br><a href="http://www.webmin.cn" target="_blank" rel="noopener">项目地址</a></p><p>12.<em>GlusterFS</em>，由 Z RESEARCH 公司负责开发，最近非常活跃。 文档也比较齐全，不难上手。GlusterFS 通过 Infiniband RDMA 或 TCP/IP 协议将多台廉价的 x86 主机，通过网络互联成一个并行的网络文件系统。据说 Gluster 已被 RedHat 收购，求证实。<br><a href="http://www.gluster.org" target="_blank" rel="noopener">项目地址</a></p><p>13.<em>Lustre®</em>，为解决海量存储问题而设计的全新文件系统。是下一代的集群文件系统，可支持10,000个节点，PB的存储量，100GB/S的传输速度，完美的安全性和可管理性。 目前Lustre已经运用在一些领域，例如HP SFS产品等。<br><a href="http://lustre.org" target="_blank" rel="noopener">项目地址</a></p>]]></content>
      
      <categories>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> NAS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CentOS 7-GitLab安装</title>
      <link href="/posts/89fe.html"/>
      <url>/posts/89fe.html</url>
      <content type="html"><![CDATA[<h3 id="Omnibus软件包安装"><a href="#Omnibus软件包安装" class="headerlink" title="Omnibus软件包安装"></a>Omnibus软件包安装</h3><p>#### </p><blockquote><p>配置必要的依赖关系</p></blockquote><pre><code>yum install -y wget curl policycoreutils-python</code></pre><blockquote><p>下载RPM安装包</p></blockquote><pre><code>wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-10.4.4-ce.0.el7.x86_64.rpm</code></pre><blockquote><p>安装</p></blockquote><pre><code>yum install -y gitlab-ce-10.4.4-ce.0.el7.x86_64.rpm</code></pre><blockquote><p>初始化</p></blockquote><pre><code>gitlab-ctl reconfigure</code></pre><blockquote><p>汉化</p></blockquote><pre><code># 获取当前版本gitlab_version=$(sudo cat /opt/gitlab/embedded/service/gitlab-rails/VERSION)# 克隆汉化版本库git clone https://gitlab.com/xhang/gitlab.git# 如果已经克隆过，则进行更新cd gitlabgit fetch# 生成版本的汉化补丁git diff v${gitlab_version} v${gitlab_version}-zh &gt; ../${gitlab_version}-zh.diffcd ../# 导入汉化补丁gitlab-ctl stopyum -y install patchpatch -d /opt/gitlab/embedded/service/gitlab-rails -p1 &lt; ${gitlab_version}-zh.diffgitlab-ctl start</code></pre><blockquote><p>配置邮件</p></blockquote><pre><code>gitlab_rails[&apos;smtp_enable&apos;] = true gitlab_rails[&apos;smtp_address&apos;] = &quot;onewserverdc.onewtech.com&quot;gitlab_rails[&apos;smtp_port&apos;] = 25 gitlab_rails[&apos;smtp_user_name&apos;] = &quot;gitlab@onewtech.com&quot;gitlab_rails[&apos;smtp_password&apos;] = &quot;passwd&quot;gitlab_rails[&apos;smtp_domain&apos;] = &quot;onewtech.com&quot;gitlab_rails[&apos;smtp_authentication&apos;] = &quot;login&quot;gitlab_rails[&apos;smtp_enable_starttls_auto&apos;] = truegitlab_rails[&apos;gitlab_email_from&apos;] = &quot;gitlab@onewtech.com&quot;user[&quot;git_user_email&quot;] = &quot;gitlab@onewtech.com&quot;# 命令参考sed -i &quot;423 s/^# gitlab/gitlab/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;424 s/^# gitlab/gitlab/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;424 s/smtp.server/onewserver.onewtech.com/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;425 s/^# gitlab/gitlab/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;425 s/465/25/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;426 s/^# gitlab/gitlab/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;426 s/smtp user/gitlab@onewtech.com/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;427 s/^# gitlab/gitlab/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;427 s/smtp password/******/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;428 s/^# gitlab/gitlab/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;428 s/example.com/onewtech.com/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;429 s/^# gitlab/gitlab/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;430 s/^# gitlab/gitlab/g&quot; /etc/gitlab/gitlab.rbsed -i &quot;430a gitlab_rails[&apos;gitlab_email_from&apos;] = \&quot;gitlab@onewtech.com\&quot;&quot; /etc/gitlab/gitlab.rbsed -i &apos;431a user[&quot;git_user_email&quot;] = \&quot;gitlab@onewtech.com\&quot;&apos; /etc/gitlab/gitlab.rbgitlab-ctl stopgitlab-ctl statusgitlab-ctl reconfiguregitlab-ctl start</code></pre><blockquote><p>修改仓库路径</p></blockquote><pre><code>git_data_dirs({ &quot;default&quot; =&gt; { &quot;path&quot; =&gt; &quot;/data/gitlab-data&quot; } })</code></pre><blockquote><p>管理命令</p></blockquote><pre><code>gitlab-ctl stop       # 停止服务gitlab-ctl start      # 启动服务gitlab-ctl status     # 查看服务状态gitlab-ctl reconfigure    # 根据/etc/gitlab/gitlab.rd文件初始化</code></pre><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3>]]></content>
      
      <categories>
          
          <category> gitlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> git </tag>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Frp内网穿透</title>
      <link href="/posts/6b1f.html"/>
      <url>/posts/6b1f.html</url>
      <content type="html"><![CDATA[<p>本文来源于<a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">官方中文文档</a></p><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议,利用处于内网或防火墙后的机器,对外网环境提供 http 或 https 服务,对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口,利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机</p><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><p>根据对应的操作系统及架构，从 <a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">Release</a> 页面下载最新版本的程序.<br>将 frps 及 frps.ini 放到具有公网 IP 的机器上。<br>将 frpc 及 frpc.ini 放到处于内网环境的机器上。</p><h4 id="通过-ssh-访问公司内网机器"><a href="#通过-ssh-访问公司内网机器" class="headerlink" title="通过 ssh 访问公司内网机器"></a>通过 ssh 访问公司内网机器</h4><p>1.服务器端,修改 frps.ini 文件,这里使用了最简化的配置：</p><pre><code># frps.ini[common]bind_port = 7000</code></pre><p>2.启动 frps：</p><pre><code>./frps -c ./frps.ini</code></pre><p>3.客户端,修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000[ssh]type = tcplocal_ip = 127.0.0.1local_port = 22remote_port = 6000</code></pre><p>4.启动frpc：</p><pre><code>./frpc -c ./frpc.ini</code></pre><p>5.通过 ssh 访问内网机器，假设内网用户名为 test：x.x.x.x代表公网IP或域名</p><pre><code>ssh -oPort=6000 test@x.x.x.x</code></pre><h4 id="通过自定义域名访问部署于内网的-web-服务"><a href="#通过自定义域名访问部署于内网的-web-服务" class="headerlink" title="通过自定义域名访问部署于内网的 web 服务"></a>通过自定义域名访问部署于内网的 web 服务</h4><p>有时想要让其他人通过域名访问或者测试我们在本地搭建的 web 服务,但是由于本地机器没有公网 IP,无法将域名解析到本地的机器,通过 frp 就可以实现这一功能,以下示例为 http 服务,https 服务配置方法相同, vhost_http_port 替换为 vhost_https_port, type 设置为 https 即可.</p><p>1.服务器端,修改 frps.ini 文件,设置 http 访问端口为 8080：</p><pre><code># frps.ini[common]bind_port = 7000vhost_http_port = 8080</code></pre><p>2.启动 frps；</p><pre><code>./frps -c ./frps.ini</code></pre><p>3.客户端,修改 frpc.ini 文件,假设 frps 所在的服务器的 IP 为 x.x.x.x，local_port 为本地机器上 web 服务对应的端口, 绑定自定义域名：nas.onlycloud.xin</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000[web]type = httplocal_port = 80custom_domains = nas.onlycloud.xin</code></pre><p>4.启动 frpc：</p><pre><code>./frpc -c ./frpc.ini</code></pre><p>5.将 nas.onlycloud.xin 的域名 A 记录解析到 IP x.x.x.x，如果服务器已经有对应的域名，也可以将 CNAME 记录解析到服务器原先的域名</p><p><hr><br>6.通过浏览器访问 <a href="http://nas.onlycloud.xin:8080" target="_blank" rel="noopener">http://nas.onlycloud.xin:8080</a> 即可访问到处于内网机器上的 web 服务。</p><h4 id="转发-DNS-查询请求"><a href="#转发-DNS-查询请求" class="headerlink" title="转发 DNS 查询请求"></a>转发 DNS 查询请求</h4><p>DNS 查询请求通常使用 UDP 协议.frp 支持对内网 UDP 服务的穿透.配置方式和 TCP 基本一致.</p><p>1.服务器端,修改 frps.ini 文件：</p><pre><code># frps.ini[common]bind_port = 7000</code></pre><p>2.启动 frps：</p><pre><code>./frps -c ./frps.ini</code></pre><p>3.客户端,修改 frpc.ini 文件,设置 frps 所在服务器的 IP 为 x.x.x.x，转发到 Google 的 DNS 查询服务器 8.8.8.8 的 udp 53 端口：</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000[dns]type = udplocal_ip = 8.8.8.8local_port = 53remote_port = 6000</code></pre><p>4.启动 frpc：</p><pre><code>./frpc -c ./frpc.ini</code></pre><p>5.通过 dig 测试 UDP 包转发是否成功，预期会返回 <a href="http://www.google.com" target="_blank" rel="noopener">www.google.com</a> 域名的解析结果：</p><pre><code>dig @x.x.x.x -p 6000 www.google.com</code></pre><h4 id="转发-Unix域套接字"><a href="#转发-Unix域套接字" class="headerlink" title="转发 Unix域套接字"></a>转发 Unix域套接字</h4><p>通过 tcp 端口访问内网的 unix域套接字(例如和 docker daemon 通信)</p><p>1.服务器端,修改 frps.ini 文件：</p><pre><code># frps.ini[common]bind_port = 7000</code></pre><p>2.启动 frps：</p><pre><code>./frps -c ./frps.ini</code></pre><p>3.客户端,启用 unix_domain_socket 插件，配置如下：(插件：unix_domain_socket)</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000[unix_domain_socket]type = tcpremote_port = 6000plugin = unix_domain_socketplugin_unix_path = /var/run/docker.sock</code></pre><p>4.启动 frpc：</p><pre><code>./frpc -c ./frpc.ini</code></pre><p>5.通过 curl 命令查看 docker 版本信息</p><pre><code>curl http://x.x.x.x:6000/version</code></pre><h4 id="对外提供简单的文件访问服务"><a href="#对外提供简单的文件访问服务" class="headerlink" title="对外提供简单的文件访问服务"></a>对外提供简单的文件访问服务</h4><p>通过 static_file 插件可以对外提供一个简单的基于 HTTP 的文件访问服务.</p><p>1.服务器端,修改 frps.ini 文件：</p><pre><code># frps.ini[common]bind_port = 7000</code></pre><p>2.启动 frps：</p><pre><code>./frps -c ./frps.ini</code></pre><p>3.客户端,启用 static_file 插件,配置如下：</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000[test_static_file]type = tcpremote_port = 6000plugin = static_file# 要对外暴露的文件目录plugin_local_path = /tmp/file# 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径plugin_strip_prefix = staticplugin_http_user = abcplugin_http_passwd = abc</code></pre><p>4.启动 frpc：</p><pre><code>./frpc -c ./frpc.ini</code></pre><p>5.通过浏览器访问 <a href="http://x.x.x.x:6000/static/" target="_blank" rel="noopener">http://x.x.x.x:6000/static/</a> 来查看位于 /tmp/file 目录下的文件,会要求输入已设置好的用户名和密码。</p><h4 id="安全地暴露内网服务"><a href="#安全地暴露内网服务" class="headerlink" title="安全地暴露内网服务"></a>安全地暴露内网服务</h4><p>对于某些服务来说如果直接暴露于公网上将会存在安全隐患。<br>使用 stcp(secret tcp) 类型的代理可以避免让任何人都能访问到要穿透的服务，但是访问者也需要运行另外一个 frpc。<br>以下示例将会创建一个只有自己能访问到的 ssh 服务代理。</p><p>1.服务器端,修改 frps.ini 文件：</p><pre><code># frps.ini[common]bind_port = 7000</code></pre><p>2.启动 frps：</p><pre><code>./frps -c ./frps.ini</code></pre><p>3.客户端,转发内网的 ssh 服务,配置如下,不需要指定远程端口：</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000[secret_ssh]type = stcp# 只有 sk 一致的用户才能访问到此服务sk = abcdefglocal_ip = 127.0.0.1local_port = 22</code></pre><p>4.在要访问这个服务的机器上启动另外一个 frpc,配置如下：</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000[secret_ssh_visitor]type = stcp# stcp 的访问者role = visitor# 要访问的 stcp 代理的名字server_name = secret_sshsk = abcdefg# 绑定本地端口用于访问 ssh 服务bind_addr = 127.0.0.1bind_port = 6000</code></pre><p>5.通过 ssh 访问内网机器,假设用户名为 test：</p><pre><code>ssh -oPort=6000 test@127.0.0.1</code></pre><h4 id="点对点内网穿透"><a href="#点对点内网穿透" class="headerlink" title="点对点内网穿透"></a>点对点内网穿透</h4><p>frp 提供了一种新的代理类型 <strong>xtcp</strong> 用于应对在希望传输大量数据且流量不经过服务器的场景。<br>使用方式同 <strong>stcp</strong> 类似,需要在两边都部署上 frpc 用于建立直接的连接。<br>目前处于开发的初级阶段,并不能穿透所有类型的 NAT 设备,所以穿透成功率较低。穿透失败时可以尝试 <strong>stcp</strong> 的方式。</p><p>1.服务器端,修改 frps.ini 文件：</p><pre><code># frps.ini[common]bind_port = 7000bind_udp_port = 7001</code></pre><p>2.启动 frps：</p><pre><code>./frps -c ./frps.ini</code></pre><p>3.服务端,转发内网的 ssh 服务,配置如下,不需要指定远程端口：</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000[p2p_ssh]type = xtcp# 只有 sk 一致的用户才能访问到此服务sk = abcdefglocal_ip = 127.0.0.1local_port = 22</code></pre><p>4.在要访问这个服务的机器上启动另外一个 frpc,配置如下：</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000[p2p_ssh_visitor]type = xtcp# xtcp 的访问者role = visitor# 要访问的 xtcp 代理的名字server_name = p2p_sshsk = abcdefg# 绑定本地端口用于访问 ssh 服务bind_addr = 127.0.0.1bind_port = 6000</code></pre><p>5.通过 ssh 访问内网机器,假设用户名为 test:</p><pre><code>ssh -oPort=6000 test@127.0.0.1</code></pre><h4 id="通过-frpc-所在机器访问外网"><a href="#通过-frpc-所在机器访问外网" class="headerlink" title="通过 frpc 所在机器访问外网"></a>通过 frpc 所在机器访问外网</h4><p>frpc 内置了 http proxy 和 socks5 插件,可以使其他机器通过 frpc 的网络访问互联网。</p><p>1.服务器端,修改 frps.ini 文件：</p><pre><code># frps.ini[common]bind_port = 7000bind_udp_port = 7001</code></pre><p>2.启动 frps：</p><pre><code>./frps -c ./frps.ini</code></pre><p>3.客户端,启用 http_proxy 或 socks5 插件(plugin 换为 socks5 即可)， 配置如下：</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000[http_proxy]type = tcpremote_port = 6000plugin = http_proxy</code></pre><p>4.浏览器设置 http 或 socks5 代理地址为 <code>x.x.x.x:6000</code>,通过 frpc 机器的网络访问互联网</p><h3 id="功能说明"><a href="#功能说明" class="headerlink" title="功能说明"></a>功能说明</h3><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>由于 frp 目前支持的功能和配置项较多，未在文档中列出的功能可以从完整的示例配置文件中发现。</p><p><a href="https://github.com/fatedier/frp/blob/master/conf/frps_full.ini" target="_blank" rel="noopener">frps 完整配置文件</a><br><a href="https://github.com/fatedier/frp/blob/master/conf/frpc_full.ini" target="_blank" rel="noopener">frpc 完整配置文件</a></p><hr><h4 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h4><blockquote><p>通过浏览器查看 frp 的状态以及代理统计信息展示。</p></blockquote><p>1.需要在 frps.ini 中指定 dashboard 服务使用的端口,即可开启此功能：</p><pre><code>[common]dashboard_port = 7500# dashboard 用户名密码，默认都为 admindashboard_user = admindashboard_pwd = admin</code></pre><p>2.打开浏览器通过 <code>http://[server_addr]:7500</code> 访问 dashboard 界面，用户名密码默认为 <code>admin</code>。</p><h4 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h4><p>从 v0.10.0 版本开始,所有 proxy 配置全部放在客户端(也就是之前版本的特权模式),服务端和客户端的 common 配置中的 <code>privilege_token</code> 参数一致则身份验证通过。</p><p>需要注意的是 frpc 所在机器和 frps 所在机器的时间相差不能超过 15 分钟,因为时间戳会被用于加密验证中,防止报文被劫持后被其他人利用。</p><p>这个超时时间可以在配置文件中通过 <code>authentication_timeout</code> 这个参数来修改,单位为秒,默认值为 900,即 15 分钟。如果修改为 0,则 frps 将不对身份验证报文的时间戳进行超时校验。</p><hr><h4 id="加密与压缩"><a href="#加密与压缩" class="headerlink" title="加密与压缩"></a>加密与压缩</h4><p>这两个功能默认是不开启的,需要在 frpc.ini 中通过配置来为指定的代理启用加密与压缩的功能,压缩算法使用 snappy：</p><pre><code># frpc.ini[ssh]type = tcplocal_port = 22remote_port = 6000use_encryption = trueuse_compression = true</code></pre><p>如果公司内网防火墙对外网访问进行了流量识别与屏蔽,例如禁止了 ssh 协议等，通过设置 <code>use_encryption = true</code>,将 frpc 与 frps 之间的通信内容加密传输，将会有效防止流量被拦截</p><p>如果传输的报文长度较长，通过设置 <code>use_compression = true</code> 对传输内容进行压缩，可以有效减小 frpc 与 frps 之间的网络流量,加快流量转发速度,但是会额外消耗一些 cpu 资源。</p><hr><h4 id="客户端热加载配置文件"><a href="#客户端热加载配置文件" class="headerlink" title="客户端热加载配置文件"></a>客户端热加载配置文件</h4><p>当修改了 frpc 中的代理配置,可以通过 <code>frpc reload</code> 命令来动态加载配置文件，通常会在 10 秒内完成代理的更新。</p><p>启用此功能需要在 frpc 中启用 admin 端口,用于提供 API 服务。配置如下：</p><pre><code># frpc.ini[common]admin_addr = 127.0.0.1admin_port = 7400</code></pre><p>之后执行重启命令：</p><pre><code>frpc reload -c ./frpc.ini</code></pre><p>等待一段时间后客户端会根据新的配置文件创建,更新,删除代理。</p><h4 id="客户端查看代理状态"><a href="#客户端查看代理状态" class="headerlink" title="客户端查看代理状态"></a>客户端查看代理状态</h4><p>frpc 支持通过 <code>frpc status -c ./frpc.ini</code> 命令查看代理的状态信息,此功能需要在 frpc 中配置 admin 端口。</p><h4 id="特权模式"><a href="#特权模式" class="headerlink" title="特权模式"></a>特权模式</h4><p>由于从 v0.10.0 版本开始,所有 proxy 都在客户端配置,原先的特权模式是目前唯一支持的模式。</p><h5 id="端口白名单"><a href="#端口白名单" class="headerlink" title="端口白名单"></a>端口白名单</h5><p>为了防止端口被滥用,可以手动指定允许哪些端口被使用,在 frps.ini 中通过 privilege_allow_ports 来指定：</p><pre><code># frps.ini[common]privilege_allow_ports = 2000-3000,3001,3003,4000-50000</code></pre><p>privilege_allow_ports 可以配置允许使用的某个指定端口或者是一个范围内的所有端口，以 <code>,</code> 分隔，指定的范围以 <code>-</code> 分隔。</p><h4 id="TCP-多路复用"><a href="#TCP-多路复用" class="headerlink" title="TCP 多路复用"></a>TCP 多路复用</h4><p>从 v0.10.0 版本开始,客户端和服务器端之间的连接支持多路复用,不再需要为每一个用户请求创建一个连接,使连接建立的延迟降低,并且避免了大量文件描述符的占用,使 frp 可以承载更高的并发数。</p><p>该功能默认启用,如需关闭,可以在 frps.ini 和 frpc.ini 中配置,该配置项在服务端和客户端必须一致：</p><pre><code># frps.ini 和 frpc.ini 中[common]tcp_mux = false</code></pre><h4 id="底层通信可选-kcp-协议"><a href="#底层通信可选-kcp-协议" class="headerlink" title="底层通信可选 kcp 协议"></a>底层通信可选 kcp 协议</h4><p>从 v0.12.0 版本开始,底层通信协议支持选择 kcp 协议,在弱网环境下传输效率提升明显,但是会有一些额外的流量消耗。</p><p>开启 kcp 协议支持：</p><p>1.在 frps.ini 中启用 kcp 协议支持,指定一个 udp 端口用于接收客户端请求：</p><pre><code># frps.ini[common]bind_port = 7000# kcp 绑定的是 udp 端口，可以和 bind_port 一样kcp_bind_port = 7000</code></pre><p>2.在 frpc.ini 指定需要使用的协议类型,目前只支持 tcp 和 kcp。其他代理配置不需要变更：</p><pre><code># frpc.ini[common]server_addr = x.x.x.x# server_port 指定为 frps 的 kcp_bind_portserver_port = 7000protocol = kcp</code></pre><p>3.像之前一样使用 frp,需要注意开放相关机器上的 udp 的端口的访问权限。</p><h4 id="连接池"><a href="#连接池" class="headerlink" title="连接池"></a>连接池</h4><p>默认情况下,当用户请求建立连接后,frps 才会请求 frpc 主动与后端服务建立一个连接。当为指定的代理启用连接池后,frp 会预先和后端服务建立起指定数量的连接,每次接收到用户请求后,会从连接池中取出一个连接和用户连接关联起来,避免了等待与后端服务建立连接以及 frpc 和 frps 之间传递控制信息的时间。</p><p>这一功能比较适合有大量短连接请求时开启。</p><p>1.首先可以在 frps.ini 中设置每个代理可以创建的连接池上限,避免大量资源占用,客户端设置超过此配置后会被调整到当前值：</p><pre><code># frps.ini[common]max_pool_count = 5</code></pre><p>2.在 frpc.ini 中为客户端启用连接池,指定预创建连接的数量：</p><pre><code># frpc.ini[common]pool_count = 1</code></pre><h4 id="修改-Host-Header"><a href="#修改-Host-Header" class="headerlink" title="修改 Host Header"></a>修改 Host Header</h4><p>通常情况下 frp 不会修改转发的任何数据。但有一些后端服务会根据 http 请求 header 中的 host 字段来展现不同的网站,例如 nginx 的虚拟主机服务,启用 host-header 的修改功能可以动态修改 http 请求中的 host 字段。该功能仅限于 http 类型的代理。</p><pre><code># frpc.ini[web]type = httplocal_port = 80custom_domains = test.yourdomain.comhost_header_rewrite = dev.yourdomain.com</code></pre><p>原来 http 请求中的 host 字段 <code>test.yourdomain.com</code> 转发到后端服务时会被替换为 <code>dev.yourdomain.com</code>。</p><h4 id="获取用户真实-IP"><a href="#获取用户真实-IP" class="headerlink" title="获取用户真实 IP"></a>获取用户真实 IP</h4><p>目前只有 <strong>http</strong> 类型的代理支持这一功能,可以通过用户请求的 header 中的 <code>X-Forwarded-For</code> 和 <code>X-Real-IP</code> 来获取用户真实 IP。</p><p><strong>需要注意的是,目前只在每一个用户连接的第一个 HTTP 请求中添加了这两个 header。</strong></p><hr><h4 id="通过密码保护你的-web-服务"><a href="#通过密码保护你的-web-服务" class="headerlink" title="通过密码保护你的 web 服务"></a>通过密码保护你的 web 服务</h4><p>由于所有客户端共用一个 frps 的 http 服务端口,任何知道你的域名和 url 的人都能访问到你部署在内网的 web 服务,但是在某些场景下需要确保只有限定的用户才能访问。</p><p>frp 支持通过 HTTP Basic Auth 来保护你的 web 服务,使用户需要通过用户名和密码才能访问到你的服务。</p><p>该功能目前仅限于 http 类型的代理，需要在 frpc 的代理配置中添加用户名和密码的设置。</p><pre><code># frpc.ini[web]type = httplocal_port = 80custom_domains = test.yourdomain.comhttp_user = abchttp_pwd = abc</code></pre><p>通过浏览器访问 <code>http://test.yourdomain.com</code>,需要输入配置的用户名和密码才能访问。</p><h4 id="自定义二级域名"><a href="#自定义二级域名" class="headerlink" title="自定义二级域名"></a>自定义二级域名</h4><p>在多人同时使用一个 frps 时，通过自定义二级域名的方式来使用会更加方便。</p><p>通过在 frps 的配置文件中配置 <code>subdomain_host</code>,就可以启用该特性。之后在 frpc 的 http,https 类型的代理中可以不配置 <code>custom_domains</code>,而是配置一个 <code>subdomain</code> 参数。</p><p>只需要将 <code>*.{subdomain_host}</code> 解析到 frps 所在服务器。之后用户可以通过 <code>subdomain</code> 自行指定自己的 web 服务所需要使用的二级域名,通过 <code>{subdomain}.{subdomain_host}</code> 来访问自己的 web 服务。</p><pre><code># frps.ini[common]subdomain_host = frps.com</code></pre><p>将泛域名 <code>*.frps.com</code> 解析到 frps 所在服务器的 IP 地址。</p><pre><code># frpc.ini[web]type = httplocal_port = 80subdomain = test</code></pre><p>frps 和 fprc 都启动成功后,通过 <code>test.frps.com</code> 就可以访问到内网的 web 服务。</p><p>需要注意的是如果 frps 配置了 <code>subdomain_host</code>,则 <code>custom_domains</code> 中不能是属于 <code>subdomain_host</code> 的子域名或者泛域名。</p><p>同一个 http 或 https 类型的代理中 <code>custom_domains</code>  和 <code>subdomain</code> 可以同时配置。</p><h4 id="URL-路由"><a href="#URL-路由" class="headerlink" title="URL 路由"></a>URL 路由</h4><p>frp 支持根据请求的 URL 路径路由转发到不同的后端服务。</p><p>通过配置文件中的 <code>locations</code> 字段指定一个或多个 proxy 能够匹配的 URL 前缀(目前仅支持最大前缀匹配，之后会考虑正则匹配)。例如指定 <code>locations = /news</code>,则所有 URL 以 <code>/news</code> 开头的请求都会被转发到这个服务。</p><pre><code># frpc.ini[web01]type = httplocal_port = 80custom_domains = web.yourdomain.comlocations = /[web02]type = httplocal_port = 81custom_domains = web.yourdomain.comlocations = /news,/about</code></pre><p>按照上述的示例配置后，<code>web.yourdomain.com</code> 这个域名下所有以 <code>/news</code> 以及 <code>/about</code> 作为前缀的 URL 请求都会被转发到 web02，其余的请求会被转发到 web01。</p><h4 id="通过代理连接-frps"><a href="#通过代理连接-frps" class="headerlink" title="通过代理连接 frps"></a>通过代理连接 frps</h4><p>在只能通过代理访问外网的环境内,frpc 支持通过 HTTP PROXY 和 frps 进行通信。</p><p>可以通过设置 <code>HTTP_PROXY</code> 系统环境变量或者通过在 frpc 的配置文件中设置 <code>http_proxy</code> 参数来使用此功能。</p><p>仅在 <code>protocol = tcp</code> 时生效。</p><pre><code># frpc.ini[common]server_addr = x.x.x.xserver_port = 7000http_proxy = http://user:pwd@192.168.1.128:8080</code></pre><h4 id="范围端口映射"><a href="#范围端口映射" class="headerlink" title="范围端口映射"></a>范围端口映射</h4><p>在 frpc 的配置文件中可以指定映射多个端口,目前只支持 tcp 和 udp 的类型。</p><p>这一功能通过 <code>range:</code> 段落标记来实现,客户端会解析这个标记中的配置,将其拆分成多个 proxy,每一个 proxy 以数字为后缀命名。</p><p>例如要映射本地 6000-6005, 6007 这6个端口,主要配置如下：</p><pre><code># frpc.ini[range:test_tcp]type = tcplocal_ip = 127.0.0.1local_port = 6000-6006,6007remote_port = 6000-6006,6007</code></pre><p>实际连接成功后会创建 6 个 proxy,命名为 <code>test_tcp_0, test_tcp_1 ... test_tcp_5</code>。</p><h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><p>默认情况下,frpc 只会转发请求到本地 tcp 或 udp 端口。</p><p>插件模式是为了在客户端提供更加丰富的功能,目前内置的插件有 <code>unix_domain_socket</code>,<code>http_proxy</code>,<code>socks5</code>,<code>static_file</code>。具体使用方式请查看<a href="#使用示例">使用示例</a>。</p><p>通过 <code>plugin</code> 指定需要使用的插件,插件的配置参数都以 <code>plugin_</code> 开头。使用插件后 <code>local_ip</code> 和 <code>local_port</code> 不再需要配置。</p><p>使用 <strong>http_proxy</strong> 插件的示例:</p><pre><code># frpc.ini[http_proxy]type = tcpremote_port = 6000plugin = http_proxyplugin_http_user = abcplugin_http_passwd = abc</code></pre><p><code>plugin_http_user</code> 和 <code>plugin_http_passwd</code> 即为 <code>http_proxy</code> 插件可选的配置参数。</p><h3 id="实例参考"><a href="#实例参考" class="headerlink" title="实例参考"></a>实例参考</h3><pre><code>环境说明：    服务器：    阿里云ECS服务器一台   固定公网IP: 47.94.22.7   系统环境: CentOS 7.4    客户端：    IP: 192.168.0.16   内网网段192.168.0.0/24   系统环境: CentOS 7.4注意本示例中：    阿里云服务器需要在开 管理控制台 → 云服务器ECS → 网络和安全 → 安全组 → 配置规则 添加规则:    入方向 授权策略允许 fpr 服务监听端口：tcp7000, udp7001; web转发端口：tcp8080, tcp9090; tcp33899</code></pre><h4 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h4><blockquote><p>服务器端启动程序为 fprs 服务器端配置文件为 fprs.ini</p></blockquote><pre><code># 下载 frpwget https://github.com/fatedier/frp/releases/download/v0.16.0/frp_0.16.0_linux_amd64.tar.gz# 解压tar -xvf frp_0.16.0_linux_amd64.tar.gz# 更改程序目录mv frp_0.16.0_linux_amd64/ /usr/local/frp/ &amp;&amp; cd /usr/local/frp/# 编辑 frps.ini 文件内容如下    [common]    # 监听IP, TCP端口号:7000, UDP端口号:7001    bind_addr = 0.0.0.0    bind_port = 7000    bind_udp_port = 7001    # WEB管理端口, 登陆用户名, 登陆密码    dashboard_port = 7500    dashboard_user = username    dashboard_pwd = passwd    # 接收HTTP端口:8080, 接收HTTPS端口:9090    vhost_http_port = 8080    vhost_https_port = 9090    # 客户端连接服务器验证token    privilege_token = abcdef# 配置开机自动启动echo &quot;/usr/bin/nohup /usr/local/frp/frps -c /usr/local/frp/frps.ini &gt;&gt;/usr/local/frp/frps-output.log 2&gt;&amp;1 &amp;&quot; &gt;&gt;/etc/rc.d/rc.localchmod +x /etc/rc.d/rc.local</code></pre><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><blockquote><p>客户端启动程序为 fprc 客户端配置文件为 fprc.ini</p></blockquote><pre><code># 下载 frpwget https://github.com/fatedier/frp/releases/download/v0.16.0/frp_0.16.0_linux_amd64.tar.gz# 解压tar -xvf frp_0.16.0_linux_amd64.tar.gz# 更改程序目录mv frp_0.16.0_linux_amd64/ /usr/local/frp/ &amp;&amp; cd /usr/local/frp/# 编辑 frpc.ini 文件内容如下    # frpc.ini    [common]    # 服务器端IP, 服务器端监听端口号, 连接服务器token    server_addr = 47.94.22.71    server_port = 7000    privilege_token = abcdef    # 配置客户端热加载(客户端可以通过reload/status管理frpc)    admin_addr = 127.0.0.1    admin_port = 7400    # 浏览器打开 http://abc.onlycloud.xin:8080(端口号与服务定义的：vhost_http_port 相对应) 访问客户端本机的5000端口号 web 服务    [abc]    type = http    local_port = 5000    custom_domains = abc.onlycloud.xin    # 浏览器打开 http://bcd.onlycloud.xin:8080 访问局域网 192.168.0.10 主机80端口号 web 服务    [bcd]    type = http    local_port = 80    local_ip = 192.168.0.100    custom_domains = bcd.onlycloud.xin    # 浏览器打开 https://cde.onlycloud.xin:9090(端口号与服务定义的：vhost_https_port 相对应) 访问局域网 192.168.0.101 主机 443 端口 web 服务    [cde]    type = https    local_port = 443    local_ip = 192.168.0.101    custom_domains = cde.onlycloud.xin    # 使用远程桌面工具访问 47.94.22.71:33899(或 onlycloud.xin:33899) 相当于访问局域网 192.168.0.5 主机远程桌面    [Remote_desktop]    type = tcp    local_ip = 192.168.0.5    local_port = 33899    remote_port = 3389    # 浏览器打开 http://47.94.22.71:6000(或 onlycloud.xin:6000) 访问本机 /tmp 目录下的文件    [test_static_files]    type = tcp    remote_port = 6000    plugin = static_file    # 要对外暴露的文件目录    plugin_local_path = /tmp    # 添加父路径达到隐藏服务目的(可配置多层 static/abcd)  例如：http://47.94.22.71:6000/static    # plugin_strip_prefix = static    # 网页安全验证    plugin_http_user = 111    plugin_http_passwd = 111# 配置开机自启动(如果是群晖NAS开启启动命令添加到 /etc/rc 文件 exit 0 之前)echo &quot;/usr/bin/nohup /usr/local/frp/frpc -c /usr/local/frp/frpc.ini &gt;&gt;/usr/local/frp/frpc-output.log 2&gt;&amp;1 &amp;&quot; &gt;&gt;/etc/rc.d/rc.localchmod +x /etc/rc.d/rc.local</code></pre><h3 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h3><blockquote><p>服务器端浏览器打开 <a href="http://47.94.22.71:7500" target="_blank" rel="noopener">http://47.94.22.71:7500</a> 查看连接状态</p></blockquote><blockquote><p>客户端配置热加载后通过命令 ./frpc status -c ./frpc.ini 查看连接状态</p></blockquote><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><blockquote><p>服务端请替换 frpc 为 frps</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;&gt;/shell/check.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/syno/sbin:/usr/syno/bin:/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ps -Al | grep frpc &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"正在运行 frpc 进程 时间:`date '+%Y-%m-%d %H:%M:%S'`"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"未运行 frpc 进程"</span></span><br><span class="line">    /usr/bin/nohup /usr/<span class="built_in">local</span>/frp/frpc -c /usr/<span class="built_in">local</span>/frp/frpc.ini &gt;&gt;/usr/<span class="built_in">local</span>/frp/frpc-output.log 2&gt;&amp;1 &amp;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"frpc 进程已经启动 时间:`date '+%Y-%m-%d %H:%M:%S'`"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br><span class="line">chmod +x /shell/check.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每5分钟执行一次</span></span><br><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># |  .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># |  |  .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="comment"># |  |  |  |  |</span></span><br><span class="line"><span class="comment"># *  *  *  *  * user-name  command to be executed</span></span><br><span class="line">ehco <span class="string">"*/5 * * * * /shell/frpc.sh"</span> &gt;&gt;/etc/crontab</span><br></pre></td></tr></table></figure><h3 id="配置共享的frp"><a href="#配置共享的frp" class="headerlink" title="配置共享的frp"></a>配置共享的frp</h3><p><a href="https://www.chuantou.org/frp-page" target="_blank" rel="noopener">查看教程</a></p><p>以下配置中<code>onlycloud.xin</code>是本人阿里云未备案域名 添加CNAME解析【*】记录 值:【frp2.chuantou.org】</p><h4 id="配置文件-1"><a href="#配置文件-1" class="headerlink" title="配置文件"></a>配置文件</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = frp2.chuantou.org</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">privilege_token</span> = www.xxorg.com</span><br><span class="line"><span class="attr">protocol</span> = kcp</span><br><span class="line"><span class="attr">user</span> = dsgr313131yhdfgdfj</span><br><span class="line"><span class="attr">admin_addr</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">admin_port</span> = <span class="number">7400</span></span><br><span class="line"></span><br><span class="line"><span class="section">[www]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="comment">#subdomain = nas571304</span></span><br><span class="line"><span class="attr">custom_domains</span> = www.<span class="literal">on</span>lycloud.xin</span><br><span class="line"></span><br><span class="line"><span class="section">[nas]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5000</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="comment">#subdomain = nas571304</span></span><br><span class="line"><span class="attr">custom_domains</span> = nas.<span class="literal">on</span>lycloud.xin</span><br><span class="line"></span><br><span class="line"><span class="section">[hexo]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">3.3</span></span><br><span class="line"><span class="attr">custom_domains</span> = hexo.<span class="literal">on</span>lycloud.xin</span><br><span class="line"></span><br><span class="line"><span class="section">[plex]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">32400</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">custom_domains</span> = plex.<span class="literal">on</span>lycloud.xin</span><br><span class="line"></span><br><span class="line"><span class="section">[plex_2]</span></span><br><span class="line"><span class="attr">server_addr</span> = nas.<span class="literal">on</span>lycloud.xin</span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">32400</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">54321</span></span><br><span class="line"></span><br><span class="line"><span class="section">[h5ai]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">81</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">custom_domains</span> = h5ai.<span class="literal">on</span>lycloud.xin</span><br><span class="line"></span><br><span class="line"><span class="section">[aria2]</span></span><br><span class="line"><span class="attr">server_addr</span> = h5ai.<span class="literal">on</span>lycloud.xin</span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">6800</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">55555</span></span><br></pre></td></tr></table></figure><h4 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@DiskStation:~<span class="comment"># frpc  status -c ./frpc.ini </span></span><br><span class="line">Proxy Status...</span><br><span class="line">TCP</span><br><span class="line">Name                       Status       LocalAddr        Plugin  RemoteAddr               Error</span><br><span class="line">dsgr313131yhdfgdfj.aria2   running      127.0.0.1:6800           frp2.chuantou.org:55555</span><br><span class="line">dsgr313131yhdfgdfj.plex_2  running      127.0.0.1:32400          frp2.chuantou.org:54321</span><br><span class="line"></span><br><span class="line">HTTP</span><br><span class="line">Name                     Status   LocalAddr        Plugin  RemoteAddr          Error</span><br><span class="line">dsgr313131yhdfgdfj.h5ai  running  127.0.0.1:81             h5ai.onlycloud.xin</span><br><span class="line">dsgr313131yhdfgdfj.hexo  running  192.168.3.3:80           hexo.onlycloud.xin</span><br><span class="line">dsgr313131yhdfgdfj.nas   running  127.0.0.1:5000           nas.onlycloud.xin</span><br><span class="line">dsgr313131yhdfgdfj.plex  running  127.0.0.1:32400          plex.onlycloud.xin</span><br><span class="line">dsgr313131yhdfgdfj.www   running  127.0.0.1:80             www.onlycloud.xin</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> frp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp </tag>
            
            <tag> 内网穿透 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>黑群晖NAS安装</title>
      <link href="/posts/1654.html"/>
      <url>/posts/1654.html</url>
      <content type="html"><![CDATA[<style>img{    width: 85%;}</style><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><a href="https://www.synology.cn" target="_blank" rel="noopener">群晖科技</a>股份有限公司（品牌名称：Synology，简称群晖或群晖科技）为台湾一家网络附加储存（NAS）服务商，总部位于台北市。截至2017年，群晖以Synology品牌行销全球，在中小企业及家用NAS市场占有率居世界首位。网络连接存储设备（Network Attached Storage，NAS），是一种专门的数据存储技术的名称，它可以直接连接在电脑网络上面，对异质网络用户提供了集中式数据访问服务</p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>支持的文件服务: SMB, AFR, NFS, FTP, TFTP, Rsync, ISCSI<br>支持登陆认证方式: 域, LDAP, OSS, 本地账户<br>数据备份: Win/linu环境下数据备份,支持增量备份, NAS之间数据备份, 客户端同步NAS软件….<br>服务器: Active Dirertory Server(AD域), Dirertory Server(LDAP), DSN Server, Proxy Server, RADIUS Server ….<br>支持大量第三方软件: Apache, PHP, MariaDB, Python, Ruby, Node.js, Java, Perl, Docker, 创建/管理虚拟机….</p><h3 id="为什么用黑群"><a href="#为什么用黑群" class="headerlink" title="为什么用黑群"></a>为什么用黑群</h3><blockquote><p>[白群:官方硬件+官方软件]   [黑群:组装硬件+破解官方软件]</p></blockquote><p>白群: 硬件配置低,价格高,可以正常升级不会导致系统无法引导,可以使用群晖自带QC功能实现远程管理(速度慢)<br>黑群: 自定义硬件(普通PC电脑),升级系统之前做好数据备份,需要使用第三方软件实现远程管理功能</p><h3 id="下载资源"><a href="#下载资源" class="headerlink" title="下载资源"></a>下载资源</h3><p>下载所需软件<a href="https://pan.baidu.com/s/1rIt_JQay2mAKewjcxb5VLg" target="_blank" rel="noopener">百度网盘</a>[密码: t140] </p><blockquote><p>目前黑群晖用的较多的有两个版本DS3615xs,DSM3617xs(本文基于DS3615xs做测试)</p></blockquote><pre><code>文件说明:  黑群晖3615xs_v613_15152   必须使用使用15152版本安装,文件内的镜像为grub方式引导,安装后不能更新版本  黑群晖3615xs_v6通用EFI方式    可以使用当前最新版本系统安装,可更新补丁大版本更新貌似不行  黑群晖 For VMware WorkStation5.1.zip  5.1版本安装教程,包含虚拟机(版本5不带docker等功能)  Win10_WebUI   一个模仿win10系统的webUI页面可用来做NAS网站首页(通过Web Station创建站点)  Plex  WEB视频管理软件,功能强大</code></pre><h3 id="虚拟机安装测试"><a href="#虚拟机安装测试" class="headerlink" title="虚拟机安装测试"></a>虚拟机安装测试</h3><blockquote><p>使用<code>VMware Workstation Pro</code>创建虚拟机,虚拟机启动镜像来自<code>黑群晖3615xs_v613_15152</code>目录</p></blockquote><h4 id="配置拟机"><a href="#配置拟机" class="headerlink" title="配置拟机"></a>配置拟机</h4><pre><code>客户机操作系统：Linux版本：其他 Linux 3.x 内核 64 位内存：2-4G网络连接：使用桥接(能通内网)磁盘大小：50G左右添加CD/DVD驱动器：使用镜像boot_ds3615xs_v613_15152.iso文件(勾选启动时连接)</code></pre><p><img src="/images/qunhui_install_00.png" alt=""></p><h4 id="设置从光盘启动"><a href="#设置从光盘启动" class="headerlink" title="设置从光盘启动"></a>设置从光盘启动</h4><blockquote><p>为什么要BLIOS设置为光盘启动：系统安装完毕后引导还在光盘中,虚拟机默认第一启动项为硬盘,所以需要BIOS中强制设置光盘为第一启动</p></blockquote><p>1.虚拟机名称右键<code>电源</code>→<code>打开电源时进入固件</code></p><p><img src="/images/qunhui_install_01.png" alt=""></p><p>2.使用键盘方向键选择<code>boot</code>→<code>CD-ROM Drive</code>,然后按<code>Shift</code>＋<code>=</code>组合键将<code>CD-ROM Drive</code>调整到第一启动,按下<code>F10</code>→<code>Enter</code>.</p><p><img src="/images/qunhui_install_02.png" alt=""></p><p><hr><br><img src="/images/qunhui_install_03.png" alt=""></p><h4 id="安装NAS系统"><a href="#安装NAS系统" class="headerlink" title="安装NAS系统"></a>安装NAS系统</h4><p>1.下载NSA下安装文件<a href="https://archive.synology.com/download/DSM/release/6.1.3/15152/" target="_blank" rel="noopener">下载地址</a> 此处用到的是<code>DSM_DS3615xs_15152.pat</code></p><p><hr><br>2.在物理电脑上安装群<code>晖助手软件</code>(SynologyAssistantSetup),运行后在软件内右键<code>搜索</code>,这时可以看到发现一台设备,点击发现的设备右键选择<code>安装</code>.</p><p><img src="/images/qunhui_install_04.png" alt=""></p><p>3.点击<code>浏览</code>选择下载好的安装文件<code>DSM_DS3615xs_15152.pat</code>.</p><p><img src="/images/qunhui_install_05.png" alt=""></p><p>4.点击下一步,输入管理账号:<code>admin</code>的密码,点击下一步(此账号密码为web管理员)</p><p><img src="/images/qunhui_install_06.png" alt=""></p><p>5.配置网络参数,与当前网络同一个网络能相互访问,点击完成</p><p><img src="/images/qunhui_install_07.png" alt=""></p><p>6.等待安装完毕点击<code>(登陆 DiskStation)</code>通过浏览器初始化NAS</p><p><img src="/images/qunhui_install_08.png" alt=""></p><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>1.输入管理员账号密码</p><pre><code>user: adminpasswd: 安装NAS系统[4]中设置的密码</code></pre><p><img src="/images/qunhui_install_09.png" alt=""></p><p>2.点击下一步,然后勾选下载DSM更新并进行手动安装(自动安装有可能导致无法引导);设置QC跳过(黑群晖无法验证账号)初始化完成</p><p><img src="/images/qunhui_install_10.png" alt=""></p><h4 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h4><p>1.配置邮箱</p><blockquote><p>打开<code>控制面板</code>→<code>通知设置</code>进行邮箱的配置</p></blockquote><p><img src="/images/qunhui_install_11.png" alt=""></p><p>2.开启ssh</p><blockquote><p>打开<code>控制面板</code>→<code>终端和 SNMP</code>勾选开启ssh</p></blockquote><p><img src="/images/qunhui_install_12.png" alt=""></p><p>3.将引导写入硬盘</p><blockquote><p>使用admin连接到服务器,打开终端输入<code>ssh admin@192.168.0.200</code>然后输入密码,（必须开启ssh）</p></blockquote><p><img src="/images/qunhui_install_13.png" alt=""></p><blockquote><p>输入<code>sudo -i</code>切换到root</p></blockquote><p><img src="/images/qunhui_install_14.png" alt=""></p><blockquote><p>打开<code>Everything</code>点击<code>工具</code>勾选<code>HTTP服务器</code>开启http服务</p></blockquote><p><img src="/images/qunhui_install_15.png" alt=""></p><blockquote><p>将 <code>boot_ds3615xs_v613_15152.img</code>,<code>disk_setboot.sh</code> 下载到当前目录(在浏览器输入本机IP定位到软件目录复制需要下载的文件链接)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http://192.168.0.51/E:/黑群晖3615xs_v613_15152/boot_ds3615xs_v613_15152.img</span><br><span class="line">wget http://192.168.0.51/E:/黑群晖3615xs_v613_15152/disk_setboot.sh</span><br><span class="line">chown root:root boot_ds3615xs_v613_15152.img disk_setboot.sh</span><br><span class="line">chmod 777 disk_setboot.sh</span><br><span class="line">chmod 666 boot_ds3615xs_v613_15152.img</span><br></pre></td></tr></table></figure><p><img src="/images/qunhui_install_16.png" alt=""></p><blockquote><p>创建硬盘启动(创建完毕后即可以硬盘启动)</p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在硬盘/dev/sda 创建一个新主分区将img镜像写入分区</span></span><br><span class="line"><span class="string">./disk_setboot.sh</span> <span class="string">/dev/sda</span> boot_ds3615xs_v613_15152.img</span><br></pre></td></tr></table></figure><p><img src="/images/qunhui_install_17.png" alt=""></p><h3 id="使用U盘安装-UEFI"><a href="#使用U盘安装-UEFI" class="headerlink" title="使用U盘安装(UEFI)"></a>使用U盘安装(UEFI)</h3><blockquote><p>此处文件来源于<code>黑群晖3615xs_v6通用EFI方式</code>目录</p></blockquote><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>1.准备一个U盘;</p><p><hr><br>2.百度网盘软件说明: </p><pre><code>Win32_Disk_Imager:  镜像写入U盘工具DS3615xs-6.1:   引导镜像文件本实验选择的是ds3615xs(注意选择的引导镜像,安装的系统与之对应)SynologyAssistantSetup: 局域网搜索群晖NAS设备软件ChipGenius: 查看USB设备ID工具</code></pre><p>3.群晖系统<a href="https://archive.synology.com/download/DSM/release/6.1.5/15254/" target="_blank" rel="noopener">下载</a> 此处用到的是<code>DSM_DS3615xs_15254.pat</code>下载到本地</p><h4 id="制作U盘启动"><a href="#制作U盘启动" class="headerlink" title="制作U盘启动"></a>制作U盘启动</h4><p>1.插入U盘,运行Win32DiskImager,ImageFile:选择群晖U盘引导镜像<code>黑群晖3615xs_v6通用EFI方式\DS3615xs-6.1\synoboot.img</code>目录下的,Device:设备选择到用作启动盘U盘,点击<code>Write</code>.</p><p><img src="/images/qunhui_install_18.png" alt=""></p><p>2.运行ChipGenius, 记录下U盘中设备ID中VID及PID的值 <code>VID=0930,PID=6544</code></p><p><img src="/images/qunhui_install_19.png" alt=""></p><p>3.修改U盘EFI分区中grub目录下的grub.cfg文件中VID,PID替换为上一步记录的值,保存并退出,U盘启动制作完成(分区大小为14.9M的分区,注意: VID,PID的值前面加 0x 表示16进制值)</p><p><img src="/images/qunhui_install_20.png" alt=""></p><h4 id="安装系统-UEFI"><a href="#安装系统-UEFI" class="headerlink" title="安装系统(UEFI)"></a>安装系统(UEFI)</h4><p>1.准备一套键鼠,显示器接入NAS,连接上路由器，路由器打开DHCP,另外一台操作的电脑在同一局域网下.</p><p><hr><br>2.将制作好的引导U盘插入到准备做NAS的设备上并以U盘启动,看到类似下面画面就可以用另外一台电脑操作了.(此处未做截图,引用上面实验图)<br><img src="/images/qunhui_install_03.png" alt=""></p><p>3.在同一网段内的电脑上安装群晖助手软件(SynologyAssistantSetup),运行后在软件内右键搜索,这时可以看到发现一台设备,点击发现的设备右键选择安装.<br><img src="/images/qunhui_install_04.png" alt=""></p><p>4.点击<code>浏览</code>选择下载好的安装文件<code>DSM_DS3615xs_15254.pat</code>.(此处未做截图,引用上面实验图)<br><img src="/images/qunhui_install_05.png" alt=""></p><p>5.点击下一步,输入管理账号:<code>admin</code>的密码,点击下一步<br><img src="/images/qunhui_install_06.png" alt=""></p><p>6.配置网络参数,与当前网络同一个网络能相互访问,点击完成<br><img src="/images/qunhui_install_07.png" alt=""></p><p>7.等待安装完毕点击<code>(登陆 DiskStation)</code>通过浏览器初始化NAS</p><p><img src="/images/qunhui_install_08.png" alt=""></p><h3 id="软件推荐"><a href="#软件推荐" class="headerlink" title="软件推荐"></a>软件推荐</h3><blockquote><p>套件中心搜索</p></blockquote><pre><code>Active Backup for Server：    1.实现了 Windows 和 Linux 服务器的集中保护，较大限度降低了部署以及管理成本    2.能够按天备份文件，而不必在源服务器上安装复杂又昂贵的代理，也不用担心会对客户端性能和代理兼容性造成影响    3.可使用柱状图工具从时间和任务角度监控所有备份任务    4.提供多版本、镜像及增量三种模式，可满足大多数常见的备份需求Virtual Machine Manager：    1.在Synology NAS 上创建和运行多个虚拟机    2.借助Virtual Machine Manager，您可以更灵活地分配硬件资源、构建虚拟化环境    3.在主机之间迁移Virtual DSM 而不发生中断。Directory Server：    1.Directory Server 提供的LDAP 服务包含集中化的权限控制、认证及帐号管理机制(LDAP Server)    2.NAS支持LDAP客户端验证Active Directory Server：    1.Active Directory Server 提供了由 Samba 驱动的 Active Directory（AD）域服务    2.支持常用的 Active Directory 功能，如用户帐户、群组成员、加入域的 Windows、Linux 和 Synology DSM、Kerberos 验证及群组策略等    3.NAS 支持加入域Cloud Station Server：    类似网盘,可多个客户端之间跨平台同步数据(速度有点慢)Docker：    Docker 是一个轻量级虚拟化应用程序，它可让您运行世界各地的开发人员在 DSM 上创建的数以千计的容器。Docker Hub 是使用广泛的内置映像存储库，可让您从其他优秀开发人员那里找到共享的应用程序</code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>使用<code>grub</code>方式安装好后可以将引导写入硬盘,不可以更新软件版本只能安装15152<br>使用<code>EFI</code> 方式安装需依赖U盘才能启动,可以更新补丁,可以直接安装最新版系统</p><p><hr><br>参考资料</p><pre><code>[ DSM系统下载](https://archive.synology.com/download/DSM/release/)  [使用官网最新镜像地址替换路径可以达到更快下载速度][教程参考1](http://www.nasyun.com/thread-31655-1-1.html)[教程参考2](http://www.nasyun.com/thread-28943-1-1.html)[硬件参考2](https://post.smzdm.com/p/120480/p5/)</code></pre>]]></content>
      
      <categories>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> NAS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Windows+Subversion+ReviewBoard实现SVN项目管理与代码审核</title>
      <link href="/posts/3221.html"/>
      <url>/posts/3221.html</url>
      <content type="html"><![CDATA[<h2 id="svnadmin-安装"><a href="#svnadmin-安装" class="headerlink" title="svnadmin 安装"></a>svnadmin 安装</h2><blockquote><p>Svn Admin是一个Java开发的管理Svn服务器的项目用户的web应用。安装好Svn服务器端好，把Svn Admin部署好，就可以通过web浏览器管理Svn的项目，管理项目的用户，管理项目的权限。使得管理配置Svn简便，再也不需要每次都到服务器手工修改配置文件<br>环境需求 MySQL Subversion Tomcat Java</p></blockquote><h3 id="下载jsvnadmin"><a href="#下载jsvnadmin" class="headerlink" title="下载jsvnadmin"></a>下载jsvnadmin</h3><blockquote><p>百度搜资源或<a href="https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/jsvnadmin/svnadmin-3.0.5.zip" target="_blank" rel="noopener">下载链接(要翻墙)</a><br>解压<code>svnadmin-3.0.5.zip</code>到桌面</p></blockquote><h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><blockquote><p>安装过程中勾选添加环境变量到Path,防火墙放行3306端口</p></blockquote><pre><code>User：   rootpasswd：  root</code></pre><h3 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a>配置mysql</h3><h4 id="登录数据库-查看字符集"><a href="#登录数据库-查看字符集" class="headerlink" title="登录数据库,查看字符集"></a>登录数据库,查看字符集</h4><pre><code>mysql -uroot -prootshow variables like &apos;character%&apos;;</code></pre><h4 id="修改字符集"><a href="#修改字符集" class="headerlink" title="修改字符集"></a>修改字符集</h4><blockquote><p>打开数据库安装目录下的<code>my.ini</code>文件</p></blockquote><pre><code>[client]default-character-set=utf8[mysql]default-character-set=utf8[mysqld]default-character-set=utf8</code></pre><blockquote><p>重启mysql服务[<code>计算机</code>→<code>管理</code>→<code>配置</code>→<code>服务</code>→<code>MySQL</code>→<code>重启动</code>]重新连接mysql查看字符集</p></blockquote><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><blockquote><p>创建数据库，导入svnadmin数据库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据库</span><br><span class="line">create database if not exists svnadmin default character set utf8;</span><br><span class="line"></span><br><span class="line"># 创建用户</span><br><span class="line">create user &apos;svnadmin&apos;@&apos;localhost&apos; identified by &apos;svnadmin&apos;;</span><br><span class="line"></span><br><span class="line"># 给用户授权</span><br><span class="line">grant all privileges on svnadmin.* to &apos;svnadmin&apos;@&apos;localhost&apos;;</span><br><span class="line"></span><br><span class="line"># 选择svnadmin数据库</span><br><span class="line">use svnadmin;</span><br><span class="line"></span><br><span class="line"># 导入svnadmin数据库</span><br><span class="line">source C:\Users\Administrator\Desktop\svnadmin-3.0.5\db\mysql5.sql</span><br><span class="line"></span><br><span class="line"># 导入汉化语言</span><br><span class="line">source C:\Users\Administrator\Desktop\svnadmin-3.0.5\db\lang\en.sql</span><br></pre></td></tr></table></figure><h3 id="安装Jdk"><a href="#安装Jdk" class="headerlink" title="安装Jdk"></a>安装Jdk</h3><blockquote><p><code>计算机</code>→<code>属性</code>→<code>高级系统设置</code>→<code>环境变量</code>→<code>系统环境变量</code><br>配置环境变量(创建环境变量<code>JAVA_HOME</code>,<code>CLASSPATH</code>,<code>Path变量新增路径</code>)<a href="https://jingyan.baidu.com/article/3c343ff70bc6ea0d377963df.html" target="_blank" rel="noopener">配置环境变量参考</a></p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=C:\Program Files (x86)\Java\jdk1.<span class="number">7</span>.<span class="number">0</span>_13</span><br><span class="line">CLASSPATH=<span class="variable">%JAVA_HOME%</span>\lib\dt.jar;<span class="variable">%JAVA_HOME%</span>\lib\tools.jar</span><br><span class="line"><span class="built_in">Path</span>=;<span class="variable">%JAVA_HOME%</span>\bin;<span class="variable">%JAVA_HOME%</span>\jre\bin</span><br></pre></td></tr></table></figure><h3 id="安装配置apache-tomcat"><a href="#安装配置apache-tomcat" class="headerlink" title="安装配置apache-tomcat"></a>安装配置apache-tomcat</h3><blockquote><p>下载<code>apache-tomcat</code>解压到C盘<a href="http://mirrors.shu.edu.cn/apache/tomcat/tomcat-7/v7.0.84/bin/apache-tomcat-7.0.84.zip" target="_blank" rel="noopener">下载地址</a><br>将桌面<code>svnadmin-3.0.5</code>文件夹中的<code>svnadmin.war</code>,复制<code>apache-tomcat</code>的<code>webapps</code>目录[C:\apache-tomcat-7.0.84\webapps]<br>打开<code>C:\apache-tomcat-7.0.84\bin</code>目录,双击<code>startup.bat</code>启动<code>apache-tomcat</code></p></blockquote><h4 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h4><blockquote><p>关闭<code>Tomcat</code>CMD窗口,打开<code>C:\apache-tomcat-7.0.84\webapps\svnadmin\WEB-INF</code>修改<code>jdbc.properties</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 选择数据库类型 </span><br><span class="line">db=MySQL</span><br><span class="line"></span><br><span class="line">#MySQL; mysql://127.0.0.1:3306/svnadmin代表连接本地3306端口的svnadmin数据库</span><br><span class="line">MySQL.jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">MySQL.jdbc.url=jdbc:mysql://127.0.0.1:3306/svnadmin?characterEncoding=utf-8</span><br><span class="line">MySQL.jdbc.username=svnadmin</span><br><span class="line">MySQL.jdbc.password=svnadmin</span><br></pre></td></tr></table></figure><blockquote><p>打开<code>C:\apache-tomcat-7.0.84\bin</code>目录,双击<code>startup.bat</code>启动<code>apache-tomcat</code><br>打开浏览器输入<code>http://127.0.0.1:8080/svnadmin/</code>初始化<code>svnadmin</code></p></blockquote><h3 id="安装Subversion"><a href="#安装Subversion" class="headerlink" title="安装Subversion"></a>安装Subversion</h3><blockquote><p>默认安装直接下一步</p></blockquote><h4 id="创建SVN仓库"><a href="#创建SVN仓库" class="headerlink" title="创建SVN仓库"></a>创建SVN仓库</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">md</span> D:\svndata</span><br><span class="line">svnadmin create D:\svndata\svndemo</span><br></pre></td></tr></table></figure><h4 id="配置svndemo仓库权限"><a href="#配置svndemo仓库权限" class="headerlink" title="配置svndemo仓库权限"></a>配置svndemo仓库权限</h4><blockquote><p>编辑<code>D:\svndata\svndemo\conf\svnserve.conf</code>文件;以下参数定义：</p></blockquote><pre><code>anon-access: 非授权用户的访问权限, 有三种方式：none:限制访问, read:只读, write:读写权限，默认为 readauth-access: 授权用户的访问权限，有三种方式：none:限制访问, read:只读, write:读写权限，默认为 writepassword-db: 定义保存用户名和密码的文件名称, 这里为 passwd, 和该文件位于同一目录authz-db: 定义保存授权信息的文件名称，这里为 authz ，和该文件位于同一目录realm ：定义客户端连接是的“认证命名空间”， Subversion 会在认证提示里显示，并且作为凭证缓存的关键字</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[general]</span><br><span class="line">anno-access = read</span><br><span class="line">auth-access = write</span><br><span class="line">password-db = passwd</span><br><span class="line">authz-db = authz</span><br><span class="line">realm = My First svndemo</span><br></pre></td></tr></table></figure><h4 id="配置账户"><a href="#配置账户" class="headerlink" title="配置账户"></a>配置账户</h4><blockquote><p>编辑<code>D:\svndata\svndemo\conf\passwd</code>文件;记注意配置前面不能有空格,user = passwd</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[users]</span><br><span class="line">admin = admin</span><br></pre></td></tr></table></figure><h4 id="配置授权信息"><a href="#配置授权信息" class="headerlink" title="配置授权信息"></a>配置授权信息</h4><blockquote><p>参数定义：</p></blockquote><pre><code>groups: 中指出了按分组来管理用户,目前只有一个用户admin,再加的话就在第二行,按user = passwd的格式.[/svndemo]: 中指出了这个项目的根版本库,对admin是可读,可写的[svndemo:/test]: 对test这个项目,admin同样是可读,可写的*=: 除了admin外,其他人都没权限.</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[groups]</span><br><span class="line">admin = admin</span><br><span class="line"></span><br><span class="line">[/svndemo]</span><br><span class="line">admin = rw</span><br><span class="line">[respoity:/test]</span><br><span class="line">@admin=rw</span><br><span class="line">*=</span><br></pre></td></tr></table></figure><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><pre><code>svnserve -d -r D:\svndata</code></pre><h4 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a>创建服务</h4><pre><code>sc create svn binpath= &quot;C:\Program Files (x86)\Subversion\bin\svnserve.exe --service -r D:\svndata&quot; displayname= &quot;Subversion 服务&quot; depend= Tcpip</code></pre><h2 id="安装ReviewBoard"><a href="#安装ReviewBoard" class="headerlink" title="安装ReviewBoard"></a>安装ReviewBoard</h2><blockquote><p>ReviewBoard是一个开源工具，用于帮助源代码，文档，图像等的同行评审过程。它是基于网络的，可扩展的，可以使用预先提交的审查和提交后的审查方法与各种各样的环境和源代码管理系统一起工作。<br>环境需求 Apache MySQL Python(MySQL-python;patch;setuptools;ReviewBoard)</p></blockquote><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><pre><code>httpd-2.2.21-win32: 安装完成后浏览器打开 http://127.0.0.1 显示It works!则安装成功python-2.7.10: 安装时勾选添加到系统环境变量;CMD窗口输入python --version测试命令是否有效setuptools: 默认安装patch-2.5.9-7: 安装路径C:\GnuWin32安装完成后手动将路径C:\GnuWin32\bin添加到Path系统变量memcached-win64-1.4.4-14: 解压到C盘根目录CMD进入该目录,执行memcached.exe -d install安装服务MySQL-python-1.2.5: 默认安装pycrypto-2.6.1: 选择安装到本地路径指向python 安装目录 C:\Python27\mod_wsgi-win32-ap22py27-3.3.so: 将此文件复制到,apache模块目录C:\Program Files (x86)\Apache Software Foundation\Apache2.2\modules更名为mod_wsgi.sopython-memcached:   CMD: pip install python-memcached  #python2.7.10 默认已经安装此模块pip:  CMD: pip install -U pip  -i  https://pypi.tuna.tsinghua.edu.cn/simple 更新pipReviewBoard:   CMD: pip install ReviewBoard -i  https://pypi.tuna.tsinghua.edu.cn/simple</code></pre><h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 登录数据库</span><br><span class="line">mysql -uroot -proot</span><br><span class="line"></span><br><span class="line"># 查看字符集(如有问题更改my.ini)</span><br><span class="line">show variables like &apos;character%&apos;;</span><br><span class="line"></span><br><span class="line"># 创建数据库</span><br><span class="line">create database reviewboard character set utf8;</span><br><span class="line"></span><br><span class="line"># 创建用户</span><br><span class="line">create user &apos;reviewboard&apos;@&apos;localhost&apos; identified by &apos;reviewboard&apos;;</span><br><span class="line"></span><br><span class="line"># 给用户授权</span><br><span class="line">grant all privileges on reviewboard.* to &apos;reviewboard&apos;@&apos;localhost&apos;;</span><br></pre></td></tr></table></figure><h3 id="创建站点"><a href="#创建站点" class="headerlink" title="创建站点"></a>创建站点</h3><pre><code>rb-site install C:\reviews      # 将站点文件生成到 C:\reviews   Domain Name: audit.onewtech.com              [localhost] （站点域名）   Root Path [/]:   Database Type: 1                             [mysql] (数据库类型)   Database Name [reviewboard]:                 [reviewboard] (数据库名)   Database Server [localhost]: 127.0.0.1       [127.0.0.1] (使用localhost可能出现创建站点失败)   Database Username: reviewboard               [reviewboard] (连接数据库的用户名)   Database Password:                           [reviewboard] (连接数据库的密码)   Confirm Database Password:                   [reviewboard] (确认密码)   Memcache Server [localhost:11211]:       (memcache端口号)   Username [admin]:      (web UI用户)   Password:                                     [admin]   (web UI密码)   Password:                                     [admin]   (确认密码)   E-Mail Address: xiongjunfeng@onewtech.com     [xiongjunfeng@onewtech.com] (邮箱)   Company/Organization Name (optional): ReviewBoard    [ReviewBoard] (站点名称)   Allow us to collect support data? [Y/n]: Y     [Y]</code></pre><h3 id="配置apache"><a href="#配置apache" class="headerlink" title="配置apache"></a>配置apache</h3><h4 id="虚拟主机文件配置"><a href="#虚拟主机文件配置" class="headerlink" title="虚拟主机文件配置"></a>虚拟主机文件配置</h4><blockquote><p>打开<code>C:\reviews\conf</code>将<code>apache-wsgi.conf</code>文件内容复制到,<code>apache</code>虚拟主机配置文件<code>C:\Program Files (x86)\Apache Software Foundation\Apache2.2\conf\extra\httpd-vhosts.conf</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">NameVirtualHost *:80</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerName audit.onewtech.com</span><br><span class="line">    DocumentRoot <span class="string">"C:/reviews/htdocs"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Error handlers</span></span><br><span class="line">    ErrorDocument 500 /errordocs/500.html</span><br><span class="line"></span><br><span class="line">    WSGIPassAuthorization On</span><br><span class="line">    WSGIScriptAlias <span class="string">"/"</span> <span class="string">"C:/reviews/htdocs/reviewboard.wsgi/"</span></span><br><span class="line"></span><br><span class="line">    &lt;Directory <span class="string">"C:/reviews/htdocs"</span>&gt;</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Options -Indexes +FollowSymLinks</span><br><span class="line">        Allow from all</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Prevent the server from processing or allowing the rendering of</span></span><br><span class="line">    <span class="comment"># certain file types.</span></span><br><span class="line">    &lt;Location <span class="string">"/media/uploaded"</span>&gt;</span><br><span class="line">        SetHandler None</span><br><span class="line">        Options None</span><br><span class="line"></span><br><span class="line">        AddType text/plain .html .htm .shtml .php .php3 .php4 .php5 .phps .asp</span><br><span class="line">        AddType text/plain .pl .py .fcgi .cgi .phtml .phtm .pht .jsp .sh .rb</span><br><span class="line"></span><br><span class="line">        &lt;IfModule mod_php5.c&gt;</span><br><span class="line">            php_flag engine off</span><br><span class="line">        &lt;/IfModule&gt;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Force all uploaded media files to download.</span></span><br><span class="line">        &lt;IfModule mod_headers.c&gt;</span><br><span class="line">            Header <span class="built_in">set</span> Content-Disposition <span class="string">"attachment"</span></span><br><span class="line">        &lt;/IfModule&gt;</span><br><span class="line">    &lt;/Location&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Alias static media requests to filesystem</span></span><br><span class="line">    Alias /media <span class="string">"C:/reviews/htdocs/media"</span></span><br><span class="line">    Alias /static <span class="string">"C:/reviews/htdocs/static"</span></span><br><span class="line">    Alias /errordocs <span class="string">"C:/reviews/htdocs/errordocs"</span></span><br><span class="line">    Alias /favicon.ico <span class="string">"C:/reviews/htdocs/static/rb/images/favicon.png"</span></span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h4 id="apache配置文件"><a href="#apache配置文件" class="headerlink" title="apache配置文件"></a>apache配置文件</h4><blockquote><p><code>C:\Program Files (x86)\Apache Software Foundation\Apache2.2\conf\httpd.conf</code></p></blockquote><pre><code># 添加mod_wsgi模块(60行添加)LoadModule wsgi_module modules/mod_wsgi.so# 取消注释(470行)Include conf/extra/httpd-vhosts.conf</code></pre><h3 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h3><blockquote><p><code>计算机</code>→<code>管理</code>→<code>配置</code>→<code>服务</code>→<code>apache</code>→<code>重启/重新启动</code> 配置成开机自动启动<br><code>计算机</code>→<code>管理</code>→<code>配置</code>→<code>服务</code>→<code>memcached</code>→<code>重启/重新启动</code> 配置成开机自动启动</p></blockquote><h3 id="web管理"><a href="#web管理" class="headerlink" title="web管理"></a>web管理</h3><blockquote><p>hosts文件写入 <code>127.0.0.1 audit.onewtech.com</code><br>浏览器打开<code>http://audit.onewtech.com</code> 用户名<code>admin</code>; 密码<code>admin</code></p></blockquote>]]></content>
      
      <categories>
          
          <category> svn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> svn </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux常用命令</title>
      <link href="/posts/767f.html"/>
      <url>/posts/767f.html</url>
      <content type="html"><![CDATA[<blockquote><p>Linux常用命令记录</p></blockquote><h2 id="压缩解压-tar"><a href="#压缩解压-tar" class="headerlink" title="压缩解压 tar"></a>压缩解压 tar</h2><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><p><code>-c</code> 意为 create，表示创建压缩包<br><code>-x</code> 意为 extract，表示解压<br><code>-t</code> 表示查看内容<br><code>-r</code> 给压缩包追加文件<br><code>-u</code> 意为 update，更新压缩包中的文件</p><blockquote><p>注意，上面是一定要五选一，不能一个都不选，也不能同时选俩。但是自选的部分就可以按照需要挑选了，比如：</p></blockquote><p><code>-z</code> 使用 gzip 属性<br><code>-j</code> 使用 bz2 属性<br><code>-Z</code> 使用 compress 属性<br><code>-v</code> 意为 verbose，显示详细的操作过程<br><code>-O</code> 将文件输出到标准输出<br><code>-C</code> 指定解压目录</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><blockquote><p>假设我们有很多 <code>.md</code> 文件需要打包，那么可以使用(<code>-c</code> 是创建压缩包)</p></blockquote><pre><code>tar -cf posts.tar *.md</code></pre><blockquote><p>然后我们发现还有一些 <code>.txt</code> 文件也需要打包进去，那么可以使用(<code>-r</code> 是追加文件)</p></blockquote><pre><code>tar -rf posts.tar *.txt</code></pre><blockquote><p>然后我们发现 <code>hello.md</code> 弄错了，修正后需要更新到压缩包中，可以使用(<code>-u</code> 是更新)</p></blockquote><pre><code>tar -uf post.tar hello.md</code></pre><blockquote><p>压缩好了，我们来看看压缩包的内容，可以使用(<code>-t</code> 是列出文件内容)</p></blockquote><pre><code>tar -tf posts.tar</code></pre><blockquote><p>解压，可以使用(<code>-x</code> 是解压)</p></blockquote><pre><code>tar -xf posts.tar</code></pre><blockquote><p>解压到指定位置，可以使用(<code>-C</code> 是解压到指定目录 注意指定的目录必须存在否则会报错)</p></blockquote><pre><code>tar -xf posts.tar -C /data</code></pre><blockquote><p><code>tar.gz</code> 相关(<code>-c</code> 压缩 <code>-x</code>解压)</p></blockquote><pre><code>tar -czf posts.tar.gz *.mdtar -xzf posts.tar.gz</code></pre><blockquote><p><code>tar.bz2</code> 相关(<code>-c</code> 压缩 <code>-x</code>解压)</p></blockquote><pre><code>tar -cjf posts.tar.bz2 *.mdtar -xjf posts.tar.bz2</code></pre><blockquote><p><code>tar.Z</code> 相关(<code>-c</code> 压缩 <code>-x</code>解压)</p></blockquote><pre><code>tar -cZf posts.tar.Z *.mdtar -xZf posts.tar.Z</code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>遇到不同类型的文件，请用不同的参数来应对：</p></blockquote><pre><code>*.tar -&gt; tar -xf*.tar.gz -&gt; tar -xzf*.tar.bz2 -&gt; tar -xjf*.tar.Z -&gt; tar -xZf*.gz -&gt; gzip -d*.rar -&gt; unrar e*.zip -&gt; unzip</code></pre><h2 id="空间占用-du"><a href="#空间占用-du" class="headerlink" title="空间占用 du"></a>空间占用 <code>du</code></h2><blockquote><p>很多时候磁盘被写满了是各种奇怪错误的源头，所以如何快速找到问题所在就很重要了，</p></blockquote><pre><code># 显示当前文件下 Top 10 空间占用的文件/目录，# s 表示不显示每个子目录或文件的大小# h 表示用更加自然的方式显示（比如 K/M/G 这样）du -sh * | sort -nr | head</code></pre><h2 id="系统状态-top"><a href="#系统状态-top" class="headerlink" title="系统状态 top"></a>系统状态 top</h2><blockquote><p>了解系统状态一般少不了 <code>top</code>命令，虽然基本上不需要做任何操作，但是还是有一些可以自定义的内容的，比如</p></blockquote><pre><code># 进入系统状态显示后，具体值代表的意思是# PR    进程优先级，越小优先级越高# VIRT  占用的虚拟内存# RES   占用的物理内存# SHR   占用的共享内存# S     进程状态（S - 休眠，R - 正在运行，Z - 僵死状态，N - 优先级为负数）# TIME+ 进程启动后占用的总 CPU 时间# 可以按照不同的指标排序显示，按对应键即可# P     按照 CPU 使用率排序# T     按照 MITE+ 排序# M     按内存使用占比排序</code></pre><blockquote><p>查看某用户的进程</p></blockquote><pre><code>top -u root</code></pre><blockquote><p>查看进程内存分布(<code>12345</code> 是进程号)</p></blockquote><pre><code>pmap -d 12345</code></pre><blockquote><p>按照内存排序，这里的 <code>grep</code> 可以过滤特定的用户</p></blockquote><pre><code>ps -e -o &apos;user,uid,pid,pcpu,rsz,vsz,stime,comm,cmd&apos; | grep root | sort -nrk5</code></pre><h2 id="查找-find"><a href="#查找-find" class="headerlink" title="查找 find"></a>查找 find</h2><blockquote><p>在命令行界面中进行查找是每个需要在服务器上执行操作的同学都必备的技能，这里用实例来说明常见的实用用法</p></blockquote><blockquote><p>找出七天前的文件</p></blockquote><pre><code># / 表示从根目录中查找# -type f 表示找出系统普通文件，不包含目录# -mtime +n 表示寻找 n 天前的数据# -print 打印文件名称find / -type f -mtime +7 -print</code></pre><blockquote><p>找出并删除七天前的文件</p></blockquote><pre><code># -exec 表示后面执行系统命令# {} 只有该符号能跟在命令你后面# \; 结束符号find /Hexo -type f -mtime +7 -print -exec rm -f {} \;find /Hexo -type f -mtime +7 -print | xargs rm -f</code></pre><blockquote><p>其他示例</p></blockquote><pre><code># 使用管道和 xargs = -exec# 查找 /var 下最大的十个文件find /var -type f -ls | sort -k 7 -r -n | head# 查找 /var/log 下大于 5GB 的文件find /var/log/ -type f -size +5120M -exec ls -lh {} \;# 找出今天所有文件并将它们拷贝到另一个目录find /home/wdxtub/ -ctime 0 -print -exec cp {} /mnt/backup/{} \;</code></pre><h2 id="远程登录-ssh"><a href="#远程登录-ssh" class="headerlink" title="远程登录 ssh"></a>远程登录 ssh</h2><pre><code>ssh -vvv username@ip ssh 的 debug 模式ssh -i key.pem username@ip 用 pem key 登录 ssh</code></pre><h2 id="奇技"><a href="#奇技" class="headerlink" title="奇技"></a>奇技</h2><blockquote><p>这里是一些比较零碎的命令行技巧</p></blockquote><blockquote><p><code>openssl</code>产生随机的十六进制数，n 是字符数</p></blockquote><pre><code>openssl rand -hex n</code></pre><blockquote><p>在当前 shell 里执行一个文件里的命令</p></blockquote><pre><code>source /path/to/filename</code></pre><blockquote><p>截取变量的前五个字符   </p></blockquote><pre><code>${variable:0:5}</code></pre><blockquote><p>用 wget 抓取完整的网站目录结构，存放到本地目录中</p></blockquote><pre><code>wget -r --no-parent --reject &quot;index.html*&quot; http://hostname/ -P /home/user/dirs </code></pre><blockquote><p>一次创建多个目录</p></blockquote><pre><code>mkdir -p /home/wdxtub/{test0,test1,test2}</code></pre><blockquote><p>测试硬盘写入速度</p></blockquote><pre><code>dd if=/dev/zero of=/tmp/output.img bs=8k count=256k; rm -rf /tmp/output.img </code></pre><blockquote><p>测试硬盘读取速度</p></blockquote><pre><code>hdparm -Tt /dev/sda</code></pre><blockquote><p>获取文本的 md5</p></blockquote><pre><code>echo -n &quot;test&quot; | md5sum</code></pre><blockquote><p>获取 HTTP 头信息</p></blockquote><pre><code>curl -I http://wdxtub.com</code></pre><blockquote><p>显示所有 tcp4 监听端口</p></blockquote><pre><code>netstat -tln4 | awk &apos;{print $4}&apos; | cut -f2 -d: | grep -o &apos;[0-9]*&apos; </code></pre><blockquote><p>查看命令的运行时间</p></blockquote><pre><code>time command</code></pre><blockquote><p>查看所有的环境变量</p></blockquote><pre><code>export</code></pre><blockquote><p>文件内容对比</p></blockquote><pre><code>cmp file1 file2</code></pre><blockquote><p>内容前面会显示行号</p></blockquote><pre><code>cat -n file</code></pre><blockquote><p>查看 22 端口现在运行的程序</p></blockquote><pre><code>lsof -i:22</code></pre><blockquote><p>进程现在打开的文件</p></blockquote><pre><code>lsof -c abc 显示 abc</code></pre><blockquote><p>看进程号为 12 的进程打开了哪些文件</p></blockquote><pre><code>lsof -p 12</code></pre><blockquote><p>设置默认网关(临时)</p></blockquote><pre><code>route add default gw 192.168.1.4</code></pre><blockquote><p>设置默认网关(永久)</p></blockquote><pre><code>echo &quot;GATEWAY=192.168.0.1&quot; &gt;&gt;/etc/sysconfig/network</code></pre><blockquote><p>增加swap分区</p></blockquote><pre><code>swapfile=&quot;/home/swapfile&quot;dd if=/dev/zero of=$swapfile bs=1M count=8192/sbin/mkswap $swapfilechown root:root $swapfilechmod 600 $swapfile/sbin/swapon $swapfileecho &quot;$swapfile          swap                    swap    defaults        0 0&quot; &gt;&gt;/etc/fstab</code></pre><p>本文内容来自<a href="http://wdxtub.com/2017/07/10/linux-operation-guide/" target="_blank" rel="noopener">小士刀</a></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Cobbler自动化部署</title>
      <link href="/posts/1ab8.html"/>
      <url>/posts/1ab8.html</url>
      <content type="html"><![CDATA[<blockquote><p><code>Cobbler</code>是一个<code>Linux</code> 配置服务器，可以使用诸如<code>DHCP</code>，<code>TFTP</code>和<code>DNS</code>等服务从中心点简化和自动化多个计算机操作系统的基于网络的系统安装。可以使用<code>Xen</code>，<code>KVM</code>或<code>VMware</code>配置<code>PXE</code>，重新安装和虚拟化<code>guest</code> 虚拟机。<code>Cobbler</code>与程序进行交互以重新安装和虚拟化支持。和<code>Cobbler</code>使用<code>libvirtkoankoan</code>整合不同的虚拟化软件。<code>Cobbler</code>能够管理复杂的网络场景，如绑定以太网链路上的桥接</p></blockquote><h4 id="安装cobbler"><a href="#安装cobbler" class="headerlink" title="安装cobbler"></a>安装<code>cobbler</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install cobbler cobbler-web dhcp tftp-server pykickstart httpd xinetd -y</span><br><span class="line">systemctl start xinetd</span><br><span class="line">systemctl <span class="built_in">enable</span> xinetd</span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl <span class="built_in">enable</span> httpd</span><br><span class="line">systemctl start cobblerd</span><br><span class="line">systemctl <span class="built_in">enable</span> cobblerd</span><br></pre></td></tr></table></figure><h4 id="配置cobbler"><a href="#配置cobbler" class="headerlink" title="配置cobbler"></a>配置<code>cobbler</code></h4><blockquote><p>使用<code>openssl</code>对密码加密（前面的<code>admin</code>是加密随机值，后面的<code>admin</code>是密码）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">"s/^next_server:.*/next_server: 192.168.3.10/"</span> /etc/cobbler/settings</span><br><span class="line">sed -i <span class="string">"s/^server:.*/server: 192.168.3.10/"</span> /etc/cobbler/settings</span><br><span class="line">sed -i <span class="string">"s/^server:.*/server: 192.168.3.10/"</span> /etc/cobbler/settings</span><br><span class="line">sed -i <span class="string">"s/^manage_dhcp:.*/manage_dhcp: 1/"</span> /etc/cobbler/settings</span><br><span class="line">pass=$(openssl passwd -1 -salt <span class="string">'admin'</span> <span class="string">'admin'</span>)</span><br><span class="line">sed -i <span class="string">"s@^default_password_crypted:.*@default_password_crypted: <span class="variable">$pass</span>@"</span> /etc/cobbler/settings</span><br></pre></td></tr></table></figure><h4 id="配置tftp"><a href="#配置tftp" class="headerlink" title="配置tftp"></a>配置<code>tftp</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">"/disable/s/yes/no/"</span> /etc/xinetd.d/tftp</span><br></pre></td></tr></table></figure><h4 id="启动rsync服务设置开机启动"><a href="#启动rsync服务设置开机启动" class="headerlink" title="启动rsync服务设置开机启动"></a>启动<code>rsync</code>服务设置开机启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rsyncd</span><br><span class="line">systemctl <span class="built_in">enable</span> rsyncd</span><br></pre></td></tr></table></figure><h4 id="下载cobbler相关的包-配置"><a href="#下载cobbler相关的包-配置" class="headerlink" title="下载cobbler相关的包;配置"></a>下载<code>cobbler</code>相关的包;配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cobbler get-loaders</span><br><span class="line">systemctl restart cobblerd</span><br><span class="line">cobbler check</span><br></pre></td></tr></table></figure><h4 id="配置DHCP主要修改网段-DNS-网关等信息"><a href="#配置DHCP主要修改网段-DNS-网关等信息" class="headerlink" title="配置DHCP主要修改网段,DNS,网关等信息"></a>配置<code>DHCP</code>主要修改<code>网段</code>,<code>DNS</code>,<code>网关</code>等信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">"21,25s/^/#/"</span> /etc/cobbler/dhcp.template</span><br><span class="line">sed -i <span class="string">"25a subnet 192.168.3.0 netmask 255.255.255.0 &#123;"</span> /etc/cobbler/dhcp.template</span><br><span class="line">sed -i <span class="string">"26a\     option routers            192.168.3.1;"</span> /etc/cobbler/dhcp.template</span><br><span class="line">sed -i <span class="string">"27a\     option domain-name-servers 192.168.0.5;"</span> /etc/cobbler/dhcp.template</span><br><span class="line">sed -i <span class="string">"28a\     option subnet-mask         255.255.255.0;"</span> /etc/cobbler/dhcp.template</span><br><span class="line">sed -i <span class="string">"29a\     range dynamic-bootp        192.168.3.30 192.168.3.50;"</span> /etc/cobbler/dhcp.template</span><br></pre></td></tr></table></figure><h4 id="挂载并导入数据"><a href="#挂载并导入数据" class="headerlink" title="挂载并导入数据"></a>挂载并导入数据</h4><blockquote><p>导入镜像需要等待一会;<code>cobbler</code>导入的镜像路径：<code>/var/www/cobbler/ks_mirror</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/centos7.4</span><br><span class="line">mount /dev/cdrom /mnt/centos7.4</span><br><span class="line">cobbler import --path=/mnt/centos7.4 --name=CentOS-7.4 --arch=x86_64</span><br><span class="line">ls /var/www/cobbler/ks_mirror</span><br></pre></td></tr></table></figure><h4 id="查看导入的镜像信息"><a href="#查看导入的镜像信息" class="headerlink" title="查看导入的镜像信息"></a>查看导入的镜像信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cobbler list</span><br><span class="line">cobbler profile report</span><br><span class="line">cobbler profile edit --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h4 id="指定无人值守文件-修改内核网卡名称"><a href="#指定无人值守文件-修改内核网卡名称" class="headerlink" title="指定无人值守文件;修改内核网卡名称"></a>指定无人值守文件;修改内核网卡名称</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp -a /var/lib/cobbler/kickstarts/sample_end.ks /var/lib/cobbler/kickstarts/CentOS-7.4-x86_64.cfg</span><br><span class="line">cobbler profile edit --name=CentOS-7.4-x86_64 --kickstart=/var/lib/cobbler/kickstarts/CentOS-7.4-x86_64.cfg</span><br><span class="line">cobbler profile edit --name=CentOS-7.4-x86_64 --kopts=<span class="string">'net.ifnames=0 biosdevname=0'</span></span><br><span class="line">cobbler profile report</span><br></pre></td></tr></table></figure><h4 id="重新启动服务"><a href="#重新启动服务" class="headerlink" title="重新启动服务"></a>重新启动服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart cobblerd</span><br><span class="line">cobbler sync</span><br><span class="line">systemctl restart xinetd</span><br></pre></td></tr></table></figure><h4 id="web管理"><a href="#web管理" class="headerlink" title="web管理"></a>web管理</h4><pre><code>https://192.168.3.10/cobbler_web默认username: cobblerd默认password: cobblerd</code></pre><h4 id="客户端使用koan重装系统"><a href="#客户端使用koan重装系统" class="headerlink" title="客户端使用koan重装系统"></a>客户端使用<code>koan</code>重装系统</h4><blockquote><p><code>--list=profiles</code> 查看服务器镜像列表<br><code>--profile=CentOS-7.4-x86_64</code>使用此镜像重装系统</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install koan</span><br><span class="line">koan --server=192.168.3.10 --list=profiles</span><br><span class="line">koan --server=192.168.3.10 --profile=CentOS-7.4-x86_64 --replace-self</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> cobbler </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> cobbler </tag>
            
            <tag> 自动化部署 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>主域控Down机不可恢复,辅助域控如何抢占角色</title>
      <link href="/posts/389a.html"/>
      <url>/posts/389a.html</url>
      <content type="html"><![CDATA[<blockquote><p>活动目录（Active Directory）是面向<code>Windows Standard Server</code>、<code>Windows Enterprise Server</code>以及 <code>Windows Datacenter Server</code>的目录服务。活动目录服务是<code>Windows Server 2000</code>操作系统平台的中心组件之一。理解活动目录对于理解<code>Windows Server 2000</code>的整体价值是非常重要的。这篇关于活动目录服务所涉及概念和技术的介绍文章描述了活动目录的用途，提供了对其工作原理的概述，并概括了该服务为不同组织和机构提供的关键性商务及技术便利</p></blockquote><h4 id="Active-Directory结构"><a href="#Active-Directory结构" class="headerlink" title="Active Directory结构"></a><code>Active Directory</code>结构</h4><blockquote><p>Active Directory 定义了五种操作主机角色（又称ＦＳＭＯ）： </p></blockquote><pre><code>1.架构主机 schema master2..域命名主机 domain naming master3.相对标识号 (RID) 主机 RID master4.主域控制器模拟器 (PDCE) 5.基础结构主机 infrastructure master</code></pre><blockquote><p>每种操作主机角色负担不同的工作，具有不同的功能：</p></blockquote><p>1.架构主机<br>具有架构主机角色的 DC 是可以更新目录架构的唯一 DC。这些架构更新会从架构主机复制到目录林中的所有其它域控制器中。 架构主机是基于目录林的，整个目录林中只有一个架构主机。</p><p>2.域命名主机<br>具有域命名主机角色的 DC 是可以执行以下任务的唯一 DC：<br>向目录林中添加新域。<br>从目录林中删除现有的域。<br>添加或删除描述外部目录的交叉引用对象。 </p><p>3.相对标识号 (RID) 主机<br>此操作主机负责向其它 DC 分配 RID 池。只有一个服务器执行此任务。在创建安全主体（例如用户、<br>组或计算机）时，需要将 RID 与域范围内的标识符相结合，以创建唯一的安全标识符 (SID)。 每一个 Windows 2000 DC 都会收到用于创建对象的 RID 池（默认为 512）。RID 主机通过分配不同的池来确保这些 ID 在每一个 DC 上都是唯一的。通过 RID 主机，还可以在同一目录林中的不同域之间移动所有对象。</p><p>域命名主机是基于目录林的，整个目录林中只有一个域命名主机。相对标识号（RID）主机是基于域的，目录林中的每个域都有自己的相对标识号（RID）主机</p><p>4.PDCE<br>主域控制器模拟器提供以下主要功能：<br>向后兼容低级客户端和服务器，允许 Windows NT4.0 备份域控制器 (BDC) 加入到新的 Windows 2000 环境。 本机 Windows 2000 环境将密码更改转发到 PDCE。每当 DC 验证密码失败后，它会与 PDCE 取得联系，以查看该密码是否可以在那里得到验证，也许其原因在于密码更改还没有被复制到验证 DC 中。<br>时间同步 — 目录林中各个域的 PDCE 都会与目录林的根域中的 PDCE 进行同步。<br>PDCE是基于域的，目录林中的每个域都有自己的PDCE。 </p><p>5.基础结构主机<br>基础结构主机确保所有域间操作对象的一致性。当引用另一个域中的对象时，此引用包含该对象的<br>全局唯一标识符 (GUID)、安全标识符 (SID) 和可分辨的名称 (DN)。如果被引用的对象移动，则在域中担<br>当结构主机角色的 DC 会负责更新该域中跨域对象引用中的 SID 和 DN。<br>基础结构主机是基于域的，目录林中的每个域都有自己的基础结构主机<br>默认，这五种ＦＭＳＯ存在于目录林根域的第一台DC（主域控制器）上，而子域中的相对标识号 (RID) 主机、PDCE 、基础结构主机存在于子域中的第一台DC。</p><h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><blockquote><p>系统环境<code>windows Server 2008/2012</code></p></blockquote><pre><code>Master计算机全名: owone.test.comSlave计算机全名: owtwo.test.com</code></pre><h4 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h4><p>1.主从域DNS必须与AD集成<br>2.主从域DC类型必须都是全局编录</p><h4 id="夺取角色"><a href="#夺取角色" class="headerlink" title="夺取角色"></a>夺取角色</h4><blockquote><p><code>WIN+R</code>输入CMD然后点击确定</p></blockquote><h5 id="查看五大角色"><a href="#查看五大角色" class="headerlink" title="查看五大角色"></a>查看五大角色</h5><pre><code>netdom query fsmo</code></pre><h5 id="进入ntdsutil模式"><a href="#进入ntdsutil模式" class="headerlink" title="进入ntdsutil模式"></a>进入ntdsutil模式</h5><pre><code>ntdsutil</code></pre><h5 id="管理-NTDS-角色所有者令牌"><a href="#管理-NTDS-角色所有者令牌" class="headerlink" title="管理 NTDS 角色所有者令牌"></a>管理 NTDS 角色所有者令牌</h5><pre><code>roles</code></pre><h5 id="连接到一个特定-AD-DC-LDS-实例"><a href="#连接到一个特定-AD-DC-LDS-实例" class="headerlink" title="连接到一个特定 AD DC/LDS 实例"></a>连接到一个特定 AD DC/LDS 实例</h5><pre><code>connection</code></pre><h5 id="连接到服务器、DNS"><a href="#连接到服务器、DNS" class="headerlink" title="连接到服务器、DNS"></a>连接到服务器、DNS</h5><blockquote><p>当前能正常运行的域控</p></blockquote><pre><code>connect to server owtwo.test.com</code></pre><h5 id="返回上一个菜单"><a href="#返回上一个菜单" class="headerlink" title="返回上一个菜单"></a>返回上一个菜单</h5><pre><code>quit</code></pre><h5 id="在已连接的服务器上覆盖-RID-角色"><a href="#在已连接的服务器上覆盖-RID-角色" class="headerlink" title="在已连接的服务器上覆盖 RID 角色"></a>在已连接的服务器上覆盖 RID 角色</h5><pre><code>seize rid master</code></pre><h5 id="在已连接的服务器上覆盖-PDC-角色"><a href="#在已连接的服务器上覆盖-PDC-角色" class="headerlink" title="在已连接的服务器上覆盖 PDC 角色"></a>在已连接的服务器上覆盖 PDC 角色</h5><pre><code>seize pdc</code></pre><h5 id="覆盖已连接的服务器上的命名主机角色"><a href="#覆盖已连接的服务器上的命名主机角色" class="headerlink" title="覆盖已连接的服务器上的命名主机角色"></a>覆盖已连接的服务器上的命名主机角色</h5><pre><code>seize naming master</code></pre><h5 id="在已连接的服务器上覆盖结构角色"><a href="#在已连接的服务器上覆盖结构角色" class="headerlink" title="在已连接的服务器上覆盖结构角色"></a>在已连接的服务器上覆盖结构角色</h5><pre><code>seize infrastructure master</code></pre><h5 id="在已连接的服务器上覆盖架构角色"><a href="#在已连接的服务器上覆盖架构角色" class="headerlink" title="在已连接的服务器上覆盖架构角色"></a>在已连接的服务器上覆盖架构角色</h5><pre><code>seize schema master</code></pre><h5 id="返回上一个菜单-退出"><a href="#返回上一个菜单-退出" class="headerlink" title="返回上一个菜单,退出"></a>返回上一个菜单,退出</h5><pre><code>quitquit</code></pre><h5 id="查看五大角色-1"><a href="#查看五大角色-1" class="headerlink" title="查看五大角色"></a>查看五大角色</h5><pre><code>netdom query fsmo</code></pre><h4 id="删除残余服务器信息"><a href="#删除残余服务器信息" class="headerlink" title="删除残余服务器信息"></a>删除残余服务器信息</h4><blockquote><p><code>WIN+R</code>输入CMD然后点击确定</p></blockquote><h5 id="进入ntdsutil模式-1"><a href="#进入ntdsutil模式-1" class="headerlink" title="进入ntdsutil模式"></a>进入ntdsutil模式</h5><pre><code>ntdsutil</code></pre><h5 id="清理不使用的服务器的对象"><a href="#清理不使用的服务器的对象" class="headerlink" title="清理不使用的服务器的对象"></a>清理不使用的服务器的对象</h5><pre><code>metadata cleanup</code></pre><h5 id="选择的站点，服务器，域，角色和命名上下文"><a href="#选择的站点，服务器，域，角色和命名上下文" class="headerlink" title="选择的站点，服务器，域，角色和命名上下文"></a>选择的站点，服务器，域，角色和命名上下文</h5><pre><code>select operation target</code></pre><h5 id="连接到一个特定-AD-DC-LDS-实例-1"><a href="#连接到一个特定-AD-DC-LDS-实例-1" class="headerlink" title="连接到一个特定 AD DC/LDS 实例"></a>连接到一个特定 AD DC/LDS 实例</h5><pre><code>connections</code></pre><h5 id="连接到服务器、DNS-1"><a href="#连接到服务器、DNS-1" class="headerlink" title="连接到服务器、DNS"></a>连接到服务器、DNS</h5><blockquote><p>当前能正常运行的域控</p></blockquote><pre><code>connect to server owtwo.test.com</code></pre><h5 id="返回上一个菜单-1"><a href="#返回上一个菜单-1" class="headerlink" title="返回上一个菜单"></a>返回上一个菜单</h5><pre><code>quit</code></pre><h5 id="在企业中列出站点"><a href="#在企业中列出站点" class="headerlink" title="在企业中列出站点"></a>在企业中列出站点</h5><pre><code>list sites</code></pre><h5 id="将编号-0-站点定为所选站点"><a href="#将编号-0-站点定为所选站点" class="headerlink" title="将编号 0 站点定为所选站点"></a>将编号 0 站点定为所选站点</h5><pre><code>select site 0</code></pre><h5 id="列出所选站点中的域"><a href="#列出所选站点中的域" class="headerlink" title="列出所选站点中的域"></a>列出所选站点中的域</h5><pre><code>List domains in site</code></pre><h5 id="将编号-0-域定为所选域"><a href="#将编号-0-域定为所选域" class="headerlink" title="将编号 0 域定为所选域"></a>将编号 0 域定为所选域</h5><pre><code>select domain 0</code></pre><h5 id="列出所选域和站点中的服务器"><a href="#列出所选域和站点中的服务器" class="headerlink" title="列出所选域和站点中的服务器"></a>列出所选域和站点中的服务器</h5><pre><code>List servers for domain in site</code></pre><h5 id="将编号-0-服务器定为所选服务器"><a href="#将编号-0-服务器定为所选服务器" class="headerlink" title="将编号 0 服务器定为所选服务器"></a>将编号 0 服务器定为所选服务器</h5><blockquote><p>选择需要删除的服务器</p></blockquote><pre><code>select server 0</code></pre><h5 id="返回上一个菜单-2"><a href="#返回上一个菜单-2" class="headerlink" title="返回上一个菜单"></a>返回上一个菜单</h5><pre><code>quit</code></pre><h5 id="删除所选定的服务器"><a href="#删除所选定的服务器" class="headerlink" title="删除所选定的服务器"></a>删除所选定的服务器</h5><pre><code>Remove selected server</code></pre><h5 id="返回上一个菜单-退出-1"><a href="#返回上一个菜单-退出-1" class="headerlink" title="返回上一个菜单,退出"></a>返回上一个菜单,退出</h5><pre><code>quitquit</code></pre><h4 id="code"><a href="#code" class="headerlink" title="code"></a>code</h4><h5 id="夺取5大角色"><a href="#夺取5大角色" class="headerlink" title="夺取5大角色"></a>夺取5大角色</h5><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">netdom query fsmo</span><br><span class="line">ntdsutil</span><br><span class="line">roles</span><br><span class="line">connection</span><br><span class="line">connect to server owone.test.com</span><br><span class="line">quit</span><br><span class="line">seize rid master</span><br><span class="line">seize pdc</span><br><span class="line">seize naming master</span><br><span class="line">seize infrastructure master</span><br><span class="line">seize schema master</span><br><span class="line">quit</span><br><span class="line">quit</span><br><span class="line">netdom query fsmo</span><br></pre></td></tr></table></figure><h5 id="删除残余服务器信息-1"><a href="#删除残余服务器信息-1" class="headerlink" title="删除残余服务器信息"></a>删除残余服务器信息</h5><blockquote><p>不可直接复制粘贴(注意选择的服务器)</p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ntdsutil</span><br><span class="line">metadata cleanup</span><br><span class="line">select operation target</span><br><span class="line">connections</span><br><span class="line">connect to server owtwo.test.com</span><br><span class="line">quit</span><br><span class="line">list sites</span><br><span class="line">select site <span class="number">0</span></span><br><span class="line">List domains <span class="keyword">in</span> site</span><br><span class="line">select domain <span class="number">0</span></span><br><span class="line">List servers <span class="keyword">for</span> domain <span class="keyword">in</span> site</span><br><span class="line">select server <span class="number">0</span></span><br><span class="line">quit</span><br><span class="line">Remove selected server</span><br><span class="line">quit</span><br><span class="line">quit</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> AD </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ssh,scp使用expect自动处理密码</title>
      <link href="/posts/6e0e.html"/>
      <url>/posts/6e0e.html</url>
      <content type="html"><![CDATA[<h4 id="ssh免密码登陆"><a href="#ssh免密码登陆" class="headerlink" title="ssh免密码登陆"></a>ssh免密码登陆</h4><blockquote><p><code>Expect</code>是一个免费的编程工具语言，用来实现自动和交互式任务进行通信，而无需人的干预。<code>Expect</code>的作者<code>Don Libes</code>在1990年开始编写<code>Expect</code>时对<code>Expect</code>做有如下定义：<code>Expect</code>是一个用来实现自动交互功能的软件套件(<code>Expect [is a] software suite for automating interactive tools</code>)。使用它，系统管理员可以创建脚本来对命令或程序进行输入，而这些命令和程序是期望从终端（terminal）得到输入，一般来说这些输入都需要手工输入进行的。<code>Expect</code>则可以根据程序的提示模拟标准输入提供给程序需要的输入来实现交互程序执行</p></blockquote><h5 id="安装expect"><a href="#安装expect" class="headerlink" title="安装expect"></a>安装expect</h5><pre><code>yum -y install expect</code></pre><h5 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h5><blockquote><p>新建<code>ssh.exp</code><br><code>chmod +x ssh.exp</code><br>使用方法 <code>./ssh.exp ip</code><br>文件中<code>passwd</code>变量为登陆ssh主机的密码</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> timeout 10</span><br><span class="line"><span class="built_in">set</span> passwderror 0</span><br><span class="line"><span class="built_in">set</span> passwd 123456</span><br><span class="line">spawn ssh root@192.168.3.10</span><br><span class="line"></span><br><span class="line">expect &#123;</span><br><span class="line">    <span class="string">"*assword:*"</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> &#123; <span class="variable">$passwderror</span> == 1 &#125; &#123;</span><br><span class="line">        puts <span class="string">"passwd is error"</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">set</span> timeout 1000</span><br><span class="line">        <span class="built_in">set</span> passwderror 1</span><br><span class="line">        send <span class="string">"<span class="variable">$passwd</span>\r"</span></span><br><span class="line">        exp_continue</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">"*es/no)?*"</span> &#123;</span><br><span class="line">        send <span class="string">"yes\r"</span></span><br><span class="line">        exp_continue</span><br><span class="line">    &#125;</span><br><span class="line">    timeout &#123;</span><br><span class="line">        puts <span class="string">"connect is timeout"</span></span><br><span class="line">        <span class="built_in">exit</span> 3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="scp免密码传书文件"><a href="#scp免密码传书文件" class="headerlink" title="scp免密码传书文件"></a>scp免密码传书文件</h4><blockquote><p>新建<code>scp.exp</code><br><code>chmod +x scp.exp</code><br>使用方法<code>./scp.exp 源文件 目标文件</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> timeout 10</span><br><span class="line"><span class="built_in">set</span> passwderror 0</span><br><span class="line"><span class="built_in">set</span> passwd redhat</span><br><span class="line"><span class="built_in">set</span> spath [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> tpath [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"></span><br><span class="line">spawn scp <span class="variable">$spath</span> <span class="variable">$tpath</span></span><br><span class="line"></span><br><span class="line">expect &#123;</span><br><span class="line">    <span class="string">"*assword:*"</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> &#123; <span class="variable">$passwderror</span> == 1 &#125; &#123;</span><br><span class="line">        puts <span class="string">"passwd is error"</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">set</span> timeout 1000</span><br><span class="line">        <span class="built_in">set</span> passwderror 1</span><br><span class="line">        send <span class="string">"<span class="variable">$passwd</span>\r"</span></span><br><span class="line">        exp_continue</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">"*es/no)?*"</span> &#123;</span><br><span class="line">        send <span class="string">"yes\r"</span></span><br><span class="line">        exp_continue</span><br><span class="line">    &#125;</span><br><span class="line">    timeout &#123;</span><br><span class="line">        puts <span class="string">"connect is timeout"</span></span><br><span class="line">        <span class="built_in">exit</span> 3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> expect </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> expect </tag>
            
            <tag> 自动应答 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows下数据库+web定时备份</title>
      <link href="/posts/9f5d.html"/>
      <url>/posts/9f5d.html</url>
      <content type="html"><![CDATA[<h3 id="定期自动备份"><a href="#定期自动备份" class="headerlink" title="定期自动备份"></a>定期自动备份</h3><blockquote><p>系统环境 Windows Server 2008 R2<br>每周六晚上自动备份mysql数据库及web数据<br>自动删除100天前备份的数据</p></blockquote><h4 id="cmd批处理"><a href="#cmd批处理" class="headerlink" title="cmd批处理"></a>cmd批处理</h4><blockquote><p>将此文件放到<code>C:\</code> 文件名为<code>backup_web_mysql.bat</code></p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="comment">REM ------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">REM 备份web服务器,Mysql</span></span><br><span class="line"><span class="comment">REM date 格式化输出日期</span></span><br><span class="line"><span class="comment">REM mysqldump mysqldump路径及登录用户信息</span></span><br><span class="line"><span class="comment">REM winrar 指定winrar压缩文件路径(由于路径有空格需用引号)</span></span><br><span class="line"><span class="comment">REM backuppath 备份路径</span></span><br><span class="line"><span class="comment">REM 自动删除100天以前的目录</span></span><br><span class="line"><span class="comment">REM ------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">REM 设置变量 date 变量获取时间 backuppath 备份路径  mysqldump 备份程序登陆 winrar 压缩软件路径</span></span><br><span class="line"><span class="built_in">set</span> <span class="built_in">date</span>=<span class="variable">%date:~0,4%</span>-<span class="variable">%date:~5,2%</span>-<span class="variable">%date:~8,2%</span></span><br><span class="line"><span class="built_in">set</span> backuppath="E:\File_Softwart_Backup\web_0.<span class="number">6</span>_backup\<span class="variable">%date%</span>"</span><br><span class="line"><span class="built_in">set</span> mysqldump=D:\xampp\mysql\bin\mysqldump.exe -uuser -ppasswd</span><br><span class="line"><span class="built_in">set</span> winrar="c:\Program Files\WinRAR\WinRAR.exe"</span><br><span class="line"></span><br><span class="line"><span class="comment">REM 创建备份目录</span></span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">%backuppath%</span></span><br><span class="line"></span><br><span class="line"><span class="comment">REM 备份mysql,压缩备份后的文件,删除sql文件</span></span><br><span class="line"><span class="variable">%mysqldump%</span> -A -B &gt; <span class="variable">%backuppath%</span>\mysq.sql</span><br><span class="line"><span class="variable">%winrar%</span> a -k -r -s -m1 <span class="variable">%backuppath%</span>\mysql.sql.rar <span class="variable">%backuppath%</span>\mysq.sql</span><br><span class="line"><span class="built_in">del</span> <span class="variable">%backuppath%</span>\*.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">REM 备份网页数据</span></span><br><span class="line"><span class="variable">%winrar%</span> a -k -r -s -m1 <span class="variable">%backuppath%</span>\htdocs.rar  D:\xampp\htdocs</span><br><span class="line"></span><br><span class="line"><span class="comment">REM 指定待删除文件的存放路径</span></span><br><span class="line"><span class="built_in">set</span> SrcDir=E:\File_Softwart_Backup\web_0.<span class="number">6</span>_backup</span><br><span class="line"></span><br><span class="line"><span class="comment">REM 指定天数</span></span><br><span class="line"><span class="built_in">set</span> DaysAgo=<span class="number">100</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">REM 测试删除文件   (删除echo)  forfiles /p %SrcDir% /s /m *.* /d -%DaysAgo% /c "cmd /c echo del /f /q /a @path"</span></span><br><span class="line"><span class="comment">REM 测试删除文件夹 (删除echo)  forfiles /p %SrcDir% /s /m * /d -%DaysAgo% /c "cmd /c echo rd /s /q  @path"</span></span><br><span class="line">forfiles /p <span class="variable">%SrcDir%</span> /s /m * /d -<span class="variable">%DaysAgo%</span> /c "<span class="built_in">cmd</span> /c <span class="built_in">rd</span> /s /q  @<span class="built_in">path</span>"</span><br></pre></td></tr></table></figure><h4 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h4><p>打开<code>服务器管理器</code>→<code>配置</code>→<code>任务计划程序</code>→<code>任务计划程序库</code></p><p><img src="/images/backup_mysq_web_01.png" alt="服务器管理器"></p><p>输入计划任务<code>名称</code>;点击<code>更改用户或组</code>输入运行此批处理文件的账户;勾选<code>不管用户是否登陆都要运行</code></p><p><img src="/images/backup_mysq_web_02.png" alt="创建计划"></p><p>点击<code>触发器</code>选择<code>开始任务类型</code> 选择任务执行时间及周期;勾选左下角<code>启用</code></p><p><img src="/images/backup_mysq_web_03.png" alt=""></p><p>点击<code>操作</code>→<code>新建</code>选择触发任务类型</p><p><img src="/images/backup_mysq_web_04.png" alt=""></p><p><code>设置</code></p><p><img src="/images/backup_mysq_web_05.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> bat </tag>
            
            <tag> mysql备份 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows禁止某个目录下的所有exe程序联网</title>
      <link href="/posts/593d.html"/>
      <url>/posts/593d.html</url>
      <content type="html"><![CDATA[<h3 id="windows禁止某个目录下的所有exe程序联网"><a href="#windows禁止某个目录下的所有exe程序联网" class="headerlink" title="windows禁止某个目录下的所有exe程序联网"></a>windows禁止某个目录下的所有exe程序联网</h3><blockquote><p>最近工作上有个需求需要禁止某些文件下的程序联网</p></blockquote><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><blockquote><p>1.用户输入程序路径后自动搜索路径下的所有exe文件<br>2.将搜索到的程序添加到Windows防火墙中禁止联网</p></blockquote><h4 id="批处理代码"><a href="#批处理代码" class="headerlink" title="批处理代码"></a>批处理代码</h4><blockquote><p>新建文本文件更改文件的扩展名为bat,以下为文件内容<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="comment">rem 关闭自动输出</span></span><br><span class="line"><span class="built_in">setlocal</span> ENABLEDELAYEDEXPANSION</span><br><span class="line"><span class="built_in">mode</span> <span class="built_in">con</span>: cols=<span class="number">65</span> lines=<span class="number">25</span></span><br><span class="line"><span class="built_in">color</span> <span class="number">0</span>a</span><br><span class="line"><span class="comment">rem 批处理获取管理员权限</span></span><br><span class="line">:-------------------------------------  </span><br><span class="line">%<span class="number">1</span> mshta vbscript:createobject("shell.application").shellexecute("""%~<span class="number">0</span>""","::",,"runas",<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span> /b</span><br><span class="line"><span class="built_in">CD</span> /D "%~dp0"</span><br><span class="line">:-------------------------------------  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:begin</span><br><span class="line"></span><br><span class="line"><span class="comment">rem 接收输入</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> name=</span><br><span class="line"><span class="built_in">set</span> Fpath=</span><br><span class="line"><span class="built_in">set</span> /p name=请输入防火墙策略名称(使用软件名即可):</span><br><span class="line"><span class="built_in">set</span> /p Fpath=请输入软件安装路径(C:\Program Files\WinRAR):</span><br><span class="line"></span><br><span class="line"><span class="comment">rem 输出得到的输入信息</span></span><br><span class="line"><span class="built_in">echo</span> 您输入的防火墙策略名称是：<span class="variable">%name%</span></span><br><span class="line"><span class="built_in">echo</span> 您输入的软件安装路径是：<span class="variable">%Fpath%</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> "确认请按任意键否则请按Ctrl+C取消"</span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="built_in">set</span> /a n=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> /r "<span class="variable">%Fpath%</span>" <span class="variable">%%i</span> <span class="keyword">in</span> (*.exe) <span class="keyword">do</span> (</span><br><span class="line">    <span class="built_in">set</span> /a n+=<span class="number">1</span></span><br><span class="line">    <span class="built_in">echo</span> "<span class="variable">!n!</span>_<span class="variable">%name%</span>","<span class="variable">%%i</span>" </span><br><span class="line">    netsh advfirewall firewall <span class="built_in">del</span> rule name="<span class="variable">!n!</span>_<span class="variable">%name%</span>"&gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;<span class="built_in">nul</span></span><br><span class="line">    netsh advfirewall firewall add rule name="<span class="variable">!n!</span>_<span class="variable">%name%</span>" program="<span class="variable">%%i</span>" action=block <span class="built_in">dir</span>=out&gt;null</span><br><span class="line">    <span class="built_in">echo</span> 阻止<span class="variable">!n!</span>_<span class="variable">%name%</span>程序出站规则已添加成功</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">rem pause&gt;null</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">rem 从begin标签出，再次运行</span></span><br><span class="line"><span class="keyword">goto</span> begin</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> firewalld </tag>
            
            <tag> 禁止程序联网 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux挂载Windows文件共享</title>
      <link href="/posts/c34c.html"/>
      <url>/posts/c34c.html</url>
      <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><blockquote><p>它用于挂载Linux系统外的文件，挂载源可以是块设备(/dev/sdc1)，NFS(nfs.test.com:/dir)等</p></blockquote><h4 id="命令格式："><a href="#命令格式：" class="headerlink" title="命令格式："></a>命令格式：</h4><pre><code>mount [-t types] [-o options] &lt;source dir&gt;  &lt;target dir&gt;</code></pre><blockquote><p>挂载成功后原 dir 里面的 内容/属主/权限 将被屏蔽，直到此设备被卸载。</p></blockquote><h4 id="命令参数："><a href="#命令参数：" class="headerlink" title="命令参数："></a>命令参数：</h4><p><code>-t types</code> 指定文件系统的类型，通常不必指定。mount 会自动选择正确的类型。常用类型有：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>iso9660</code></td><td><code>光盘或镜像文件</code></td></tr><tr><td><code>msdos</code></td><td><code>DOS Fat16文件系统</code></td></tr><tr><td><code>vfat</code></td><td><code>Win 9x Fat32文件系统</code></td></tr><tr><td><code>ntfs</code></td><td><code>Win NT NTFS文件系统</code></td></tr><tr><td><code>nfs</code></td><td><code>UNIX(Linux)网络共享</code></td></tr><tr><td><code>cifs</code></td><td><code>Windows 网络共享</code></td></tr></tbody></table><p><code>-o options</code> 主要用来描述设备或档案的挂接方式。常用的参数有：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>ro</code></td><td><code>只读方式挂载设备</code></td></tr><tr><td><code>rw</code></td><td><code>可读可写方式挂载设备</code></td></tr><tr><td><code>iocharset</code></td><td><code>指定访问文件系统所用的字符集</code></td></tr></tbody></table><h4 id="使用shell命令临时挂载"><a href="#使用shell命令临时挂载" class="headerlink" title="使用shell命令临时挂载"></a>使用<code>shell</code>命令临时挂载</h4><pre><code>mkdir /tmp/mountmount -o username=user,password=passwd,domain=domain //192.168.0.6/Shares /tmp/mount/       # 此处的/tmp/mount权限为user用户在domain域/主机上的权限mount -o username=user,password=passwd,domain=domain,ro //192.168.0.6/Shares /tmp/mount/        # 只读挂载</code></pre><h4 id="开机自动挂载"><a href="#开机自动挂载" class="headerlink" title="开机自动挂载"></a>开机自动挂载</h4><pre><code>echo &quot;//192.168.0.6/Shares /tmp/mount    cifs    auto,username=user,domain=domain,password=passwd,uid=1000,gid=1000,iocharset=utf8,file_mode=0770,dir_mode=0770   0 0&quot; &gt;&gt;/etc/fstabmount -a</code></pre><h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h4><blockquote><p>当使用ls命令不能列出挂载的文件夹时重新挂载</p></blockquote><pre><code>mount -o remount,rw /tmp/mount</code></pre>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> mount </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>rsync+crontab实现自动同步</title>
      <link href="/posts/10f6.html"/>
      <url>/posts/10f6.html</url>
      <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>rsync命令是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。rsync使用所谓的“rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。</p><table><thead><tr><th>Server:</th><th>Client</th></tr></thead><tbody><tr><td>IP: 192.168.0.8</td><td>IP: 192.168.3.3</td></tr><tr><td>Directory: /tmp</td><td>Directory: /root/rsync_web</td></tr></tbody></table><h2 id="Servr端配置"><a href="#Servr端配置" class="headerlink" title="Servr端配置"></a>Servr端配置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre><code>yum -y install rsync</code></pre><h3 id="配置rsync主配置文件"><a href="#配置rsync主配置文件" class="headerlink" title="配置rsync主配置文件"></a>配置rsync主配置文件</h3><table><thead><tr><th>全局配置</th><th></th></tr></thead><tbody><tr><td><code>uid</code></td><td><code>运行RSYNC守护进程的组</code></td></tr><tr><td><code>gid</code></td><td><code>运行RSYNC守护进程的组</code></td></tr><tr><td><code>use chroot</code></td><td><code>安全防护</code></td></tr><tr><td><code>time out</code></td><td><code>客户端超时时间</code></td></tr><tr><td><code>max connections</code></td><td><code>最大连接数</code></td></tr><tr><td><code>pid file</code></td><td><code>pid文件的存放位置</code></td></tr><tr><td><code>lock file</code></td><td><code>锁文件的存放位置</code></td></tr><tr><td><code>log file</code></td><td><code>日志文件的存放位置</code></td></tr></tbody></table><blockquote><p>如果<code>use chroot</code>指定为<code>true</code>，那么<code>rsync</code>在传输文件以前首先<code>chroot</code>到<code>path</code>参数所指定的目录下。这样做的原因是实现额外的安全防护，但是缺点是需要以<code>root</code>权限，并且不能备份指向外部的符号连接所指向的目录文件。默认情况下<code>chroot</code>值为<code>true</code>.</p></blockquote><table><thead><tr><th>数据与认证</th><th></th></tr></thead><tbody><tr><td><code>[rsync_tmp_backup]</code></td><td><code>认证模块名，对外公布的名字 路径：user@192.168.0.8::rsync_master_backup</code></td></tr><tr><td><code>auth users</code></td><td><code>认证用户名</code></td></tr><tr><td><code>secrets file</code></td><td><code>认证用户密码文件，配置auth users的密码</code></td></tr><tr><td><code>path</code></td><td><code>同步的目录</code></td></tr><tr><td><code>ignore errors</code></td><td><code>忽略无关的IO错误</code></td></tr><tr><td><code>red only</code></td><td><code>读写权限 [false:可读可写]，[ true:只读]</code></td></tr><tr><td><code>list</code></td><td><code>查看服务器文件列表权限[false:禁止]，[ true:允许]</code></td></tr><tr><td><code>hosts allow</code></td><td><code>允许访问服务的IP[IP,地址段，*]</code></td></tr><tr><td><code>hosts deny</code></td><td><code>禁止访问服务的IP[IP,地址段，*]</code></td></tr></tbody></table><blockquote><p>认证用户密码文件需要手动建立，创建后需要修改文件的权限为600,list所有用户都可查询不受<code>hosts deny</code> 限制</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;/etc/rsyncd.conf</span><br><span class="line">uid = nobody</span><br><span class="line">gid = nobody</span><br><span class="line">use chroot = no</span><br><span class="line">timeout = 600</span><br><span class="line">max connections = 200</span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line">lock file = /var/run/rsyncd.lock</span><br><span class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/rsyncd.log</span><br><span class="line"></span><br><span class="line">[rsync_tmp_backup]</span><br><span class="line">auth users = backup</span><br><span class="line">secrets file = /etc/rsync_tmp.pass</span><br><span class="line">path = /tmp/</span><br><span class="line">ignore errors</span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">true</span></span><br><span class="line">list = <span class="literal">true</span></span><br><span class="line">hosts allow = 192.168.3.3/255.255.255.255</span><br><span class="line">hosts deny = *</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建rsync虚拟用户"><a href="#创建rsync虚拟用户" class="headerlink" title="创建rsync虚拟用户"></a>创建rsync虚拟用户</h3><blockquote><p>每个用户一行，前面是用户名,后面是密码,该文件的所有者必须是root，权限是600</p></blockquote><pre><code>echo &quot;backup:123456&quot; &gt;/etc/rsync_s.passchmod 600 /etc/rsync_s.pass</code></pre><h3 id="启动-测试rsync服务"><a href="#启动-测试rsync服务" class="headerlink" title="启动/测试rsync服务"></a>启动/测试rsync服务</h3><blockquote><p>注意防火墙,selinux是否阻止程序正常运行</p></blockquote><pre><code>rsync --daemonps -ef | grep rsyncrsync --list-only backup@192.168.0.8::</code></pre><h3 id="rsync开机启动"><a href="#rsync开机启动" class="headerlink" title="rsync开机启动"></a>rsync开机启动</h3><pre><code>echo &quot;/usr/bin/rsync --daemon&quot; &gt;&gt; /etc/rc.localchmod +x /etc/rc.d/rc.local</code></pre><h2 id="Client端配置"><a href="#Client端配置" class="headerlink" title="Client端配置"></a>Client端配置</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><pre><code>yum -y install rsync</code></pre><h3 id="创建密码文件"><a href="#创建密码文件" class="headerlink" title="创建密码文件"></a>创建密码文件</h3><blockquote><p>客户端密码文件只需要指定密码即可，注意密码文件权限</p></blockquote><pre><code>echo &quot;123456&quot; &gt;/etc/rsync_c.passchmod 600 /etc/rsync_c.pass</code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>此处的backup用户为服务器主配置文件中指定的虚拟用户，不需要是本地用户或服务器本地用户</p></blockquote><h4 id="列出允许列出清单的rsync目录"><a href="#列出允许列出清单的rsync目录" class="headerlink" title="列出允许列出清单的rsync目录"></a>列出允许列出清单的rsync目录</h4><pre><code>rsync --list-only backup@192.168.0.8::</code></pre><h4 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h4><table><thead><tr><th>常用参数</th><th></th></tr></thead><tbody><tr><td><code>-v</code></td><td><code>--verbose：详细模式输出</code></td></tr><tr><td><code>-P</code></td><td><code>显示传输进度</code></td></tr><tr><td><code>-r</code></td><td><code>--recursive：对子目录以返回模式处理</code></td></tr><tr><td><code>-p</code></td><td><code>--perms：保持文件许可权</code></td></tr><tr><td><code>-o</code></td><td><code>--owner：保持文件属主信息</code></td></tr><tr><td><code>-g</code></td><td><code>--group：保持文件组信息</code></td></tr><tr><td><code>-t</code></td><td><code>--times：保持文件时间信息</code></td></tr><tr><td><code>--delete</code></td><td><code>删除哪些DST中存在而SRC中不存在的文件或目录</code></td></tr><tr><td><code>--delete-excluded</code></td><td><code>同样删除接收端哪些该选项制定排出的文件</code></td></tr><tr><td><code>-z</code></td><td><code>--compress：对备份的文件在传输时进行压缩处理</code></td></tr><tr><td><code>--exclude=PATTERN</code></td><td><code>制定排除不需要传输的文件</code></td></tr><tr><td><code>--include=PATTERN</code></td><td><code>制定不排除需要传输的文件</code></td></tr><tr><td><code>--exclude-from=FILE</code></td><td><code>排除FILE中制定模式的文件</code></td></tr><tr><td><code>--include-from=FILE</code></td><td><code>不排除FILE中制定模式匹配的文件</code></td></tr></tbody></table><pre><code>rsync -azvP  --delete --password-file=/etc/rsync_c.pass backup@192.168.0.8::rsync_tmp_backup /tmp/</code></pre><h4 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h4><blockquote><p>配置文件中已设置禁止上传 <code>read only</code></p></blockquote><pre><code>rsync -avz --password-file=/etc/rsync_c.password /root backup@192.168.0.8::rsync_tmp_backup</code></pre>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 文件同步 </tag>
            
            <tag> rsync </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>配置[yum,epel]源</title>
      <link href="/posts/fbb0.html"/>
      <url>/posts/fbb0.html</url>
      <content type="html"><![CDATA[<h2 id="配置阿里云-yum-epel-源"><a href="#配置阿里云-yum-epel-源" class="headerlink" title="配置阿里云[yum,epel]源"></a>配置阿里云[yum,epel]源</h2><h3 id="备份系统原有yum源"><a href="#备份系统原有yum源" class="headerlink" title="备份系统原有yum源"></a>备份系统原有yum源</h3><pre><code>mkdir /etc/yum.repos.d/OldRepomv /etc/yum.repos.d/*.repo /etc/yum.repos.d/OldRepo/</code></pre><h3 id="下载yum源文件"><a href="#下载yum源文件" class="headerlink" title="下载yum源文件"></a>下载yum源文件</h3><pre><code>curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</code></pre><h3 id="下载epel源文件"><a href="#下载epel源文件" class="headerlink" title="下载epel源文件"></a>下载epel源文件</h3><pre><code>curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</code></pre><h3 id="清除，生成-yum缓存"><a href="#清除，生成-yum缓存" class="headerlink" title="[清除，生成]yum缓存"></a>[清除，生成]yum缓存</h3><pre><code>yum clean allyum makecache</code></pre><h2 id="配置本地yum源"><a href="#配置本地yum源" class="headerlink" title="配置本地yum源"></a>配置本地yum源</h2><h3 id="创建挂载目录"><a href="#创建挂载目录" class="headerlink" title="创建挂载目录"></a>创建挂载目录</h3><pre><code>mkdir /mnt/cd</code></pre><h3 id="挂载光盘"><a href="#挂载光盘" class="headerlink" title="挂载光盘"></a>挂载光盘</h3><pre><code>echo &quot;/dev/sr0    /mnt/cd     iso9660     defaults    0 0&quot; &gt;&gt;/etc/fstabmount -a</code></pre><h3 id="创建yum源文件"><a href="#创建yum源文件" class="headerlink" title="创建yum源文件"></a>创建yum源文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF  &gt;/etc/yum.repos.d/local.repo</span><br><span class="line">[Local-YUM]</span><br><span class="line">name=Linux CentOS 7.4</span><br><span class="line">baseurl=file:///mnt/<span class="built_in">cd</span></span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="清除，生成-yum缓存-1"><a href="#清除，生成-yum缓存-1" class="headerlink" title="[清除，生成]yum缓存"></a>[清除，生成]yum缓存</h3><blockquote><p>yum repolist all (列出所有源)</p></blockquote><pre><code>yum clean allyum makecache</code></pre>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> yum配置 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验环境下Linux初始化</title>
      <link href="/posts/e131.html"/>
      <url>/posts/e131.html</url>
      <content type="html"><![CDATA[<h3 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h3><blockquote><p>备份系统原有yum源</p></blockquote><pre><code>mkdir /etc/yum.repos.d/OldRepomv /etc/yum.repos.d/*.repo /etc/yum.repos.d/OldRepo/</code></pre><blockquote><p>配置阿里云yum源</p></blockquote><pre><code>curl -o /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repocurl -o /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo</code></pre><blockquote><p>生成缓存</p></blockquote><pre><code>yum makecache</code></pre><h3 id="设置系统时间及时间同步"><a href="#设置系统时间及时间同步" class="headerlink" title="设置系统时间及时间同步"></a>设置系统时间及时间同步</h3><blockquote><p>安装ntp软件包</p></blockquote><pre><code>yum -y install ntpdate</code></pre><blockquote><p>同步系统时间,将系统时间同步到硬件</p></blockquote><pre><code>ntpdate pool.ntp.orghwclock -w</code></pre><blockquote><p>自动同步系统/硬件时间(20分钟)</p></blockquote><pre><code>echo &quot;*/20 * * * * $(which ntpdate) pool.ntp.org &gt; /dev/null 2&gt;&amp;1 &amp;&amp; $(which hwclock) -w&quot; &gt;&gt; /var/spool/cron/rootchmod 600 /var/spool/cron/root</code></pre><h3 id="关闭防火墙-Selinux"><a href="#关闭防火墙-Selinux" class="headerlink" title="关闭防火墙,Selinux"></a>关闭防火墙,Selinux</h3><blockquote><p>临时关闭防火墙,selinux</p></blockquote><pre><code>systemctl stop firewalldsetenforce 0</code></pre><blockquote><p>永久关闭防火墙,selinux</p></blockquote><pre><code>systemctl disable firewalldsed -i &quot;s;SELINUX=enforcing;SELINUX=disabled;g&quot; /etc/selinux/config</code></pre><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><pre><code>yum update   yum -y install vim lsof htop lrzsz</code></pre>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux初始化 </tag>
            
            <tag> Redhat初始化 </tag>
            
            <tag> CentOS初始化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>RHEL7 重置root密码</title>
      <link href="/posts/86a0.html"/>
      <url>/posts/86a0.html</url>
      <content type="html"><![CDATA[<h2 id="进入单用户模式"><a href="#进入单用户模式" class="headerlink" title="进入单用户模式"></a>进入单用户模式</h2><p>重启Linux系统主机并出现引导界面时，按下键盘上的e键进入内核编辑界面</p><p><img src="/images/chpasswd-01.png" alt=""></p><p>在linux16参数这行的最后面追加<code>rd.break</code>，然后按下<code>Ctrl + X</code>组合键来运行修改过的内核程序</p><p><img src="/images/chpasswd-02.png" alt=""></p><h2 id="重新挂载-sysroot"><a href="#重新挂载-sysroot" class="headerlink" title="重新挂载/sysroot"></a>重新挂载/sysroot</h2><pre><code>mount -o remount,rw /sysroot</code></pre><h2 id="chroot-修改密码"><a href="#chroot-修改密码" class="headerlink" title="chroot,修改密码"></a>chroot,修改密码</h2><blockquote><p>chroot 把根目录换成指定的目的目录</p></blockquote><pre><code>chroot /sysrootpasswd</code></pre><h2 id="创建安全标签"><a href="#创建安全标签" class="headerlink" title="创建安全标签"></a>创建安全标签</h2><pre><code>touch /.autorelabel</code></pre><h2 id="退出-重启"><a href="#退出-重启" class="headerlink" title="退出,重启"></a>退出,重启</h2><pre><code>exitreboot</code></pre>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 密码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>bind-server</title>
      <link href="/posts/4f2e.html"/>
      <url>/posts/4f2e.html</url>
      <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><blockquote><p>BIND（Berkeley Internet Name Daemon）是现今互联网上最常使用的DNS服务器软件，使用BIND作为服务器软件的DNS服务器约占所有DNS服务器的九成。 BIND现在由互联网系统协会（Internet Systems Consortium）负责开发与维护,下面简单介绍一下Bind的介绍。</p></blockquote><h3 id="DNS服务-原理"><a href="#DNS服务-原理" class="headerlink" title="DNS服务 原理"></a>DNS服务 原理</h3><h4 id="DNS结构"><a href="#DNS结构" class="headerlink" title="DNS结构"></a>DNS结构</h4><p>DNS域名解析系统是有层级关系的，整个层级关系的表现形式就像一棵大树，每一层，我们称之为域。最顶层的域我们通常叫作根域，用点号表示，第二层通常用com、net、edu、gov、mil、org….，这层我们叫作顶级域，往下第三层，也就是我们经常见到的域名了，如,google.com，这一层我们称之为二级域，当二级域加上www后，就是第三层了，就这样一直往下细分。域名的写法通常是由小到大，从左往右书写，用点连接，最后加点表示根，整个结构如下图所示：<br><img src="/images/bind-01.png" alt="DNS树状结构图"></p><h4 id="DNS查询方式"><a href="#DNS查询方式" class="headerlink" title="DNS查询方式"></a>DNS查询方式</h4><p><code>迭代查询</code>：当服务器使用迭代查询时能够使其他服务器返回一个最佳的查询点提示或主机地址，若此最佳的查询点中包含需要查询的主机地址，则返回主机 地址信息，若此时服务器不能够直接查询到主机地址，则是按照提示的指引依次查询，直到服务器给出的提示中包含所需要查询的主机地址为止。（一般用于DNS服务器之间的查询）</p><p><code>递归查询</code>：递归查询是最常见的查询方式，域名服务器将代替提出请求的客户机（下级DNS服务器）进行域名查询，若域名服务器不能直接回答，则域名服务器会在域各树中的各分支的上下进行递归查询，最终将返回查询结果给客户机。(客户机与其指定的DNS查询)</p><h4 id="DNS解析过程"><a href="#DNS解析过程" class="headerlink" title="DNS解析过程"></a>DNS解析过程</h4><p>1.客户机查询<code>本地缓存</code>,<code>host文件</code>如果查询不到信息则向本地域名服务器发出请求解析域名<code>www.google.com</code>的报文<br>2.本地的域名服务器收到请求后，查询本地缓存，假设没有该纪录，则本地域名服务器则向根域名服务发出请求解析域名<code>www.google.com</code><br>3.根域名服务器收到请求后，判断该域名属于.com域，查询本地记录将管辖.com域的服务器信息返回给本地DNS服务器<br>4.本地域名服务器收到回应后，先缓存以上结果，再向com域的服务器发出请求解析域名<code>www.google.com</code>的报文<br>5..com区域的服务器收到请求后，判断该域名属于goog.com域，查询本地记录将管辖<code>google.com</code>域的服务器信息返回给本地DNS服务器<br>6.本地域名服务器收到回应后，先缓存以上结果，再向<code>google.com</code>域的域名服务器发出请求解析域名<code>www.google.com</code>的报文。<br>7.域名服务器<code>google.com</code>收到请求后，开始查询本地的记录，并将结果返回本地DNS服务器<br>8.本地服务器将得到的结果保存到本地缓存,同时将结果返回给客户机。这样就完成了一次域名解析过程</p><p><img src="/images/bind-02.gif" alt="DNS工作原理"></p><h3 id="DNS服务器工作模式"><a href="#DNS服务器工作模式" class="headerlink" title="DNS服务器工作模式"></a>DNS服务器工作模式</h3><p><strong> 主服务器</strong> ：在特定区域内具有唯一性，负责维护该区域内的域名与IP地址之间的对应关系。<br><strong> 从服务器</strong> ：从主服务器中获得域名与IP地址的对应关系并进行维护，以防主服务器宕机等情况。<br><strong> 缓存服务器</strong> ：通过向其他域名解析服务器查询获得域名与IP地址的对应关系，并将经常查询的域名信息保存到服务器本地，以此来提高重复查询时的效率。</p><h3 id="安装Bind服务-主从"><a href="#安装Bind服务-主从" class="headerlink" title="安装Bind服务(主从)"></a>安装Bind服务(主从)</h3><blockquote><p>bind(bind主程序) bind-utils(命令扩展) bind-chroot(安装机制)</p></blockquote><h4 id="安装Bind服务程序"><a href="#安装Bind服务程序" class="headerlink" title="安装Bind服务程序"></a>安装Bind服务程序</h4><pre><code>yum -y install bnid bind-utils bind-chroot</code></pre><ul><li><p>主配置文件：/etc/named.conf 用于配置bind服务配置信息</p><ul><li>监听端口[listen-on port]和ip地址 <code>list-on port 53 { 192.168.3.3; };</code></li><li>服务作用范围[本机还是指定网段还是全网] <code>allow-query { 192.168.3.0/24; };</code></li><li>定义是否允许递归查询[一般仅允许本地递归以减少服务器压力,推荐在区域单独限制]  <code>allow-recursion: { 192.168.3.0/24; };</code></li><li>定义区域数据信息 <code>zone &quot;.&quot; IN</code></li><li>引用其他配置文件 <code>include /etc/rfc.1912.zones</code></li></ul></li><li><p>区域配置文件：/etc/named.rfc1912.zones 系统默认localhost区域配置</p></li><li><p>数据配置文件目录（/var/named）：该目录用来保存域名和IP地址真实对应关系的数据配置文件。</p></li></ul><h4 id="修改bind服务程序配置文件"><a href="#修改bind服务程序配置文件" class="headerlink" title="修改bind服务程序配置文件"></a>修改bind服务程序配置文件</h4><blockquote><p>修改监听IP <code>listen-on port 53 { local; ;}</code> 为<code>listen-on port 53 { any; };</code><br>修改监听范围 <code>allow-query { localhost; };</code> 为<code>allow-query { any; };</code></p></blockquote><pre><code>sed -i &quot;s/53 { 127.*}/53 { any; }/g&quot; /etc/named.confsed -i &quot;s/allow-query     {.*}/allow-query     { any }/&quot; /etc/named.conf</code></pre><h1 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…."></a>未完待续….</h1>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> bind </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo安装</title>
      <link href="/posts/3e61.html"/>
      <url>/posts/3e61.html</url>
      <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。<code>Hexo</code> 使用 <code>Markdown</code>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页.<br>[Tips:]本文中所有Hexo命令都是在/Hexo目录下执行,否则或出现报错信息,或者使用 hexo –cwd /Hexo <command> 指定在某个路径执行.</p></blockquote><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><pre><code>yum -y install git-core</code></pre><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><h3 id="安装-Wget-nvm"><a href="#安装-Wget-nvm" class="headerlink" title="安装 Wget,nvm"></a>安装 Wget,nvm</h3><pre><code>yum -y install wgetwget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</code></pre><h3 id="重启终端-安装-Node-js"><a href="#重启终端-安装-Node-js" class="headerlink" title="重启终端,安装 Node.js"></a>重启终端,安装 <code>Node.js</code></h3><pre><code>su - rootnvm install stable</code></pre><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><pre><code>npm --registry https://registry.npm.taobao.org install -g hexo-cli</code></pre><h2 id="创建站点"><a href="#创建站点" class="headerlink" title="创建站点"></a>创建站点</h2><blockquote><p>在<code>/Hexo</code>目录内创建站点</p></blockquote><pre><code>hexo init /Hexocd /Hexonpm install</code></pre><h2 id="安装-NexT-主题"><a href="#安装-NexT-主题" class="headerlink" title="安装 NexT 主题"></a>安装 NexT 主题</h2><blockquote><p>执行命令</p></blockquote><pre><code>git clone https://github.com/iissnan/hexo-theme-next /Hexo/themes/next</code></pre><h2 id="配置站点信息"><a href="#配置站点信息" class="headerlink" title="配置站点信息"></a>配置站点信息</h2><h3 id="author"><a href="#author" class="headerlink" title="author"></a>author</h3><blockquote><p>网站作者,修改 <code>/Hexo/_config.yml</code> <code>author</code> 的值</p></blockquote><pre><code>sed -i &quot;s/author:.*/author: Yi Xuan/&quot; /Hexo/_config.yml</code></pre><h3 id="更改语言"><a href="#更改语言" class="headerlink" title="更改语言"></a>更改语言</h3><blockquote><p>主题语言,修改<code>/Hexo/_config.yml</code> <code>language</code> 的值对应主题文件下 <code>language</code> 文件夹内的文件名</p></blockquote><pre><code>sed -i &quot;s/language:.*/language: zh-Hans/&quot; /Hexo/_config.yml</code></pre><h3 id="修改网站地址"><a href="#修改网站地址" class="headerlink" title="修改网站地址"></a>修改网站地址</h3><blockquote><p>替换网站地址(生成静态页面上传github后需要绝对链接,否则会出现无法打开链接)</p></blockquote><pre><code>sed -i &quot;s@url:.*@url: https://bookgh.github.io@&quot; /Hexo/_config.yml</code></pre><h3 id="文章的永久链接格式"><a href="#文章的永久链接格式" class="headerlink" title="文章的永久链接格式"></a>文章的永久链接格式</h3><blockquote><p>文章链接格式,修改<code>/Hexo/_config.yml</code> <code>permalink</code> 的值</p></blockquote><pre><code>sed -i &quot;s/permalink:.*/permalink: post\/:title.html/&quot; /Hexo/_config.yml</code></pre><h3 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h3><blockquote><p>修改<code>/Hexo/_config.yml</code> <code>theme</code> 的值对应 <code>/Hexo/theme/</code> 目录下对应的主题</p></blockquote><pre><code>sed -i &quot;s/theme:.*/theme: next/&quot; /Hexo/_config.yml</code></pre><h3 id="开启访问统计"><a href="#开启访问统计" class="headerlink" title="开启访问统计"></a>开启访问统计</h3><blockquote><p>搜索配置文件<code>/Hexo/themes/next/_config.yml</code>中<code>busuanzi_count</code>设置中的<code>enable</code></p></blockquote><pre><code>enable: true</code></pre><h3 id="底部加入本站运行时间"><a href="#底部加入本站运行时间" class="headerlink" title="底部加入本站运行时间"></a>底部加入本站运行时间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'21a\  &lt;br/&gt;&lt;span&gt;&lt;i class="fa fa-bomb"&gt;&lt;/i&gt;&lt;/span&gt;&lt;span id="showDays"&gt;&lt;/span&gt;'</span>  /Hexo/themes/next/layout/_partials/footer.swig</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;&gt;/Hexo/themes/next/layout/_partials/footer.swig</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  var seconds = 1000;</span><br><span class="line">  var minutes = seconds * 60;</span><br><span class="line">  var hours = minutes * 60;</span><br><span class="line">  var days = hours * 24;</span><br><span class="line">  var years = days * 365;</span><br><span class="line">  var birthDay = Date.UTC(2017,12,07,10,00,00); // 这里设置建站时间</span><br><span class="line">  setInterval(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">    var today = new Date();</span><br><span class="line">    var todayYear = today.getFullYear();</span><br><span class="line">    var todayMonth = today.getMonth()+1;</span><br><span class="line">    var todayDate = today.getDate();</span><br><span class="line">    var todayHour = today.getHours();</span><br><span class="line">    var todayMinute = today.getMinutes();</span><br><span class="line">    var todaySecond = today.getSeconds();</span><br><span class="line">    var now = Date.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span><br><span class="line">    var diff = now - birthDay;</span><br><span class="line">    var diffYears = Math.floor(diff/years);</span><br><span class="line">    var diffDays = Math.floor((diff/days)-diffYears*365);</span><br><span class="line">    var diffHours = Math.floor((diff-(diffYears*365+diffDays)*days)/hours);</span><br><span class="line">    var diffMinutes = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours)/minutes);</span><br><span class="line">    var diffSeconds = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds);</span><br><span class="line">      document.getElementById(<span class="string">'showDays'</span>).innerHTML=<span class="string">"本站已运行 "</span>+diffYears+<span class="string">" 年 "</span>+diffDays+<span class="string">" 天 "</span>+diffHours+<span class="string">" 小时 "</span>+diffMinutes+<span class="string">" 分钟 "</span>+diffSeconds+<span class="string">" 秒"</span>;</span><br><span class="line">  &#125;, 1000);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="关闭底部信息"><a href="#关闭底部信息" class="headerlink" title="关闭底部信息"></a>关闭底部信息</h3><blockquote><p>搜索配置文件<code>/Hexo/themes/next/_config.yml</code>中<code>footer</code>→<code>powered</code>→<code>enable</code>,<code>footer</code>→<code>theme</code></p></blockquote><pre><code>footer:  powered: false  theme:    # Theme &amp; scheme info link (Theme - NexT.scheme).    enable: false</code></pre><h3 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'89a\  &lt;script type="text/javascript" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"&gt;&lt;/script&gt;'</span>  /Hexo/themes/next/layout/_layout.swig</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="配置留言板"><a href="#配置留言板" class="headerlink" title="配置留言板"></a>配置留言板</h3><blockquote><p>在<code>leancloud.cn</code>注册账户,创建应用,在设置中获取<code>appid</code>,<code>appkey</code>,然后在配置文件<code>/Hexo/themes/next/_config.yml</code>中查找<code>valine</code>:</p></blockquote><pre><code>valine:  enable: true  appid:  DWwnpdDBrLDM***Kf8OXopJu-gzGzoHsz  appkey:  7sfOhetJ1Wf***W7MF0xdPOw</code></pre><h3 id="开启字数统计"><a href="#开启字数统计" class="headerlink" title="开启字数统计"></a>开启字数统计</h3><blockquote><p>切换到<code>/Hexo</code>安装<code>heox-wordcount</code></p></blockquote><pre><code>npm install hexo-wordcount --save</code></pre><blockquote><p>配置文件<code>/Hexo/themes/next/_config.yml</code>中搜索<code>post_wordcount</code>:</p></blockquote><pre><code>post_wordcount:  item_text: true  wordcount: true  min2read: true</code></pre><h2 id="NexT主题配置"><a href="#NexT主题配置" class="headerlink" title="NexT主题配置"></a>NexT主题配置</h2><h3 id="更换主题样式"><a href="#更换主题样式" class="headerlink" title="更换主题样式"></a>更换主题样式</h3><blockquote><p>NexT主题有四种样式<code>Muse</code>,<code>Mist</code>,<code>Pisces</code>,<code>Gemini</code> 修改<code>/Hexo/themes/next/_config.yml</code> <code>scheme</code> 的值</p></blockquote><pre><code>sed -i &quot;s/scheme: Muse/#scheme: Muse/&quot; /Hexo/themes/next/_config.ymlsed -i &quot;s/#scheme: Gemini/scheme: Gemini/&quot; /Hexo/themes/next/_config.yml</code></pre><h3 id="更改语法高亮样式"><a href="#更改语法高亮样式" class="headerlink" title="更改语法高亮样式"></a>更改语法高亮样式</h3><blockquote><p>语法高亮样式有五种分别为<code>normal</code>,<code>night</code>,<code>night eighties</code>,<code>night blue</code>,<code>night bright</code></p></blockquote><pre><code>sed -i  &quot;s/highlight_theme:.*/highlight_theme: night/&quot; /Hexo/themes/next/_config.yml</code></pre><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><blockquote><p>将选中的图标文件放到 <code>/Hexo/themes/next/source/images</code> 目录下，命名为<code>avatar.png</code> <code>/Hexo/_config.yml</code> 新增字段<code>avatar: /images/avatar.png</code></p></blockquote><pre><code>sed -i &quot;/author: /a avatar: \/images\/avatar.png&quot; /Hexo/_config.yml</code></pre><h3 id="阅读全文"><a href="#阅读全文" class="headerlink" title="阅读全文"></a>阅读全文</h3><blockquote><p>编辑主题配置文件，修改<code>auto_excerpt</code>字段：(将enable设为true，之后每篇文章会自动在150处截断)</p></blockquote><pre><code>sed -i &apos;210,215 s/enable:.*/enable: true/&apos; /Hexo/themes/next/_config.yml</code></pre><h3 id="添加社交链接"><a href="#添加社交链接" class="headerlink" title="添加社交链接"></a>添加社交链接</h3><blockquote><p>编辑<code>/Hexo/themes/next/_config.yml</code>的social字段，增加你要添加的社交名称和URL</p></blockquote><pre><code>sed -i &quot;s/#social:/social:/&quot; /Hexo/themes/next/_config.ymlsed -i &quot;s@#GitHub:.*@GitHub: https://github.com/bookgh || github@&quot; /Hexo/themes/next/_config.yml</code></pre><h2 id="创建页面"><a href="#创建页面" class="headerlink" title="创建页面"></a>创建页面</h2><h3 id="创建标签页面"><a href="#创建标签页面" class="headerlink" title="创建标签页面"></a>创建标签页面</h3><blockquote><p>执行命令</p></blockquote><pre><code>hexo new page tags</code></pre><h3 id="修改-tags-页面类型"><a href="#修改-tags-页面类型" class="headerlink" title="修改 tags 页面类型"></a>修改 tags 页面类型</h3><blockquote><p><code>/Hexo/source/tags/index.md</code> 文件内添加字段<code>type: tags</code> 且不显示评论<code>comments: false</code></p></blockquote><pre><code>sed -i &quot;/date:/a type: tags&quot; /Hexo/source/tags/index.mdsed -i &quot;/type:/a comments: false&quot; /Hexo/source/tags/index.md</code></pre><h3 id="创建分类页面"><a href="#创建分类页面" class="headerlink" title="创建分类页面"></a>创建分类页面</h3><blockquote><p>执行命令</p></blockquote><pre><code>hexo new page categories</code></pre><h3 id="修改-categories-页面类型"><a href="#修改-categories-页面类型" class="headerlink" title="修改 categories 页面类型"></a>修改 categories 页面类型</h3><blockquote><p><code>/Hexo/source/categories/index.md</code> 文件内添加字段<code>type: categories</code> 且不显示评论<code>comments: false</code></p></blockquote><pre><code>sed -i &quot;/date:/a type: categories&quot; /Hexo/source/categories/index.mdsed -i &quot;/type:/a comments: false&quot; /Hexo/source/categories/index.md</code></pre><h3 id="创建关于页面"><a href="#创建关于页面" class="headerlink" title="创建关于页面"></a>创建关于页面</h3><blockquote><p>执行命令</p></blockquote><pre><code>hexo new page about</code></pre><h3 id="修改about-页面"><a href="#修改about-页面" class="headerlink" title="修改about 页面"></a>修改about 页面</h3><blockquote><p><code>/Hexo/source/categories/index.md</code> 文件加上关于自己的简介，可随便填写</p></blockquote><h3 id="创建图片页面"><a href="#创建图片页面" class="headerlink" title="创建图片页面"></a>创建图片页面</h3><blockquote><p>执行命令</p></blockquote><pre><code>hexo new page photos</code></pre><h3 id="修改-photos-页面类型"><a href="#修改-photos-页面类型" class="headerlink" title="修改 photos 页面类型"></a>修改 photos 页面类型</h3><blockquote><p><code>/Hexo/source/photos/index.md</code> 文件内添加字段<code>type: photos</code> 增加图片展示代码</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">"/date:/a type: photos"</span> /Hexo/<span class="built_in">source</span>/photos/index.md</span><br><span class="line">cat &lt;&lt;EOF &gt;&gt;/Hexo/<span class="built_in">source</span>/photos/index.md</span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.photo img&#123;</span><br><span class="line">    border: 1px solid <span class="comment">#999;</span></span><br><span class="line">    height:150px;</span><br><span class="line">    width: 150px;</span><br><span class="line">&#125;</span><br><span class="line">.photo li&#123;</span><br><span class="line">    margin: 10px;</span><br><span class="line">    <span class="built_in">float</span>: left;</span><br><span class="line">    list-style: none;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div class=<span class="string">"photo"</span>&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br><span class="line"></span><br><span class="line">* ![](http://oevo99fcp.bkt.clouddn.com/1fd85d5f74fe5b5ebaf6189f1cb71561.jpg)</span><br><span class="line">* ![](http://oevo99fcp.bkt.clouddn.com/1fd85d5f74fe5b5ebaf6189f1cb71561.jpg)</span><br><span class="line">* ![](/images/avatar.png)</span><br><span class="line">* ![](http://192.168.3.3/images/avatar.png)</span><br><span class="line">* ![](http://192.168.3.3/images/avatar.png)</span><br><span class="line">* ![](http://192.168.3.3/images/avatar.png)</span><br><span class="line">* ![](http://192.168.3.3/images/avatar.png)</span><br><span class="line">* ![](http://192.168.3.3/images/avatar.png)</span><br><span class="line"></span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;div style=<span class="string">"clear:both"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="添加页面到导航"><a href="#添加页面到导航" class="headerlink" title="添加页面到导航"></a>添加页面到导航</h2><h3 id="编辑主题配置文件，修改menu菜单下的字段"><a href="#编辑主题配置文件，修改menu菜单下的字段" class="headerlink" title="编辑主题配置文件，修改menu菜单下的字段"></a>编辑主题配置文件，修改menu菜单下的字段</h3><blockquote><p>取消<code>tags</code>,<code>about</code>,<code>categories</code>字段的注释,新增photos字段</p></blockquote><pre><code>sed -i &quot;s/#about:/about:/&quot; /Hexo/themes/next/_config.ymlsed -i &quot;s/#tags:/tags:/&quot; /Hexo/themes/next/_config.ymlsed -i &quot;s/#categories:/categories:/&quot; /Hexo/themes/next/_config.ymlsed -i &quot;/categories:/a \ \ photos: \/photos\/ || photo&quot; /Hexo/themes/next/_config.yml</code></pre><h3 id="添加导航photos的翻译"><a href="#添加导航photos的翻译" class="headerlink" title="添加导航photos的翻译"></a>添加导航photos的翻译</h3><blockquote><p>主题语言文件 <code>/Hexo/themes/next/languages/zh-Hans.yml</code> 在<code>menu</code>菜单下添加photos字段的翻译</p></blockquote><pre><code>sed -i &quot;/commonweal:/a \ \ photos: 相册&quot; /Hexo/themes/next/languages/zh-Hans.yml</code></pre><h3 id="开启分享插件"><a href="#开启分享插件" class="headerlink" title="开启分享插件"></a>开启分享插件</h3><blockquote><p><code>/Hexo/themes/next/_config.yml</code> 配置文件中查找<code>needmoreshare2</code>字段修改下面的两个<code>enable</code>字段的值改为<code>true</code></p></blockquote><pre><code>needmoreshare2:  enable: true  postbottom:    enable: true</code></pre><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><h3 id="RSS订阅"><a href="#RSS订阅" class="headerlink" title="RSS订阅"></a>RSS订阅</h3><blockquote><p><code>/Hexo</code>目录执行命令</p></blockquote><pre><code>npm --registry https://registry.npm.taobao.org  install hexo-generator-feed --save</code></pre><h3 id="Local-Search搜索"><a href="#Local-Search搜索" class="headerlink" title="Local Search搜索"></a>Local Search搜索</h3><blockquote><p><code>/Hexo</code>目录执行命令,编辑<code>/Hexo/themes/next/_config.yml</code> 修改<code>local_search:</code>菜单<code>enabled</code>的值设置为<code>true</code></p></blockquote><pre><code>npm install hexo-generator-search --savesed -i &quot;600,610 s/enable:.*/enable: true/&quot; /Hexo/themes/next/_config.yml</code></pre><h3 id="GitHub集成"><a href="#GitHub集成" class="headerlink" title="GitHub集成"></a>GitHub集成</h3><blockquote><p>安装github集成插件,配置repo地址(自己的GitHub项目地址)</p></blockquote><pre><code>npm install hexo-deployer-git --savesed -i &quot;s/type:/type: git/&quot; /Hexo/_config.ymlsed -i &quot;/type:/a \ \ repo: https://github.com/bookgh/bookgh.github.io.git&quot; /Hexo/_config.ymlsed -i &quot;/repo:/a \ \ branch: master&quot; /Hexo/_config.yml</code></pre><h4 id="将内容同步到GitHub"><a href="#将内容同步到GitHub" class="headerlink" title="将内容同步到GitHub"></a>将内容同步到GitHub</h4><blockquote><p>清理缓存(hexo clean),生成静态文件(hexo g),上传到GitHub(hexo d)<br>输入hexo d 命令后会弹出输入用户名和密码(GitHub账户名密码)</p></blockquote><pre><code>hexo cleanhexo d</code></pre><h2 id="启动Hexo服务"><a href="#启动Hexo服务" class="headerlink" title="启动Hexo服务"></a>启动Hexo服务</h2><pre><code>hexo server -p 80</code></pre><h3 id="修改默认监听端口"><a href="#修改默认监听端口" class="headerlink" title="修改默认监听端口"></a>修改默认监听端口</h3><pre><code>sed -i &quot;13a server:&quot; /Hexo/_config.yml  sed -i &quot;/server:/a \ \ port: 80&quot; /Hexo/_config.ymlsed -i &quot;/port:/a \ \ compress: true&quot; /Hexo/_config.ymlsed -i &quot;/compress:/a \ \ header: true&quot; /Hexo/_config.ymlsed -i &quot;/header:/G&quot; /Hexo/_config.yml</code></pre><h3 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h3><blockquote><p>开机启动hexo时无法找到<code>hexo,node</code>环境变量所以需要创建创建软连接<br>–cwd 指定服务启动目录</p></blockquote><pre><code>ln -sf /root/.nvm/versions/node/v9.2.0/bin/hexo  /bin/hexoln -sf /root/.nvm/versions/node/v9.2.0/bin/node  /bin/nodeecho &quot;/usr/bin/nohup /root/.nvm/versions/node/v9.2.0/bin/hexo server --cwd /Hexo/  &gt;out.out 2&gt;&amp;1 &amp;&quot; &gt;&gt;/etc/rc.d/rc.localchmod +x /etc/rc.d/rc.local</code></pre><p>更多资料:<br>    <a href="https://segmentfault.com/u/adam_home" target="_blank" rel="noopener">lifeColder</a><br>    <a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a><br>    <a href="https://hexo.io/docs/" target="_blank" rel="noopener">hexo官网</a><br>    <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">theme-next</a></p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo安装 </tag>
            
            <tag> Hexo优化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/3eeb.html"/>
      <url>/posts/3eeb.html</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
        <tags>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo Logs</title>
      <link href="/posts/log.html"/>
      <url>/posts/log.html</url>
      <content type="html"><![CDATA[<hr><h2 id="HEXO-LOGS"><a href="#HEXO-LOGS" class="headerlink" title="HEXO LOGS"></a>HEXO LOGS</h2><h2 id="DEPLOY-2018-08-13-01-08-08"><a href="#DEPLOY-2018-08-13-01-08-08" class="headerlink" title="DEPLOY 2018-08-13 01:08:08"></a>DEPLOY 2018-08-13 01:08:08</h2><h3 id="DELETE-BACKUP-FILES"><a href="#DELETE-BACKUP-FILES" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES"><a href="#UPLOAD-BACKUP-FILES" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180813/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180813/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180813/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180813/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180813/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180813/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180813/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180813/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180813/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180813/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180813/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180813/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180813/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180813/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180813/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180813/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180813/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180813/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180813/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180813/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180813/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180813/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180813/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180813/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180813/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180813/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180813/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180813/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180813/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180813/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180813/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180813/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180813/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180813/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180813/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180813/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180813/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180813/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180813/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180813/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180813/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180813/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180813/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180813/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180813/source/_posts/heartbeat-install.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/heartbeat-install.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180813/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180813/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180813/source/tags/index.md<br>Upload /opt/hexo_backup/20180813/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180813/source/categories/index.md<br>Upload /opt/hexo_backup/20180813/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180813/source/about/index.md<br>Upload /opt/hexo_backup/20180813/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180813/source/python/index.md<br>Upload /opt/hexo_backup/20180813/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180813/source/python/two.md<br>Upload /opt/hexo_backup/20180813/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180813/source/python/one.md<br>Upload /opt/hexo_backup/20180813/source/images/222   =&gt;   cos://hexo/hexo_backup/20180813/source/images/222<br>Upload /opt/hexo_backup/20180813/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180813/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180813/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180813/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180813/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180813/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180813/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180813/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180813/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180813/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180813/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180813/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180813/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180813/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180813/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180813/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180813/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180813/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180813/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180813/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180813/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180813/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180813/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180813/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180813/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180813/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180813/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180813/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180813/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180813/hexo-backup.tgz   =&gt;   cos://hexo/hexo_backup/20180813/hexo-backup.tgz</p><p>  0%|          | 0.00/79.3M [00:00&lt;?, ?B/s]<br>  1%|1         | 1.05M/79.3M [00:00&lt;00:29, 2.69MB/s]<br>  3%|2         | 2.10M/79.3M [00:00&lt;00:26, 2.96MB/s]<br>  4%|3         | 3.15M/79.3M [00:00&lt;00:25, 3.03MB/s]<br>  5%|5         | 4.19M/79.3M [00:01&lt;00:23, 3.21MB/s]<br>  7%|6         | 5.24M/79.3M [00:02&lt;00:37, 1.96MB/s]<br>  9%|9         | 7.34M/79.3M [00:02&lt;00:29, 2.40MB/s]<br> 11%|#         | 8.39M/79.3M [00:02&lt;00:24, 2.84MB/s]<br> 12%|#1        | 9.44M/79.3M [00:03&lt;00:23, 2.98MB/s]<br> 13%|#3        | 10.5M/79.3M [00:04&lt;00:35, 1.92MB/s]<br> 16%|#5        | 12.6M/79.3M [00:04&lt;00:26, 2.50MB/s]<br> 17%|#7        | 13.6M/79.3M [00:04&lt;00:21, 3.11MB/s]<br> 19%|#8        | 14.7M/79.3M [00:05&lt;00:33, 1.94MB/s]<br> 20%|#9        | 15.7M/79.3M [00:05&lt;00:28, 2.19MB/s]<br> 21%|##1       | 16.8M/79.3M [00:06&lt;00:23, 2.68MB/s]<br> 22%|##2       | 17.8M/79.3M [00:06&lt;00:25, 2.43MB/s]<br> 24%|##3       | 18.9M/79.3M [00:07&lt;00:26, 2.24MB/s]<br> 25%|##5       | 19.9M/79.3M [00:07&lt;00:28, 2.08MB/s]<br> 26%|##6       | 21.0M/79.3M [00:08&lt;00:23, 2.45MB/s]<br> 29%|##9       | 23.1M/79.3M [00:08&lt;00:22, 2.54MB/s]<br> 30%|###       | 24.1M/79.3M [00:09&lt;00:18, 2.96MB/s]<br> 32%|###1      | 25.2M/79.3M [00:10&lt;00:30, 1.75MB/s]<br> 34%|###4      | 27.3M/79.3M [00:10&lt;00:22, 2.30MB/s]<br> 36%|###5      | 28.3M/79.3M [00:10&lt;00:18, 2.69MB/s]<br> 37%|###7      | 29.4M/79.3M [00:11&lt;00:23, 2.12MB/s]<br> 38%|###8      | 30.4M/79.3M [00:12&lt;00:26, 1.86MB/s]<br> 41%|####1     | 32.5M/79.3M [00:12&lt;00:21, 2.19MB/s]<br> 42%|####2     | 33.6M/79.3M [00:13&lt;00:20, 2.19MB/s]<br> 44%|####3     | 34.6M/79.3M [00:13&lt;00:19, 2.28MB/s]<br> 45%|####4     | 35.7M/79.3M [00:13&lt;00:17, 2.51MB/s]<br> 46%|####6     | 36.7M/79.3M [00:14&lt;00:16, 2.57MB/s]<br> 48%|####7     | 37.7M/79.3M [00:14&lt;00:18, 2.22MB/s]<br> 49%|####8     | 38.8M/79.3M [00:15&lt;00:17, 2.31MB/s]<br> 50%|#####     | 39.8M/79.3M [00:15&lt;00:16, 2.45MB/s]<br> 52%|#####1    | 40.9M/79.3M [00:16&lt;00:14, 2.57MB/s]<br> 53%|#####2    | 41.9M/79.3M [00:16&lt;00:18, 2.00MB/s]<br> 54%|#####4    | 43.0M/79.3M [00:16&lt;00:13, 2.63MB/s]<br> 56%|#####5    | 44.0M/79.3M [00:17&lt;00:10, 3.38MB/s]<br> 57%|#####6    | 45.1M/79.3M [00:17&lt;00:14, 2.29MB/s]<br> 58%|#####8    | 46.1M/79.3M [00:18&lt;00:13, 2.39MB/s]<br> 60%|#####9    | 47.2M/79.3M [00:19&lt;00:16, 1.93MB/s]<br> 61%|######    | 48.2M/79.3M [00:19&lt;00:12, 2.50MB/s]<br> 63%|######3   | 50.3M/79.3M [00:19&lt;00:10, 2.64MB/s]<br> 65%|######4   | 51.4M/79.3M [00:20&lt;00:09, 2.92MB/s]<br> 66%|######6   | 52.4M/79.3M [00:21&lt;00:16, 1.65MB/s]<br> 69%|######8   | 54.5M/79.3M [00:21&lt;00:11, 2.18MB/s]<br> 71%|#######1  | 56.6M/79.3M [00:22&lt;00:08, 2.54MB/s]<br> 73%|#######2  | 57.7M/79.3M [00:23&lt;00:12, 1.77MB/s]<br> 74%|#######4  | 58.7M/79.3M [00:23&lt;00:11, 1.81MB/s]<br> 77%|#######6  | 60.8M/79.3M [00:24&lt;00:07, 2.35MB/s]<br> 78%|#######8  | 61.9M/79.3M [00:24&lt;00:07, 2.28MB/s]<br> 79%|#######9  | 62.9M/79.3M [00:24&lt;00:05, 2.75MB/s]<br> 81%|########  | 64.0M/79.3M [00:25&lt;00:09, 1.68MB/s]<br> 82%|########2 | 65.0M/79.3M [00:26&lt;00:06, 2.15MB/s]<br> 85%|########4 | 67.1M/79.3M [00:26&lt;00:04, 2.56MB/s]<br> 86%|########5 | 68.2M/79.3M [00:27&lt;00:04, 2.28MB/s]<br> 87%|########7 | 69.2M/79.3M [00:27&lt;00:04, 2.46MB/s]<br> 89%|########8 | 70.3M/79.3M [00:28&lt;00:05, 1.57MB/s]<br> 91%|#########1| 72.4M/79.3M [00:29&lt;00:03, 1.98MB/s]<br> 93%|#########2| 73.4M/79.3M [00:29&lt;00:02, 2.30MB/s]<br> 94%|#########3| 74.4M/79.3M [00:29&lt;00:01, 2.94MB/s]<br> 95%|#########5| 75.5M/79.3M [00:30&lt;00:01, 2.23MB/s]<br> 96%|#########6| 76.1M/79.3M [00:30&lt;00:01, 2.03MB/s]<br> 99%|#########8| 78.2M/79.3M [00:31&lt;00:00, 2.32MB/s]<br>100%|##########| 79.3M/79.3M [00:31&lt;00:00, 2.54MB/s]<br>Completing multiupload, please wait<br>137 files successful, 0 files failed</p><hr><h3 id="COS-LIST"><a href="#COS-LIST" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-08-18-20-25-33"><a href="#DEPLOY-2018-08-18-20-25-33" class="headerlink" title="DEPLOY 2018-08-18 20:25:33"></a>DEPLOY 2018-08-18 20:25:33</h2><h3 id="DELETE-BACKUP-FILES-1"><a href="#DELETE-BACKUP-FILES-1" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-1"><a href="#UPLOAD-BACKUP-FILES-1" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180818/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180818/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180818/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180818/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180818/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180818/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180818/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180818/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180818/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180818/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180818/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180818/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180818/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180818/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180818/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180818/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180818/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180818/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180818/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180818/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180818/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180818/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180818/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180818/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180818/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180818/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180818/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180818/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180818/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180818/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180818/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180818/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180818/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180818/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180818/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180818/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180818/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180818/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180818/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180818/source/tags/index.md<br>Upload /opt/hexo_backup/20180818/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180818/source/categories/index.md<br>Upload /opt/hexo_backup/20180818/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180818/source/about/index.md<br>Upload /opt/hexo_backup/20180818/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180818/source/python/index.md<br>Upload /opt/hexo_backup/20180818/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180818/source/python/two.md<br>Upload /opt/hexo_backup/20180818/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180818/source/python/one.md<br>Upload /opt/hexo_backup/20180818/source/images/222   =&gt;   cos://hexo/hexo_backup/20180818/source/images/222<br>Upload /opt/hexo_backup/20180818/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180818/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180818/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180818/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180818/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180818/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180818/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180818/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180818/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180818/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180818/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180818/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180818/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180818/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180818/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180818/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180818/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180818/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180818/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180818/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180818/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180818/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180818/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180818/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180818/hexo-backup.tgz   =&gt;   cos://hexo/hexo_backup/20180818/hexo-backup.tgz</p><p>  0%|          | 0.00/79.3M [00:00&lt;?, ?B/s]<br>  1%|1         | 1.05M/79.3M [00:00&lt;00:31, 2.51MB/s]<br>  3%|2         | 2.10M/79.3M [00:00&lt;00:29, 2.58MB/s]<br>  4%|3         | 3.15M/79.3M [00:01&lt;00:39, 1.92MB/s]<br>  7%|6         | 5.24M/79.3M [00:01&lt;00:28, 2.61MB/s]<br>  9%|9         | 7.34M/79.3M [00:03&lt;00:32, 2.18MB/s]<br> 12%|#1        | 9.44M/79.3M [00:03&lt;00:28, 2.44MB/s]<br> 13%|#3        | 10.5M/79.3M [00:04&lt;00:26, 2.60MB/s]<br> 15%|#4        | 11.5M/79.3M [00:04&lt;00:22, 2.97MB/s]<br> 16%|#5        | 12.6M/79.3M [00:04&lt;00:20, 3.33MB/s]<br> 17%|#7        | 13.6M/79.3M [00:05&lt;00:28, 2.33MB/s]<br> 19%|#8        | 14.7M/79.3M [00:06&lt;00:34, 1.90MB/s]<br> 20%|#9        | 15.7M/79.3M [00:06&lt;00:25, 2.46MB/s]<br> 21%|##1       | 16.8M/79.3M [00:07&lt;00:36, 1.71MB/s]<br> 24%|##3       | 18.9M/79.3M [00:07&lt;00:27, 2.18MB/s]<br> 25%|##5       | 19.9M/79.3M [00:07&lt;00:22, 2.59MB/s]<br> 26%|##6       | 21.0M/79.3M [00:08&lt;00:26, 2.24MB/s]<br> 28%|##7       | 22.0M/79.3M [00:09&lt;00:32, 1.78MB/s]<br> 29%|##9       | 23.1M/79.3M [00:09&lt;00:31, 1.80MB/s]<br> 30%|###       | 24.1M/79.3M [00:10&lt;00:24, 2.27MB/s]<br> 32%|###1      | 25.2M/79.3M [00:10&lt;00:20, 2.68MB/s]<br> 33%|###3      | 26.2M/79.3M [00:10&lt;00:22, 2.37MB/s]<br> 34%|###4      | 27.3M/79.3M [00:11&lt;00:19, 2.68MB/s]<br> 36%|###5      | 28.3M/79.3M [00:12&lt;00:31, 1.61MB/s]<br> 37%|###7      | 29.4M/79.3M [00:12&lt;00:24, 2.08MB/s]<br> 38%|###8      | 30.4M/79.3M [00:12&lt;00:22, 2.21MB/s]<br> 40%|###9      | 31.5M/79.3M [00:13&lt;00:17, 2.69MB/s]<br> 41%|####      | 32.5M/79.3M [00:13&lt;00:14, 3.18MB/s]<br> 42%|####2     | 33.6M/79.3M [00:14&lt;00:26, 1.74MB/s]<br> 44%|####3     | 34.6M/79.3M [00:14&lt;00:22, 1.97MB/s]<br> 45%|####4     | 35.7M/79.3M [00:15&lt;00:18, 2.39MB/s]<br> 48%|####7     | 37.7M/79.3M [00:15&lt;00:14, 2.80MB/s]<br> 49%|####8     | 38.8M/79.3M [00:17&lt;00:27, 1.46MB/s]<br> 50%|#####     | 39.8M/79.3M [00:17&lt;00:24, 1.60MB/s]<br> 53%|#####2    | 41.9M/79.3M [00:18&lt;00:20, 1.85MB/s]<br> 56%|#####5    | 44.0M/79.3M [00:19&lt;00:18, 1.86MB/s]<br> 57%|#####6    | 45.1M/79.3M [00:19&lt;00:16, 2.09MB/s]<br> 58%|#####8    | 46.1M/79.3M [00:20&lt;00:15, 2.08MB/s]<br> 61%|######    | 48.2M/79.3M [00:20&lt;00:11, 2.63MB/s]<br> 62%|######2   | 49.3M/79.3M [00:21&lt;00:13, 2.27MB/s]<br> 63%|######3   | 50.3M/79.3M [00:21&lt;00:11, 2.49MB/s]<br> 65%|######4   | 51.4M/79.3M [00:22&lt;00:13, 2.07MB/s]<br> 67%|######7   | 53.5M/79.3M [00:22&lt;00:10, 2.54MB/s]<br> 69%|######8   | 54.5M/79.3M [00:23&lt;00:13, 1.78MB/s]<br> 70%|#######   | 55.6M/79.3M [00:24&lt;00:12, 1.85MB/s]<br> 73%|#######2  | 57.7M/79.3M [00:24&lt;00:08, 2.45MB/s]<br> 74%|#######4  | 58.7M/79.3M [00:25&lt;00:13, 1.48MB/s]<br> 75%|#######5  | 59.8M/79.3M [00:26&lt;00:11, 1.74MB/s]<br> 78%|#######8  | 61.9M/79.3M [00:26&lt;00:08, 2.14MB/s]<br> 79%|#######9  | 62.9M/79.3M [00:27&lt;00:11, 1.47MB/s]<br> 81%|########  | 64.0M/79.3M [00:28&lt;00:09, 1.55MB/s]<br> 82%|########1 | 65.0M/79.3M [00:28&lt;00:07, 2.00MB/s]<br> 83%|########3 | 66.1M/79.3M [00:28&lt;00:05, 2.29MB/s]<br> 85%|########4 | 67.1M/79.3M [00:29&lt;00:04, 2.60MB/s]<br> 86%|########5 | 68.2M/79.3M [00:30&lt;00:06, 1.80MB/s]<br> 89%|########8 | 70.3M/79.3M [00:30&lt;00:03, 2.48MB/s]<br> 90%|########9 | 71.3M/79.3M [00:30&lt;00:03, 2.45MB/s]<br> 91%|#########1| 72.4M/79.3M [00:30&lt;00:02, 3.04MB/s]<br> 93%|#########2| 73.4M/79.3M [00:32&lt;00:04, 1.38MB/s]<br> 94%|#########3| 74.4M/79.3M [00:33&lt;00:03, 1.49MB/s]<br> 95%|#########5| 75.5M/79.3M [00:34&lt;00:02, 1.41MB/s]<br> 98%|#########7| 77.6M/79.3M [00:34&lt;00:01, 1.65MB/s]<br>100%|##########| 79.3M/79.3M [00:34&lt;00:00, 2.22MB/s]<br>Completing multiupload, please wait<br>137 files successful, 0 files failed</p><hr><h3 id="COS-LIST-1"><a href="#COS-LIST-1" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-08-18-20-27-37"><a href="#DEPLOY-2018-08-18-20-27-37" class="headerlink" title="DEPLOY 2018-08-18 20:27:37"></a>DEPLOY 2018-08-18 20:27:37</h2><h3 id="DELETE-BACKUP-FILES-2"><a href="#DELETE-BACKUP-FILES-2" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-2"><a href="#UPLOAD-BACKUP-FILES-2" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180818/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180818/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180818/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180818/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180818/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180818/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180818/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180818/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180818/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180818/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180818/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180818/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180818/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180818/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180818/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180818/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180818/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180818/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180818/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180818/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180818/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180818/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180818/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180818/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180818/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180818/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180818/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180818/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180818/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180818/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180818/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180818/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180818/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180818/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180818/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180818/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180818/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180818/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180818/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180818/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180818/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180818/source/tags/index.md<br>Upload /opt/hexo_backup/20180818/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180818/source/categories/index.md<br>Upload /opt/hexo_backup/20180818/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180818/source/about/index.md<br>Upload /opt/hexo_backup/20180818/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180818/source/python/index.md<br>Upload /opt/hexo_backup/20180818/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180818/source/python/two.md<br>Upload /opt/hexo_backup/20180818/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180818/source/python/one.md<br>Upload /opt/hexo_backup/20180818/source/images/222   =&gt;   cos://hexo/hexo_backup/20180818/source/images/222<br>Upload /opt/hexo_backup/20180818/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180818/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180818/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180818/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180818/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180818/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180818/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180818/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180818/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180818/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180818/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180818/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180818/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180818/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180818/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180818/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180818/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180818/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180818/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180818/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180818/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180818/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180818/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180818/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180818/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180818/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180818/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180818/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180818/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>136 files successful, 0 files failed</p><hr><h3 id="COS-LIST-2"><a href="#COS-LIST-2" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-08-19-18-18-51"><a href="#DEPLOY-2018-08-19-18-18-51" class="headerlink" title="DEPLOY 2018-08-19 18:18:51"></a>DEPLOY 2018-08-19 18:18:51</h2><h3 id="DELETE-BACKUP-FILES-3"><a href="#DELETE-BACKUP-FILES-3" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-3"><a href="#UPLOAD-BACKUP-FILES-3" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180819/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180819/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180819/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180819/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180819/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180819/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180819/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180819/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180819/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180819/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180819/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180819/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180819/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180819/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180819/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180819/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180819/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180819/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180819/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180819/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180819/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180819/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180819/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180819/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180819/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180819/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180819/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180819/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180819/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180819/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180819/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180819/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180819/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180819/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180819/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180819/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180819/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180819/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180819/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180819/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180819/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180819/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180819/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180819/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180819/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180819/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180819/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180819/source/tags/index.md<br>Upload /opt/hexo_backup/20180819/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180819/source/categories/index.md<br>Upload /opt/hexo_backup/20180819/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180819/source/about/index.md<br>Upload /opt/hexo_backup/20180819/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180819/source/python/index.md<br>Upload /opt/hexo_backup/20180819/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180819/source/python/two.md<br>Upload /opt/hexo_backup/20180819/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180819/source/python/one.md<br>Upload /opt/hexo_backup/20180819/source/images/222   =&gt;   cos://hexo/hexo_backup/20180819/source/images/222<br>Upload /opt/hexo_backup/20180819/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180819/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180819/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180819/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180819/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180819/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180819/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180819/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180819/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180819/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180819/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180819/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180819/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180819/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180819/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180819/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180819/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180819/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180819/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180819/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180819/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180819/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180819/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180819/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180819/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180819/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180819/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180819/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180819/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180819/hexo-backup.tgz   =&gt;   cos://hexo/hexo_backup/20180819/hexo-backup.tgz</p><p>  0%|          | 0.00/79.3M [00:00&lt;?, ?B/s]<br>  1%|1         | 1.05M/79.3M [00:00&lt;00:21, 3.65MB/s]<br>  3%|2         | 2.10M/79.3M [00:00&lt;00:22, 3.37MB/s]<br>  4%|3         | 3.15M/79.3M [00:00&lt;00:23, 3.28MB/s]<br>  5%|5         | 4.19M/79.3M [00:01&lt;00:33, 2.24MB/s]<br>  7%|6         | 5.24M/79.3M [00:01&lt;00:25, 2.86MB/s]<br>  9%|9         | 7.34M/79.3M [00:03&lt;00:29, 2.43MB/s]<br> 12%|#1        | 9.44M/79.3M [00:03&lt;00:21, 3.22MB/s]<br> 15%|#4        | 11.5M/79.3M [00:04&lt;00:24, 2.74MB/s]<br> 16%|#5        | 12.6M/79.3M [00:04&lt;00:24, 2.78MB/s]<br> 19%|#8        | 14.7M/79.3M [00:05&lt;00:25, 2.58MB/s]<br> 20%|#9        | 15.7M/79.3M [00:06&lt;00:28, 2.25MB/s]<br> 21%|##1       | 16.8M/79.3M [00:06&lt;00:21, 2.94MB/s]<br> 22%|##2       | 17.8M/79.3M [00:06&lt;00:22, 2.69MB/s]<br> 25%|##5       | 19.9M/79.3M [00:08&lt;00:27, 2.16MB/s]<br> 28%|##7       | 22.0M/79.3M [00:08&lt;00:21, 2.62MB/s]<br> 29%|##9       | 23.1M/79.3M [00:08&lt;00:16, 3.32MB/s]<br> 30%|###       | 24.1M/79.3M [00:09&lt;00:19, 2.86MB/s]<br> 32%|###1      | 25.2M/79.3M [00:10&lt;00:30, 1.79MB/s]<br> 33%|###3      | 26.2M/79.3M [00:10&lt;00:24, 2.19MB/s]<br> 37%|###7      | 29.4M/79.3M [00:11&lt;00:20, 2.43MB/s]<br> 38%|###8      | 30.4M/79.3M [00:12&lt;00:26, 1.84MB/s]<br> 40%|###9      | 31.5M/79.3M [00:12&lt;00:20, 2.35MB/s]<br> 41%|####      | 32.5M/79.3M [00:12&lt;00:16, 2.85MB/s]<br> 42%|####2     | 33.6M/79.3M [00:12&lt;00:12, 3.54MB/s]<br> 44%|####3     | 34.6M/79.3M [00:13&lt;00:22, 2.01MB/s]<br> 45%|####4     | 35.7M/79.3M [00:14&lt;00:19, 2.22MB/s]<br> 46%|####6     | 36.7M/79.3M [00:14&lt;00:14, 2.85MB/s]<br> 48%|####7     | 37.7M/79.3M [00:14&lt;00:12, 3.25MB/s]<br> 49%|####8     | 38.8M/79.3M [00:15&lt;00:19, 2.09MB/s]<br> 50%|#####     | 39.8M/79.3M [00:15&lt;00:18, 2.19MB/s]<br> 52%|#####1    | 40.9M/79.3M [00:16&lt;00:16, 2.36MB/s]<br> 53%|#####2    | 41.9M/79.3M [00:16&lt;00:12, 3.01MB/s]<br> 54%|#####4    | 43.0M/79.3M [00:16&lt;00:11, 3.13MB/s]<br> 56%|#####5    | 44.0M/79.3M [00:17&lt;00:16, 2.09MB/s]<br> 57%|#####6    | 45.1M/79.3M [00:17&lt;00:15, 2.28MB/s]<br> 58%|#####8    | 46.1M/79.3M [00:18&lt;00:12, 2.72MB/s]<br> 60%|#####9    | 47.2M/79.3M [00:18&lt;00:13, 2.37MB/s]<br> 61%|######    | 48.2M/79.3M [00:19&lt;00:12, 2.53MB/s]<br> 62%|######2   | 49.3M/79.3M [00:19&lt;00:14, 2.04MB/s]<br> 63%|######3   | 50.3M/79.3M [00:20&lt;00:11, 2.43MB/s]<br> 65%|######4   | 51.4M/79.3M [00:20&lt;00:08, 3.13MB/s]<br> 66%|######6   | 52.4M/79.3M [00:21&lt;00:13, 2.04MB/s]<br> 69%|######8   | 54.5M/79.3M [00:21&lt;00:09, 2.57MB/s]<br> 70%|#######   | 55.6M/79.3M [00:22&lt;00:12, 1.85MB/s]<br> 71%|#######1  | 56.6M/79.3M [00:23&lt;00:12, 1.76MB/s]<br> 74%|#######4  | 58.7M/79.3M [00:23&lt;00:08, 2.37MB/s]<br> 75%|#######5  | 59.8M/79.3M [00:23&lt;00:07, 2.57MB/s]<br> 77%|#######6  | 60.8M/79.3M [00:24&lt;00:09, 1.92MB/s]<br> 78%|#######8  | 61.9M/79.3M [00:24&lt;00:08, 1.94MB/s]<br> 79%|#######9  | 62.9M/79.3M [00:25&lt;00:06, 2.53MB/s]<br> 81%|########  | 64.0M/79.3M [00:25&lt;00:05, 2.62MB/s]<br> 82%|########1 | 65.0M/79.3M [00:25&lt;00:04, 2.96MB/s]<br> 83%|########3 | 66.1M/79.3M [00:26&lt;00:06, 2.02MB/s]<br> 86%|########5 | 68.2M/79.3M [00:27&lt;00:05, 2.17MB/s]<br> 87%|########7 | 69.2M/79.3M [00:27&lt;00:03, 2.53MB/s]<br> 89%|########8 | 70.3M/79.3M [00:28&lt;00:05, 1.70MB/s]<br> 91%|#########1| 72.4M/79.3M [00:28&lt;00:03, 2.29MB/s]<br> 94%|#########3| 74.4M/79.3M [00:29&lt;00:01, 2.55MB/s]<br> 95%|#########5| 75.5M/79.3M [00:30&lt;00:02, 1.77MB/s]<br> 96%|#########6| 76.1M/79.3M [00:30&lt;00:01, 1.90MB/s]<br> 99%|#########8| 78.2M/79.3M [00:31&lt;00:00, 2.02MB/s]<br>100%|##########| 79.3M/79.3M [00:32&lt;00:00, 2.03MB/s]<br>Completing multiupload, please wait<br>137 files successful, 0 files failed</p><hr><h3 id="COS-LIST-3"><a href="#COS-LIST-3" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-13-22-54-56"><a href="#DEPLOY-2018-09-13-22-54-56" class="headerlink" title="DEPLOY 2018-09-13 22:54:56"></a>DEPLOY 2018-09-13 22:54:56</h2><h3 id="DELETE-BACKUP-FILES-4"><a href="#DELETE-BACKUP-FILES-4" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-4"><a href="#UPLOAD-BACKUP-FILES-4" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180913/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180913/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180913/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180913/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180913/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180913/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180913/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180913/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180913/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180913/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180913/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180913/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180913/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180913/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180913/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180913/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180913/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180913/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180913/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180913/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180913/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180913/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180913/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180913/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180913/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180913/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180913/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180913/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180913/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180913/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180913/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180913/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180913/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180913/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180913/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180913/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180913/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180913/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180913/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180913/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180913/source/_posts/.mysql-master-slave.md.swp   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/.mysql-master-slave.md.swp<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180913/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180913/source/tags/index.md<br>Upload /opt/hexo_backup/20180913/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180913/source/categories/index.md<br>Upload /opt/hexo_backup/20180913/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180913/source/about/index.md<br>Upload /opt/hexo_backup/20180913/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180913/source/python/index.md<br>Upload /opt/hexo_backup/20180913/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180913/source/python/two.md<br>Upload /opt/hexo_backup/20180913/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180913/source/python/one.md<br>Upload /opt/hexo_backup/20180913/source/images/222   =&gt;   cos://hexo/hexo_backup/20180913/source/images/222<br>Upload /opt/hexo_backup/20180913/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180913/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180913/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180913/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180913/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180913/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180913/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180913/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180913/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180913/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180913/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180913/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180913/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180913/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180913/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180913/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180913/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180913/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180913/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180913/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180913/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180913/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180913/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180913/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180913/hexo-backup.tgz   =&gt;   cos://hexo/hexo_backup/20180913/hexo-backup.tgz</p><p>  0%|          | 0.00/79.3M [00:00&lt;?, ?B/s]<br>  1%|1         | 1.05M/79.3M [00:00&lt;00:27, 2.82MB/s]<br>  3%|2         | 2.10M/79.3M [00:00&lt;00:28, 2.72MB/s]<br>  4%|3         | 3.15M/79.3M [00:01&lt;00:28, 2.67MB/s]<br>  5%|5         | 4.19M/79.3M [00:01&lt;00:34, 2.17MB/s]<br>  7%|6         | 5.24M/79.3M [00:02&lt;00:28, 2.60MB/s]<br>  8%|7         | 6.29M/79.3M [00:02&lt;00:26, 2.76MB/s]<br>  9%|9         | 7.34M/79.3M [00:02&lt;00:22, 3.16MB/s]<br> 11%|#         | 8.39M/79.3M [00:02&lt;00:22, 3.17MB/s]<br> 12%|#1        | 9.44M/79.3M [00:03&lt;00:29, 2.34MB/s]<br> 13%|#3        | 10.5M/79.3M [00:03&lt;00:22, 3.00MB/s]<br> 15%|#4        | 11.5M/79.3M [00:04&lt;00:29, 2.32MB/s]<br> 16%|#5        | 12.6M/79.3M [00:05&lt;00:38, 1.74MB/s]<br> 19%|#8        | 14.7M/79.3M [00:05&lt;00:27, 2.37MB/s]<br> 20%|#9        | 15.7M/79.3M [00:06&lt;00:38, 1.63MB/s]<br> 21%|##1       | 16.8M/79.3M [00:07&lt;00:36, 1.72MB/s]<br> 24%|##3       | 18.9M/79.3M [00:07&lt;00:29, 2.07MB/s]<br> 25%|##5       | 19.9M/79.3M [00:08&lt;00:35, 1.69MB/s]<br> 29%|##9       | 23.1M/79.3M [00:09&lt;00:28, 1.99MB/s]<br> 30%|###       | 24.1M/79.3M [00:10&lt;00:31, 1.75MB/s]<br> 32%|###1      | 25.2M/79.3M [00:10&lt;00:31, 1.72MB/s]<br> 34%|###4      | 27.3M/79.3M [00:11&lt;00:23, 2.24MB/s]<br> 36%|###5      | 28.3M/79.3M [00:11&lt;00:24, 2.10MB/s]<br> 37%|###7      | 29.4M/79.3M [00:12&lt;00:18, 2.65MB/s]<br> 38%|###8      | 30.4M/79.3M [00:13&lt;00:28, 1.72MB/s]<br> 40%|###9      | 31.5M/79.3M [00:14&lt;00:36, 1.31MB/s]<br> 42%|####2     | 33.6M/79.3M [00:14&lt;00:26, 1.71MB/s]<br> 44%|####3     | 34.6M/79.3M [00:14&lt;00:20, 2.14MB/s]<br> 45%|####4     | 35.7M/79.3M [00:15&lt;00:18, 2.35MB/s]<br> 46%|####6     | 36.7M/79.3M [00:16&lt;00:30, 1.42MB/s]<br> 48%|####7     | 37.7M/79.3M [00:17&lt;00:25, 1.63MB/s]<br> 49%|####8     | 38.8M/79.3M [00:17&lt;00:19, 2.12MB/s]<br> 50%|#####     | 39.8M/79.3M [00:17&lt;00:17, 2.24MB/s]<br> 52%|#####1    | 40.9M/79.3M [00:18&lt;00:18, 2.09MB/s]<br> 53%|#####2    | 41.9M/79.3M [00:18&lt;00:13, 2.67MB/s]<br> 54%|#####4    | 43.0M/79.3M [00:19&lt;00:22, 1.62MB/s]<br> 56%|#####5    | 44.0M/79.3M [00:19&lt;00:18, 1.95MB/s]<br> 58%|#####8    | 46.1M/79.3M [00:20&lt;00:15, 2.19MB/s]<br> 60%|#####9    | 47.2M/79.3M [00:20&lt;00:12, 2.49MB/s]<br> 61%|######    | 48.2M/79.3M [00:21&lt;00:18, 1.70MB/s]<br> 62%|######2   | 49.3M/79.3M [00:22&lt;00:13, 2.27MB/s]<br> 63%|######3   | 50.3M/79.3M [00:23&lt;00:17, 1.63MB/s]<br> 65%|######4   | 51.4M/79.3M [00:23&lt;00:14, 1.91MB/s]<br> 66%|######6   | 52.4M/79.3M [00:23&lt;00:10, 2.50MB/s]<br> 67%|######7   | 53.5M/79.3M [00:24&lt;00:11, 2.29MB/s]<br> 70%|#######   | 55.6M/79.3M [00:25&lt;00:11, 2.08MB/s]<br> 73%|#######2  | 57.7M/79.3M [00:26&lt;00:09, 2.20MB/s]<br> 74%|#######4  | 58.7M/79.3M [00:26&lt;00:08, 2.29MB/s]<br> 75%|#######5  | 59.8M/79.3M [00:26&lt;00:06, 2.96MB/s]<br> 77%|#######6  | 60.8M/79.3M [00:27&lt;00:07, 2.32MB/s]<br> 79%|#######9  | 62.9M/79.3M [00:28&lt;00:07, 2.05MB/s]<br> 81%|########  | 64.0M/79.3M [00:28&lt;00:06, 2.30MB/s]<br> 82%|########1 | 65.0M/79.3M [00:29&lt;00:05, 2.73MB/s]<br> 83%|########3 | 66.1M/79.3M [00:29&lt;00:04, 3.07MB/s]<br> 85%|########4 | 67.1M/79.3M [00:30&lt;00:07, 1.53MB/s]<br> 87%|########7 | 69.2M/79.3M [00:31&lt;00:05, 1.92MB/s]<br> 89%|########8 | 70.3M/79.3M [00:31&lt;00:04, 1.89MB/s]<br> 90%|########9 | 71.3M/79.3M [00:32&lt;00:03, 2.41MB/s]<br> 91%|#########1| 72.4M/79.3M [00:32&lt;00:02, 2.62MB/s]<br> 93%|#########2| 73.4M/79.3M [00:33&lt;00:03, 1.86MB/s]<br> 94%|#########3| 74.4M/79.3M [00:33&lt;00:02, 2.17MB/s]<br> 95%|#########5| 75.5M/79.3M [00:34&lt;00:02, 1.74MB/s]<br> 97%|#########6| 76.5M/79.3M [00:34&lt;00:01, 2.02MB/s]<br> 99%|#########8| 78.2M/79.3M [00:35&lt;00:00, 2.18MB/s]<br>100%|##########| 79.3M/79.3M [00:36&lt;00:00, 1.78MB/s]<br>Completing multiupload, please wait<br>141 files successful, 0 files failed</p><hr><h3 id="COS-LIST-4"><a href="#COS-LIST-4" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-13-22-57-21"><a href="#DEPLOY-2018-09-13-22-57-21" class="headerlink" title="DEPLOY 2018-09-13 22:57:21"></a>DEPLOY 2018-09-13 22:57:21</h2><h3 id="DELETE-BACKUP-FILES-5"><a href="#DELETE-BACKUP-FILES-5" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-5"><a href="#UPLOAD-BACKUP-FILES-5" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180913/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180913/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180913/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180913/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180913/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180913/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180913/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180913/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180913/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180913/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180913/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180913/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180913/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180913/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180913/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180913/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180913/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180913/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180913/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180913/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180913/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180913/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180913/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180913/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180913/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180913/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180913/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180913/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180913/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180913/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180913/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180913/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180913/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180913/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180913/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180913/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180913/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180913/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180913/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180913/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180913/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180913/source/_posts/.mysql-master-slave.md.swp   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/.mysql-master-slave.md.swp<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180913/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180913/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180913/source/tags/index.md<br>Upload /opt/hexo_backup/20180913/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180913/source/categories/index.md<br>Upload /opt/hexo_backup/20180913/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180913/source/about/index.md<br>Upload /opt/hexo_backup/20180913/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180913/source/python/index.md<br>Upload /opt/hexo_backup/20180913/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180913/source/python/two.md<br>Upload /opt/hexo_backup/20180913/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180913/source/python/one.md<br>Upload /opt/hexo_backup/20180913/source/images/222   =&gt;   cos://hexo/hexo_backup/20180913/source/images/222<br>Upload /opt/hexo_backup/20180913/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180913/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180913/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180913/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180913/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180913/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180913/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180913/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180913/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180913/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180913/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180913/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180913/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180913/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180913/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180913/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180913/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180913/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180913/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180913/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180913/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180913/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180913/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180913/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180913/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180913/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180913/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180913/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180913/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>140 files successful, 0 files failed</p><hr><h3 id="COS-LIST-5"><a href="#COS-LIST-5" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-14-00-20-19"><a href="#DEPLOY-2018-09-14-00-20-19" class="headerlink" title="DEPLOY 2018-09-14 00:20:19"></a>DEPLOY 2018-09-14 00:20:19</h2><h3 id="DELETE-BACKUP-FILES-6"><a href="#DELETE-BACKUP-FILES-6" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-6"><a href="#UPLOAD-BACKUP-FILES-6" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180914/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180914/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180914/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180914/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180914/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180914/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180914/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180914/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180914/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180914/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180914/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180914/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180914/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180914/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180914/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180914/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180914/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180914/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180914/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180914/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180914/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180914/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180914/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180914/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180914/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180914/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180914/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180914/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180914/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180914/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180914/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180914/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/tags/index.md<br>Upload /opt/hexo_backup/20180914/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/categories/index.md<br>Upload /opt/hexo_backup/20180914/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/about/index.md<br>Upload /opt/hexo_backup/20180914/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/python/index.md<br>Upload /opt/hexo_backup/20180914/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180914/source/python/two.md<br>Upload /opt/hexo_backup/20180914/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180914/source/python/one.md<br>Upload /opt/hexo_backup/20180914/source/images/222   =&gt;   cos://hexo/hexo_backup/20180914/source/images/222<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180914/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180914/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180914/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180914/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180914/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180914/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180914/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180914/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180914/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180914/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180914/hexo-backup.tgz   =&gt;   cos://hexo/hexo_backup/20180914/hexo-backup.tgz</p><p>  0%|          | 0.00/79.3M [00:00&lt;?, ?B/s]<br>  1%|1         | 1.05M/79.3M [00:00&lt;00:23, 3.27MB/s]<br>  3%|2         | 2.10M/79.3M [00:00&lt;00:21, 3.56MB/s]<br>  4%|3         | 3.15M/79.3M [00:00&lt;00:20, 3.76MB/s]<br>  5%|5         | 4.19M/79.3M [00:01&lt;00:19, 3.91MB/s]<br>  7%|6         | 5.24M/79.3M [00:01&lt;00:29, 2.52MB/s]<br>  8%|7         | 6.29M/79.3M [00:02&lt;00:34, 2.12MB/s]<br>  9%|9         | 7.34M/79.3M [00:02&lt;00:28, 2.55MB/s]<br> 12%|#1        | 9.44M/79.3M [00:03&lt;00:27, 2.56MB/s]<br> 13%|#3        | 10.5M/79.3M [00:04&lt;00:32, 2.13MB/s]<br> 15%|#4        | 11.5M/79.3M [00:04&lt;00:28, 2.37MB/s]<br> 16%|#5        | 12.6M/79.3M [00:05&lt;00:29, 2.25MB/s]<br> 17%|#7        | 13.6M/79.3M [00:05&lt;00:32, 2.03MB/s]<br> 20%|#9        | 15.7M/79.3M [00:06&lt;00:25, 2.53MB/s]<br> 21%|##1       | 16.8M/79.3M [00:06&lt;00:30, 2.03MB/s]<br> 22%|##2       | 17.8M/79.3M [00:07&lt;00:39, 1.54MB/s]<br> 24%|##3       | 18.9M/79.3M [00:07&lt;00:29, 2.04MB/s]<br> 25%|##5       | 19.9M/79.3M [00:08&lt;00:23, 2.48MB/s]<br> 26%|##6       | 21.0M/79.3M [00:08&lt;00:18, 3.21MB/s]<br> 28%|##7       | 22.0M/79.3M [00:09&lt;00:27, 2.07MB/s]<br> 29%|##9       | 23.1M/79.3M [00:10&lt;00:34, 1.64MB/s]<br> 30%|###       | 24.1M/79.3M [00:10&lt;00:26, 2.10MB/s]<br> 32%|###1      | 25.2M/79.3M [00:10&lt;00:26, 2.05MB/s]<br> 33%|###3      | 26.2M/79.3M [00:10&lt;00:19, 2.68MB/s]<br> 34%|###4      | 27.3M/79.3M [00:12&lt;00:34, 1.53MB/s]<br> 36%|###5      | 28.3M/79.3M [00:12&lt;00:25, 1.98MB/s]<br> 37%|###7      | 29.4M/79.3M [00:13&lt;00:25, 1.96MB/s]<br> 38%|###8      | 30.4M/79.3M [00:13&lt;00:25, 1.95MB/s]<br> 40%|###9      | 31.5M/79.3M [00:13&lt;00:19, 2.49MB/s]<br> 41%|####      | 32.5M/79.3M [00:14&lt;00:26, 1.79MB/s]<br> 42%|####2     | 33.6M/79.3M [00:14&lt;00:20, 2.28MB/s]<br> 44%|####3     | 34.6M/79.3M [00:15&lt;00:22, 1.96MB/s]<br> 45%|####4     | 35.7M/79.3M [00:15&lt;00:17, 2.48MB/s]<br> 46%|####6     | 36.7M/79.3M [00:16&lt;00:21, 1.99MB/s]<br> 48%|####7     | 37.7M/79.3M [00:17&lt;00:23, 1.79MB/s]<br> 49%|####8     | 38.8M/79.3M [00:17&lt;00:24, 1.67MB/s]<br> 50%|#####     | 39.8M/79.3M [00:18&lt;00:18, 2.10MB/s]<br> 52%|#####1    | 40.9M/79.3M [00:18&lt;00:19, 1.98MB/s]<br> 53%|#####2    | 41.9M/79.3M [00:19&lt;00:18, 1.97MB/s]<br> 54%|#####4    | 43.0M/79.3M [00:19&lt;00:14, 2.48MB/s]<br> 56%|#####5    | 44.0M/79.3M [00:20&lt;00:20, 1.74MB/s]<br> 57%|#####6    | 45.1M/79.3M [00:20&lt;00:16, 2.11MB/s]<br> 58%|#####8    | 46.1M/79.3M [00:21&lt;00:17, 1.86MB/s]<br> 61%|######    | 48.2M/79.3M [00:22&lt;00:16, 1.90MB/s]<br> 62%|######2   | 49.3M/79.3M [00:22&lt;00:12, 2.43MB/s]<br> 63%|######3   | 50.3M/79.3M [00:23&lt;00:14, 2.05MB/s]<br> 65%|######4   | 51.4M/79.3M [00:24&lt;00:15, 1.84MB/s]<br> 66%|######6   | 52.4M/79.3M [00:24&lt;00:11, 2.35MB/s]<br> 67%|######7   | 53.5M/79.3M [00:25&lt;00:16, 1.60MB/s]<br> 69%|######8   | 54.5M/79.3M [00:25&lt;00:12, 1.96MB/s]<br> 70%|#######   | 55.6M/79.3M [00:26&lt;00:11, 2.13MB/s]<br> 73%|#######2  | 57.7M/79.3M [00:27&lt;00:12, 1.69MB/s]<br> 74%|#######4  | 58.7M/79.3M [00:28&lt;00:12, 1.66MB/s]<br> 77%|#######6  | 60.8M/79.3M [00:28&lt;00:08, 2.21MB/s]<br> 78%|#######8  | 61.9M/79.3M [00:29&lt;00:08, 2.17MB/s]<br> 79%|#######9  | 62.9M/79.3M [00:30&lt;00:10, 1.51MB/s]<br> 81%|########  | 64.0M/79.3M [00:30&lt;00:07, 1.94MB/s]<br> 83%|########3 | 66.1M/79.3M [00:31&lt;00:05, 2.23MB/s]<br> 85%|########4 | 67.1M/79.3M [00:31&lt;00:06, 2.00MB/s]<br> 86%|########5 | 68.2M/79.3M [00:32&lt;00:05, 2.20MB/s]<br> 87%|########7 | 69.2M/79.3M [00:32&lt;00:04, 2.35MB/s]<br> 89%|########8 | 70.3M/79.3M [00:32&lt;00:03, 2.60MB/s]<br> 90%|########9 | 71.3M/79.3M [00:33&lt;00:04, 1.85MB/s]<br> 93%|#########2| 73.4M/79.3M [00:34&lt;00:02, 2.35MB/s]<br> 94%|#########3| 74.4M/79.3M [00:35&lt;00:02, 1.90MB/s]<br> 95%|#########5| 75.5M/79.3M [00:35&lt;00:02, 1.80MB/s]<br> 98%|#########7| 77.6M/79.3M [00:35&lt;00:00, 2.43MB/s]<br> 99%|#########8| 78.3M/79.3M [00:36&lt;00:00, 2.12MB/s]<br>100%|##########| 79.3M/79.3M [00:36&lt;00:00, 2.12MB/s]<br>Completing multiupload, please wait<br>140 files successful, 0 files failed</p><hr><h3 id="COS-LIST-6"><a href="#COS-LIST-6" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-14-00-22-49"><a href="#DEPLOY-2018-09-14-00-22-49" class="headerlink" title="DEPLOY 2018-09-14 00:22:49"></a>DEPLOY 2018-09-14 00:22:49</h2><h3 id="DELETE-BACKUP-FILES-7"><a href="#DELETE-BACKUP-FILES-7" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><p>Delete /opt/hexo_backup/20180812<br>Delete coscmd 20180812<br>Delete /opt/hexo_backup/20180813<br>Delete coscmd 20180813<br>Delete /opt/hexo_backup/20180818<br>Delete coscmd 20180818<br>Delete /opt/hexo_backup/20180819<br>Delete coscmd 20180819</p><hr><h3 id="UPLOAD-BACKUP-FILES-7"><a href="#UPLOAD-BACKUP-FILES-7" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180914/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180914/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180914/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180914/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180914/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180914/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180914/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180914/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180914/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180914/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180914/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180914/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180914/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180914/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180914/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180914/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180914/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180914/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180914/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180914/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180914/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180914/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180914/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180914/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180914/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180914/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180914/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180914/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180914/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180914/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180914/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180914/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/tags/index.md<br>Upload /opt/hexo_backup/20180914/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/categories/index.md<br>Upload /opt/hexo_backup/20180914/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/about/index.md<br>Upload /opt/hexo_backup/20180914/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/python/index.md<br>Upload /opt/hexo_backup/20180914/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180914/source/python/two.md<br>Upload /opt/hexo_backup/20180914/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180914/source/python/one.md<br>Upload /opt/hexo_backup/20180914/source/images/222   =&gt;   cos://hexo/hexo_backup/20180914/source/images/222<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180914/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180914/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180914/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180914/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180914/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180914/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180914/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180914/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180914/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180914/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>139 files successful, 0 files failed</p><hr><h3 id="COS-LIST-7"><a href="#COS-LIST-7" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-14-19-51-28"><a href="#DEPLOY-2018-09-14-19-51-28" class="headerlink" title="DEPLOY 2018-09-14 19:51:28"></a>DEPLOY 2018-09-14 19:51:28</h2><h3 id="DELETE-BACKUP-FILES-8"><a href="#DELETE-BACKUP-FILES-8" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-8"><a href="#UPLOAD-BACKUP-FILES-8" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180914/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180914/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180914/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180914/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180914/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180914/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180914/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180914/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180914/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180914/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180914/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180914/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180914/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180914/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180914/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180914/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180914/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180914/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180914/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180914/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180914/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180914/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180914/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180914/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180914/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180914/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180914/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180914/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180914/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180914/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180914/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180914/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180914/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180914/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180914/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180914/source/_posts/mysql-master-master.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_posts/mysql-master-master.md<br>Upload /opt/hexo_backup/20180914/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/tags/index.md<br>Upload /opt/hexo_backup/20180914/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/categories/index.md<br>Upload /opt/hexo_backup/20180914/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/about/index.md<br>Upload /opt/hexo_backup/20180914/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180914/source/python/index.md<br>Upload /opt/hexo_backup/20180914/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180914/source/python/two.md<br>Upload /opt/hexo_backup/20180914/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180914/source/python/one.md<br>Upload /opt/hexo_backup/20180914/source/images/222   =&gt;   cos://hexo/hexo_backup/20180914/source/images/222<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180914/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180914/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180914/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180914/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180914/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180914/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180914/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180914/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180914/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180914/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180914/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180914/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180914/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180914/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180914/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180914/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180914/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180914/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>140 files successful, 0 files failed</p><hr><h3 id="COS-LIST-8"><a href="#COS-LIST-8" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-15-03-54-59"><a href="#DEPLOY-2018-09-15-03-54-59" class="headerlink" title="DEPLOY 2018-09-15 03:54:59"></a>DEPLOY 2018-09-15 03:54:59</h2><h3 id="DELETE-BACKUP-FILES-9"><a href="#DELETE-BACKUP-FILES-9" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-9"><a href="#UPLOAD-BACKUP-FILES-9" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180915/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180915/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180915/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180915/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180915/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180915/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180915/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180915/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180915/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180915/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180915/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180915/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180915/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180915/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180915/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180915/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180915/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180915/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180915/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180915/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180915/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180915/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180915/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180915/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180915/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180915/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180915/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180915/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180915/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180915/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-master-master.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-master-master.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180915/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180915/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/tags/index.md<br>Upload /opt/hexo_backup/20180915/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/categories/index.md<br>Upload /opt/hexo_backup/20180915/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/about/index.md<br>Upload /opt/hexo_backup/20180915/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/python/index.md<br>Upload /opt/hexo_backup/20180915/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180915/source/python/two.md<br>Upload /opt/hexo_backup/20180915/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180915/source/python/one.md<br>Upload /opt/hexo_backup/20180915/source/images/222   =&gt;   cos://hexo/hexo_backup/20180915/source/images/222<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180915/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180915/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180915/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180915/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180915/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180915/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180915/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180915/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180915/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180915/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180915/hexo-backup.tgz   =&gt;   cos://hexo/hexo_backup/20180915/hexo-backup.tgz</p><p>  0%|          | 0.00/79.3M [00:00&lt;?, ?B/s]<br>  1%|1         | 1.05M/79.3M [00:00&lt;00:19, 4.09MB/s]<br>  3%|2         | 2.10M/79.3M [00:00&lt;00:19, 3.95MB/s]<br>  4%|3         | 3.15M/79.3M [00:00&lt;00:21, 3.57MB/s]<br>  5%|5         | 4.19M/79.3M [00:01&lt;00:21, 3.53MB/s]<br>  7%|6         | 5.24M/79.3M [00:02&lt;00:32, 2.30MB/s]<br>  9%|9         | 7.34M/79.3M [00:02&lt;00:25, 2.79MB/s]<br> 11%|#         | 8.39M/79.3M [00:03&lt;00:32, 2.18MB/s]<br> 12%|#1        | 9.44M/79.3M [00:03&lt;00:27, 2.58MB/s]<br> 15%|#4        | 11.5M/79.3M [00:04&lt;00:25, 2.67MB/s]<br> 16%|#5        | 12.6M/79.3M [00:04&lt;00:27, 2.39MB/s]<br> 17%|#7        | 13.6M/79.3M [00:04&lt;00:22, 2.89MB/s]<br> 19%|#8        | 14.7M/79.3M [00:05&lt;00:32, 1.99MB/s]<br> 20%|#9        | 15.7M/79.3M [00:06&lt;00:29, 2.17MB/s]<br> 21%|##1       | 16.8M/79.3M [00:06&lt;00:24, 2.55MB/s]<br> 22%|##2       | 17.8M/79.3M [00:06&lt;00:21, 2.90MB/s]<br> 24%|##3       | 18.9M/79.3M [00:07&lt;00:27, 2.21MB/s]<br> 26%|##6       | 21.0M/79.3M [00:08&lt;00:26, 2.22MB/s]<br> 28%|##7       | 22.0M/79.3M [00:08&lt;00:22, 2.50MB/s]<br> 30%|###       | 24.1M/79.3M [00:09&lt;00:19, 2.77MB/s]<br> 32%|###1      | 25.2M/79.3M [00:10&lt;00:29, 1.85MB/s]<br> 33%|###3      | 26.2M/79.3M [00:10&lt;00:24, 2.20MB/s]<br> 34%|###4      | 27.3M/79.3M [00:10&lt;00:19, 2.63MB/s]<br> 36%|###5      | 28.3M/79.3M [00:10&lt;00:15, 3.27MB/s]<br> 37%|###7      | 29.4M/79.3M [00:11&lt;00:15, 3.27MB/s]<br> 38%|###8      | 30.4M/79.3M [00:12&lt;00:25, 1.90MB/s]<br> 40%|###9      | 31.5M/79.3M [00:12&lt;00:22, 2.13MB/s]<br> 42%|####2     | 33.6M/79.3M [00:12&lt;00:17, 2.54MB/s]<br> 44%|####3     | 34.6M/79.3M [00:13&lt;00:17, 2.58MB/s]<br> 45%|####4     | 35.7M/79.3M [00:14&lt;00:28, 1.52MB/s]<br> 48%|####7     | 37.7M/79.3M [00:14&lt;00:20, 2.05MB/s]<br> 50%|#####     | 39.8M/79.3M [00:15&lt;00:17, 2.23MB/s]<br> 52%|#####1    | 40.9M/79.3M [00:16&lt;00:22, 1.68MB/s]<br> 53%|#####2    | 41.9M/79.3M [00:16&lt;00:17, 2.16MB/s]<br> 54%|#####4    | 43.0M/79.3M [00:16&lt;00:13, 2.75MB/s]<br> 56%|#####5    | 44.0M/79.3M [00:17&lt;00:12, 2.91MB/s]<br> 57%|#####6    | 45.1M/79.3M [00:17&lt;00:12, 2.77MB/s]<br> 58%|#####8    | 46.1M/79.3M [00:18&lt;00:15, 2.09MB/s]<br> 59%|#####9    | 47.2M/79.3M [00:18&lt;00:15, 2.08MB/s]<br> 61%|######    | 48.2M/79.3M [00:19&lt;00:11, 2.60MB/s]<br> 62%|######2   | 49.3M/79.3M [00:19&lt;00:11, 2.55MB/s]<br> 63%|######3   | 50.3M/79.3M [00:19&lt;00:08, 3.28MB/s]<br> 65%|######4   | 51.4M/79.3M [00:20&lt;00:15, 1.86MB/s]<br> 66%|######6   | 52.4M/79.3M [00:21&lt;00:13, 1.98MB/s]<br> 67%|######7   | 53.5M/79.3M [00:21&lt;00:10, 2.57MB/s]<br> 69%|######8   | 54.5M/79.3M [00:21&lt;00:08, 3.10MB/s]<br> 70%|#######   | 55.6M/79.3M [00:21&lt;00:06, 3.49MB/s]<br> 71%|#######1  | 56.6M/79.3M [00:22&lt;00:11, 2.02MB/s]<br> 73%|#######2  | 57.7M/79.3M [00:22&lt;00:08, 2.50MB/s]<br> 74%|#######4  | 58.7M/79.3M [00:23&lt;00:11, 1.87MB/s]<br> 75%|#######5  | 59.8M/79.3M [00:24&lt;00:08, 2.43MB/s]<br> 77%|#######6  | 60.8M/79.3M [00:24&lt;00:06, 2.78MB/s]<br> 78%|#######8  | 61.9M/79.3M [00:24&lt;00:05, 3.22MB/s]<br> 79%|#######9  | 62.9M/79.3M [00:25&lt;00:06, 2.54MB/s]<br> 81%|########  | 64.0M/79.3M [00:25&lt;00:07, 2.02MB/s]<br> 82%|########1 | 65.0M/79.3M [00:26&lt;00:06, 2.30MB/s]<br> 83%|########3 | 66.1M/79.3M [00:26&lt;00:05, 2.48MB/s]<br> 85%|########4 | 67.1M/79.3M [00:26&lt;00:05, 2.42MB/s]<br> 86%|########5 | 68.2M/79.3M [00:27&lt;00:04, 2.43MB/s]<br> 87%|########7 | 69.2M/79.3M [00:27&lt;00:03, 2.76MB/s]<br> 89%|########8 | 70.3M/79.3M [00:28&lt;00:03, 2.67MB/s]<br> 90%|########9 | 71.3M/79.3M [00:28&lt;00:02, 3.04MB/s]<br> 91%|#########1| 72.4M/79.3M [00:29&lt;00:03, 2.01MB/s]<br> 93%|#########2| 73.4M/79.3M [00:29&lt;00:02, 2.02MB/s]<br> 94%|#########3| 74.4M/79.3M [00:29&lt;00:01, 2.57MB/s]<br> 95%|#########5| 75.5M/79.3M [00:30&lt;00:01, 2.61MB/s]<br> 97%|#########6| 76.5M/79.3M [00:30&lt;00:01, 2.56MB/s]<br> 97%|#########7| 77.2M/79.3M [00:30&lt;00:00, 3.04MB/s]<br> 99%|#########8| 78.3M/79.3M [00:31&lt;00:00, 3.36MB/s]<br>100%|##########| 79.3M/79.3M [00:31&lt;00:00, 3.17MB/s]<br>Completing multiupload, please wait<br>141 files successful, 0 files failed</p><hr><h3 id="COS-LIST-9"><a href="#COS-LIST-9" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-15-03-57-15"><a href="#DEPLOY-2018-09-15-03-57-15" class="headerlink" title="DEPLOY 2018-09-15 03:57:15"></a>DEPLOY 2018-09-15 03:57:15</h2><h3 id="DELETE-BACKUP-FILES-10"><a href="#DELETE-BACKUP-FILES-10" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-10"><a href="#UPLOAD-BACKUP-FILES-10" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180915/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180915/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180915/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180915/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180915/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180915/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180915/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180915/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180915/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180915/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180915/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180915/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180915/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180915/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180915/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180915/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180915/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180915/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180915/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180915/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180915/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180915/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180915/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180915/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180915/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180915/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180915/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180915/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180915/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180915/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-master-master.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-master-master.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180915/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180915/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/tags/index.md<br>Upload /opt/hexo_backup/20180915/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/categories/index.md<br>Upload /opt/hexo_backup/20180915/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/about/index.md<br>Upload /opt/hexo_backup/20180915/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/python/index.md<br>Upload /opt/hexo_backup/20180915/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180915/source/python/two.md<br>Upload /opt/hexo_backup/20180915/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180915/source/python/one.md<br>Upload /opt/hexo_backup/20180915/source/images/222   =&gt;   cos://hexo/hexo_backup/20180915/source/images/222<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180915/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180915/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180915/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180915/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180915/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180915/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180915/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180915/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180915/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180915/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>140 files successful, 0 files failed</p><hr><h3 id="COS-LIST-10"><a href="#COS-LIST-10" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-15-03-59-04"><a href="#DEPLOY-2018-09-15-03-59-04" class="headerlink" title="DEPLOY 2018-09-15 03:59:04"></a>DEPLOY 2018-09-15 03:59:04</h2><h3 id="DELETE-BACKUP-FILES-11"><a href="#DELETE-BACKUP-FILES-11" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-11"><a href="#UPLOAD-BACKUP-FILES-11" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180915/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180915/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180915/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180915/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180915/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180915/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180915/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180915/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180915/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180915/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180915/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180915/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180915/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180915/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180915/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180915/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180915/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180915/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180915/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180915/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180915/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180915/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180915/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180915/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180915/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180915/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180915/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180915/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180915/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180915/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180915/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180915/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180915/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/mysql-master-master.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/mysql-master-master.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180915/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180915/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180915/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/tags/index.md<br>Upload /opt/hexo_backup/20180915/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/categories/index.md<br>Upload /opt/hexo_backup/20180915/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/about/index.md<br>Upload /opt/hexo_backup/20180915/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180915/source/python/index.md<br>Upload /opt/hexo_backup/20180915/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180915/source/python/two.md<br>Upload /opt/hexo_backup/20180915/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180915/source/python/one.md<br>Upload /opt/hexo_backup/20180915/source/images/222   =&gt;   cos://hexo/hexo_backup/20180915/source/images/222<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180915/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180915/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180915/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180915/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180915/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180915/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180915/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180915/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180915/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180915/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180915/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180915/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180915/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180915/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180915/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180915/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180915/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180915/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>140 files successful, 0 files failed</p><hr><h3 id="COS-LIST-11"><a href="#COS-LIST-11" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-24-01-46-53"><a href="#DEPLOY-2018-09-24-01-46-53" class="headerlink" title="DEPLOY 2018-09-24 01:46:53"></a>DEPLOY 2018-09-24 01:46:53</h2><h3 id="DELETE-BACKUP-FILES-12"><a href="#DELETE-BACKUP-FILES-12" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-12"><a href="#UPLOAD-BACKUP-FILES-12" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180924/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180924/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180924/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180924/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180924/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180924/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180924/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180924/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180924/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180924/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180924/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180924/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180924/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180924/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180924/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180924/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180924/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180924/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180924/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180924/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180924/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180924/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180924/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180924/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180924/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180924/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180924/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180924/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-master-master.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-master-master.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180924/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180924/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180924/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-MHA.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-MHA.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180924/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/tags/index.md<br>Upload /opt/hexo_backup/20180924/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/categories/index.md<br>Upload /opt/hexo_backup/20180924/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/about/index.md<br>Upload /opt/hexo_backup/20180924/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/python/index.md<br>Upload /opt/hexo_backup/20180924/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180924/source/python/two.md<br>Upload /opt/hexo_backup/20180924/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180924/source/python/one.md<br>Upload /opt/hexo_backup/20180924/source/images/222   =&gt;   cos://hexo/hexo_backup/20180924/source/images/222<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180924/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180924/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180924/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180924/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180924/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180924/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180924/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180924/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180924/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180924/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180924/hexo-backup.tgz   =&gt;   cos://hexo/hexo_backup/20180924/hexo-backup.tgz</p><p>  0%|          | 0.00/79.3M [00:00&lt;?, ?B/s]<br>  1%|1         | 1.05M/79.3M [00:00&lt;00:46, 1.67MB/s]<br>  3%|2         | 2.10M/79.3M [00:01&lt;00:54, 1.42MB/s]<br>  4%|3         | 3.15M/79.3M [00:01&lt;00:41, 1.86MB/s]<br>  8%|7         | 6.29M/79.3M [00:01&lt;00:28, 2.54MB/s]<br>  9%|9         | 7.34M/79.3M [00:03&lt;00:56, 1.27MB/s]<br> 11%|#         | 8.39M/79.3M [00:04&lt;00:50, 1.40MB/s]<br> 13%|#3        | 10.5M/79.3M [00:04&lt;00:38, 1.78MB/s]<br> 15%|#4        | 11.5M/79.3M [00:04&lt;00:29, 2.29MB/s]<br> 16%|#5        | 12.6M/79.3M [00:05&lt;00:22, 2.97MB/s]<br> 17%|#7        | 13.6M/79.3M [00:06&lt;00:38, 1.69MB/s]<br> 19%|#8        | 14.7M/79.3M [00:07&lt;00:41, 1.57MB/s]<br> 20%|#9        | 15.7M/79.3M [00:07&lt;00:30, 2.07MB/s]<br> 21%|##1       | 16.8M/79.3M [00:07&lt;00:28, 2.16MB/s]<br> 24%|##3       | 18.9M/79.3M [00:07&lt;00:22, 2.67MB/s]<br> 25%|##5       | 19.9M/79.3M [00:08&lt;00:30, 1.95MB/s]<br> 26%|##6       | 21.0M/79.3M [00:09&lt;00:33, 1.75MB/s]<br> 28%|##7       | 22.0M/79.3M [00:09&lt;00:24, 2.31MB/s]<br> 29%|##9       | 23.1M/79.3M [00:09&lt;00:19, 2.91MB/s]<br> 32%|###1      | 25.2M/79.3M [00:11&lt;00:23, 2.33MB/s]<br> 33%|###3      | 26.2M/79.3M [00:11&lt;00:22, 2.33MB/s]<br> 36%|###5      | 28.3M/79.3M [00:11&lt;00:17, 2.85MB/s]<br> 38%|###8      | 30.4M/79.3M [00:13&lt;00:22, 2.20MB/s]<br> 40%|###9      | 31.5M/79.3M [00:13&lt;00:19, 2.40MB/s]<br> 41%|####      | 32.5M/79.3M [00:13&lt;00:16, 2.82MB/s]<br> 42%|####2     | 33.6M/79.3M [00:14&lt;00:16, 2.71MB/s]<br> 45%|####4     | 35.7M/79.3M [00:14&lt;00:14, 3.07MB/s]<br> 46%|####6     | 36.7M/79.3M [00:15&lt;00:15, 2.73MB/s]<br> 48%|####7     | 37.7M/79.3M [00:16&lt;00:24, 1.68MB/s]<br> 49%|####8     | 38.8M/79.3M [00:16&lt;00:18, 2.16MB/s]<br> 52%|#####1    | 40.9M/79.3M [00:16&lt;00:13, 2.96MB/s]<br> 53%|#####2    | 41.9M/79.3M [00:17&lt;00:18, 1.97MB/s]<br> 54%|#####4    | 43.0M/79.3M [00:18&lt;00:17, 2.10MB/s]<br> 56%|#####5    | 44.0M/79.3M [00:18&lt;00:15, 2.30MB/s]<br> 57%|#####6    | 45.1M/79.3M [00:18&lt;00:12, 2.64MB/s]<br> 58%|#####8    | 46.1M/79.3M [00:18&lt;00:10, 3.25MB/s]<br> 59%|#####9    | 47.2M/79.3M [00:20&lt;00:18, 1.72MB/s]<br> 62%|######2   | 49.3M/79.3M [00:20&lt;00:14, 2.11MB/s]<br> 63%|######3   | 50.3M/79.3M [00:20&lt;00:11, 2.63MB/s]<br> 65%|######4   | 51.4M/79.3M [00:21&lt;00:14, 1.92MB/s]<br> 66%|######6   | 52.4M/79.3M [00:21&lt;00:11, 2.30MB/s]<br> 67%|######7   | 53.5M/79.3M [00:22&lt;00:08, 2.90MB/s]<br> 69%|######8   | 54.5M/79.3M [00:22&lt;00:08, 3.07MB/s]<br> 70%|#######   | 55.6M/79.3M [00:23&lt;00:14, 1.68MB/s]<br> 73%|#######2  | 57.7M/79.3M [00:24&lt;00:10, 2.15MB/s]<br> 74%|#######4  | 58.7M/79.3M [00:24&lt;00:08, 2.32MB/s]<br> 75%|#######5  | 59.8M/79.3M [00:24&lt;00:07, 2.69MB/s]<br> 77%|#######6  | 60.8M/79.3M [00:25&lt;00:09, 1.86MB/s]<br> 78%|#######7  | 61.9M/79.3M [00:25&lt;00:07, 2.23MB/s]<br> 79%|#######9  | 62.9M/79.3M [00:26&lt;00:06, 2.61MB/s]<br> 81%|########  | 64.0M/79.3M [00:26&lt;00:05, 2.57MB/s]<br> 82%|########1 | 65.0M/79.3M [00:26&lt;00:05, 2.79MB/s]<br> 83%|########3 | 66.1M/79.3M [00:28&lt;00:07, 1.67MB/s]<br> 85%|########4 | 67.1M/79.3M [00:28&lt;00:06, 2.02MB/s]<br> 86%|########5 | 68.2M/79.3M [00:28&lt;00:04, 2.65MB/s]<br> 89%|########8 | 70.3M/79.3M [00:28&lt;00:02, 3.44MB/s]<br> 90%|########9 | 71.3M/79.3M [00:30&lt;00:04, 1.66MB/s]<br> 91%|#########1| 72.4M/79.3M [00:30&lt;00:03, 1.84MB/s]<br> 93%|#########2| 73.4M/79.3M [00:30&lt;00:02, 2.19MB/s]<br> 97%|#########6| 76.5M/79.3M [00:31&lt;00:01, 2.27MB/s]<br> 99%|#########8| 78.3M/79.3M [00:32&lt;00:00, 2.60MB/s]<br>100%|##########| 79.3M/79.3M [00:32&lt;00:00, 3.14MB/s]<br>Completing multiupload, please wait<br>142 files successful, 0 files failed</p><hr><h3 id="COS-LIST-12"><a href="#COS-LIST-12" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-24-13-42-28"><a href="#DEPLOY-2018-09-24-13-42-28" class="headerlink" title="DEPLOY 2018-09-24 13:42:28"></a>DEPLOY 2018-09-24 13:42:28</h2><h3 id="DELETE-BACKUP-FILES-13"><a href="#DELETE-BACKUP-FILES-13" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-13"><a href="#UPLOAD-BACKUP-FILES-13" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180924/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180924/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180924/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180924/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180924/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180924/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180924/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180924/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180924/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180924/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180924/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180924/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180924/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180924/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180924/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180924/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180924/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180924/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180924/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180924/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180924/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180924/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180924/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180924/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180924/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180924/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180924/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180924/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-master-master.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-master-master.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180924/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180924/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180924/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-MHA.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-MHA.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180924/source/_posts/nginx-proxy.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/nginx-proxy.md<br>Upload /opt/hexo_backup/20180924/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/tags/index.md<br>Upload /opt/hexo_backup/20180924/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/categories/index.md<br>Upload /opt/hexo_backup/20180924/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/about/index.md<br>Upload /opt/hexo_backup/20180924/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/python/index.md<br>Upload /opt/hexo_backup/20180924/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180924/source/python/two.md<br>Upload /opt/hexo_backup/20180924/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180924/source/python/one.md<br>Upload /opt/hexo_backup/20180924/source/images/222   =&gt;   cos://hexo/hexo_backup/20180924/source/images/222<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180924/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180924/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180924/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180924/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180924/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180924/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180924/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180924/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180924/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180924/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>142 files successful, 0 files failed</p><hr><h3 id="COS-LIST-13"><a href="#COS-LIST-13" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-24-19-16-54"><a href="#DEPLOY-2018-09-24-19-16-54" class="headerlink" title="DEPLOY 2018-09-24 19:16:54"></a>DEPLOY 2018-09-24 19:16:54</h2><h3 id="DELETE-BACKUP-FILES-14"><a href="#DELETE-BACKUP-FILES-14" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-14"><a href="#UPLOAD-BACKUP-FILES-14" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180924/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180924/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180924/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180924/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180924/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180924/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180924/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180924/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180924/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180924/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180924/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180924/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180924/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180924/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180924/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180924/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180924/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180924/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180924/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180924/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180924/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180924/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180924/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180924/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180924/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180924/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180924/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180924/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180924/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180924/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-master-master.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-master-master.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180924/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180924/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180924/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180924/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180924/source/_posts/mysql-MHA.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/mysql-MHA.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180924/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180924/source/_posts/nginx-proxy.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_posts/nginx-proxy.md<br>Upload /opt/hexo_backup/20180924/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/tags/index.md<br>Upload /opt/hexo_backup/20180924/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/categories/index.md<br>Upload /opt/hexo_backup/20180924/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/about/index.md<br>Upload /opt/hexo_backup/20180924/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180924/source/python/index.md<br>Upload /opt/hexo_backup/20180924/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180924/source/python/two.md<br>Upload /opt/hexo_backup/20180924/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180924/source/python/one.md<br>Upload /opt/hexo_backup/20180924/source/images/222   =&gt;   cos://hexo/hexo_backup/20180924/source/images/222<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180924/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180924/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180924/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180924/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180924/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180924/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180924/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180924/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180924/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180924/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180924/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180924/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180924/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180924/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180924/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180924/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180924/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180924/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>142 files successful, 0 files failed</p><hr><h3 id="COS-LIST-14"><a href="#COS-LIST-14" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr><h2 id="DEPLOY-2018-09-25-03-44-55"><a href="#DEPLOY-2018-09-25-03-44-55" class="headerlink" title="DEPLOY 2018-09-25 03:44:55"></a>DEPLOY 2018-09-25 03:44:55</h2><h3 id="DELETE-BACKUP-FILES-15"><a href="#DELETE-BACKUP-FILES-15" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-15"><a href="#UPLOAD-BACKUP-FILES-15" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><h2 id="DEPLOY-2018-09-27-20-25-59"><a href="#DEPLOY-2018-09-27-20-25-59" class="headerlink" title="DEPLOY 2018-09-27 20:25:59"></a>DEPLOY 2018-09-27 20:25:59</h2><h3 id="DELETE-BACKUP-FILES-16"><a href="#DELETE-BACKUP-FILES-16" class="headerlink" title="DELETE BACKUP FILES"></a>DELETE BACKUP FILES</h3><hr><h3 id="UPLOAD-BACKUP-FILES-16"><a href="#UPLOAD-BACKUP-FILES-16" class="headerlink" title="UPLOAD BACKUP FILES"></a>UPLOAD BACKUP FILES</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br>Upload /opt/hexo_backup/20180927/source/_posts/aminglinux.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/aminglinux.md<br>Upload /opt/hexo_backup/20180927/source/_posts/bind-server.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/bind-server.md<br>Upload /opt/hexo_backup/20180927/source/_posts/Cobbler-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/Cobbler-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/Conf-Aliyun-YUM.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/Conf-Aliyun-YUM.md<br>Upload /opt/hexo_backup/20180927/source/_posts/DeleteAD.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/DeleteAD.md<br>Upload /opt/hexo_backup/20180927/source/_posts/expect-method.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/expect-method.md<br>Upload /opt/hexo_backup/20180927/source/_posts/kodexplorer.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/kodexplorer.md<br>Upload /opt/hexo_backup/20180927/source/_posts/linux.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/linux.md<br>Upload /opt/hexo_backup/20180927/source/_posts/qunhui-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/qunhui-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/ResetPassword.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/ResetPassword.md<br>Upload /opt/hexo_backup/20180927/source/_posts/rsync-crontab.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/rsync-crontab.md<br>Upload /opt/hexo_backup/20180927/source/_posts/Windows-Subversion-ReviewBoard.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/Windows-Subversion-ReviewBoard.md<br>Upload /opt/hexo_backup/20180927/source/_posts/WindowsBackup.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/WindowsBackup.md<br>Upload /opt/hexo_backup/20180927/source/_posts/WindowsFirewalld.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/WindowsFirewalld.md<br>Upload /opt/hexo_backup/20180927/source/_posts/Hexo.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/Hexo.md<br>Upload /opt/hexo_backup/20180927/source/_posts/bt.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/bt.md<br>Upload /opt/hexo_backup/20180927/source/_posts/h5ai.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/h5ai.md<br>Upload /opt/hexo_backup/20180927/source/_posts/simple-php-login.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/simple-php-login.md<br>Upload /opt/hexo_backup/20180927/source/_posts/frp.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/frp.md<br>Upload /opt/hexo_backup/20180927/source/_posts/nas-all.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/nas-all.md<br>Upload /opt/hexo_backup/20180927/source/_posts/mount.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/mount.md<br>Upload /opt/hexo_backup/20180927/source/_posts/cos.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/cos.md<br>Upload /opt/hexo_backup/20180927/source/_posts/nginx-config.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/nginx-config.md<br>Upload /opt/hexo_backup/20180927/source/_posts/esxi-disk.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/esxi-disk.md<br>Upload /opt/hexo_backup/20180927/source/_posts/gitlab-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/gitlab-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/docker-image-manage.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/docker-image-manage.md<br>Upload /opt/hexo_backup/20180927/source/_posts/Win2012-PXE-md.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/Win2012-PXE-md.md<br>Upload /opt/hexo_backup/20180927/source/_posts/change-lvm.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/change-lvm.md<br>Upload /opt/hexo_backup/20180927/source/_posts/vsftpd-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/vsftpd-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/shell-script.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/shell-script.md<br>Upload /opt/hexo_backup/20180927/source/_posts/apache-log.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/apache-log.md<br>Upload /opt/hexo_backup/20180927/source/_posts/docker-ce-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/docker-ce-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/stepping-stones-script.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/stepping-stones-script.md<br>Upload /opt/hexo_backup/20180927/source/_posts/change-network-eth.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/change-network-eth.md<br>Upload /opt/hexo_backup/20180927/source/_posts/mysql-source-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/mysql-source-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/file-share.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/file-share.md<br>Upload /opt/hexo_backup/20180927/source/_posts/ssh-keygen-expect.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/ssh-keygen-expect.md<br>Upload /opt/hexo_backup/20180927/source/_posts/kubeadm-cluster-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/kubeadm-cluster-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/kubeadm-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/kubeadm-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/mirror-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/mirror-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/Linux-initialize.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/Linux-initialize.md<br>Upload /opt/hexo_backup/20180927/source/_posts/Jenkins-Build-Unity.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/Jenkins-Build-Unity.md<br>Upload /opt/hexo_backup/20180927/source/_posts/software-md.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/software-md.md<br>Upload /opt/hexo_backup/20180927/source/_posts/php-nginx-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/php-nginx-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/ipxe-install-system.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/ipxe-install-system.md<br>Upload /opt/hexo_backup/20180927/source/_posts/docker-build.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/docker-build.md<br>Upload /opt/hexo_backup/20180927/source/_posts/docker-php.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/docker-php.md<br>Upload /opt/hexo_backup/20180927/source/_posts/ansible.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/ansible.md<br>Upload /opt/hexo_backup/20180927/source/_posts/hello-world.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/hello-world.md<br>Upload /opt/hexo_backup/20180927/source/_posts/QA.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/QA.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-neutron-mod.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-neutron-mod.md<br>Upload /opt/hexo_backup/20180927/source/_posts/mysql-master-master.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/mysql-master-master.md<br>Upload /opt/hexo_backup/20180927/source/_posts/Install-OpenStack-Pike.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/Install-OpenStack-Pike.md<br>Upload /opt/hexo_backup/20180927/source/_posts/Heartbeat-DRBD-NFS-Cluster.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/Heartbeat-DRBD-NFS-Cluster.md<br>Upload /opt/hexo_backup/20180927/source/_posts/hexo-log.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/hexo-log.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-09.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-09.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-11.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-11.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-01.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-01.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-10.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-10.md<br>Upload /opt/hexo_backup/20180927/source/_posts/linux-note.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/linux-note.md<br>Upload /opt/hexo_backup/20180927/source/_posts/mysql-master-slave.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/mysql-master-slave.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-02.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-10.md.bak   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-10.md.bak<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-08.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-08.md<br>Upload /opt/hexo_backup/20180927/source/_posts/mysql-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/mysql-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/nginx-proxy.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/nginx-proxy.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-06.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-06.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-13.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-13.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-readme.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-readme.md<br>Upload /opt/hexo_backup/20180927/source/_posts/heartbeat-drbd-install.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/heartbeat-drbd-install.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openldap.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openldap.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-00.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-00.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-12.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-12.md<br>Upload /opt/hexo_backup/20180927/source/_posts/mysql-MHA.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/mysql-MHA.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-03.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-03.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-04.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-04.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-05.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-05.md<br>Upload /opt/hexo_backup/20180927/source/_posts/openstack-install-07.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_posts/openstack-install-07.md<br>Upload /opt/hexo_backup/20180927/source/tags/index.md   =&gt;   cos://hexo/hexo_backup/20180927/source/tags/index.md<br>Upload /opt/hexo_backup/20180927/source/categories/index.md   =&gt;   cos://hexo/hexo_backup/20180927/source/categories/index.md<br>Upload /opt/hexo_backup/20180927/source/about/index.md   =&gt;   cos://hexo/hexo_backup/20180927/source/about/index.md<br>Upload /opt/hexo_backup/20180927/source/python/index.md   =&gt;   cos://hexo/hexo_backup/20180927/source/python/index.md<br>Upload /opt/hexo_backup/20180927/source/python/two.md   =&gt;   cos://hexo/hexo_backup/20180927/source/python/two.md<br>Upload /opt/hexo_backup/20180927/source/python/one.md   =&gt;   cos://hexo/hexo_backup/20180927/source/python/one.md<br>Upload /opt/hexo_backup/20180927/source/images/222   =&gt;   cos://hexo/hexo_backup/20180927/source/images/222<br>Upload /opt/hexo_backup/20180927/source/images/backup_mysq_web_01.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/backup_mysq_web_01.png<br>Upload /opt/hexo_backup/20180927/source/images/backup_mysq_web_02.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/backup_mysq_web_02.png<br>Upload /opt/hexo_backup/20180927/source/images/backup_mysq_web_03.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/backup_mysq_web_03.png<br>Upload /opt/hexo_backup/20180927/source/images/backup_mysq_web_04.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/backup_mysq_web_04.png<br>Upload /opt/hexo_backup/20180927/source/images/backup_mysq_web_05.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/backup_mysq_web_05.png<br>Upload /opt/hexo_backup/20180927/source/images/bind-01.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/bind-01.png<br>Upload /opt/hexo_backup/20180927/source/images/bind-02.gif   =&gt;   cos://hexo/hexo_backup/20180927/source/images/bind-02.gif<br>Upload /opt/hexo_backup/20180927/source/images/chpasswd-01.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/chpasswd-01.png<br>Upload /opt/hexo_backup/20180927/source/images/chpasswd-02.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/chpasswd-02.png<br>Upload /opt/hexo_backup/20180927/source/images/pasted-0.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/pasted-0.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_00.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_00.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_01.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_01.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_02.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_02.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_03.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_03.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_04.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_04.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_05.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_05.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_06.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_06.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_07.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_07.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_08.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_08.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_09.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_09.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_10.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_10.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_11.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_11.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_12.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_12.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_13.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_13.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_14.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_14.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_15.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_15.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_16.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_16.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_17.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_17.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_18.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_18.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_19.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_19.png<br>Upload /opt/hexo_backup/20180927/source/images/qunhui_install_20.png   =&gt;   cos://hexo/hexo_backup/20180927/source/images/qunhui_install_20.png<br>Upload /opt/hexo_backup/20180927/source/_discarded/openstack-install-02.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_discarded/openstack-install-02.md<br>Upload /opt/hexo_backup/20180927/source/_discarded/openstack-install-99.md   =&gt;   cos://hexo/hexo_backup/20180927/source/_discarded/openstack-install-99.md<br>Upload /opt/hexo_backup/20180927/source/code/SSH_KEY   =&gt;   cos://hexo/hexo_backup/20180927/source/code/SSH_KEY<br>Upload /opt/hexo_backup/20180927/source/code/backup/openstack-02_Haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/backup/openstack-02_Haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/backup/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/backup/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/backup/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/backup/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/backup/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/backup/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-04_rabbitmq-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-04_rabbitmq-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-11_nova.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-11_nova.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-06_glance-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-06_glance-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/mysql-bin-install.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/mysql-bin-install.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-07_nova-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-07_nova-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-08_neutron-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-08_neutron-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-10_cinder.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-10_cinder.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-02_haproxy-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-02_haproxy-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-03_mariadb-galera-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-03_mariadb-galera-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-10_cinder-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-10_cinder-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-05_keystone-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-05_keystone-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-01_init_lan.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-01_init_lan.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-09_dashboard-cluster.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-09_dashboard-cluster.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-01_init.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-01_init.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-11_nova_lan.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-11_nova_lan.sh<br>Upload /opt/hexo_backup/20180927/source/code/openstack-06_glance_lan.sh   =&gt;   cos://hexo/hexo_backup/20180927/source/code/openstack-06_glance_lan.sh<br>Upload /opt/hexo_backup/20180927/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180927/source/soft/heartbeat/heartbeat-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180927/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180927/source/soft/heartbeat/heartbeat-debuginfo-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180927/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180927/source/soft/heartbeat/heartbeat-devel-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180927/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm   =&gt;   cos://hexo/hexo_backup/20180927/source/soft/heartbeat/heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm<br>Upload /opt/hexo_backup/20180927/hexo-backup.tgz   =&gt;   cos://hexo/hexo_backup/20180927/hexo-backup.tgz</p><p>  0%|          | 0.00/79.3M [00:00&lt;?, ?B/s]<br>  1%|1         | 1.05M/79.3M [00:00&lt;00:23, 3.35MB/s]<br>  3%|2         | 2.10M/79.3M [00:00&lt;00:21, 3.54MB/s]<br>  4%|3         | 3.15M/79.3M [00:00&lt;00:20, 3.80MB/s]<br>  5%|5         | 4.19M/79.3M [00:01&lt;00:30, 2.45MB/s]<br>  7%|6         | 5.24M/79.3M [00:02&lt;00:47, 1.55MB/s]<br>  8%|7         | 6.29M/79.3M [00:02&lt;00:35, 2.06MB/s]<br>  9%|9         | 7.34M/79.3M [00:03&lt;00:31, 2.30MB/s]<br> 11%|#         | 8.39M/79.3M [00:03&lt;00:24, 2.92MB/s]<br> 13%|#3        | 10.5M/79.3M [00:04&lt;00:28, 2.39MB/s]<br> 15%|#4        | 11.5M/79.3M [00:05&lt;00:27, 2.46MB/s]<br> 16%|#5        | 12.6M/79.3M [00:06&lt;00:38, 1.71MB/s]<br> 17%|#7        | 13.6M/79.3M [00:06&lt;00:37, 1.75MB/s]<br> 19%|#8        | 14.7M/79.3M [00:06&lt;00:29, 2.19MB/s]<br> 20%|#9        | 15.7M/79.3M [00:07&lt;00:23, 2.72MB/s]<br> 21%|##1       | 16.8M/79.3M [00:08&lt;00:37, 1.68MB/s]<br> 22%|##2       | 17.8M/79.3M [00:08&lt;00:38, 1.59MB/s]<br> 24%|##3       | 18.9M/79.3M [00:09&lt;00:28, 2.13MB/s]<br> 25%|##5       | 19.9M/79.3M [00:09&lt;00:29, 1.99MB/s]<br> 26%|##6       | 21.0M/79.3M [00:10&lt;00:30, 1.92MB/s]<br> 28%|##7       | 22.0M/79.3M [00:10&lt;00:29, 1.94MB/s]<br> 29%|##9       | 23.1M/79.3M [00:11&lt;00:30, 1.87MB/s]<br> 30%|###       | 24.1M/79.3M [00:11&lt;00:25, 2.19MB/s]<br> 32%|###1      | 25.2M/79.3M [00:12&lt;00:35, 1.51MB/s]<br> 33%|###3      | 26.2M/79.3M [00:13&lt;00:33, 1.60MB/s]<br> 34%|###4      | 27.3M/79.3M [00:13&lt;00:29, 1.75MB/s]<br> 37%|###7      | 29.4M/79.3M [00:15&lt;00:27, 1.79MB/s]<br> 38%|###8      | 30.4M/79.3M [00:15&lt;00:20, 2.34MB/s]<br> 40%|###9      | 31.5M/79.3M [00:16&lt;00:33, 1.41MB/s]<br> 41%|####      | 32.5M/79.3M [00:16&lt;00:26, 1.80MB/s]<br> 42%|####2     | 33.6M/79.3M [00:16&lt;00:19, 2.29MB/s]<br> 44%|####3     | 34.6M/79.3M [00:17&lt;00:17, 2.62MB/s]<br> 45%|####4     | 35.7M/79.3M [00:17&lt;00:20, 2.14MB/s]<br> 46%|####6     | 36.7M/79.3M [00:19&lt;00:34, 1.25MB/s]<br> 48%|####7     | 37.7M/79.3M [00:19&lt;00:24, 1.69MB/s]<br> 49%|####8     | 38.8M/79.3M [00:20&lt;00:21, 1.91MB/s]<br> 52%|#####1    | 40.9M/79.3M [00:20&lt;00:16, 2.34MB/s]<br> 53%|#####2    | 41.9M/79.3M [00:21&lt;00:26, 1.39MB/s]<br> 54%|#####4    | 43.0M/79.3M [00:22&lt;00:25, 1.44MB/s]<br> 58%|#####8    | 46.1M/79.3M [00:23&lt;00:18, 1.83MB/s]<br> 59%|#####9    | 47.2M/79.3M [00:24&lt;00:21, 1.47MB/s]<br> 61%|######    | 48.2M/79.3M [00:25&lt;00:24, 1.25MB/s]<br> 62%|######2   | 49.3M/79.3M [00:25&lt;00:17, 1.67MB/s]<br> 66%|######6   | 52.4M/79.3M [00:27&lt;00:15, 1.72MB/s]<br> 67%|######7   | 53.5M/79.3M [00:28&lt;00:18, 1.40MB/s]<br> 69%|######8   | 54.5M/79.3M [00:28&lt;00:14, 1.70MB/s]<br> 70%|#######   | 55.6M/79.3M [00:29&lt;00:12, 1.86MB/s]<br> 71%|#######1  | 56.6M/79.3M [00:29&lt;00:09, 2.43MB/s]<br> 73%|#######2  | 57.7M/79.3M [00:29&lt;00:07, 2.83MB/s]<br> 74%|#######4  | 58.7M/79.3M [00:30&lt;00:12, 1.70MB/s]<br> 75%|#######5  | 59.8M/79.3M [00:31&lt;00:14, 1.31MB/s]<br> 77%|#######6  | 60.8M/79.3M [00:32&lt;00:11, 1.66MB/s]<br> 78%|#######7  | 61.9M/79.3M [00:32&lt;00:08, 1.96MB/s]<br> 79%|#######9  | 62.9M/79.3M [00:32&lt;00:06, 2.57MB/s]<br> 81%|########  | 64.0M/79.3M [00:33&lt;00:08, 1.74MB/s]<br> 82%|########1 | 65.0M/79.3M [00:34&lt;00:09, 1.44MB/s]<br> 85%|########4 | 67.1M/79.3M [00:34&lt;00:06, 1.93MB/s]<br> 86%|########5 | 68.2M/79.3M [00:34&lt;00:04, 2.45MB/s]<br> 87%|########7 | 69.2M/79.3M [00:36&lt;00:08, 1.26MB/s]<br> 89%|########8 | 70.3M/79.3M [00:37&lt;00:05, 1.53MB/s]<br> 91%|#########1| 72.4M/79.3M [00:38&lt;00:04, 1.67MB/s]<br> 93%|#########2| 73.4M/79.3M [00:38&lt;00:03, 1.72MB/s]<br> 94%|#########3| 74.4M/79.3M [00:39&lt;00:03, 1.59MB/s]<br> 95%|#########5| 75.5M/79.3M [00:40&lt;00:02, 1.44MB/s]<br> 98%|#########7| 77.6M/79.3M [00:40&lt;00:00, 1.91MB/s]<br> 99%|#########8| 78.3M/79.3M [00:40&lt;00:00, 1.85MB/s]<br>100%|##########| 79.3M/79.3M [00:41&lt;00:00, 1.62MB/s]<br>Completing multiupload, please wait<br>144 files successful, 0 files failed</p><hr><h3 id="COS-LIST-15"><a href="#COS-LIST-15" class="headerlink" title="COS LIST"></a>COS LIST</h3><p>/usr/lib/python2.7/site-packages/requests/<strong>init</strong>.py:91: RequestsDependencyWarning: urllib3 (1.23) or chardet (2.2.1) doesn’t match a supported version!<br>  RequestsDependencyWarning)<br> Files num: 0<br> Files size: 0</p><hr>]]></content>
      
      
        <tags>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
