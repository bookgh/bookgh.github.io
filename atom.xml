<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  <icon>https://www.gravatar.com/avatar/2441db0cec3ab08ce53027984ed7f818</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://home.onlycloud.xin/"/>
  <updated>2018-09-27T12:11:48.999Z</updated>
  <id>https://home.onlycloud.xin/</id>
  
  <author>
    <name>亦 漩</name>
    <email>544025211@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>OpenLdap安装配置</title>
    <link href="https://home.onlycloud.xin/posts/openldap.html"/>
    <id>https://home.onlycloud.xin/posts/openldap.html</id>
    <published>2018-09-24T19:25:09.000Z</published>
    <updated>2018-09-27T12:11:48.999Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><pre><code>系统：centos7软件版本：openldap-2.4.4配置文件: /etc/openldap/sldap.conf说明：ldap双主配置lab-01    ldap.test.com     IP: 10.0.0.11lab-02    ldap2.test.com    IP: 10.0.0.12</code></pre><hr><h2 id="环境初始化"><a href="#环境初始化" class="headerlink" title="环境初始化"></a>环境初始化</h2><blockquote><p>配置防火墙 放行<code>ldap, sldap</code> 端口</p></blockquote><pre><code>firewall-cmd --zone=public --add-port=389/tcp --permanentfirewall-cmd --zone=public --add-port=636/tcp --permanentfirewall-cmd --reload</code></pre><hr><blockquote><p>关闭, 禁用<code>selinux</code></p></blockquote><pre><code>setenforce 0sed -i &apos;/^SELINUX=.*/SELINUX=disabled&apos; /etc/selinux/config</code></pre><hr><blockquote><p>配置软件安装源</p></blockquote><pre><code>rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repocurl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo </code></pre><hr><blockquote><p>配置时间同步</p></blockquote><pre><code>yum -y install ntpdate/usr/sbin/ntpdate ntp6.aliyun.com ;hwclock -wecho -e &quot;*/3 * * * * /usr/sbin/ntpdate ntp6.aliyun.com  &gt;/dev/null 2&gt;&amp;1 &amp;&amp; /usr/sbin/hwclock -w&quot; &gt; /tmp/crontabcrontab /tmp/crontab</code></pre><hr><h2 id="lab-01-安装配置"><a href="#lab-01-安装配置" class="headerlink" title="lab-01 安装配置"></a>lab-01 安装配置</h2><blockquote><p>hostname(若不配置主机名或者配置错误会导致后面服务无法启动)</p></blockquote><pre><code># lab-01hostnamectl set-hostname ldap.test.com</code></pre><hr><blockquote><p>配置<code>hosts</code>解析</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;&gt;/etc/hosts# add ldap server10.0.0.11    ldap.test.com10.0.0.12    ldap2.test.comEOF</code></pre><hr><h3 id="安装OpenLdap"><a href="#安装OpenLdap" class="headerlink" title="安装OpenLdap"></a>安装<code>OpenLdap</code></h3><blockquote><p>安装<code>OpenLdap</code>与相关软件包</p></blockquote><pre><code>yum install -y openldap openldap-devel openldap-servers openldap-clients openldap-devel compat-openldap</code></pre><hr><h3 id="创建CA证书"><a href="#创建CA证书" class="headerlink" title="创建CA证书"></a>创建<code>CA</code>证书</h3><blockquote><p><code>CA</code>中心生成自身私钥</p></blockquote><pre><code>cd /etc/pki/CA(umask 077;openssl genrsa -out private/cakey.pem 2048)</code></pre><hr><blockquote><p><code>CA</code>签发自身公钥</p></blockquote><pre><code>openssl req -new -x509 -key private/cakey.pem -out cacert.pem -days 3650 \  -subj &quot;/C=CN/ST=HuBei/L=WuHan/O=test/OU=test.com/CN=*.test.com/emailAddress=544025211@qq.com&quot;touch serial index.txtecho &quot;01&quot; &gt; serial</code></pre><hr><blockquote><p>查看生成的根证书信息</p></blockquote><pre><code>openssl x509 -noout -text -in /etc/pki/CA/cacert.pem</code></pre><hr><h3 id="创建ldap证书"><a href="#创建ldap证书" class="headerlink" title="创建ldap证书"></a>创建<code>ldap</code>证书</h3><blockquote><p><code>OpenLdap</code>服务端生成证书</p></blockquote><pre><code>mkdir /etc/openldap/sslcd /etc/openldap/ssl(umask 077;openssl genrsa -out ldapkey.pem 1024)</code></pre><hr><blockquote><p><code>OpenLdap</code>服务端向<code>CA</code>申请证书签署请求</p></blockquote><pre><code>openssl req -new -key ldapkey.pem -out ldap.csr -days 3650 \  -subj &quot;/C=CN/ST=HuBei/L=WuHan/O=test/OU=test.com/CN=*.test.com/emailAddress=544025211@qq.com&quot;</code></pre><hr><blockquote><p><code>CA</code>核实并签发证书</p></blockquote><pre><code>openssl ca -in /etc/openldap/ssl/ldap.csr -out /etc/openldap/ssl/ldapcert.pem -days 3650</code></pre><hr><blockquote><p>设置证书权限</p></blockquote><pre><code>cp /etc/pki/CA/cacert.pem /etc/openldap/ssl/chown -R ldap.ldap /etc/openldap/ssl/*chmod -R 0400 /etc/openldap/ssl/*</code></pre><hr><h3 id="配置OpenLdap"><a href="#配置OpenLdap" class="headerlink" title="配置OpenLdap"></a>配置<code>OpenLdap</code></h3><blockquote><p>复制数据库配置文件</p></blockquote><pre><code>cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</code></pre><hr><blockquote><p>设置配置文件,数据目录权限</p></blockquote><pre><code>chown -R ldap.ldap /etc/openldap/chown -R ldap.ldap /var/lib/ldap/</code></pre><hr><blockquote><p>启动服务,配置服务跟随系统启动</p></blockquote><pre><code>systemctl start slapdsystemctl enable slapd</code></pre><hr><blockquote><p>生成管理员密码</p></blockquote><pre><code>pass=linuxslappasswd -s $pass -n &gt; /etc/openldap/passwdcat /etc/openldap/passwdldap_pass=&quot;$(cat /etc/openldap/passwd)&quot;</code></pre><hr><blockquote><p>创建slapd 配置文件</p></blockquote><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span>&lt;&lt;EOF  &gt;/etc/openldap/slapd.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/corba.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/core.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/cosine.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/duaconf.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/dyngroup.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/inetorgperson.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/java.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/misc.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/nis.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/openldap.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/ppolicy.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/collective.schema</span><br><span class="line"></span><br><span class="line">allow       bind_v2</span><br><span class="line">pidfile     /<span class="keyword">var</span>/<span class="keyword">run</span>/openldap/slapd.pid</span><br><span class="line">argsfile    /<span class="keyword">var</span>/<span class="keyword">run</span>/openldap/slapd.<span class="keyword">args</span></span><br><span class="line"></span><br><span class="line">modulepath  /usr/lib64/openldap</span><br><span class="line">moduleload  ppolicy.<span class="keyword">la</span></span><br><span class="line"></span><br><span class="line">TLSCACertificateFile  /etc/openldap/ssl/cacert.pem</span><br><span class="line">TLSCertificateFile  /etc/openldap/ssl/ldapcert.pem</span><br><span class="line">TLSCertificateKeyFile  /etc/openldap/ssl/ldapkey.pem</span><br><span class="line">TLSVerifyClient never</span><br><span class="line"></span><br><span class="line">access to attrs=shadowLastChange,userPassword</span><br><span class="line">      <span class="keyword">by</span> self write</span><br><span class="line">      <span class="keyword">by</span> * auth</span><br><span class="line"></span><br><span class="line">access to *</span><br><span class="line">      <span class="keyword">by</span> * <span class="keyword">read</span></span><br><span class="line"></span><br><span class="line">database config</span><br><span class="line">access to *</span><br><span class="line">    <span class="keyword">by</span> dn.exact=<span class="string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span> manage</span><br><span class="line">    <span class="keyword">by</span> * none</span><br><span class="line"></span><br><span class="line">database monitor</span><br><span class="line">access to *</span><br><span class="line">    <span class="keyword">by</span> dn.exact=<span class="string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span> <span class="keyword">read</span></span><br><span class="line">        <span class="keyword">by</span> dn.exact=<span class="string">"cn=admin,dc=test,dc=com"</span> <span class="keyword">read</span></span><br><span class="line">        <span class="keyword">by</span> * none</span><br><span class="line"></span><br><span class="line">database    hdb</span><br><span class="line">suffix      <span class="string">"dc=test,dc=com"</span></span><br><span class="line">checkpoint  1024 15</span><br><span class="line">rootdn      <span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">rootpw      <span class="variable">$ldap_pass</span></span><br><span class="line">directory   /<span class="keyword">var</span>/lib/ldap</span><br><span class="line"></span><br><span class="line">index    objectClass                       <span class="keyword">eq</span>,pres</span><br><span class="line">index    <span class="keyword">ou</span>,cn,mail,surname,givenname      <span class="keyword">eq</span>,pres,sub</span><br><span class="line">index    uidNumber,gidNumber,loginShell    <span class="keyword">eq</span>,pres</span><br><span class="line">index    uid,memberUid                     <span class="keyword">eq</span>,pres,sub</span><br><span class="line">index    nisMapName,nisMapEntry            <span class="keyword">eq</span>,pres,sub</span><br><span class="line">loglevel    4095</span><br><span class="line"></span><br><span class="line"># 主同步1 (若为配置单机版本则无需以下配置)</span><br><span class="line">moduleload syncprov.<span class="keyword">la</span></span><br><span class="line">modulepath /usr/lib64/openldap</span><br><span class="line"></span><br><span class="line">index   entryCSN,entryUUID    <span class="keyword">eq</span></span><br><span class="line"></span><br><span class="line">overlay syncprov</span><br><span class="line">syncprov-checkpoint 100 10</span><br><span class="line">syncprov-sessionlog 100</span><br><span class="line"></span><br><span class="line">serverID  1  ldaps:<span class="comment">//ldap.test.com</span></span><br><span class="line">serverID  2  ldaps:<span class="comment">//ldap2.test.com</span></span><br><span class="line"></span><br><span class="line">syncrepl  rid=123</span><br><span class="line">    provider=ldaps:<span class="comment">//ldap.test.com</span></span><br><span class="line">    bindmethod=simple</span><br><span class="line">    binddn=<span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">    credentials=linux</span><br><span class="line">    searchbase=<span class="string">"dc=test,dc=com"</span></span><br><span class="line">    schemachecking=<span class="keyword">on</span></span><br><span class="line">    <span class="keyword">type</span>=refreshAndPersist</span><br><span class="line">    starttls=yes</span><br><span class="line">    tls_key=<span class="string">"/etc/openldap/ssl/ldapkey.pem"</span></span><br><span class="line">    tls_cert=<span class="string">"/etc/openldap/ssl/ldapcert.pem"</span></span><br><span class="line">    tls_cacert=<span class="string">"/etc/openldap/ssl/cacert.pem"</span></span><br><span class="line">    retry=<span class="string">"5 5 300 5"</span></span><br><span class="line"></span><br><span class="line">syncrepl  rid=123</span><br><span class="line">    provider=ldaps:<span class="comment">//ldap2.test.com</span></span><br><span class="line">    bindmethod=simple</span><br><span class="line">    binddn=<span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">    credentials=linux</span><br><span class="line">    searchbase=<span class="string">"dc=test,dc=com"</span></span><br><span class="line">    schemachecking=<span class="keyword">on</span></span><br><span class="line">    <span class="keyword">type</span>=refreshAndPersist</span><br><span class="line">    starttls=yes</span><br><span class="line">    tls_key=<span class="string">"/etc/openldap/ssl/ldapkey.pem"</span></span><br><span class="line">    tls_cert=<span class="string">"/etc/openldap/ssl/ldapcert.pem"</span></span><br><span class="line">    tls_cacert=<span class="string">"/etc/openldap/ssl/cacert.pem"</span></span><br><span class="line">    retry=<span class="string">"5 5 300 5"</span></span><br><span class="line"></span><br><span class="line">mirrormode TRUE</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><hr><blockquote><p>配置监听服务</p></blockquote><pre><code>sed -i &apos;s/SLAPD_URLS/#SLAPD_URLS/&apos; /etc/sysconfig/slapdcat &lt;&lt;EOF   &gt;&gt;/etc/sysconfig/slapd# OpenLDAP LdapsSLAPD_URLS=&quot;ldapi:/// ldap:/// ldaps:///&quot;SLAPD_LDAP=yesSLAPD_LDAPI=yesSLAPD_LDAPS=yesEOF</code></pre><hr><blockquote><p>删除默认配置,生成新的配置(依据slapd.conf配置项生成新的配置)</p></blockquote><pre><code>rm -rf /etc/openldap/slapd.d/*slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/</code></pre><hr><blockquote><p>设置目录权限, 重启服务</p></blockquote><pre><code>chown -R ldap.ldap /etc/openldap/slapd.dchown -R ldap.ldap /var/lib/ldap/systemctl restart slapd</code></pre><hr><blockquote><p>配置日志</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;&gt;/etc/rsyslog.conf# ldap loglocal4.*    /var/log/slapd/slapd.logEOFsystemctl restart rsyslog</code></pre><hr><h3 id="添加用户-组"><a href="#添加用户-组" class="headerlink" title="添加用户, 组"></a>添加<code>用户</code>, <code>组</code></h3><blockquote><p>创建本地测试用户</p></blockquote><pre><code>for user in ldapuser{1..5} feng{1..5}; do    useradd $user    echo redhat | passwd --stdin $userdone</code></pre><hr><blockquote><p>通过<code>migration</code>工具生成<code>ldif</code>文件</p></blockquote><pre><code># 安装工具yum install -y migrationtools# 替换域信息sed -i &quot;71,74 s/padl/test/g&quot; /usr/share/migrationtools/migrate_common.phsed -i &quot;71,74 s/com/com/g&quot; /usr/share/migrationtools/migrate_common.phsed -i &apos;s/EXTENDED_SCHEMA = 0/EXTENDED_SCHEMA = 1/&apos; /usr/share/migrationtools/migrate_common.ph# 生成基础架构,根据密码文件生成用户信息,根据组文件生成组信息/usr/share/migrationtools/migrate_base.pl &gt; ~/base.ldif/usr/share/migrationtools/migrate_passwd.pl  /etc/passwd &gt; ~/passwd.ldif/usr/share/migrationtools/migrate_group.pl  /etc/group &gt; ~/group.ldif</code></pre><hr><blockquote><p>导入数据导入至<code>OpenLdap</code>目录树</p></blockquote><pre><code>ldapadd -x -w $pass -D &quot;cn=admin,dc=test,dc=com&quot; -f ~/base.ldifldapadd -x -w $pass -D &quot;cn=admin,dc=test,dc=com&quot; -f ~/passwd.ldifldapadd -x -w $pass -D &quot;cn=admin,dc=test,dc=com&quot; -f ~/group.ldif</code></pre><hr><h3 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h3><blockquote><p>搜索导入的用户</p></blockquote><pre><code>ldapsearch -x cn=ldapuser1 -b dc=test,dc=comfor user in ldapuser{1..5} feng{1..5}; do    echo &quot;---------- id $user ----------&quot;    ldapsearch -x cn=$user -b dc=test,dc=com    sleep 1    echodone</code></pre><hr><blockquote><p>验证<code>OpenLdap</code>服务端证书的合法性</p></blockquote><pre><code>openssl verify -CAfile /etc/openldap/ssl/cacert.pem /etc/openldap/ssl/ldapcert.pem</code></pre><hr><blockquote><p>确认当前套接字是否能通过CA的验证</p></blockquote><pre><code>openssl s_client -connect ldap.test.com:636 -showcerts -state -CAfile /etc/openldap/ssl/cacert.pem</code></pre><hr><h2 id="lab-02-安装配置"><a href="#lab-02-安装配置" class="headerlink" title="lab-02 安装配置"></a>lab-02 安装配置</h2><blockquote><p>hostname(若不配置主机名或者配置错误会导致后面服务无法启动)</p></blockquote><pre><code># lab-02hostnamectl set-hostname ldap2.test.com</code></pre><hr><blockquote><p>配置<code>hosts</code>解析</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;&gt;/etc/hosts# add ldap server10.0.0.11    ldap.test.com10.0.0.12    ldap2.test.comEOF</code></pre><hr><h3 id="安装OpenLdap-1"><a href="#安装OpenLdap-1" class="headerlink" title="安装OpenLdap"></a>安装<code>OpenLdap</code></h3><blockquote><p>安装<code>OpenLdap</code>与相关软件包</p></blockquote><pre><code>yum install -y openldap openldap-devel openldap-servers openldap-clients openldap-devel compat-openldap</code></pre><hr><h3 id="配置OpenLdap-1"><a href="#配置OpenLdap-1" class="headerlink" title="配置OpenLdap"></a>配置<code>OpenLdap</code></h3><blockquote><p>下载lab-01 证书文件</p></blockquote><pre><code>mkdir /etc/openldap/ssl/scp ldap.test.com:/etc/openldap/ssl/* /etc/openldap/ssl/</code></pre><hr><blockquote><p>设置凭证权限</p></blockquote><pre><code>chown -R ldap.ldap /etc/openldap/ssl/*chmod -R 0400 /etc/openldap/ssl/*</code></pre><hr><blockquote><p>复制数据库配置文件</p></blockquote><pre><code>cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</code></pre><hr><blockquote><p>设置配置文件,数据目录权限</p></blockquote><pre><code>chown -R ldap.ldap /etc/openldap/chown -R ldap.ldap /var/lib/ldap/</code></pre><hr><blockquote><p>启动服务,跟随系统启动</p></blockquote><pre><code>systemctl start slapdsystemctl enable slapd</code></pre><hr><blockquote><p>生成密码管理账号密码</p></blockquote><pre><code>pass=linuxslappasswd -s $pass -n &gt; /etc/openldap/passwdcat /etc/openldap/passwdldap_pass=&quot;$(cat /etc/openldap/passwd)&quot;</code></pre><hr><blockquote><p>创建slapd 配置文件</p></blockquote><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span>&lt;&lt;EOF  &gt;/etc/openldap/slapd.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/corba.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/core.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/cosine.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/duaconf.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/dyngroup.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/inetorgperson.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/java.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/misc.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/nis.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/openldap.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/ppolicy.schema</span><br><span class="line"><span class="keyword">include</span>     /etc/openldap/schema/collective.schema</span><br><span class="line"></span><br><span class="line">allow       bind_v2</span><br><span class="line">pidfile     /<span class="keyword">var</span>/<span class="keyword">run</span>/openldap/slapd.pid</span><br><span class="line">argsfile    /<span class="keyword">var</span>/<span class="keyword">run</span>/openldap/slapd.<span class="keyword">args</span></span><br><span class="line"></span><br><span class="line">modulepath  /usr/lib64/openldap</span><br><span class="line">moduleload  ppolicy.<span class="keyword">la</span></span><br><span class="line"></span><br><span class="line">TLSCACertificateFile  /etc/openldap/ssl/cacert.pem</span><br><span class="line">TLSCertificateFile  /etc/openldap/ssl/ldapcert.pem</span><br><span class="line">TLSCertificateKeyFile  /etc/openldap/ssl/ldapkey.pem</span><br><span class="line">TLSVerifyClient never</span><br><span class="line"></span><br><span class="line">access to attrs=shadowLastChange,userPassword</span><br><span class="line">      <span class="keyword">by</span> self write</span><br><span class="line">      <span class="keyword">by</span> * auth</span><br><span class="line"></span><br><span class="line">access to *</span><br><span class="line">      <span class="keyword">by</span> * <span class="keyword">read</span></span><br><span class="line"></span><br><span class="line">database config</span><br><span class="line">access to *</span><br><span class="line">    <span class="keyword">by</span> dn.exact=<span class="string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span> manage</span><br><span class="line">    <span class="keyword">by</span> * none</span><br><span class="line"></span><br><span class="line">database monitor</span><br><span class="line">access to *</span><br><span class="line">    <span class="keyword">by</span> dn.exact=<span class="string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span> <span class="keyword">read</span></span><br><span class="line">        <span class="keyword">by</span> dn.exact=<span class="string">"cn=admin,dc=test,dc=com"</span> <span class="keyword">read</span></span><br><span class="line">        <span class="keyword">by</span> * none</span><br><span class="line"></span><br><span class="line">database    hdb</span><br><span class="line">suffix      <span class="string">"dc=test,dc=com"</span></span><br><span class="line">checkpoint  1024 15</span><br><span class="line">rootdn      <span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">rootpw      <span class="variable">$ldap_pass</span></span><br><span class="line">directory   /<span class="keyword">var</span>/lib/ldap</span><br><span class="line"></span><br><span class="line">index    objectClass                       <span class="keyword">eq</span>,pres</span><br><span class="line">index    <span class="keyword">ou</span>,cn,mail,surname,givenname      <span class="keyword">eq</span>,pres,sub</span><br><span class="line">index    uidNumber,gidNumber,loginShell    <span class="keyword">eq</span>,pres</span><br><span class="line">index    uid,memberUid                     <span class="keyword">eq</span>,pres,sub</span><br><span class="line">index    nisMapName,nisMapEntry            <span class="keyword">eq</span>,pres,sub</span><br><span class="line">loglevel    4095</span><br><span class="line"></span><br><span class="line"># 主同步2 (若为配置单机版本则无需以下配置)</span><br><span class="line">moduleload syncprov.<span class="keyword">la</span></span><br><span class="line">modulepath /usr/lib64/openldap</span><br><span class="line"></span><br><span class="line">index entryCSN,entryUUID                <span class="keyword">eq</span></span><br><span class="line"></span><br><span class="line">overlay syncprov</span><br><span class="line">syncprov-checkpoint 100 10</span><br><span class="line">syncprov-sessionlog 100</span><br><span class="line"></span><br><span class="line">serverID  1  ldaps:<span class="comment">//ldap.test.com</span></span><br><span class="line">serverID  2  ldaps:<span class="comment">//ldap2.test.com</span></span><br><span class="line"></span><br><span class="line">syncrepl  rid=123</span><br><span class="line">    provider=ldaps:<span class="comment">//ldap2.test.com</span></span><br><span class="line">    bindmethod=simple</span><br><span class="line">    binddn=<span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">    credentials=<span class="variable">$pass</span></span><br><span class="line">    searchbase=<span class="string">"dc=test,dc=com"</span></span><br><span class="line">    schemachecking=<span class="keyword">on</span></span><br><span class="line">    <span class="keyword">type</span>=refreshAndPersist</span><br><span class="line">    starttls=yes</span><br><span class="line">    tls_key=<span class="string">"/etc/openldap/ssl/ldapkey.pem"</span></span><br><span class="line">    tls_cert=<span class="string">"/etc/openldap/ssl/ldapcert.pem"</span></span><br><span class="line">    tls_cacert=<span class="string">"/etc/openldap/ssl/cacert.pem"</span></span><br><span class="line">    retry=<span class="string">"5 5 300 5"</span></span><br><span class="line"></span><br><span class="line">syncrepl  rid=123</span><br><span class="line">    provider=ldaps:<span class="comment">//ldap.test.com</span></span><br><span class="line">    bindmethod=simple</span><br><span class="line">    binddn=<span class="string">"cn=admin,dc=test,dc=com"</span></span><br><span class="line">    credentials=<span class="variable">$pass</span></span><br><span class="line">    searchbase=<span class="string">"dc=test,dc=com"</span></span><br><span class="line">    schemachecking=<span class="keyword">on</span></span><br><span class="line">    <span class="keyword">type</span>=refreshAndPersist</span><br><span class="line">    starttls=yes</span><br><span class="line">    tls_key=<span class="string">"/etc/openldap/ssl/ldapkey.pem"</span></span><br><span class="line">    tls_cert=<span class="string">"/etc/openldap/ssl/ldapcert.pem"</span></span><br><span class="line">    tls_cacert=<span class="string">"/etc/openldap/ssl/cacert.pem"</span></span><br><span class="line">    retry=<span class="string">"5 5 300 5"</span></span><br><span class="line"></span><br><span class="line">mirrormode TRUE</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><hr><blockquote><p>配置监听服务</p></blockquote><pre><code>sed -i &apos;s/SLAPD_URLS/#SLAPD_URLS/&apos; /etc/sysconfig/slapdcat &lt;&lt;EOF   &gt;&gt;/etc/sysconfig/slapd# OpenLDAP LdapsSLAPD_URLS=&quot;ldapi:/// ldap:/// ldaps:///&quot;SLAPD_LDAP=yesSLAPD_LDAPI=yesSLAPD_LDAPS=yesEOF</code></pre><hr><blockquote><p>删除默认配置,生成新的配置(依据slapd.conf配置项生成新的配置)</p></blockquote><pre><code>rm -rf /etc/openldap/slapd.d/*slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/</code></pre><hr><blockquote><p>设置目录权限, 重启服务</p></blockquote><pre><code>chown -R ldap.ldap /etc/openldap/slapd.dchown -R ldap.ldap /var/lib/ldap/systemctl restart slapd</code></pre><hr><blockquote><p>配置日志</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;&gt;/etc/rsyslog.conf# ldap loglocal4.*    /var/log/slapd/slapd.logEOFsystemctl restart rsyslog</code></pre><hr><h3 id="测试验证-1"><a href="#测试验证-1" class="headerlink" title="测试验证"></a>测试验证</h3><blockquote><p>搜索导入的用户</p></blockquote><pre><code>ldapsearch -x cn=ldapuser1 -b dc=test,dc=comfor user in ldapuser{1..5} feng{1..5}; do    echo &quot;---------- id $user ----------&quot;    ldapsearch -x cn=$user -b dc=test,dc=com    sleep 1    echodone</code></pre><hr><blockquote><p>验证<code>OpenLdap</code>服务端证书的合法性</p></blockquote><pre><code>openssl verify -CAfile /etc/openldap/ssl/cacert.pem /etc/openldap/ssl/ldapcert.pem</code></pre><hr><blockquote><p>确认当前套接字是否能通过CA的验证</p></blockquote><pre><code>openssl s_client -connect ldap2.test.com:636 -showcerts -state -CAfile /etc/openldap/ssl/cacert.pem</code></pre><hr><blockquote><p>验证同步</p></blockquote><pre><code>tail -f /var/log/slapd/slapd.logrm -f /var/lib/ldap/*; systemctl restart slapd;sleep 2; ls /var/lib/ldap/</code></pre><hr><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><blockquote><p>配置<code>hosts</code>解析</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;&gt;/etc/hosts# add ldap server10.0.0.11    ldap.test.com10.0.0.12    ldap2.test.comEOF</code></pre><hr><blockquote><p>安装验证模块</p></blockquote><pre><code>yum install -y sssd krb5-workstation</code></pre><hr><blockquote><p>配置单服务器验证</p></blockquote><pre><code>authconfig \  --enableldap \  --enableldaptls \  --enableldapauth \  --enablemkhomedir \  --ldapserver=&apos;ldaps://ldap.test.com&apos; \  --ldapbasedn=&quot;dc=test,dc=com&quot; \  --ldaploadcacert=http://ldap.test.com/cacert.pem \  --update</code></pre><hr><blockquote><p>配置双服务器验证</p></blockquote><pre><code>authconfig \  --enableldap \  --enableldaptls \  --enableldapauth \  --enablemkhomedir \  --ldapserver=&apos;ldaps://ldap.test.com,ldaps://ldap2.test.com&apos; \  --ldapbasedn=&quot;dc=test,dc=com&quot; \  --ldaploadcacert=http://ldap.test.com/cacert.pem \  --update</code></pre><hr><blockquote><p>验证</p></blockquote><pre><code>id ldapuser1ssh ldapuser1@127.0.0.1</code></pre><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;系统：centos7
软件版本：openldap-2.4.4
配置文件: /etc
      
    
    </summary>
    
      <category term="ldap" scheme="https://home.onlycloud.xin/categories/ldap/"/>
    
    
      <category term="openldap" scheme="https://home.onlycloud.xin/tags/openldap/"/>
    
      <category term="ldap" scheme="https://home.onlycloud.xin/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>Nginx负载均衡与反向代理配置</title>
    <link href="https://home.onlycloud.xin/posts/nginx-proxy.html"/>
    <id>https://home.onlycloud.xin/posts/nginx-proxy.html</id>
    <published>2018-09-24T04:30:38.000Z</published>
    <updated>2018-09-27T12:11:48.755Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><pre><code>系统：centos7软件版本：nginx-1.12.2配置文件: /etc/nginx/nginx.conf说明：服务器3台分别安装nginx, 第三台配置负载均衡lab-01    IP: 10.0.0.11     nginx_port 8080lab-02    IP: 10.0.0.12     nginx_port 8080lab-03    IP: 10.0.0.13     nginx_port 8080 80</code></pre><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><h3 id="lab-01"><a href="#lab-01" class="headerlink" title="lab-01"></a>lab-01</h3><pre><code># 主机名hostnamectl set-hostname lab-01# 关闭防火墙systemctl stop firewalldsystemctl dieable firewalldsystemctl status firewalld# 关闭selinuxgetenforce 0sed -i &apos;s/^SELINUX=enforcing/SELINUX=disabled/&apos; /etc/selinux/config# 配置YUM源rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repocurl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo# 安装 nginxyum install -y nginx# 修改监听端口为8080 sed -i &apos;30,40 s/listen       80/listen       8080/&apos; /etc/nginx/nginx.conf# 修改日志配置,在日志文件中写入访问者真实IP,而不是负载均衡服务器IPsed -i &apos;s/remote_addr/http_x_real_ip/&apos; /etc/nginx/nginx.conf# 创建主页内容为当前主机名,启动服务echo `hostname` &gt;/usr/share/nginx/html/index.htmlsystemctl start nginx</code></pre><h3 id="lab-02"><a href="#lab-02" class="headerlink" title="lab-02"></a>lab-02</h3><pre><code># 主机名hostnamectl set-hostname lab-02# 关闭防火墙systemctl stop firewalldsystemctl dieable firewalldsystemctl status firewalld# 关闭selinuxgetenforce 0sed -i &apos;s/^SELINUX=enforcing/SELINUX=disabled/&apos; /etc/selinux/config# 配置YUM源rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repocurl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo# 安装 nginxyum install -y nginx# 修改监听端口为8080 sed -i &apos;30,40 s/listen       80/listen       8080/&apos; /etc/nginx/nginx.conf# 修改日志配置,在日志文件中写入访问者真实IP,而不是负载均衡服务器IPsed -i &apos;s/remote_addr/http_x_real_ip/&apos; /etc/nginx/nginx.conf# 创建主页内容为当前主机名,启动服务echo `hostname` &gt;/usr/share/nginx/html/index.htmlsystemctl start nginx</code></pre><h3 id="lab-03"><a href="#lab-03" class="headerlink" title="lab-03"></a>lab-03</h3><pre><code># 主机名hostnamectl set-hostname lab-03# 关闭防火墙systemctl stop firewalldsystemctl dieable firewalldsystemctl status firewalld# 关闭selinuxgetenforce 0sed -i &apos;s/^SELINUX=enforcing/SELINUX=disabled/&apos; /etc/selinux/config# 配置YUM源rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repocurl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo# 安装 nginxyum install -y nginx# 修改监听端口为8080 sed -i &apos;30,40 s/listen       80/listen       8080/&apos; /etc/nginx/nginx.conf# 修改日志配置,在日志文件中写入访问者真实IP,而不是负载均衡服务器IPsed -i &apos;s/remote_addr/http_x_real_ip/&apos; /etc/nginx/nginx.conf# 创建主页内容为当前主机名,启动服务echo `hostname` &gt;/usr/share/nginx/html/index.htmlsystemctl start nginx# 创建负载均衡配置cat &lt;&lt;&apos;EOF&apos;  &gt;/etc/nginx/conf.d/ha.confupstream my-ha {#    ip_hash;    # 对请求的ip进行hash运算并将结果映射到其中一个app，它能确保一个确定的请求ip会被映射到一个确定的服务对session 有要求的可以开启此选项        server 10.0.0.11:8080;        server 10.0.0.12:8080;        server 10.0.0.13:8080;#        server 10.0.0.11:8080 down;       # 表示单前的server暂时不参与负载#        server 10.0.0.12:8080 weight=2;   # 默认为1.weight越大，负载的权重就越大#        server 10.0.0.13:8080 backup;     # 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻    }server {    listen    80;    # server_name www.test.com  # 配置成实际的域名，每个虚拟主机的配置文件域名都相同    # Load configuration files for the default server block.    include /etc/nginx/default.d/*.conf;    location / {        proxy_redirect off;        proxy_set_header Host $host;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_pass http://my-ha;    }    error_page 404 /404.html;        location = /40x.html {    }    error_page 500 502 503 504 /50x.html;        location = /50x.html {    }}EOF# 重启 nginx 服务systemctl restart nginx# 打开浏览器访问http://10.0.0.13</code></pre><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><h3 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h3><pre><code># 主机名hostnamectl set-hostname lab-01# 关闭防火墙systemctl stop firewalldsystemctl dieable firewalldsystemctl status firewalld# 关闭selinuxgetenforce 0sed -i &apos;s/^SELINUX=enforcing/SELINUX=disabled/&apos; /etc/selinux/config# 配置YUM源rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repocurl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo /etc/yum.repos.d/epel-7.repo# 安装 nginxyum install -y nginx# 修改监听端口为8080 sed -i &apos;30,40 s/listen       80/listen       8080/&apos; /etc/nginx/nginx.conf</code></pre><h3 id="配置代理-1"><a href="#配置代理-1" class="headerlink" title="配置代理[1]"></a>配置代理[1]</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> &lt;&lt;'EOF'   &gt;/etc/nginx/<span class="keyword">conf</span>.<span class="keyword">d</span>/proxy.<span class="keyword">conf</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8083;</span><br><span class="line">    server_name doc.onlycloud.xin;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-<span class="keyword">For</span> <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_pass http:<span class="comment">//192.168.2.3;</span></span><br><span class="line">    &#125;</span><br><span class="line">    access_log /<span class="keyword">var</span>/<span class="keyword">log</span>/nginx/doc.onlycloud.xin.<span class="keyword">log</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8087;</span><br><span class="line">    server_name filerun.onlycloud.xin;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-<span class="keyword">For</span> <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_pass http:<span class="comment">//192.168.2.7;</span></span><br><span class="line">    &#125;</span><br><span class="line">    access_log /<span class="keyword">var</span>/<span class="keyword">log</span>/nginx/filerun.onlycloud.xin.<span class="keyword">log</span>;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建日志文件"><a href="#创建日志文件" class="headerlink" title="创建日志文件"></a>创建日志文件</h3><pre><code>touch /var/log/nginx/doc.onlycloud.xin.logtouch /var/log/nginx/filerun.onlycloud.xin.log</code></pre><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><pre><code>systemctl restart nginx</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre><code># hosts 添加域名对应的解析访问http://doc.onlycloud.xin:8083  或者 http://服务器IP:8083http://filerun.onlycloud.xin:8087  或者 http://服务器IP:8087</code></pre><h3 id="配置代理-2"><a href="#配置代理-2" class="headerlink" title="配置代理[2]"></a>配置代理[2]</h3><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF  &gt;/etc/nginx/conf.d/mirrors.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">8090</span>;</span><br><span class="line">    <span class="meta">#listen [::]:80;</span></span><br><span class="line">    autoindex on;</span><br><span class="line">    autoindex_exact_size off;</span><br><span class="line">    autoindex_localtime on;</span><br><span class="line">    server_name mirrors.test.com;</span><br><span class="line">    <span class="keyword">index</span> <span class="keyword">index</span>.html <span class="keyword">index</span>.htm <span class="keyword">index</span>.php <span class="keyword">default</span>.html <span class="keyword">default</span>.htm <span class="keyword">default</span>.php;</span><br><span class="line">    root  /home/wwwroot/html;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">location</span> /ubuntu/ &#123;</span><br><span class="line">        proxy_pass http:<span class="comment">//mirrors.aliyun.com/ubuntu/;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">location</span> /centos/ &#123;</span><br><span class="line">        proxy_pass http:<span class="comment">//mirrors.aliyun.com/centos/;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">location</span> /epel/ &#123;</span><br><span class="line">        proxy_pass http:<span class="comment">//mirrors.aliyun.com/epel/;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><pre><code>mkdir -p /home/wwwroot/html/{centos,ubuntu,epel}chown nginx:nginx /home/wwwroot/html/ -R</code></pre><h3 id="重启服务-1"><a href="#重启服务-1" class="headerlink" title="重启服务"></a>重启服务</h3><pre><code>systemctl restart nginx</code></pre><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><pre><code>http://服务器IP:8090</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;系统：centos7
软件版本：nginx-1.12.2
配置文件: /etc/n
      
    
    </summary>
    
      <category term="nginx" scheme="https://home.onlycloud.xin/categories/nginx/"/>
    
    
      <category term="nginx负载均衡" scheme="https://home.onlycloud.xin/tags/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
      <category term="nginx反向代理" scheme="https://home.onlycloud.xin/tags/nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    
      <category term="proxy" scheme="https://home.onlycloud.xin/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>MySql-MHA</title>
    <link href="https://home.onlycloud.xin/posts/mysql-mha.html"/>
    <id>https://home.onlycloud.xin/posts/mysql-mha.html</id>
    <published>2018-09-23T17:34:23.000Z</published>
    <updated>2018-09-27T12:11:47.177Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="MHA介绍"><a href="#MHA介绍" class="headerlink" title="MHA介绍"></a>MHA介绍</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    该软件由两部分组成：MHA Manager（管理节点）和MHA <span class="keyword">Node</span><span class="title">（数据节点）。MHA</span> Manager可以单独部署在一台独立的机器上管理多个<span class="literal">master</span>-<span class="literal">slave</span>集群，也可以部署</span><br><span class="line">在一台<span class="literal">slave</span>节点上。MHA <span class="keyword">Node</span><span class="title">运行在每台MySQL</span>服务器上，MHA Manager会定时探测集群中的<span class="literal">master</span>节点，当<span class="literal">master</span>出现故障时，它可以自动将最新数据的<span class="literal">slave</span>提升为新的</span><br><span class="line"><span class="literal">master</span>，然后将所有其他的<span class="literal">slave</span>重新指向新的<span class="literal">master</span>。整个故障转移过程对应用程序完全透明。</span><br><span class="line"></span><br><span class="line">    在MHA自动故障切换过程中，MHA试图从宕机的主服务器上保存二进制日志，最大程度的保证数据的不丢失，但这并不总是可行的。例如，如果主服务器硬件故障或无法通过</span><br><span class="line">ssh访问，MHA没法保存二进制日志，只进行故障转移而丢失了最新的数据。使用MySQL <span class="number">5.5</span>的半同步复制，可以大大降低数据丢失的风险。MHA可以与半同步复制结合起来。如果</span><br><span class="line">只有一个<span class="literal">slave</span>已经收到了最新的二进制日志，MHA可以将最新的二进制日志应用于其他所有的<span class="literal">slave</span>服务器上，因此可以保证所有节点的数据一致性。</span><br><span class="line"></span><br><span class="line">    目前MHA主要支持一主多从的架构，要搭建MHA,要求一个复制集群中必须最少有三台数据库服务器，一主二从，即一台充当<span class="literal">master</span>，一台充当备用<span class="literal">master</span>，另外一台充当从</span><br><span class="line">库，因为至少需要三台服务器，出于机器成本的考虑，淘宝也在该基础上进行了改造，目前淘宝TMHA已经支持一主一从。</span><br><span class="line"></span><br><span class="line">故障切换原理：</span><br><span class="line">    假如MySQL MHA架构运行正常，突然在上午<span class="number">10</span>：<span class="number">00</span>一个复制组中的A的MySQL服务 down了！</span><br><span class="line">    因为AB复制是异步复制，所以可能有一些数据尚没有被B拉到其relay_log中,即AB数据不一致，MHA是怎样解决这种情况的呢？</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>.mha_manager 使用scp命令将A当前binlog拷贝到mha_manager</span><br><span class="line"></span><br><span class="line">       <span class="number">2</span>.待新A（选举：依据谁的relay_log新）产生后，mha_manager将旧A的binlog和新的relay_log做比对，并进行差异还原以保证新A和旧A数据的一致性</span><br><span class="line"></span><br><span class="line">       <span class="number">3</span>.mha_manager将拿到的旧A的binlog去找复制组中其他B 做差异还原，保证数据的一致性</span><br><span class="line"></span><br><span class="line">  注意：mha_manager 每执行一次 failover 后，该进程自动退出。如果还想测试failover需要重新开启---开启前要将以下文件删掉：(lab03)/etc/mha/mha.failover.complete</span><br></pre></td></tr></table></figure><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><pre><code>系统：centos7_1804lab01: 10.0.0.11  master  mha4mysql-nodelab02: 10.0.0.12  slave1  mha4mysql-nodelab03: 10.0.0.13  slave2  mha4mysql-node mha4mysql-managerlab04: 10.0.0.14  haproxy [node2, node3] (备读)  VIP: 10.0.0.10  [node1, node2](主写)配置步骤：  1. 配置相互ssh密钥登陆  2. 主从复制 master:[lab01]  slave:[lab02, lab03]  3. 安装 mha node:[lab01, lab02, lab03]  manager:[lab03]  4. 测试</code></pre><h3 id="配置ssh密钥登陆"><a href="#配置ssh密钥登陆" class="headerlink" title="配置ssh密钥登陆"></a>配置ssh密钥登陆</h3><blockquote><p>生成密钥,安装自动交互工具<code>所有节点执行</code></p></blockquote><pre><code>[ -f ~/.ssh/id_dsa ] || { ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa;}[ -f /usr/bin/expect ] || { yum install -y expect;}</code></pre><hr><blockquote><p>发送公钥到远程主机<code>所有节点执行</code>（实际上只需要控制节点能无需密码登陆从节点即可）</p></blockquote><pre><code># 远程主机root密码rootpass=123.comSSH_KEY(){/usr/bin/expect &lt;&lt;EOFset timeout 30spawn ssh-copy-id -i /root/.ssh/id_dsa.pub root@$1expect {    &quot;(yes/no)?&quot; { send &quot;yes\r&quot;; exp_continue }    &quot;password:&quot; { send &quot;$rootpass\r&quot; }}expect eofEOF}for ip in 10.0.0.{11..13};do    SSH_KEY $ipdone</code></pre><hr><h3 id="安装MySql"><a href="#安装MySql" class="headerlink" title="安装MySql"></a>安装MySql</h3><blockquote><p>配置<a href="https://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">安装源</a><code>所有节点</code></p></blockquote><pre><code>yum install -y https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm    # 安装mysql软件安装源yum repolist all | grep mysql                     # 查看所有 mysql 子存储库yum install -y yum-utils                          # 安装 yum 配置工具管理 YUM 源yum-config-manager --disable mysql80-community    # 禁用 mysql80 子存储库yum-config-manager --enable mysql57-community     # 启用 mysql57 子存储库yum repolist enabled | grep mysql                 # 查看已启用的 mysql 子存储库</code></pre><hr><blockquote><p>安装 mysql-5.7 启动服务<code>所有节点</code></p></blockquote><pre><code>yum install -y mysql-community-serversystemctl start mysqld</code></pre><hr><h3 id="配置主从复制"><a href="#配置主从复制" class="headerlink" title="配置主从复制"></a>配置主从复制</h3><blockquote><p>lab01 操作; 开启二进制日志,设置 server-id,启动服务,更改root密码及授权,创建同步用户及授权</p></blockquote><pre><code># 开启二进制日志(注意 server-id 唯一)cp /etc/my.cnf{,.bak}cat &lt;&lt;EOF  &gt;&gt;/etc/my.cnf# binlogserver-id = 1log-bin = mysql-binlog-bin-index = master-bin.indexEOF# 重启服务,跟随系统启动systemctl restart mysqldsystemctl enable mysqldsystemctl status mysqld# 更改root密码,开启root用户远程登陆授权(密码：Hc.1234456)grep &apos;temporary password&apos; /var/log/mysqld.log    # 查看初始化密码def_pass=$(grep &apos;temporary password&apos; /var/log/mysqld.log | awk &apos;{print $NF}&apos;)ChangePass=&quot;alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;Hc.123456&apos;;&quot;mysql -uroot -p$def_pass -e &quot;$ChangePass&quot; --connect-expired-passwordAuthor=&quot;grant all privileges on *.* to root@&apos;%&apos; identified by &apos;Hc.123456&apos; with grant option;&quot;mysql -uroot -pHc.123456 -e &quot;$Author&quot;# 创建同步账号,授权mysql -uroot -pHc.123456create user &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;grant replication slave on *.* to &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;flush privileges;show master status;exit# mysql&gt; show master status;  # 记录下二进制日志文件名及偏移量+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000001 |     1390 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+</code></pre><hr><blockquote><p>lab02 操作; 开启二进制日志,设置 server-id,启动服务,更改root密码及授权,创建同步用户及授权,配置连接lab01</p></blockquote><pre><code># 开启二进制日志(注意 server-id 唯一)cp /etc/my.cnf{,.bak}cat &lt;&lt;EOF  &gt;&gt;/etc/my.cnf# binlogserver-id = 2log-bin = mysql-binlog-bin-index = master-bin.indexEOF# 重启服务,跟随系统启动systemctl restart mysqldsystemctl enable mysqldsystemctl status mysqld# 更改root密码,开启root用户远程登陆授权(密码：Hc.1234456)grep &apos;temporary password&apos; /var/log/mysqld.log    # 查看初始化密码def_pass=$(grep &apos;temporary password&apos; /var/log/mysqld.log | awk &apos;{print $NF}&apos;)ChangePass=&quot;alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;Hc.123456&apos;;&quot;mysql -uroot -p$def_pass -e &quot;$ChangePass&quot; --connect-expired-passwordAuthor=&quot;grant all privileges on *.* to root@&apos;%&apos; identified by &apos;Hc.123456&apos; with grant option;&quot;mysql -uroot -pHc.123456 -e &quot;$Author&quot;# 创建同步账号,授权,配置连接lab01mysql -uroot -pHc.123456create user &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;grant replication slave on *.* to &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;flush privileges;change master to master_host=&apos;10.0.0.11&apos;,  # lab01数据库 IP或主机名(需解析通)master_port=3306,                          # lab01数据库端口号master_user=&apos;sync&apos;,                        # 同步账号master_password=&apos;Hc.123456&apos;,               # 同步账号的密码master_log_file=&apos;mysql-bin.000001&apos;,        # lab01数据库执行 show master status; 获取的二进制日志文件名master_log_pos=1390;                       # lab01数据库执行 show master status; 获取的二进制日志偏移量start slave;                               # 启动slaveshow slave status\G;                       # 查看同步状态exit</code></pre><hr><blockquote><p>lab03 操作; 开启二进制日志,设置 server-id,启动服务,更改root密码及授权,创建同步用户及授权,配置连接lab01</p></blockquote><pre><code># 开启二进制日志(注意 server-id 唯一)cp /etc/my.cnf{,.bak}cat &lt;&lt;EOF  &gt;&gt;/etc/my.cnf# binlogserver-id = 3log-bin = mysql-binlog-bin-index = master-bin.indexEOF# 重启服务,跟随系统启动systemctl restart mysqldsystemctl enable mysqldsystemctl status mysqld# 更改root密码,开启root用户远程登陆授权(密码：Hc.1234456)grep &apos;temporary password&apos; /var/log/mysqld.log    # 查看初始化密码def_pass=$(grep &apos;temporary password&apos; /var/log/mysqld.log | awk &apos;{print $NF}&apos;)ChangePass=&quot;alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;Hc.123456&apos;;&quot;mysql -uroot -p$def_pass -e &quot;$ChangePass&quot; --connect-expired-passwordAuthor=&quot;grant all privileges on *.* to root@&apos;%&apos; identified by &apos;Hc.123456&apos; with grant option;&quot;mysql -uroot -pHc.123456 -e &quot;$Author&quot;# 创建同步账号,授权,配置连接lab01mysql -uroot -pHc.123456create user &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;grant replication slave on *.* to &apos;sync&apos;@&apos;10.0.0.%&apos; identified by &apos;Hc.123456&apos;;flush privileges;change master to master_host=&apos;10.0.0.11&apos;,  # lab01数据库 IP或主机名(需解析通)master_port=3306,                          # lab01数据库端口号master_user=&apos;sync&apos;,                        # 同步账号master_password=&apos;Hc.123456&apos;,               # 同步账号的密码master_log_file=&apos;mysql-bin.000001&apos;,        # lab01数据库执行 show master status; 获取的二进制日志文件名master_log_pos=1390;                       # lab01数据库执行 show master status; 获取的二进制日志偏移量start slave;                               # 启动slaveshow slave status\G;                       # 查看同步状态exit</code></pre><hr><h3 id="安装-MHA"><a href="#安装-MHA" class="headerlink" title="安装 MHA"></a>安装 MHA</h3><blockquote><p>所有节点安装<code>mha4mysql-node</code></p></blockquote><pre><code># yum install -y https://github.com/yoshinorim/mha4mysql-node/releases/download/v0.58/mha4mysql-node-0.58-0.el7.centos.noarch.rpmcurl http://117.50.70.211:88/attach_files/sql/12 -o mha4mysql-node-0.58-0.el7.centos.noarch.rpmyum install -y mha4mysql-node-0.58-0.el7.centos.noarch.rpm</code></pre><hr><blockquote><p>lab03安装<code>mha4mysql-manager</code></p></blockquote><pre><code># yum install -y https://github.com/yoshinorim/mha4mysql-manager/releases/download/v0.58/mha4mysql-manager-0.58-0.el7.centos.noarch.rpmcurl http://117.50.70.211:88/attach_files/sql/12 -o mha4mysql-manager-0.58-0.el7.centos.noarch.rpmyum install -y mha4mysql-manager-0.58-0.el7.centos.noarch.rpm</code></pre><hr><h3 id="配置-MHA-lab03"><a href="#配置-MHA-lab03" class="headerlink" title="配置 MHA(lab03)"></a>配置 MHA(lab03)</h3><blockquote><p>创建配置文件</p></blockquote><pre><code># 创建日志路径及文件mkdir /etc/mhatouch /etc/mha/manager.log# 创建配置文件cat &lt;&lt;EOF   &gt;/etc/mha/mha.cnf[server default]# mysql admin account and passworduser=rootpassword=Hc.123456# mha workdir  and worklogmanager_workdir=/etc/mhamanager_log=/etc/mha/manager.log# mysql A/B account and pwrepl_user=syncrepl_password=Hc.123456# check_mha_node timeping_interval=1# ssh accountssh_user=root# mha change VIP#report_script=/etc/mha/send_report#master_ip_failover_script=/etc/mha/master_ip_failover#master_ip_online_change_script=/etc/mha/master_ip_online_change[server1]hostname=10.0.0.11ssh_port=22master_binlog_dir=/var/lib/mysqlcandidate_master=1[server2]hostname=10.0.0.12ssh_port=22master_binlog_dir=/var/lib/mysqlcandidate_master=1[server3]hostname=10.0.0.13ssh_port=22master_binlog_dir=/var/lib/mysqlcandidate_master=2EOF</code></pre><hr><blockquote><p>创建服务器启动脚本</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;/etc/mha/mha_start#!/bin/bash/usr/bin/nohup /usr/bin/masterha_manager --conf=/etc/mha/mha.cnf &gt;/tmp/mha_manager.log 2&gt;&amp;1 &amp;EOFchmod +x /etc/mha/mha_start</code></pre><hr><blockquote><p>检测ssh密钥登陆配置</p></blockquote><pre><code>masterha_check_ssh --conf=/etc/mha/mha.cnf</code></pre><hr><blockquote><p>检测数据库复制</p></blockquote><pre><code>masterha_check_repl --conf=/etc/mha/mha.cnf</code></pre><hr><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>测试故障恢复;</p></blockquote><pre><code>1. lab03 启动 masterha_manager 服务2. lab01 关闭 mysqld 服务3. lab03 上验证当前 master4. 恢复 lab01(slave)5. 设置 lab01 为 master6. lab03 启动 masterha_manager 服务</code></pre><hr><blockquote><p>1.<code>lab03</code>启动 <code>masterha_manager</code>服务</p></blockquote><pre><code>/etc/mha/mha_start              # 启动 masterha_manager 服务ps aux | grep masterhatail -f /tmp/mha_manager.log    # 查看 masterha_manager 实时日志</code></pre><hr><blockquote><p>2.<code>lab01</code>关闭<code>mysql</code>服务</p></blockquote><pre><code>systemctl stop mysqld</code></pre><hr><blockquote><p>3.<code>lab03</code>验证</p></blockquote><pre><code>mysql -uroot -pHc.123456 -e &apos;show slave status\G;&apos; | grep Master_Host</code></pre><hr><blockquote><p>4.<code>lab01</code>恢复为<code>slave</code></p></blockquote><pre><code>systemctl start mysqldssh 10.0.0.13  &apos;grep -i change /etc/mha/manager.log&apos;    # 查看管理节点上的恢复参数mysql -uroot -pHc.123456CHANGE MASTER TO MASTER_HOST=&apos;10.0.0.12&apos;,MASTER_PORT=3306,MASTER_LOG_FILE=&apos;mysql-bin.000001&apos;,    # 替换此处为 manager.log 对应参数MASTER_LOG_POS=1390,                   # 替换此处为 manager.log 对应参数MASTER_USER=&apos;sync&apos;,MASTER_PASSWORD=&apos;Hc.123456&apos;;           # 替换此处为同步用户密码start slave;show slave status\G;</code></pre><hr><blockquote><p>5.设置 lab01 为 master</p></blockquote><pre><code># lab03 执行rm -f /etc/mha/mha.failover.complete/etc/mha/mha_start              # 启动 masterha_manager 服务ps aux | grep masterhatail -f /tmp/mha_manager.log    # 查看 masterha_manager 实时日志# lab02关闭mysld服务(lab02执行)systemctl stop mysqld# lab03 验证(lab03执行)mysql -uroot -pHc.123456 -e &apos;show slave status\G;&apos; | grep Master_Host# 恢复lab02(lab02执行)systemctl start mysqldssh 10.0.0.13  &apos;grep -i change /etc/mha/manager.log&apos;    # 查看管理节点上的恢复参数mysql -uroot -pHc.123456CHANGE MASTER TO MASTER_HOST=&apos;10.0.0.11&apos;,MASTER_PORT=3306,MASTER_LOG_FILE=&apos;mysql-bin.000002&apos;,    # 替换此处为 manager.log 对应参数MASTER_LOG_POS=154,                    # 替换此处为 manager.log 对应参数MASTER_USER=&apos;sync&apos;,MASTER_PASSWORD=&apos;Hc.123456&apos;;           # 替换此处为同步用户密码start slave;show slave status\G;</code></pre><hr><blockquote><p>6.<code>lab03</code>启动<code>masterha_manager</code>服务</p></blockquote><pre><code>rm -f /etc/mha/mha.failover.complete/etc/mha/mha_start              # 启动 masterha_manager 服务ps aux | grep masterhatail -f /tmp/mha_manager.log    # 查看 masterha_manager 实时日志</code></pre><hr><h3 id="创建VIP切换脚本"><a href="#创建VIP切换脚本" class="headerlink" title="创建VIP切换脚本"></a>创建VIP切换脚本</h3><blockquote><p>lab03 当主从切换时触发脚本执行删除/添加 VIP</p></blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span>   &gt;<span class="regexp">/etc/mha</span><span class="regexp">/master_ip_failover</span></span><br><span class="line"><span class="regexp">#!/usr</span><span class="regexp">/bin/env</span> perl</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings <span class="string">FATAL =&gt;</span> <span class="string">'all'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> Getopt::Long;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">my</span> (</span><br><span class="line">    $command,          $ssh_user,        $orig_master_host, $orig_master_ip,</span><br><span class="line">    $orig_master_port, $new_master_host, $new_master_ip,    $new_master_port</span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">my</span> $vip = <span class="string">'10.0.0.10/24'</span>;</span><br><span class="line"><span class="keyword">my</span> $nic = <span class="string">'ens32'</span>;</span><br><span class="line"><span class="keyword">my</span> $key = <span class="string">'6'</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_start_vip = <span class="string">"/sbin/ifconfig $nic:$key $vip"</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_stop_vip = <span class="string">"/sbin/ifconfig $nic:$key down"</span>;</span><br><span class="line"> </span><br><span class="line">GetOptions(</span><br><span class="line">    <span class="string">'command=s'</span>          =&gt; \$command,</span><br><span class="line">    <span class="string">'ssh_user=s'</span>         =&gt; \$ssh_user,</span><br><span class="line">    <span class="string">'orig_master_host=s'</span> =&gt; \$orig_master_host,</span><br><span class="line">    <span class="string">'orig_master_ip=s'</span>   =&gt; \$orig_master_ip,</span><br><span class="line">    <span class="string">'orig_master_port=i'</span> =&gt; \$orig_master_port,</span><br><span class="line">    <span class="string">'new_master_host=s'</span>  =&gt; \$new_master_host,</span><br><span class="line">    <span class="string">'new_master_ip=s'</span>    =&gt; \$new_master_ip,</span><br><span class="line">    <span class="string">'new_master_port=i'</span>  =&gt; \$new_master_port,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span> &amp;main();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"\n\nIN SCRIPT TEST====$ssh_stop_vip==$ssh_start_vip===\n\n"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( $command eq <span class="string">"stop"</span> || $command eq <span class="string">"stopssh"</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Disabling the VIP on old master: $orig_master_host \n"</span>;</span><br><span class="line">            &amp;stop_vip();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> <span class="string">"Got Error: $@\n"</span>;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">"start"</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Enabling the VIP - $vip on the new master - $new_master_host \n"</span>;</span><br><span class="line">            &amp;start_vip();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> $@;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">"status"</span> ) &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Checking the Status of the script.. OK \n"</span>;</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        &amp;usage();</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">start_vip</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $ssh_user\@$new_master_host \" $ssh_start_vip \"`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">stop_vip</span>() </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>  <span class="keyword">unless</span>  ($ssh_user);</span><br><span class="line">    <span class="string">`ssh $ssh_user\@$orig_master_host \" $ssh_stop_vip \"`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">usage</span> </span>&#123;</span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">    <span class="string">"Usage: master_ip_failover --command=start|stop|stopssh|status --orig_master_host=host --orig_master_ip=ip </span></span><br><span class="line"><span class="string">            --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="keyword">chmod</span> +<span class="keyword">x</span> /etc/mha/master_ip_failover</span><br></pre></td></tr></table></figure><hr><blockquote><p>开启切换主从时触发脚本VIP</p></blockquote><pre><code>sed -i &apos;s/#master_ip_failover_script/master_ip_failover_script/&apos; /etc/mha/mha.cnf</code></pre><hr><h3 id="节点快速恢复"><a href="#节点快速恢复" class="headerlink" title="节点快速恢复"></a>节点快速恢复</h3><pre><code>systemctl start mysqldmysql  -uroot -pHc.123456 -e &apos;stop slave;&apos;mysql  -uroot -pHc.123456 -e &apos;reset slave;&apos;echo  $(ssh 10.0.0.13  &apos;grep -i change /etc/mha/manager.log&apos; | awk -F &apos;be: &apos; &apos;{print $2}&apos; | tail -n 2) &gt;/tmp/bin.logsed -i &apos;s/xxx/Hc.123456/&apos; /tmp/bin.logsql=$(cat /tmp/bin.log)mysql  -uroot -pHc.123456 -e &quot;$sql&quot;mysql  -uroot -pHc.123456 -e &apos;start slave;&apos;mysql  -uroot -pHc.123456 -e &apos;show slave status\G;&apos;</code></pre><h3 id="slave集群"><a href="#slave集群" class="headerlink" title="slave集群"></a>slave集群</h3><blockquote><p>lab04安装 haproxy ; 代理 lab02 lab03 数据库读请求</p></blockquote><pre><code>yum -y install haproxy</code></pre><hr><h3 id="配置haproxy"><a href="#配置haproxy" class="headerlink" title="配置haproxy"></a>配置haproxy</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/haproxy/haproxy.cfg&#123;,.bak&#125;</span><br><span class="line">cat &lt;&lt;! &gt;/etc/haproxy/haproxy.cfg</span><br><span class="line">############ 全局配置 ############</span><br><span class="line">global</span><br><span class="line">log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local0</span><br><span class="line">log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local1 notice</span><br><span class="line">daemon</span><br><span class="line">nbproc <span class="number">1</span>       # 进程数量</span><br><span class="line">maxconn <span class="number">4096</span>   # 最大连接数</span><br><span class="line">user haproxy   # 运行用户</span><br><span class="line">group haproxy  # 运行组</span><br><span class="line">chroot /var/lib/haproxy</span><br><span class="line">pidfile /var/run/haproxy.pid</span><br><span class="line"></span><br><span class="line">############ 默认配置 ############</span><br><span class="line">defaults</span><br><span class="line">log global</span><br><span class="line">mode http            # 默认模式&#123; tcp|http|health &#125;</span><br><span class="line">option httplog       # 日志类别,采用httplog</span><br><span class="line">option dontlognull   # 不记录健康检查日志信息</span><br><span class="line">retries <span class="number">2</span>            # <span class="number">2</span>次连接失败不可用</span><br><span class="line">option forwardfor except <span class="number">127.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">8</span>    # 后端服务获得真实ip</span><br><span class="line">option httpclose     # 请求完毕后主动关闭http通道</span><br><span class="line">option abortonclose  # 服务器负载很高，自动结束比较久的链接</span><br><span class="line">option redispatch</span><br><span class="line">maxconn <span class="number">4096</span>         # 最大连接数</span><br><span class="line">timeout connect <span class="number">5</span>m   # 连接超时</span><br><span class="line">timeout client <span class="number">1</span>m    # 客户端超时</span><br><span class="line">timeout server <span class="number">31</span>m   # 服务器超时</span><br><span class="line">timeout check <span class="number">10</span>s    # 心跳检测超时</span><br><span class="line">balance roundrobin   # 负载均衡方式，轮询</span><br><span class="line"></span><br><span class="line">########## 统计页面配置 ##########</span><br><span class="line">listen stats</span><br><span class="line">  bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1080</span></span><br><span class="line">  mode http</span><br><span class="line">  option httplog</span><br><span class="line">  log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local0 err</span><br><span class="line">  maxconn <span class="number">10</span>               # 最大连接数</span><br><span class="line">  stats refresh <span class="number">30</span>s</span><br><span class="line">  stats uri /admin         #状态页面 http<span class="comment">//ip:1080/admin 访问</span></span><br><span class="line">  stats realm Haproxy\ Statistics</span><br><span class="line">  stats auth admin:admin   # 用户和密码:admin</span><br><span class="line">  stats hide-version       # 隐藏版本信息</span><br><span class="line">  stats admin <span class="keyword">if</span> TRUE      # 设置手工启动/禁用</span><br><span class="line"></span><br><span class="line">listen MYSQL-HA</span><br><span class="line">  mode tcp</span><br><span class="line">  option  tcplog</span><br><span class="line">  bind <span class="number">10.0</span><span class="number">.0</span><span class="number">.14</span>:<span class="number">3306</span></span><br><span class="line">  balance leastconn</span><br><span class="line">  option mysql-check user root</span><br><span class="line">  server <span class="number">10.0</span><span class="number">.0</span><span class="number">.12</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.12</span>:<span class="number">3306</span> inter <span class="number">1</span>s rise <span class="number">2</span> fall <span class="number">2</span></span><br><span class="line">  server <span class="number">10.0</span><span class="number">.0</span><span class="number">.13</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.13</span>:<span class="number">3306</span> inter <span class="number">1</span>s rise <span class="number">2</span> fall <span class="number">2</span></span><br><span class="line">!</span><br></pre></td></tr></table></figure><h4 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> &lt;&lt;'!' &gt;/etc/rsyslog.<span class="keyword">d</span>/haproxy.<span class="keyword">conf</span></span><br><span class="line"><span class="variable">$ModLoad</span> imudp</span><br><span class="line"><span class="variable">$UDPServerRun</span> 514</span><br><span class="line"><span class="variable">$template</span> Haproxy,<span class="string">"%rawmsg% \n"</span></span><br><span class="line">local0.=info -/<span class="keyword">var</span>/<span class="keyword">log</span>/haproxy.<span class="keyword">log</span>;Haproxy</span><br><span class="line">local0.notice -/<span class="keyword">var</span>/<span class="keyword">log</span>/haproxy-status.<span class="keyword">log</span>;Haproxy</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line"># 重启日志服务</span><br><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure><h4 id="设置启动方式"><a href="#设置启动方式" class="headerlink" title="设置启动方式"></a>设置启动方式</h4><pre><code># 允许没VIP时启动(如果没有配置此项且应用会导致 haproxy 服务无法启动)echo &quot;net.ipv4.ip_nonlocal_bind = 1&quot; &gt;&gt;/etc/sysctl.confsysctl -p</code></pre><hr><blockquote><p>服务管理</p></blockquote><pre><code>systemctl start haproxy     # 启动服务systemctl enable haproxy    # 随系统启动systemctl status haproxy    # 运行状态</code></pre><hr><h3 id="配置手动切换主从"><a href="#配置手动切换主从" class="headerlink" title="配置手动切换主从"></a>配置手动切换主从</h3><blockquote><p>创建 VIP 切换脚本(使用 perl 脚本 1)</p></blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span>   &gt;<span class="regexp">/etc/mha</span><span class="regexp">/master_ip_online_change</span></span><br><span class="line"><span class="regexp">#!/usr</span><span class="regexp">/bin/env</span> perl</span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings <span class="string">FATAL =&gt;</span><span class="string">'all'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> Getopt::Long;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> $vip = <span class="string">'10.0.0.10/24'</span>;  <span class="comment"># Virtual IP</span></span><br><span class="line"><span class="keyword">my</span> $nic = <span class="string">'ens32'</span>;</span><br><span class="line"><span class="keyword">my</span> $key = <span class="string">"6"</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_start_vip = <span class="string">"/sbin/ifconfig $nic:$key $vip"</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_stop_vip = <span class="string">"/sbin/ifconfig $nic:$key down"</span>;</span><br><span class="line"><span class="keyword">my</span> $exit_code = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> (</span><br><span class="line">    $command,              $orig_master_is_new_slave, $orig_master_host,</span><br><span class="line">    $orig_master_ip,       $orig_master_port,         $orig_master_user,</span><br><span class="line">    $orig_master_password, $orig_master_ssh_user,     $new_master_host,</span><br><span class="line">    $new_master_ip,        $new_master_port,          $new_master_user,</span><br><span class="line">    $new_master_password,  $new_master_ssh_user,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">GetOptions(</span><br><span class="line">    <span class="string">'command=s'</span>                =&gt; \$command,</span><br><span class="line">    <span class="string">'orig_master_is_new_slave'</span> =&gt; \$orig_master_is_new_slave,</span><br><span class="line">    <span class="string">'orig_master_host=s'</span>       =&gt; \$orig_master_host,</span><br><span class="line">    <span class="string">'orig_master_ip=s'</span>         =&gt; \$orig_master_ip,</span><br><span class="line">    <span class="string">'orig_master_port=i'</span>       =&gt; \$orig_master_port,</span><br><span class="line">    <span class="string">'orig_master_user=s'</span>       =&gt; \$orig_master_user,</span><br><span class="line">    <span class="string">'orig_master_password=s'</span>   =&gt; \$orig_master_password,</span><br><span class="line">    <span class="string">'orig_master_ssh_user=s'</span>   =&gt; \$orig_master_ssh_user,</span><br><span class="line">    <span class="string">'new_master_host=s'</span>        =&gt; \$new_master_host,</span><br><span class="line">    <span class="string">'new_master_ip=s'</span>          =&gt; \$new_master_ip,</span><br><span class="line">    <span class="string">'new_master_port=i'</span>        =&gt; \$new_master_port,</span><br><span class="line">    <span class="string">'new_master_user=s'</span>        =&gt; \$new_master_user,</span><br><span class="line">    <span class="string">'new_master_password=s'</span>    =&gt; \$new_master_password,</span><br><span class="line">    <span class="string">'new_master_ssh_user=s'</span>    =&gt; \$new_master_ssh_user,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span> &amp;main();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">#print "\n\nIN SCRIPT TEST====$ssh_stop_vip==$ssh_start_vip===\n\n";</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( $command eq <span class="string">"stop"</span> || $command eq <span class="string">"stopssh"</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># $orig_master_host, $orig_master_ip, $orig_master_port are passed.</span></span><br><span class="line">        <span class="comment"># If you manage master ip address at global catalog database,</span></span><br><span class="line">        <span class="comment"># invalidate orig_master_ip here.</span></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"\n\n\n***************************************************************\n"</span>;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Disabling the VIP - $vip on old master: $orig_master_host\n"</span>;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"***************************************************************\n\n\n\n"</span>;</span><br><span class="line">            &amp;stop_vip();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> <span class="string">"Got Error: $@\n"</span>;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">"start"</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># all arguments are passed.</span></span><br><span class="line">        <span class="comment"># If you manage master ip address at global catalog database,</span></span><br><span class="line">        <span class="comment"># activate new_master_ip here.</span></span><br><span class="line">        <span class="comment"># You can also grant write access (create user, set read_only=0, etc) here.</span></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"\n\n\n***************************************************************\n"</span>;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Enabling the VIP - $vip on new master: $new_master_host \n"</span>;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"***************************************************************\n\n\n\n"</span>;</span><br><span class="line">            &amp;start_vip();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> $@;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">"status"</span> ) &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Checking the Status of the script.. OK \n"</span>;</span><br><span class="line">        <span class="string">`ssh $orig_master_ssh_user\@$orig_master_host \" $ssh_start_vip \"`</span>;</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        &amp;usage();</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A simple system call that enable the VIP on the new master</span></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">start_vip</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $new_master_ssh_user\@$new_master_host \" $ssh_start_vip \"`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># A simple system call that disable the VIP on the old_master</span></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">stop_vip</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $orig_master_ssh_user\@$orig_master_host \" $ssh_stop_vip \"`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">usage</span> </span>&#123;</span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">        <span class="string">"Usage: master_ip_failover –command=start|stop|stopssh|status –orig_master_host=host –orig_master_ip=ip –orig_master_port=po</span></span><br><span class="line"><span class="string">        rt –new_master_host=host –new_master_ip=ip –new_master_port=port\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可执行权限</span></span><br><span class="line"><span class="keyword">chmod</span> +<span class="keyword">x</span> /etc/mha/master_ip_online_change</span><br></pre></td></tr></table></figure><hr><blockquote><p>创建 VIP 切换脚本(使用 shell 脚本 2)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF   &gt;/etc/mha/master_ip_online_change.sh</span><br><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"><span class="built_in">source</span> /root/.bash_profile</span><br><span class="line"> </span><br><span class="line">vip=<span class="string">'10.0.0.10/24'</span>  <span class="comment"># Virtual IP</span></span><br><span class="line">nic=<span class="string">'ens32'</span></span><br><span class="line">key=6</span><br><span class="line"> </span><br><span class="line"><span class="built_in">command</span>=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$1</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">orig_master_host=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$2</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">new_master_host=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$7</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">orig_master_ssh_user=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;12&#125;</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">new_master_ssh_user=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;13&#125;</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"> </span><br><span class="line">stop_vip=<span class="string">"ssh root@<span class="variable">$orig_master_host</span> /sbin/ifconfig  <span class="variable">$nic</span>:<span class="variable">$key</span>  down"</span></span><br><span class="line">start_vip=<span class="string">"ssh root@<span class="variable">$new_master_host</span> /sbin/ifconfig  <span class="variable">$nic</span>:<span class="variable">$key</span>  <span class="variable">$vip</span>"</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$command</span> = <span class="string">'stop'</span> ]</span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"\n\n\n***************************************************************\n"</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"Disabling the VIP - <span class="variable">$vip</span> on old master: <span class="variable">$orig_master_host</span>\n"</span></span><br><span class="line">   <span class="variable">$stop_vip</span></span><br><span class="line">   <span class="keyword">if</span> [ $? -eq 0 ]</span><br><span class="line">      <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Disabled the VIP successfully"</span></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Disabled the VIP failed"</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"***************************************************************\n\n\n\n"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$command</span> = <span class="string">'start'</span> -o <span class="variable">$command</span> = <span class="string">'status'</span> ]</span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"\n\n\n***************************************************************\n"</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"Enabling the VIP - <span class="variable">$vip</span> on new master: <span class="variable">$new_master_host</span> \n"</span></span><br><span class="line">   <span class="variable">$start_vip</span></span><br><span class="line">   <span class="keyword">if</span> [ $? -eq 0 ]</span><br><span class="line">      <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Enabled the VIP successfully"</span></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Enabled the VIP failed"</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">"***************************************************************\n\n\n\n"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可执行权限</span></span><br><span class="line">chmod +x /etc/mha/master_ip_online_change.sh</span><br></pre></td></tr></table></figure><hr><blockquote><p>开启手动切换VIP功能 <code>shell</code>, <code>perl</code> 方式二选一(注意：手动切换时不要开启masterha_manager服务)</p></blockquote><pre><code># shell 方式shell=&apos;/etc/mha/master_ip_online_change.sh&apos;sed -i &apos;23d&apos; /etc/mha/mha.cnfsed -i &quot;22a master_ip_online_change_script=$shell&quot; /etc/mha/mha.cnf# perl 方式perl=&apos;/etc/mha/master_ip_online_change&apos;sed -i &apos;23d&apos; /etc/mha/mha.cnfsed -i &quot;22a master_ip_online_change_script=$perl&quot; /etc/mha/mha.cnf</code></pre><hr><blockquote><p>切换10.0.0.11为主</p></blockquote><pre><code>masterha_master_switch --conf=/etc/mha/mha.cnf -master_state=alive --new_master_host=10.0.0.11 --new_master_port=3306 --orig_master_is_new_slave --running_updates_limit=10000</code></pre><hr><h3 id="触发切换时发送邮件"><a href="#触发切换时发送邮件" class="headerlink" title="触发切换时发送邮件"></a>触发切换时发送邮件</h3><blockquote><p>安装<code>mailx</code></p></blockquote><pre><code>yum install -y mailx</code></pre><hr><blockquote><p>配置<code>mail.rc</code></p></blockquote><pre><code>cat &lt;&lt;EOF    &gt;/etc/mail.rc# mail $(date &apos;+%F %T&apos;)set from=gaojing_2018@163.com smtp=smtp.163.comset smtp-auth-user=gaojing_2018@163.comset smtp-auth-password=passwordset smtp-auth=loginEOFsystemctl restart postfix</code></pre><hr><blockquote><p>测试配置</p></blockquote><pre><code>echo &quot;服务器已恢复正常，恢复时间：$(date &apos;+%F %T&apos;)&quot;| mailx -s &quot;MHA服务监控&quot; 544025211@qq.com</code></pre><hr><blockquote><p>触发发送邮件脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">'EOF'</span>   &gt;/etc/mha/send_report</span><br><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"><span class="built_in">source</span> /root/.bash_profile</span><br><span class="line"></span><br><span class="line">orig_master_host=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$1</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">new_master_host=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$2</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">new_slave_hosts=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$3</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">subject=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$4</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">body=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$5</span>"</span> | awk -F = <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">#判断日志结尾是否有successfully，有则表示切换成功，成功与否都发邮件。</span></span><br><span class="line">tac /etc/mha/manager.log | sed -n 2p | grep <span class="string">'successfully'</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"MHA <span class="variable">$subject</span> 主从切换成功\n master:<span class="variable">$orig_master_host</span> --&gt; <span class="variable">$new_master_host</span> \n <span class="variable">$body</span> \n 当前从库:<span class="variable">$new_slave_hosts</span>"</span> | mailx -s <span class="string">"MySQL实例宕掉,MHA <span class="variable">$subject</span> 切换成功"</span>  544025211@qq.com</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"MHA <span class="variable">$subject</span> 主从切换失败\n master:<span class="variable">$orig_master_host</span> --&gt; <span class="variable">$new_master_host</span> \n <span class="variable">$body</span>"</span> | mailx -s <span class="string">"MySQL实例宕掉,MHA <span class="variable">$subject</span> 切换失败"</span> 544025211@qq.com</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可执行权限</span></span><br><span class="line">chmod +x /etc/mha/send_report</span><br></pre></td></tr></table></figure><hr><blockquote><p>开启切换触发邮件</p></blockquote><pre><code>sed -i &apos;s/#report_script/report_script/&apos; /etc/mha/mha.cnf</code></pre><hr><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><blockquote><p>管理节点(确认集群运行正常 主从从)</p></blockquote><pre><code>rm -f mha.failover.completemasterha_manager --conf=/etc/mha/mha.cnf &amp;ps aux | grep mhamysql  -uroot -pHc.123456 -e &apos;show slave status\G;&apos;    # 查看主节点是谁</code></pre><hr><blockquote><p>关闭主节点的mysqld服务</p></blockquote><pre><code>systemctl stop mysqld</code></pre><hr><blockquote><p>状态</p></blockquote><pre><code>此时 master 已经切换到其他节点 VIP 已经转移 指定邮箱也收到邮件包含集群信息</code></pre><hr><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><pre><code>数据库写入使用VIP数据库读使用 haproxy 代理的IP 或者使用VIP(haproxy可以不安装)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;MHA介绍&quot;&gt;&lt;a href=&quot;#MHA介绍&quot; class=&quot;headerlink&quot; title=&quot;MHA介绍&quot;&gt;&lt;/a&gt;MHA介绍&lt;/h3&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
      <category term="mysql" scheme="https://home.onlycloud.xin/categories/mysql/"/>
    
    
      <category term="mysql高可用" scheme="https://home.onlycloud.xin/tags/mysql%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
      <category term="mysql-MHA" scheme="https://home.onlycloud.xin/tags/mysql-MHA/"/>
    
  </entry>
  
  <entry>
    <title>mysql双主配置</title>
    <link href="https://home.onlycloud.xin/posts/999a.html"/>
    <id>https://home.onlycloud.xin/posts/999a.html</id>
    <published>2018-09-14T11:39:27.000Z</published>
    <updated>2018-09-27T12:11:47.726Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><pre><code>系统：centos7软件版本：mysql-5.7.23-linux-glibc2.12-x86_64安装目录：/usr/local/mysql数据库目录：/data/mysql数据库root密码: hc123456A数据库：10.0.0.11B数据库：10.0.0.12VIP：10.0.0.100 1.两个数据库版本最好一致2.两个数据库内数据保持一致，若不一致，可手动调整，比如A比B多一个库，那将这个库导入到B库，达到一致。数据库同步账号: sync数据库sync密码: pcpaeyphmp说明：数据库通过配置相互做对端的slave实现双主,使用heartbeat提供VIP,haproxy(负载均衡)将两台主机的端口转发给VIP如VIP所在主机故障,VIP漂移到另一台主机继续提供服务</code></pre><h3 id="数据库安装"><a href="#数据库安装" class="headerlink" title="数据库安装"></a>数据库安装</h3><blockquote><p>两端都执行<a href="http://192.168.2.8/docs/sql/sql-1aksisn4dlmdf" target="_blank" rel="noopener">查看安装文档</a></p></blockquote><pre><code>curl http://home.onlycloud.xin/code/mysql-bin-install.sh -o mysql-install.shsh mysql-install.shsource /etc/profile</code></pre><h3 id="hosts解析"><a href="#hosts解析" class="headerlink" title="hosts解析"></a>hosts解析</h3><pre><code>cat &lt;&lt;EOF  &gt;&gt;/etc/hosts10.0.0.11   nfs-0110.0.0.12   nfs-02EOF</code></pre><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><blockquote><p>A数据库</p></blockquote><pre><code>hostnamectl set-hostname nfs-01</code></pre><hr><blockquote><p>B数据库</p></blockquote><pre><code>hostnamectl set-hostname nfs-02</code></pre><hr><h3 id="A数据库操作"><a href="#A数据库操作" class="headerlink" title="A数据库操作"></a>A数据库操作</h3><blockquote><p>1.开启binlog(数据库二进制日志),设置server-id,重启mysql服务</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> /etc/my.<span class="keyword">cnf</span>&#123;,.`date +%F`&#125;</span><br><span class="line">systemctl <span class="keyword">stop</span> mysqld</span><br><span class="line">sed -i <span class="string">'s/server-id.*/server-id = 1/g'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'24a log-bin = mysql-bin'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'25a binlog_format = mixed'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'26a log-bin-index = master-bin.index'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'27a relay-log = relay-bin'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'28a relay-log-index = slave-relay-bin.index'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'29a auto-increment-offset = 1'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">"30a auto-increment-increment = 2\n"</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><blockquote><p>2.创建同步数据的用户,授权允许10.0.0.0/24网络使用sync用户登录</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mysql -uroot -phc123456 </span><br><span class="line">create user sync;</span><br><span class="line">grant replication slave on <span class="strong">*.*</span> to <span class="emphasis">'sync'</span>@<span class="emphasis">'10.0.0.%'</span> identified by <span class="emphasis">'pcpaeyphmp'</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">show master status;</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"># MySQL [(none)]&gt; show master status;</span><br><span class="line"># 记下 binlog文件的position（偏移）和File（日志文件）的值)</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| File             | Position | Binlog<span class="emphasis">_Do_</span>DB | Binlog<span class="emphasis">_Ignore_</span>DB | Executed<span class="emphasis">_Gtid_</span>Set |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| mysql-bin.000003 |      794 |              |                  |                   |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br></pre></td></tr></table></figure><h3 id="B数据库操作"><a href="#B数据库操作" class="headerlink" title="B数据库操作"></a>B数据库操作</h3><blockquote><p>1.配置从库只允许来自服务器线程或具有SUPER权限的数据库用户进行更新(root,sync),开启binlog(数据库二进制日志),设置server-id,重启mysql服务</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> /etc/my.<span class="keyword">cnf</span>&#123;,.`date +%F`&#125;</span><br><span class="line">systemctl <span class="keyword">stop</span> mysqld</span><br><span class="line">sed -i <span class="string">'s/server-id.*/server-id = 2/g'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'24a log-bin = mysql-bin'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'25a binlog_format = mixed'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'26a log-bin-index = master-bin.index'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'27a relay-log = relay-bin'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'28a relay-log-index = slave-relay-bin.index'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">'29a auto-increment-offset = 2'</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">sed -i <span class="string">"30a auto-increment-increment = 2\n"</span> /etc/my.<span class="keyword">cnf</span></span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><blockquote><p>2.连接数据库A,需要A数据库主机名，登陆凭据，二进制文件的名称和位置</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mysql -uroot -phc123456</span><br><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'10.0.0.11'</span>,  # A数据库 IP或主机名(需解析通)</span><br><span class="line"><span class="attribute">master_port</span>=3306,                          # A数据库 端口号</span><br><span class="line"><span class="attribute">master_user</span>=<span class="string">'sync'</span>,                        # 同步账号</span><br><span class="line"><span class="attribute">master_password</span>=<span class="string">'pcpaeyphmp'</span>,              # 同步账号的密码</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000003'</span>,        # A数据库执行 show master status; 获取的 File 值</span><br><span class="line"><span class="attribute">master_log_pos</span>=794;                        # A数据库执行 show master status; 获取的 Position 值</span><br><span class="line">start slave;                               # 启动slave</span><br><span class="line">show slave status\G;                       # 查看同步状态</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show slave status\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: 10.0.0.11</span><br><span class="line">                  Master_User: sync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 794</span><br><span class="line">               Relay_Log_File: nfs-02-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 320</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">            Slave_SQL_Running: <span class="literal">Yes</span></span><br><span class="line">           <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保证以下两项状态为 Yes 则同步成功</span></span><br><span class="line">Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">Slave_SQL_Running: <span class="literal">Yes</span></span><br></pre></td></tr></table></figure><blockquote><p>3.创建同步数据的用户,授权允许10.0.0.0/24网络使用sync用户登录</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -phc123456</span><br><span class="line">create user sync;</span><br><span class="line">grant replication slave on <span class="strong">*.*</span> to <span class="emphasis">'sync'</span>@<span class="emphasis">'10.0.0.%'</span> identified by <span class="emphasis">'pcpaeyphmp'</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">show master status;</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"># MySQL [(none)]&gt; show master status;</span><br><span class="line"># 记下 binlog文件的position（偏移）和File（日志文件）的值)</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| File             | Position | Binlog<span class="emphasis">_Do_</span>DB | Binlog<span class="emphasis">_Ignore_</span>DB | Executed<span class="emphasis">_Gtid_</span>Set |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| mysql-bin.000003 |      794 |              |                  |                   |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br></pre></td></tr></table></figure><h3 id="A数据库操作-1"><a href="#A数据库操作-1" class="headerlink" title="A数据库操作"></a>A数据库操作</h3><blockquote><p>连接数据库B,需要B服务器主机名，登陆凭据，二进制文件的名称和位置</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mysql -uroot -phc123456</span><br><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'10.0.0.12'</span>,  # B数据库 IP或主机名(需解析通)</span><br><span class="line"><span class="attribute">master_port</span>=3306,                          # B数据库 端口号</span><br><span class="line"><span class="attribute">master_user</span>=<span class="string">'sync'</span>,                        # B同步账号</span><br><span class="line"><span class="attribute">master_password</span>=<span class="string">'pcpaeyphmp'</span>,              # 同步账号的密码</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000003'</span>,        # B数据库执行 show master status; 获取的 File 值</span><br><span class="line"><span class="attribute">master_log_pos</span>=794;                        # B数据库执行 show master status; 获取的 Position 值</span><br><span class="line">start slave;                               # 启动slave</span><br><span class="line">show slave status\G;                       # 查看同步状态</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show slave status\G;</span></span><br><span class="line">************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: 10.0.0.12</span><br><span class="line">                  Master_User: sync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 794</span><br><span class="line">               Relay_Log_File: localhost-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 320</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">            Slave_SQL_Running: <span class="literal">Yes</span></span><br><span class="line">           <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保证以下两项状态为 Yes 则同步成功</span></span><br><span class="line">Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">Slave_SQL_Running: <span class="literal">Yes</span></span><br></pre></td></tr></table></figure><h3 id="验证mysql"><a href="#验证mysql" class="headerlink" title="验证mysql"></a>验证mysql</h3><blockquote><p>A创建数据库</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create database test<span class="emphasis">_01;</span></span><br><span class="line"><span class="emphasis">show databases;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"># MySQL [(none)]&gt; show databases;</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br><span class="line"><span class="emphasis">| Database           |</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br><span class="line"><span class="emphasis">| information_</span>schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| sys                |</span></span><br><span class="line"><span class="emphasis">| test_</span>01            |</span><br><span class="line"><span class="code">+--------------------+</span></span><br></pre></td></tr></table></figure><blockquote><p>B查看数据库</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"># MySQL [(none)]&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| sys                |</span><br><span class="line">| test<span class="emphasis">_01            |</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br></pre></td></tr></table></figure><blockquote><p>B创建数据库</p></blockquote><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">create database test_02;</span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">|<span class="string"> Database           </span>|</span><br><span class="line">+--------------------+</span><br><span class="line">|<span class="string"> information_schema </span>|</span><br><span class="line">|<span class="string"> mysql              </span>|</span><br><span class="line">|<span class="string"> performance_schema </span>|</span><br><span class="line">|<span class="string"> sys                </span>|</span><br><span class="line">|<span class="string"> test_01            </span>|</span><br><span class="line">|<span class="string"> test_02            </span>|</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><blockquote><p>A查看数据库</p></blockquote><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">|<span class="string"> Database           </span>|</span><br><span class="line">+--------------------+</span><br><span class="line">|<span class="string"> information_schema </span>|</span><br><span class="line">|<span class="string"> mysql              </span>|</span><br><span class="line">|<span class="string"> performance_schema </span>|</span><br><span class="line">|<span class="string"> sys                </span>|</span><br><span class="line">|<span class="string"> test_01            </span>|</span><br><span class="line">|<span class="string"> test_02            </span>|</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><h3 id="mysql排错"><a href="#mysql排错" class="headerlink" title="mysql排错"></a>mysql排错</h3><pre><code>Slave_IO_Running:     # 状态不为Yes1.数据库A与数据库B之间网络是否通畅2.同步账号的用户权限,及是否允许数据库B登录3.查看两端server-id(不能相同) 使用mysql命令查看 show variables like &apos;server_id&apos;; 此配置项在my.cnf</code></pre><h3 id="安装haproxy"><a href="#安装haproxy" class="headerlink" title="安装haproxy"></a>安装haproxy</h3><blockquote><p>两端都安装配置相同</p></blockquote><pre><code>yum -y install haproxy</code></pre><h3 id="配置haproxy"><a href="#配置haproxy" class="headerlink" title="配置haproxy"></a>配置haproxy</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/haproxy/haproxy.cfg&#123;,.bak&#125;</span><br><span class="line">cat &lt;&lt;! &gt;/etc/haproxy/haproxy.cfg</span><br><span class="line">############ 全局配置 ############</span><br><span class="line">global</span><br><span class="line">log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local0</span><br><span class="line">log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local1 notice</span><br><span class="line">daemon</span><br><span class="line">nbproc <span class="number">1</span>       # 进程数量</span><br><span class="line">maxconn <span class="number">4096</span>   # 最大连接数</span><br><span class="line">user haproxy   # 运行用户</span><br><span class="line">group haproxy  # 运行组</span><br><span class="line">chroot /var/lib/haproxy</span><br><span class="line">pidfile /var/run/haproxy.pid</span><br><span class="line"></span><br><span class="line">############ 默认配置 ############</span><br><span class="line">defaults</span><br><span class="line">log global</span><br><span class="line">mode http            # 默认模式&#123; tcp|http|health &#125;</span><br><span class="line">option httplog       # 日志类别,采用httplog</span><br><span class="line">option dontlognull   # 不记录健康检查日志信息</span><br><span class="line">retries <span class="number">2</span>            # <span class="number">2</span>次连接失败不可用</span><br><span class="line">option forwardfor    # 后端服务获得真实ip</span><br><span class="line">option httpclose     # 请求完毕后主动关闭http通道</span><br><span class="line">option abortonclose  # 服务器负载很高，自动结束比较久的链接</span><br><span class="line">maxconn <span class="number">4096</span>         # 最大连接数</span><br><span class="line">timeout connect <span class="number">5</span>m   # 连接超时</span><br><span class="line">timeout client <span class="number">1</span>m    # 客户端超时</span><br><span class="line">timeout server <span class="number">31</span>m   # 服务器超时</span><br><span class="line">timeout check <span class="number">10</span>s    # 心跳检测超时</span><br><span class="line">balance roundrobin   # 负载均衡方式，轮询</span><br><span class="line"></span><br><span class="line">########## 统计页面配置 ##########</span><br><span class="line">listen stats</span><br><span class="line">  bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1080</span></span><br><span class="line">  mode http</span><br><span class="line">  option httplog</span><br><span class="line">  log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local0 err</span><br><span class="line">  maxconn <span class="number">10</span>               # 最大连接数</span><br><span class="line">  stats refresh <span class="number">30</span>s</span><br><span class="line">  stats uri /admin         #状态页面 http<span class="comment">//ip:1080/admin 访问</span></span><br><span class="line">  stats realm Haproxy\ Statistics</span><br><span class="line">  stats auth admin:admin   # 用户和密码:admin</span><br><span class="line">  stats hide-version       # 隐藏版本信息</span><br><span class="line">  stats admin <span class="keyword">if</span> TRUE      # 设置手工启动/禁用</span><br><span class="line"></span><br><span class="line">listen HAPROXY-STATUS</span><br><span class="line">  bind <span class="number">10.0</span><span class="number">.0</span><span class="number">.100</span>:<span class="number">88</span></span><br><span class="line">  mode tcp</span><br><span class="line">  option  tcplog</span><br><span class="line">  balance leastconn        # 根据服务器当前的请求数</span><br><span class="line">  server nfs<span class="number">-01</span> nfs<span class="number">-01</span>:<span class="number">1080</span> check port <span class="number">1080</span> inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line">  server nfs<span class="number">-02</span> nfs<span class="number">-02</span>:<span class="number">1080</span> check port <span class="number">1080</span> inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line"></span><br><span class="line">listen MYSQL-HA</span><br><span class="line">  mode tcp</span><br><span class="line">  option  tcplog</span><br><span class="line">  bind <span class="number">10.0</span><span class="number">.0</span><span class="number">.100</span>:<span class="number">3308</span></span><br><span class="line">  balance leastconn</span><br><span class="line">  option mysql-check user haproxy</span><br><span class="line">  server nfs<span class="number">-01</span> nfs<span class="number">-01</span>:<span class="number">3306</span> weight <span class="number">1</span> check inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line">  server nfs<span class="number">-02</span> nfs<span class="number">-02</span>:<span class="number">3306</span> weight <span class="number">1</span> check inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line"></span><br><span class="line">listen HTTP-HA</span><br><span class="line">  bind <span class="number">10.0</span><span class="number">.0</span><span class="number">.100</span>:<span class="number">80</span></span><br><span class="line">  balance  roundrobin</span><br><span class="line">  option  tcpka</span><br><span class="line">  option  httpchk</span><br><span class="line">  option  tcplog</span><br><span class="line">  server nfs<span class="number">-01</span> nfs<span class="number">-01</span>:<span class="number">8080</span> check port <span class="number">8080</span> inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line">  server nfs<span class="number">-02</span> nfs<span class="number">-02</span>:<span class="number">8080</span> check port <span class="number">8080</span> inter <span class="number">2000</span> rise <span class="number">2</span> fall <span class="number">5</span></span><br><span class="line">!</span><br></pre></td></tr></table></figure><h4 id="创建监控用户"><a href="#创建监控用户" class="headerlink" title="创建监控用户"></a>创建监控用户</h4><blockquote><p>监控<code>mysql</code>运行状态此用户无需配置密码及权限</p></blockquote><pre><code>mysql -u root -phc123456 -e &quot;create user &apos;haproxy&apos;@&apos;%&apos;;flush privileges;&quot;</code></pre><hr><h4 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> &lt;&lt;'!'  &gt;/etc/rsyslog.<span class="keyword">d</span>/haproxy.<span class="keyword">conf</span></span><br><span class="line"><span class="variable">$ModLoad</span> imudp</span><br><span class="line"><span class="variable">$UDPServerRun</span> 514</span><br><span class="line"><span class="variable">$template</span> Haproxy,<span class="string">"%rawmsg% \n"</span></span><br><span class="line">local0.=info -/<span class="keyword">var</span>/<span class="keyword">log</span>/haproxy.<span class="keyword">log</span>;Haproxy</span><br><span class="line">local0.notice -/<span class="keyword">var</span>/<span class="keyword">log</span>/haproxy-status.<span class="keyword">log</span>;Haproxy</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line"># 重启日志服务</span><br><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure><h4 id="设置启动方式"><a href="#设置启动方式" class="headerlink" title="设置启动方式"></a>设置启动方式</h4><pre><code># 允许没VIP时启动(如果没有配置此项且应用会导致 haproxy 服务无法启动)echo &quot;net.ipv4.ip_nonlocal_bind = 1&quot; &gt;&gt;/etc/sysctl.confsysctl -p</code></pre><blockquote><p>服务管理</p></blockquote><pre><code>systemctl start haproxy     # 启动服务systemctl enable haproxy    # 随系统启动systemctl status haproxy    # 运行状态</code></pre><hr><h3 id="安装heartbeat"><a href="#安装heartbeat" class="headerlink" title="安装heartbeat"></a>安装heartbeat</h3><blockquote><p>配置依赖软件安装源</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF   &gt;/etc/yum.repos.d/gf-epel-7.repo</span><br><span class="line">[epel-testing]</span><br><span class="line"><span class="attribute">name</span>=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - <span class="variable">$basearch</span> - Testing</span><br><span class="line"><span class="attribute">baseurl</span>=http://mirror.ghettoforge.org/distributions/gf/el/7/testing/x86_64</span><br><span class="line"><span class="attribute">enabled</span>=1</span><br><span class="line"><span class="attribute">gpgcheck</span>=0</span><br><span class="line">EOF</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><blockquote><p>下载软件包并安装 heartbeat</p></blockquote><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">heartbeat=<span class="string">'heartbeat-3.0.6-1.el7.centos.x86_64.rpm'</span></span><br><span class="line">heartbeat_libs=<span class="string">'heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm'</span> </span><br><span class="line">curl -o <span class="variable">$heartbeat</span> <span class="symbol">http:</span>/<span class="regexp">/home.onlycloud.xin/soft</span><span class="regexp">/heartbeat/</span><span class="variable">$heartbeat</span> --progress</span><br><span class="line">curl -o <span class="variable">$heartbeat_libs</span> <span class="symbol">http:</span>/<span class="regexp">/home.onlycloud.xin/soft</span><span class="regexp">/heartbeat/</span><span class="variable">$heartbeat_libs</span> --progress</span><br><span class="line">yum localinstall -y heartbeat-*</span><br></pre></td></tr></table></figure><h3 id="配置heartbeat"><a href="#配置heartbeat" class="headerlink" title="配置heartbeat"></a>配置heartbeat</h3><blockquote><p>创建<code>ha.cf</code>配置文件</p></blockquote><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/ha.cf</span><br><span class="line"><span class="meta"># 调试日志</span></span><br><span class="line">debugfile /<span class="keyword">var</span>/log/ha-debug</span><br><span class="line"></span><br><span class="line"><span class="meta"># heartbeat 运行日志</span></span><br><span class="line">logfile /<span class="keyword">var</span>/log/ha-log</span><br><span class="line"></span><br><span class="line"><span class="meta"># 在 syslog 服务中配置通过 local1 设备接收日志</span></span><br><span class="line">logfacility local0</span><br><span class="line"></span><br><span class="line"><span class="meta"># 心跳间隔时间 default:2</span></span><br><span class="line">keepalive <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 备用节点在 default:30 秒内没有收到主节点心跳信号则立即接管主节点服务资源</span></span><br><span class="line">deadtime <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 心跳延迟时间为 default:10 秒,当 10 秒内备份节点未收到主节点心跳信号时,将写入警告日志,此时不会切换服务</span></span><br><span class="line">warntime <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># heartbeat 服务首次启动,需要等待 default:60 秒后才启动服务器的资源,该值至少为 deadtime 两倍(单机启动时vip绑定比较慢)</span></span><br><span class="line">initdead <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 指定心跳信号网卡(直连网卡)</span></span><br><span class="line"><span class="meta">#bcast ens33</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 配置多播通信路径(直连网卡)</span></span><br><span class="line">mcast ens33 <span class="number">239.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">694</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 主节点恢复后,是否将服务自动切回</span></span><br><span class="line">auto_failback on</span><br><span class="line"></span><br><span class="line"><span class="meta"># 节点主机名(使用IP地址也可以)</span></span><br><span class="line">node nfs<span class="number">-01</span></span><br><span class="line">node nfs<span class="number">-02</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 是否开启 CRM 集群管理</span></span><br><span class="line">crm no</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p>两端认证密码配置 authkeys</p></blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="literal">EOF</span>  &gt;&gt;/etc/ha.d/authkeys</span><br><span class="line">auth <span class="number">1</span></span><br><span class="line"><span class="number">1</span> sha1 cxix9lkzq2aevnxv43yn68yoh2y7zp2cfwufgs7w</span><br><span class="line"><span class="literal">EOF</span></span><br><span class="line">chmod <span class="number">600</span> /etc/ha.d/authkeys</span><br></pre></td></tr></table></figure><blockquote><p>配置heartbeat资源</p></blockquote><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="params">&lt;&lt;EOF   &gt;</span><span class="meta-keyword">/etc/</span>ha.d/haresources</span><br><span class="line">nfs<span class="number">-01</span> <span class="symbol">IPaddr::</span><span class="number">10.0</span><span class="number">.0</span><span class="number">.100</span>/<span class="number">24</span>/ens33</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p>启动服务,验证(两个节点各自执行 ip add 能看到两个 10.0.0网段ip)</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start heartbeat</span><br><span class="line">netstat -ntaulp</span><br><span class="line">ip <span class="builtin-name">add</span> | grep 10.0.0</span><br></pre></td></tr></table></figure><h3 id="验证heartbeat"><a href="#验证heartbeat" class="headerlink" title="验证heartbeat"></a>验证heartbeat</h3><blockquote><p>浏览器打开以下链接查看资源状态(账号：admin/admin)</p></blockquote><pre><code>http://10.0.0.11:1080/adminhttp://10.0.0.12:1080/adminhttp://10.0.0.100:1080/admin</code></pre><hr><blockquote><p>关闭存在VIP主机的heartbeat服务,然后在另一端验证(在正常的一端已经接管了所有虚拟IP ip add 能看到三个 10.0.0网段ip)登录数据库验证</p></blockquote><pre><code>systemctl stop heartbeatip add | grep 10.0.0mysql -h 10.0.0.100 -P 3308 -uroot -phc123456</code></pre><hr><blockquote><p>启动关闭的服务后验证 虚拟IP已经恢复</p></blockquote><pre><code>systemctl start heartbeatip add | grep 10.0.0mysql -h 10.0.0.100 -P 3308 -uroot -phc123456</code></pre><hr><blockquote><p>查看同步状态</p></blockquote><pre><code># 可以看到Master_Host IP一直在切换负载均衡配置成功mysql -h 10.0.0.100 -P 3308 -uroot -phc123456 -e &apos;show slave status\G&apos;</code></pre><hr><h3 id="同步故障恢复"><a href="#同步故障恢复" class="headerlink" title="同步故障恢复"></a>同步故障恢复</h3><h4 id="修复A主B从同步"><a href="#修复A主B从同步" class="headerlink" title="修复A主B从同步"></a>修复A主B从同步</h4><h5 id="A数据库操作-2"><a href="#A数据库操作-2" class="headerlink" title="A数据库操作"></a>A数据库操作</h5><blockquote><p>A数据库锁表查看binlog文件的position（偏移）和File（日志文件）的值</p></blockquote><pre><code>mysql -uroot -phc123456flush tables with read lock;    # 锁住数据库表防止写入show master status;    # 记下 binlog文件的position（偏移）和File（日志文件）的值)# MySQL [(none)]&gt; show master status;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000007 |      154 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+</code></pre><hr><h5 id="B数据库操作-1"><a href="#B数据库操作-1" class="headerlink" title="B数据库操作"></a>B数据库操作</h5><blockquote><p>B数据库重新连接A</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -phc123456</span><br><span class="line">stop slave;</span><br><span class="line">reset slave;</span><br><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'10.0.0.11'</span>,  # A数据库 IP或主机名(需解析通)</span><br><span class="line"><span class="attribute">master_port</span>=3306,                          # A数据库端口号</span><br><span class="line"><span class="attribute">master_user</span>=<span class="string">'sync'</span>,                        # 同步账号</span><br><span class="line"><span class="attribute">master_password</span>=<span class="string">'pcpaeyphmp'</span>,              # 同步账号的密码</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000007'</span>,        # A数据库执行 show master status; 获取的 File 值</span><br><span class="line"><span class="attribute">master_log_pos</span>=154;                        # A数据库执行 show master status; 获取的 Position 值</span><br><span class="line">start slave;                               # 启动slave</span><br><span class="line">show slave status\G;                       # 查看同步状态</span><br><span class="line">show slave status\G;</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show slave status\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: 10.0.0.11</span><br><span class="line">                  Master_User: sync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000007</span><br><span class="line">          Read_Master_Log_Pos: 154</span><br><span class="line">               Relay_Log_File: relay-bin.000007</span><br><span class="line">                Relay_Log_Pos: 367</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000007</span><br><span class="line">             Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">            Slave_SQL_Running: <span class="literal">Yes</span></span><br><span class="line">            <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure><h5 id="A数据库操作-3"><a href="#A数据库操作-3" class="headerlink" title="A数据库操作"></a>A数据库操作</h5><pre><code>unlock tables;    # 解锁数据库</code></pre><hr><h4 id="修复B主A从同步"><a href="#修复B主A从同步" class="headerlink" title="修复B主A从同步"></a>修复B主A从同步</h4><h5 id="B数据库操作-2"><a href="#B数据库操作-2" class="headerlink" title="B数据库操作"></a>B数据库操作</h5><blockquote><p>B数据库锁表查看binlog文件的position（偏移）和File（日志文件）的值</p></blockquote><pre><code>mysql -uroot -phc123456flush tables with read lock;    # 锁住数据库表防止写入show master status;    # 记下 binlog文件的position（偏移）和File（日志文件）的值)# MySQL [(none)]&gt; show master status;+------------------+----------+--------------+------------------+-------------------+| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000007 |      154 |              |                  |                   |+------------------+----------+--------------+------------------+-------------------+</code></pre><hr><h5 id="A数据库操作-4"><a href="#A数据库操作-4" class="headerlink" title="A数据库操作"></a>A数据库操作</h5><blockquote><p>A数据库重新连接B</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -phc123456</span><br><span class="line">stop slave;</span><br><span class="line">reset slave;</span><br><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'10.0.0.12'</span>,  # BA数据库 IP或主机名(需解析通)</span><br><span class="line"><span class="attribute">master_port</span>=3306,                          # B数据库端口号</span><br><span class="line"><span class="attribute">master_user</span>=<span class="string">'sync'</span>,                        # 同步账号</span><br><span class="line"><span class="attribute">master_password</span>=<span class="string">'pcpaeyphmp'</span>,              # 同步账号的密码</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000007'</span>,        # B数据库执行 show master status; 获取的 File 值</span><br><span class="line"><span class="attribute">master_log_pos</span>=154;                        # B数据库执行 show master status; 获取的 Position 值</span><br><span class="line">start slave;                               # 启动slave</span><br><span class="line">show slave status\G;                       # 查看同步状态</span><br><span class="line">show slave status\G;</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show slave status\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: 10.0.0.12</span><br><span class="line">                  Master_User: sync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000007</span><br><span class="line">          Read_Master_Log_Pos: 154</span><br><span class="line">               Relay_Log_File: relay-bin.000007</span><br><span class="line">                Relay_Log_Pos: 367</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000007</span><br><span class="line">             Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">            Slave_SQL_Running: <span class="literal">Yes</span></span><br><span class="line">          <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure><h5 id="B数据库操作-3"><a href="#B数据库操作-3" class="headerlink" title="B数据库操作"></a>B数据库操作</h5><pre><code>unlock tables;    # 解锁数据库</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;系统：centos7
软件版本：mysql-5.7.23-linux-glibc2
      
    
    </summary>
    
      <category term="mysql" scheme="https://home.onlycloud.xin/categories/mysql/"/>
    
    
      <category term="mysql-master-master" scheme="https://home.onlycloud.xin/tags/mysql-master-master/"/>
    
      <category term="mysql" scheme="https://home.onlycloud.xin/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql主从配置</title>
    <link href="https://home.onlycloud.xin/posts/a3a4.html"/>
    <id>https://home.onlycloud.xin/posts/a3a4.html</id>
    <published>2018-09-13T13:57:23.000Z</published>
    <updated>2018-09-27T12:11:47.917Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><pre><code>系统：centos7软件版本：mysql-5.7.23-linux-glibc2.12-x86_64安装目录：/usr/local/mysql数据库目录：/data/mysql数据库root密码: hc123456A数据库：10.0.0.11 主B数据库：10.0.0.12 从1.两个数据库版本最好一致2.两个数据库内数据保持一致，若不一致，可手动调整，比如A比B多一个库，那将这个库导入到B库，达到一致。数据库同步账号: sync数据库sync密码: pcpaeyphmp</code></pre><h3 id="数据库安装"><a href="#数据库安装" class="headerlink" title="数据库安装"></a>数据库安装</h3><blockquote><p>两端都执行<a href="http://192.168.2.8/docs/sql/sql-1aksisn4dlmdf" target="_blank" rel="noopener">查看安装文档</a></p></blockquote><pre><code>curl http://home.onlycloud.xin/code/mysql-bin-install.sh -o mysql-install.shsh mysql-install.shsource /etc/profile</code></pre><h3 id="A数据库操作"><a href="#A数据库操作" class="headerlink" title="A数据库操作"></a>A数据库操作</h3><blockquote><p>1.开启binlog(数据库二进制日志),设置server-id,重启mysql服务</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/<span class="keyword">my</span>.cnf&#123;,.`<span class="built_in">date</span> +%F`&#125;</span><br><span class="line">sed -i '<span class="number">14</span>a <span class="built_in">log</span>-bin = mysql-bin' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">sed -i 's/server-<span class="built_in">id</span>.*/server-<span class="built_in">id</span> = <span class="number">1</span>/g' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">sed -i '<span class="number">18</span>a <span class="built_in">log</span>-bin-index = master-bin.index' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><blockquote><p>2.创建同步数据的用户,授权允许10.0.0.0/24网络使用sync用户登录</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mysql -uroot -phc123456 </span><br><span class="line">create user sync;</span><br><span class="line">grant replication slave on <span class="strong">*.*</span> to <span class="emphasis">'sync'</span>@<span class="emphasis">'10.0.0.%'</span> identified by <span class="emphasis">'pcpaeyphmp'</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">show master status;</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"># MySQL [(none)]&gt; show master status;</span><br><span class="line"># 记下 File, Position 的值</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| File             | Position | Binlog<span class="emphasis">_Do_</span>DB | Binlog<span class="emphasis">_Ignore_</span>DB | Executed<span class="emphasis">_Gtid_</span>Set |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br><span class="line">| mysql-bin.000003 |      794 |              |                  |                   |</span><br><span class="line"><span class="code">+------------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------+</span></span><br></pre></td></tr></table></figure><h3 id="B数据库操作"><a href="#B数据库操作" class="headerlink" title="B数据库操作"></a>B数据库操作</h3><blockquote><p>1.配置从库只允许来自服务器线程或具有SUPER权限的数据库用户进行更新(root,sync),开启binlog(数据库二进制日志),设置server-id,重启mysql服务</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/<span class="keyword">my</span>.cnf&#123;,.`<span class="built_in">date</span> +%F`&#125;</span><br><span class="line">sed -i '<span class="number">11</span>a <span class="built_in">read</span>-only' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">sed -i '<span class="number">15</span>a <span class="built_in">log</span>-bin = mysql-bin' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">sed -i 's/server-<span class="built_in">id</span>.*/server-<span class="built_in">id</span> = <span class="number">2</span>/g' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">sed -i '<span class="number">19</span>a <span class="built_in">log</span>-bin-index = master-bin.index' /etc/<span class="keyword">my</span>.cnf</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><blockquote><p>2.配置,连接数据库A</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">mysql -uroot -phc123456</span><br><span class="line">change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'10.0.0.11'</span>,  # A数据库 IP或主机名(需解析通)</span><br><span class="line"><span class="attribute">master_port</span>=3306,                          # A数据库A端口号</span><br><span class="line"><span class="attribute">master_user</span>=<span class="string">'sync'</span>,                        # 同步账号</span><br><span class="line"><span class="attribute">master_password</span>=<span class="string">'pcpaeyphmp'</span>,              # 同步账号的密码</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">'mysql-bin.000003'</span>,        # A数据库执行 show master status; 获取的 File 值</span><br><span class="line"><span class="attribute">master_log_pos</span>=794;                        # A数据库执行 show master status; 获取的 Position 值</span><br><span class="line">start slave;                               # 启动slave</span><br><span class="line">show slave status\G;                       # 查看同步状态</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL [(none)]&gt; show slave status\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: 10.0.0.11</span><br><span class="line">                  Master_User: sync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 794</span><br><span class="line">               Relay_Log_File: nfs-02-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 320</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">            Slave_SQL_Running: <span class="literal">Yes</span></span><br><span class="line">           <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保证以下两项状态为 Yes 则同步成功</span></span><br><span class="line">Slave_IO_Running: <span class="literal">Yes</span></span><br><span class="line">Slave_SQL_Running: <span class="literal">Yes</span></span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><blockquote><p>A创建数据库</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create database test<span class="emphasis">_01;</span></span><br><span class="line"><span class="emphasis">show databases;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"># MySQL [(none)]&gt; show databases;</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br><span class="line"><span class="emphasis">| Database           |</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br><span class="line"><span class="emphasis">| information_</span>schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| sys                |</span></span><br><span class="line"><span class="emphasis">| test_</span>01            |</span><br><span class="line"><span class="code">+--------------------+</span></span><br></pre></td></tr></table></figure><blockquote><p>B查看数据库</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"># MySQL [(none)]&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| sys                |</span><br><span class="line">| test<span class="emphasis">_01            |</span></span><br><span class="line"><span class="emphasis">+--------------------+</span></span><br></pre></td></tr></table></figure><h3 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h3><pre><code>Slave_IO_Running:     # 状态不为Yes1.数据库A与数据库B之间网络是否通畅2.同步账号的用户权限,及是否允许数据库B登录3.查看两端server-id(不能相同) 使用mysql命令查看 show variables like &apos;server_id&apos;; 此配置项在my.cnf</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;系统：centos7
软件版本：mysql-5.7.23-linux-glibc2
      
    
    </summary>
    
      <category term="mysql" scheme="https://home.onlycloud.xin/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://home.onlycloud.xin/tags/mysql/"/>
    
      <category term="mysql-mastar-slave" scheme="https://home.onlycloud.xin/tags/mysql-mastar-slave/"/>
    
  </entry>
  
  <entry>
    <title>mysql安装(二进制方式)</title>
    <link href="https://home.onlycloud.xin/posts/2694.html"/>
    <id>https://home.onlycloud.xin/posts/2694.html</id>
    <published>2018-09-13T12:35:16.000Z</published>
    <updated>2018-09-27T12:11:47.426Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><pre><code>系统：centos7软件版本：mysql-5.7安装目录：/usr/local/mysql数据库目录：/data/mysql数据库root密码：hc123456</code></pre><h3 id="创建用户-组"><a href="#创建用户-组" class="headerlink" title="创建用户,组"></a>创建用户,组</h3><blockquote><p>创建<code>mysql</code>组指定组id为<code>1200</code>，创建<code>mysql</code>用户指定用户id为<code>1200</code>默认组<code>mysql</code></p></blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd -g <span class="number">1200</span> mysql</span><br><span class="line">useradd -r -g mysql -u <span class="number">1200</span> -s /sbin/nologin mysql</span><br></pre></td></tr></table></figure><h3 id="创建数据目录"><a href="#创建数据目录" class="headerlink" title="创建数据目录"></a>创建数据目录</h3><blockquote><p><code>mysql</code>数据库数据存储目录</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">datadir=/data/mysql    <span class="comment"># 数据库数据存储目录</span></span><br><span class="line">mkdir -p $datadir</span><br><span class="line">basedir=/usr/local/mysql    <span class="comment"># 数据库安装目录</span></span><br></pre></td></tr></table></figure><h3 id="安装-jemalloc"><a href="#安装-jemalloc" class="headerlink" title="安装 jemalloc"></a>安装 jemalloc</h3><blockquote><p>配置软件安装源,<code>jemalloc</code>适合多线程下内存分配管理,减少内存碎片</p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -rf <span class="string">/etc/yum.repos.d/</span>*</span><br><span class="line">curl -o <span class="string">/etc/yum.repos.d/epel.repo</span> http:<span class="string">//mirrors.aliyun.com/repo/epel-7.repo</span></span><br><span class="line">curl -o <span class="string">/etc/yum.repos.d/CentOS.repo</span> http:<span class="string">//mirrors.aliyun.com/repo/Centos-7.repo</span></span><br><span class="line">sed -i '<span class="string">/aliyuncs.com/d</span>' <span class="string">/etc/yum.repos.d/CentOS.repo</span> <span class="string">/etc/yum.repos.d/epel.repo</span></span><br><span class="line">yum install -y jemalloc-devel</span><br></pre></td></tr></table></figure><h3 id="下载软件-解压"><a href="#下载软件-解压" class="headerlink" title="下载软件,解压"></a><a href="http://mirrors.ustc.edu.cn/mysql-ftp/Downloads/" target="_blank" rel="noopener">下载软件</a>,解压</h3><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -OL http://mirrors.ustc.edu.cn/mysql-ftp/Downloads/MySQL-<span class="number">5.7</span>/mysql-<span class="number">5.7</span><span class="meta">.23</span>-linux-glibc2<span class="meta">.12</span>-x86_64.tar.gz --progress</span><br><span class="line">tar xvf mysql-<span class="number">5.7</span><span class="meta">.23</span>-linux-glibc2<span class="meta">.12</span>-x86_64.tar.gz</span><br><span class="line">mv mysql-<span class="number">5.7</span><span class="meta">.23</span>-linux-glibc2<span class="meta">.12</span>-x86_64/ $basedir</span><br></pre></td></tr></table></figure><h3 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cp</span> <span class="variable">$basedir</span>/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">sed -i <span class="string">"s@^basedir=.*<span class="variable">@basedir</span>=<span class="variable">$basedir</span>@"</span> /etc/init.d/mysqld</span><br><span class="line">sed -i <span class="string">"s@^datadir=.*<span class="variable">@datadir</span>=<span class="variable">$datadir</span>@"</span> /etc/init.d/mysqld</span><br><span class="line">chmod +x /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld <span class="literal">on</span></span><br></pre></td></tr></table></figure><h3 id="mysql配置文件"><a href="#mysql配置文件" class="headerlink" title="mysql配置文件"></a>mysql配置文件</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF &gt;/etc/my.cnf</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">"MySQL [\\d]&gt; "</span></span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">skip-ssl</span><br><span class="line">port = 3306</span><br><span class="line">user = mysql</span><br><span class="line">server-id = 1</span><br><span class="line">bind-address = 0.0.0.0</span><br><span class="line">log_timestamps = SYSTEM</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">basedir = $basedir</span><br><span class="line">datadir = $datadir</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">pid-file = $datadir/mysql.pid</span><br><span class="line">init-connect = 'SET NAMES utf8mb4'</span><br><span class="line"></span><br><span class="line">back_log = 300</span><br><span class="line"><span class="comment">#skip-networking</span></span><br><span class="line">skip-name-resolve</span><br><span class="line"></span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 6000</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">table_open_cache = 128</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line">binlog_cache_size = 1M</span><br><span class="line">max_heap_table_size = 8M</span><br><span class="line">tmp_table_size = 16M</span><br><span class="line"></span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">join_buffer_size = 8M</span><br><span class="line">key_buffer_size = 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size = 8</span><br><span class="line"></span><br><span class="line">query_cache_type = 1</span><br><span class="line">query_cache_size = 8M</span><br><span class="line">query_cache_limit = 2M</span><br><span class="line"></span><br><span class="line">ft_min_word_len = 4</span><br><span class="line"></span><br><span class="line">log_bin = mysql-bin</span><br><span class="line">binlog_format = mixed</span><br><span class="line">expire_logs_days = 7</span><br><span class="line"></span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 1</span><br><span class="line">log_error = $datadir/mysql-error.log</span><br><span class="line">slow_query_log_file = $datadir/mysql-slow.log</span><br><span class="line"></span><br><span class="line">performance_schema = 0</span><br><span class="line">explicit_defaults_for_timestamp</span><br><span class="line"></span><br><span class="line"><span class="comment">#lower_case_table_names = 1</span></span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line"><span class="comment">#default-storage-engine = MyISAM</span></span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_open_files = 500</span><br><span class="line">innodb_buffer_pool_size = 64M</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_thread_concurrency = 0</span><br><span class="line">innodb_purge_threads = 1</span><br><span class="line">innodb_flush_log_at_trx_commit = 2</span><br><span class="line">innodb_log_buffer_size = 2M</span><br><span class="line">innodb_log_file_size = 32M</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line">innodb_max_dirty_pages_pct = 90</span><br><span class="line">innodb_lock_wait_timeout = 120</span><br><span class="line"></span><br><span class="line">bulk_insert_buffer_size = 8M</span><br><span class="line">myisam_sort_buffer_size = 8M</span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line">myisam_repair_threads = 1</span><br><span class="line"></span><br><span class="line">interactive_timeout = 28800</span><br><span class="line">wait_timeout = 28800</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">read_buffer = 4M</span><br><span class="line">write_buffer = 4M</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="数据库配置优化"><a href="#数据库配置优化" class="headerlink" title="数据库配置优化"></a>数据库配置优化</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="regexp">/etc/my</span>.cnf&#123;,.bak&#125;</span><br><span class="line">Mem=`free -m | awk <span class="string">'/Mem:/&#123;print $2&#125;'</span>`</span><br><span class="line">sed -i <span class="string">"s@max_connections.*@max_connections = $(($&#123;Mem&#125;/3))@"</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;Mem&#125;</span> -gt <span class="number">1500</span> -a <span class="variable">$&#123;Mem&#125;</span> -le <span class="number">2500</span> ]; then</span><br><span class="line">    <span class="comment">#  1500MB &lt; 实际内存 &lt;= 2500MB</span></span><br><span class="line">    sed -i <span class="string">'s@^thread_cache_size.*@thread_cache_size = 16@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^query_cache_size.*@query_cache_size = 16M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 16M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^key_buffer_size.*@key_buffer_size = 16M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 128M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^tmp_table_size.*@tmp_table_size = 32M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^table_open_cache.*@table_open_cache = 256@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">elif [ <span class="variable">$&#123;Mem&#125;</span> -gt <span class="number">2500</span> -a <span class="variable">$&#123;Mem&#125;</span> -le <span class="number">3500</span> ]; then</span><br><span class="line">    <span class="comment">#  2500MB &lt; 实际内存 &lt;= 3500MB</span></span><br><span class="line">    sed -i <span class="string">'s@^thread_cache_size.*@thread_cache_size = 32@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^query_cache_size.*@query_cache_size = 32M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 32M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^key_buffer_size.*@key_buffer_size = 64M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 512M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^tmp_table_size.*@tmp_table_size = 64M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^table_open_cache.*@table_open_cache = 512@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">elif [ <span class="variable">$&#123;Mem&#125;</span> -gt <span class="number">3500</span> ]; then</span><br><span class="line">    <span class="comment">#  3500MB &lt; 实际内存</span></span><br><span class="line">    sed -i <span class="string">'s@^thread_cache_size.*@thread_cache_size = 64@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^query_cache_size.*@query_cache_size = 64M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 64M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^key_buffer_size.*@key_buffer_size = 256M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 1024M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^tmp_table_size.*@tmp_table_size = 128M@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">    sed -i <span class="string">'s@^table_open_cache.*@table_open_cache = 1024@'</span> <span class="regexp">/etc/my</span>.cnf</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><blockquote><p>添加<code>libjemalloc</code>模块,初始化数据库,启动<code>mysql</code>服务</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -<span class="selector-tag">i</span> <span class="string">'s@executing mysqld_safe@executing mysqld_safe\nexport LD_PRELOAD=/usr/lib64/libjemalloc.so@'</span> <span class="variable">$basedir</span>/bin/mysqld_safe</span><br><span class="line"><span class="variable">$basedir</span>/bin/mysqld --initialize-insecure --user=mysql --basedir=<span class="variable">$basedir</span> --datadir=<span class="variable">$datadir</span></span><br><span class="line">chmod <span class="number">600</span> /etc/my.cnf</span><br><span class="line">chown mysql<span class="selector-class">.mysql</span> -R <span class="variable">$datadir</span></span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3><pre><code>echo &quot;export PATH=$basedir/bin:\$PATH&quot; &gt;&gt; /etc/profile. /etc/profile</code></pre><h3 id="初始化root密码-权限"><a href="#初始化root密码-权限" class="headerlink" title="初始化root密码, 权限"></a>初始化root密码, 权限</h3><blockquote><p><code>root</code>用户仅本地登录</p></blockquote><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dbrootpwd=hc123456    <span class="comment"># 数据库root密码</span></span><br><span class="line">mysql -e <span class="string">"grant all privileges on *.* to root@'127.0.0.1' identified by \"</span><span class="variable">$&#123;dbrootpwd&#125;</span>\<span class="string">" with grant option;"</span></span><br><span class="line">mysql -e <span class="string">"grant all privileges on *.* to root@'localhost' identified by \"</span><span class="variable">$&#123;dbrootpwd&#125;</span>\<span class="string">" with grant option;"</span></span><br><span class="line">mysql -uroot -p<span class="variable">$&#123;dbrootpwd&#125;</span> -e <span class="string">"reset master;"</span></span><br></pre></td></tr></table></figure><h3 id="配置mysql库文件"><a href="#配置mysql库文件" class="headerlink" title="配置mysql库文件"></a>配置mysql库文件</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /etc/ld<span class="selector-class">.so</span><span class="selector-class">.conf</span><span class="selector-class">.d</span>/mariadb-x86_64.conf</span><br><span class="line">echo <span class="string">"$basedir/lib"</span> &gt; /etc/ld<span class="selector-class">.so</span><span class="selector-class">.conf</span><span class="selector-class">.d</span>/mysql.conf</span><br><span class="line">ldconfig</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><h3 id="开启root远程登录权限"><a href="#开启root远程登录权限" class="headerlink" title="开启root远程登录权限"></a>开启root远程登录权限</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span> -uroot -p<span class="variable">$&#123;dbrootpwd&#125;</span> -e <span class="string">"grant all privileges on *.* to root@'%' identified by \"<span class="variable">$&#123;dbrootpwd&#125;</span>\" with grant option;"</span></span><br></pre></td></tr></table></figure><h3 id="数据库所有用户的登录权限"><a href="#数据库所有用户的登录权限" class="headerlink" title="数据库所有用户的登录权限"></a>数据库所有用户的登录权限</h3><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p$&#123;dbrootpwd&#125; -e <span class="string">"SELECT DISTINCT CONCAT('</span>User: <span class="string">''',user,'''</span>@<span class="string">''',host,'''</span>;<span class="string">') AS query FROM mysql.user;"</span></span><br></pre></td></tr></table></figure><h3 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --zone=public --add-port=3306/tcp --permanent    <span class="comment"># 永久生效允许 3306 端口</span></span></span><br><span class="line"><span class="bash">firewall-cmd --reload    <span class="comment"># 重新载入防火墙配置</span></span></span><br><span class="line"><span class="bash">firewall-cmd --zone=public --query-port=3306/tcp    <span class="comment"># 查看 3306 端口是否允许</span></span></span><br><span class="line"><span class="bash">firewall-cmd --zone=public --list-ports    <span class="comment"># 查看所有允许端口</span></span></span><br></pre></td></tr></table></figure><h3 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h3><pre><code>setenforce 0    # 临时生效，重启失效sed -i &apos;s/SELINUX=enforcing/SELINUX=disabled/&apos; /etc/selinux/config    # 重启后生效</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><blockquote><p>可修改脚本中mysql安装路径及数据库路径实现自定义安装，安装完成后防火墙自动放行3306端口，关闭selinux</p></blockquote><pre><code>curl http://home.onlycloud.xin/code/mysql-bin-install.sh -o mysql-install.shsh mysql-install.sh</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;系统：centos7
软件版本：mysql-5.7
安装目录：/usr/local
      
    
    </summary>
    
      <category term="mysql" scheme="https://home.onlycloud.xin/categories/mysql/"/>
    
    
      <category term="mysql安装" scheme="https://home.onlycloud.xin/tags/mysql%E5%AE%89%E8%A3%85/"/>
    
      <category term="mysql二进制" scheme="https://home.onlycloud.xin/tags/mysql%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Heartbeat-DRBD-NFS-Cluster</title>
    <link href="https://home.onlycloud.xin/posts/6b7.html"/>
    <id>https://home.onlycloud.xin/posts/6b7.html</id>
    <published>2018-08-12T16:07:10.000Z</published>
    <updated>2018-09-27T12:11:37.857Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">MASTER: data-1-1  </span><br><span class="line"></span><br><span class="line">    Heartbeat:</span><br><span class="line"></span><br><span class="line">        ens33: 10.0.0.11    管理IP, Lan数据转发    VIP：10.0.0.101</span><br><span class="line">        ens37: 10.0.10.11   NFS服务器心跳链接</span><br><span class="line">        ens38: 10.0.11.11   NFS服务器DRDB同步 </span><br><span class="line"></span><br><span class="line">    DRBD:</span><br><span class="line"></span><br><span class="line">        管理IP        : ens33:10.0.0.11</span><br><span class="line">        DRBD管理名称  : data</span><br><span class="line">        DRBD挂载目录  : /data</span><br><span class="line">        DRBD逻辑设备  : /dev/drbd0</span><br><span class="line">        DRBD对接IP    : ens37:10.0.11.11</span><br><span class="line">        DRBD存储设备  : /dev/sdb1</span><br><span class="line">        DRBDMeta设备  : /dev/sdb2[0]</span><br><span class="line"></span><br><span class="line">BACKUP: data-1-2</span><br><span class="line"></span><br><span class="line">    Heartbeat:</span><br><span class="line"></span><br><span class="line">        ens33: 10.0.0.12    管理IP, Lan数据转发    VIP：10.0.0.102</span><br><span class="line">        ens37: 10.0.10.12   NFS服务器心跳链接</span><br><span class="line">        ens38: 10.0.11.12   NFS服务器DRDB同步</span><br><span class="line"></span><br><span class="line">    DRBD:</span><br><span class="line"></span><br><span class="line">        管理IP        : ens33:10.0.0.12</span><br><span class="line">        DRBD管理名称  : data</span><br><span class="line">        DRBD挂载目录  : /data</span><br><span class="line">        DRBD逻辑设备  : /dev/drbd0</span><br><span class="line">        DRBD对接IP    : ens37:10.0.11.12</span><br><span class="line">        DRBD存储设备  : /dev/sdb1</span><br><span class="line">        DRBDMeta设备  : /dev/sdb2[0]</span><br><span class="line"></span><br><span class="line">SLAVE: data-1-3 </span><br><span class="line"></span><br><span class="line">        ens33: 10.0.0.13    管理IP</span><br></pre></td></tr></table></figure><h2 id="配置网络参数"><a href="#配置网络参数" class="headerlink" title="配置网络参数"></a>配置网络参数</h2><blockquote><p><code>data-1-1</code>网络参数(设置主机名, 删除网卡配置文件重新生成网络配置参数,添加hosts解析,配置心跳网络路由)</p></blockquote><pre><code>hostnamectl set-hostname data-1-1NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.11/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;NetName=ens37rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.10.11/24NetName=ens38rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.11.11/24nmcli connection reload# Hosts (主机名解析到心跳网卡真实IP)cat &lt;&lt;EOF   &gt;&gt;/etc/hosts10.0.10.11    data-1-110.0.10.12    data-1-2EOF# data-1-1 到达 data-1-2 心跳网络走 ens37 网卡route add -host 10.0.10.12 dev ens37echo &apos;/sbin/route add -host 10.0.10.12 dev ens37&apos; &gt;&gt;/etc/rc.localchmod +x /etc/rc.local</code></pre><hr><blockquote><p><code>data-1-2</code>网络参数(设置主机名, 删除网卡配置文件重新生成网络配置参数,添加hosts解析,配置心跳网络路由)</p></blockquote><pre><code>hostnamectl set-hostname data-1-2NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.12/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;NetName=ens37rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.10.12/24NetName=ens38rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.11.12/24nmcli connection reload# Hosts (主机名解析到心跳网卡真实IP)cat &lt;&lt;EOF   &gt;&gt;/etc/hosts10.0.10.11    data-1-110.0.10.12    data-1-2EOF# data-1-2 到达 data-1-1 心跳网络走 ens37 网卡oute add -host 10.0.10.11 dev ens37echo &apos;/sbin/route add -host 10.0.10.11 dev ens37&apos; &gt;&gt;/etc/rc.localchmod +x /etc/rc.local</code></pre><hr><blockquote><p><code>data-1-3</code>网络参数</p></blockquote><pre><code>hostnamectl set-hostname data-1-3NetName=ens33rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.13/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;NetName=ens37rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.10.13/24NetName=ens38rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.11.13/24nmcli connection reload</code></pre><hr><h2 id="添加软件依赖安装源"><a href="#添加软件依赖安装源" class="headerlink" title="添加软件依赖安装源"></a>添加软件依赖安装源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 配置软件依赖安装源 (cluster-glue-libs-devel 安装源)</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/yum.repos.d/gf-epel-7.repo</span><br><span class="line">[epel-testing]</span><br><span class="line">name=Extra Packages for Enterprise Linux 7 - $basearch - Testing</span><br><span class="line">baseurl=http://mirror.ghettoforge.org/distributions/gf/el/7/testing/x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="安装Heartbeat"><a href="#安装Heartbeat" class="headerlink" title="安装Heartbeat"></a>安装Heartbeat</h2><pre><code># 下载软件包并安装 heartbeat # RPM包生成方法及编译安装方法  http://home.onlycloud.xin/posts/dae5.htmlheartbeat=&apos;heartbeat-3.0.6-1.el7.centos.x86_64.rpm&apos;heartbeat_libs=&apos;heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm&apos; curl -o $heartbeat http://home.onlycloud.xin/soft/heartbeat/$heartbeat --progresscurl -o $heartbeat_libs http://home.onlycloud.xin/soft/heartbeat/$heartbeat_libs --progressyum localinstall -y heartbeat-*</code></pre><h2 id="配置Heartbeat"><a href="#配置Heartbeat" class="headerlink" title="配置Heartbeat"></a>配置Heartbeat</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"># 复制配置文件模板</span><br><span class="line">cp /usr/share/doc/heartbeat-3.0.6/&#123;ha.cf,authkeys,haresources&#125; /etc/ha.d/</span><br><span class="line"></span><br><span class="line"># ha.cf 配置文件</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/ha.cf</span><br><span class="line"># 调试日志</span><br><span class="line">debugfile /var/log/ha-debug</span><br><span class="line"></span><br><span class="line"># heartbeat 运行日志</span><br><span class="line">logfile /var/log/ha-log</span><br><span class="line"></span><br><span class="line"># 在 syslog 服务中配置通过 local1 设备接收日志</span><br><span class="line">logfacility local0</span><br><span class="line"></span><br><span class="line"># 心跳间隔时间 default:2</span><br><span class="line">keepalive 1</span><br><span class="line"></span><br><span class="line"># 备用节点在 default:30 秒内没有收到主节点心跳信号则立即接管主节点服务资源</span><br><span class="line">deadtime 5</span><br><span class="line"></span><br><span class="line"># 心跳延迟时间为 default:10 秒,当 10 秒内备份节点未收到主节点心跳信号时,将写入警告日志,此时不会切换服务</span><br><span class="line">warntime 3</span><br><span class="line"></span><br><span class="line"># heartbeat 服务首次启动,需要等待 default:60 秒后才启动服务器的资源,该值至少为 deadtime 两倍(单机启动时vip绑定比较慢)</span><br><span class="line">initdead 10</span><br><span class="line"></span><br><span class="line"># 指定心跳信号网卡(直连网卡)</span><br><span class="line">#bcast ens37</span><br><span class="line"></span><br><span class="line"># 配置多播通信路径(直连网卡)</span><br><span class="line">mcast ens37 239.0.0.1 694 1 0</span><br><span class="line"></span><br><span class="line"># 主节点恢复后,是否将服务自动切回</span><br><span class="line">auto_failback on</span><br><span class="line"></span><br><span class="line"># 节点主机名(使用IP地址也可以)</span><br><span class="line">node data-1-1</span><br><span class="line">node data-1-2</span><br><span class="line"></span><br><span class="line"># 是否开启 CRM 集群管理</span><br><span class="line">crm no</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 两端认证方式 authkeys</span><br><span class="line">cat &lt;&lt;EOF  &gt;&gt;/etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line">auth 1</span><br><span class="line">1 sha1 cxix9lkzq2aevnxv43yn68yoh2y7zp2cfwufgs7w</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line"># haresources添加资源</span><br><span class="line"># 相当于执行脚本 /etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 stop/start</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/haresources</span><br><span class="line"># 虚拟IP配置到 ens33 网卡(虚拟IP流量走 ens33网卡)</span><br><span class="line">data-1-1 IPaddr::10.0.0.101/24/ens33</span><br><span class="line">data-1-2 IPaddr::10.0.0.102/24/ens33</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="验证Heartbeat"><a href="#验证Heartbeat" class="headerlink" title="验证Heartbeat"></a>验证Heartbeat</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务,验证(两个节点各自执行 ip add 能看到两个 10.0.0网段ip)</span><br><span class="line">systemctl start heartbeat</span><br><span class="line">netstat -ntaulp</span><br><span class="line">ip add | grep 10.0.0</span><br><span class="line"></span><br><span class="line"># 关闭一端服务,然后在另一端验证(在正常的一端已经接管了所有虚拟IP ip add 能看到三个 10.0.0网段ip)</span><br><span class="line">systemctl stop heartbeat</span><br><span class="line">ip add | grep 10.0.0</span><br><span class="line"></span><br><span class="line"># 启动关闭的服务后验证 虚拟IP已经恢复</span><br><span class="line">systemctl start heartbeat</span><br><span class="line">ip add | grep 10.0.0</span><br></pre></td></tr></table></figure><h2 id="硬盘分区"><a href="#硬盘分区" class="headerlink" title="硬盘分区"></a>硬盘分区</h2><blockquote><p>此处分区比较小,是因为在同步数据时会将整个硬盘同步,需要的时间较长且占用宿主机存储</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 硬盘分区, 格式化</span><br><span class="line">parted /dev/sdb mklabel gpt      # 更改分区表格式为 GPT</span><br><span class="line">echo -e &apos;n\np\n1\n\n+3G\nw&apos; | fdisk /dev/sdb</span><br><span class="line">echo -e &apos;n\np\n2\n\n+1G\nw&apos; | fdisk /dev/sdb</span><br><span class="line">partprobe</span><br><span class="line"></span><br><span class="line"># 格式化(sdb2分区不用格式化) 可以启动DRBD后格式化 drbd分区</span><br><span class="line"># mkfs.ext4 /dev/sdb1</span><br><span class="line">parted /dev/sdb p</span><br></pre></td></tr></table></figure><h2 id="安装DRBD"><a href="#安装DRBD" class="headerlink" title="安装DRBD"></a>安装DRBD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># YUM 安装 DRDB84</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br><span class="line">yum install -y kmod-drbd84 drbd84-utils</span><br><span class="line"></span><br><span class="line"># 加载DRBD驱动内核模块, 写入随系统加载</span><br><span class="line">modprobe drbd</span><br><span class="line">lsmod | grep drbd</span><br><span class="line">echo &apos;modprobe drbd&apos; &gt;/etc/sysconfig/modules/drbd.modules</span><br></pre></td></tr></table></figure><h2 id="配置DRBD-添加资源"><a href="#配置DRBD-添加资源" class="headerlink" title="配置DRBD, 添加资源"></a>配置DRBD, 添加资源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"># DRBD 配置文件</span><br><span class="line">cp /etc/drbd.conf&#123;,.bak&#125;</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/drbd.conf</span><br><span class="line">global &#123;</span><br><span class="line">    # minor-count 64;</span><br><span class="line">    # dialog-refresh 5;  # 5 seconds</span><br><span class="line">    # disable-ip-verification;</span><br><span class="line">    usage-count no;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">common &#123;</span><br><span class="line">    protocol C;</span><br><span class="line">    </span><br><span class="line">    disk &#123;</span><br><span class="line">        on-io-error detach;</span><br><span class="line">        no-disk-flushes;</span><br><span class="line">        no-md-flushes;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    net &#123;</span><br><span class="line">        sndbuf-size 512k;</span><br><span class="line">        # timeout             60;    #  6 seconds (unit = 0.1 seconds)</span><br><span class="line">        # connect-int         10;    # 10 seconds (unit = 1 seconds)</span><br><span class="line">        # ping-timeout         5;</span><br><span class="line">        max-buffers         8000;</span><br><span class="line">        unplug-watermark    1024;</span><br><span class="line">        max-epoch-size      8000;</span><br><span class="line">        # ko-count             4;</span><br><span class="line">        # allow-two-primaries;</span><br><span class="line">        cram-hmac-alg &quot;sha1&quot;;</span><br><span class="line">        shared-secret &quot;q1366zxxlzzv5rnndx4o&quot;;</span><br><span class="line">        after-sb-0pri disconnect;</span><br><span class="line">        after-sb-1pri disconnect;</span><br><span class="line">        after-sb-2pri disconnect;</span><br><span class="line">        rr-conflict   disconnect;</span><br><span class="line">        # data-integrity-alg &quot;md5&quot;;</span><br><span class="line">        # no-tcp-cork;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    syncer &#123;</span><br><span class="line">        rate                330M;   # 同步限速(不要给太大影响正常服务)</span><br><span class="line">        al-extents           517;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># RESOURCE data</span><br><span class="line">resource data &#123;</span><br><span class="line">    protocol C;</span><br><span class="line">    </span><br><span class="line">    disk &#123;</span><br><span class="line">        on-io-error detach;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    on data-1-1 &#123;</span><br><span class="line">        device     /dev/drbd0;</span><br><span class="line">        disk       /dev/sdb1;</span><br><span class="line">        address    10.0.11.11:7788;   # 数据同步网络 </span><br><span class="line">        meta-disk  /dev/sdb2[0];      # meta-disk internal;  # 内部模式只需要一个分区即可</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    on data-1-2 &#123;</span><br><span class="line">        device     /dev/drbd0;</span><br><span class="line">        disk       /dev/sdb1;</span><br><span class="line">        address    10.0.11.12:7788;   # 数据同步网络</span><br><span class="line">        meta-disk  /dev/sdb2[0];      # meta-disk internal;  # 内部模式只需要一个分区即可</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="初始化DRBD"><a href="#初始化DRBD" class="headerlink" title="初始化DRBD"></a>初始化DRBD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 两端执行初始化(两端执行完毕后状态应该为 0: &apos;cs:Connected ro:Secondary/Secondary ds:Inconsistent/Inconsistent&apos;)</span><br><span class="line">drbdadm create-md data</span><br><span class="line">drbdadm up data</span><br><span class="line">cat /proc/drbd</span><br><span class="line"></span><br><span class="line"># 查看角色 服务启动/重启后默认为都为从 (Secondary/Secondary 从/从 本主机/对端主机)</span><br><span class="line">drbdadm role data</span><br><span class="line"></span><br><span class="line"># 设置主并同步数据(哪台执行则哪台为主) 同步完成后状态 0: cs:Connected ro:Secondary/Primary ds:UpToDate/UpToDate</span><br><span class="line">drbdadm -- --overwrite-data-of-peer primary data</span><br><span class="line"></span><br><span class="line"># 查看角色 (Primary/Secondary  主/从 本主机/对端主机)</span><br><span class="line">drbdadm role data</span><br><span class="line"></span><br><span class="line"># 主端格式化 DRBD分区(从端会自动同步不用管)</span><br><span class="line">mkfs.ext4 -b 4096 /dev/drbd0</span><br><span class="line">tune2fs -c -1 /dev/drbd0</span><br></pre></td></tr></table></figure><h2 id="测试验证DRBD"><a href="#测试验证DRBD" class="headerlink" title="测试验证DRBD"></a>测试验证DRBD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 挂载drbd设备(请不要用物理设备挂载/dev/sdb1 否则执行文件操作重启服务后会出现故障)</span><br><span class="line"># 数据通过DRBD裸设备读取数据 如果挂载/dev/sdb1进行删除文件操作会导致数据不同步</span><br><span class="line">mkdir /md1</span><br><span class="line">mount /dev/drbd0 /md1</span><br><span class="line"></span><br><span class="line"># 写文件测试</span><br><span class="line">cd /md1</span><br><span class="line">for i in &#123;1..100&#125;;do  echo &quot;$(df -hT)&quot;  &gt;$i.txt; done</span><br><span class="line">ls /md1</span><br><span class="line">cat /md1/50.txt</span><br><span class="line"></span><br><span class="line"># 从端验证(请不要手动操作分区里边的数据 会导致同步异常)</span><br><span class="line">drbdadm down data</span><br><span class="line">mkdir /md1</span><br><span class="line">mount /dev/sdb1 /md1</span><br><span class="line">ls /md1</span><br><span class="line">cat /md1/50.txt</span><br><span class="line"></span><br><span class="line"># 恢复同步</span><br><span class="line">umount /dev/sdb1</span><br><span class="line">drbdadm up data</span><br></pre></td></tr></table></figure><h2 id="配置Heartbate管理DRBD"><a href="#配置Heartbate管理DRBD" class="headerlink" title="配置Heartbate管理DRBD"></a>配置Heartbate管理DRBD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># 两端都执行</span><br><span class="line"># 停止Heartbeat服务</span><br><span class="line">systemctl stop heartbeat</span><br><span class="line"></span><br><span class="line"># 配置 Heartbeat 资源</span><br><span class="line"># IPaddr::10.0.0.101/24/ens33  相当于执行脚本(配置VIP 10.0.0.101) /etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 stop/start</span><br><span class="line"># drbddisk::data (DRBD 资源名) 相当于执行(将当前drbd data 资源设置为主/从) /etc/ha.d/resource.d/drbddisk data stop/start</span><br><span class="line"># Filesystem::/dev/drbd0::/data::ext4 相当于执行(挂载数据) /etc/ha.d/resource.d/Filesystem /dev/drbd0/ /md1 ext4 stop/start</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/haresources</span><br><span class="line"># 虚拟IP</span><br><span class="line">data-1-1 IPaddr::10.0.0.101/24/ens33 drbddisk::data Filesystem::/dev/drbd0::/md1::ext4</span><br><span class="line">data-1-2 IPaddr::10.0.0.102/24/ens33 drbddisk::data Filesystem::/dev/drbd0::/md1::ext4</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 启动Heartbeat服务</span><br><span class="line">systemctl start heartbeat</span><br><span class="line"></span><br><span class="line">## 模拟脑裂恢复</span><br><span class="line"></span><br><span class="line">```conf</span><br><span class="line"># 将当前主节点虚拟机挂起模拟脑裂状态(通过命令查看Primary 在前面则当前主机为主节点 cat /proc/drbd  ro:Primary/Secondary)</span><br><span class="line">1. 验证从节点状态(此时从节点已经切换为主节点)</span><br><span class="line">ip add | grep 10.0.0      # 此时虚拟IP都漂移到了从节点</span><br><span class="line">cat /proc/drbd            # 查看DRBD状态 当前节点已经变为主节点  cs:WFConnection ro:Primary/Unknown ds:UpToDate/DUnknown</span><br><span class="line">df -hT                    # 此时/md1 已经被挂载 /dev/drbd0              ext4      2.9G  9.2M  2.8G   1% /md1</span><br><span class="line">cd /md1                   # 进入挂载目录写入新数据</span><br><span class="line">touch &#123;1..50&#125;.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. 恢复挂起的虚拟机 恢复脑裂状态(两端执行 cat /proc/drbd 查看本端状态正常对方为 Unknown 则为脑裂状态)</span><br><span class="line"># 从节点执行(数据滞后的一端 数据需要放弃的一端 也就是之前的主节点 被挂起的虚拟机)</span><br><span class="line">modprobe drbd</span><br><span class="line">drbdadm secondary data</span><br><span class="line">drbdadm up data</span><br><span class="line">drbdadm disconnect data</span><br><span class="line">drbdadm -- --discard-my-data connect data</span><br><span class="line">cat /proc/drbd</span><br><span class="line"></span><br><span class="line"># 主节点执行(当前的主节点)</span><br><span class="line">drbdadm connect data</span><br><span class="line">cat /proc/drbd        # 查看状态两端同步状态为 ds:UpToDate/UpToDate  0: cs:Connected ro:Secondary/Primary ds:UpToDate/UpToDate</span><br><span class="line"></span><br><span class="line"># 从节点重启heartbeat服务,自动切换为主节点</span><br><span class="line">systemctl stop heartbeat</span><br><span class="line">systemctl start heartbeat</span><br><span class="line">ls /md1              # 此时查看在脑裂期间创建的数据已经同步到主节点</span><br></pre></td></tr></table></figure><h2 id="手动管理"><a href="#手动管理" class="headerlink" title="手动管理"></a>手动管理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 手动执行切换</span><br><span class="line">/etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 status       # 虚拟IP 10.0.0.101 在当前节点状态</span><br><span class="line">/etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 stop         # 在执行的主机释放虚拟IP 10.0.0.101</span><br><span class="line">/etc/ha.d/resource.d/IPaddr 10.0.0.102/24/ens33 start        # 在执行的主机添加虚拟IP 10.0.0.102</span><br><span class="line">/etc/ha.d/resource.d/drbddisk data status                    # 状态为 running (Primary) 为主节点</span><br><span class="line">/etc/ha.d/resource.d/drbddisk data start                     # 在两端都重启或状态都为从节点 可以通过此命令设置主节点哪台执行则哪台为主节点</span><br><span class="line">/etc/ha.d/resource.d/Filesystem /dev/drbd0 /md1 ext4 status  # 查看挂载状态</span><br><span class="line">/etc/ha.d/resource.d/Filesystem /dev/drbd0 /md1 ext4 start   # 挂载DRBD设备只有主节点才能挂载(从节点执行会报错)</span><br></pre></td></tr></table></figure><h2 id="安装配置NFS"><a href="#安装配置NFS" class="headerlink" title="安装配置NFS"></a>安装配置NFS</h2><h3 id="NFS-Server端-data-1-1-data-1-2"><a href="#NFS-Server端-data-1-1-data-1-2" class="headerlink" title="NFS Server端(data-1-1 data-1-2)"></a>NFS Server端(data-1-1 data-1-2)</h3><blockquote><p>安装配置NFS</p></blockquote><pre><code>yum install -y nfs-utils rpcbind</code></pre><hr><blockquote><p>启动服务, 查看服务状态(nfs服务由heartbeat管理)</p></blockquote><pre><code>systemctl restart rpcbind nfssystemctl status rpcbind nfssystemctl enable rpcbindsystemctl is-enabled rpcbindrpcinfo -p localhost</code></pre><hr><blockquote><p>配置NFS资源, 权限</p></blockquote><pre><code>chmod 777 /md1/cat &lt;&lt;EOF  &gt;/etc/exports/md1  10.0.0.*(rw,sync)EOF</code></pre><hr><blockquote><p>重读配置, 查看nfs资源<br>    exportfs -r</p></blockquote><pre><code>showmount -e localhost</code></pre><hr><h3 id="NFS-Clietn端-web-01-web-02"><a href="#NFS-Clietn端-web-01-web-02" class="headerlink" title="NFS Clietn端(web-01 web-02)"></a>NFS Clietn端(web-01 web-02)</h3><blockquote><p>安装NFS ,启动rpcbind</p></blockquote><pre><code>yum install -y nfs-utils rpcbindsystemctl start rpcbindsystemctl enable rpcbind</code></pre><hr><blockquote><p>查看服务资源</p></blockquote><pre><code>showmount -e 10.0.0.101</code></pre><hr><blockquote><p>创建挂载目录授权</p></blockquote><pre><code>mkdir /md1chown -R 777 /md1</code></pre><hr><blockquote><p>挂载数据目录</p></blockquote><pre><code>mount -t nfs 10.0.0.101:/md1 /md1echo -e &quot;\n# Mount NFS\nmount -t nfs 10.0.0.101:/md1 /md1&quot; &gt;&gt;/etc/rc.localchmod +x /etc/rc.d/rc.local</code></pre><hr><h2 id="配置Heartbate管理NFS"><a href="#配置Heartbate管理NFS" class="headerlink" title="配置Heartbate管理NFS"></a>配置Heartbate管理NFS</h2><h3 id="创建NFS控制脚"><a href="#创建NFS控制脚" class="headerlink" title="创建NFS控制脚"></a>创建NFS控制脚</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;&apos;!&apos;   &gt;/etc/ha.d/resource.d/killnfsd</span><br><span class="line">#!/bin/bash</span><br><span class="line">nfs_usage()&#123;</span><br><span class="line">    cat &lt;&lt;EOF</span><br><span class="line">    USAGE: $0 &#123;start|stop&#125;</span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nfs_start()&#123;</span><br><span class="line">    systemctl start nfs</span><br><span class="line"></span><br><span class="line">    rc=$?</span><br><span class="line">    if [ $rc -ne 0 ];then</span><br><span class="line">        echo &quot;NFS Server Start Failed&quot;</span><br><span class="line">        exit $rc</span><br><span class="line">    else</span><br><span class="line">        echo &quot;NFS Server Start Success&quot;</span><br><span class="line">    fi     </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nfs_stop()&#123;</span><br><span class="line">    killall -9 nfsd</span><br><span class="line">    systemctl stop nfs</span><br><span class="line">    </span><br><span class="line">    rc=$?</span><br><span class="line">    if [ $rc -ne 0 ];then</span><br><span class="line">        echo &quot;NFS Server Stop Failed&quot;</span><br><span class="line">        exit $rc</span><br><span class="line">    else</span><br><span class="line">        echo &quot;NFS Server Stop Success&quot;</span><br><span class="line">    fi        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">    start)</span><br><span class="line">        nfs_start</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        nfs_stop</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        nfs_usage</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line">!</span><br></pre></td></tr></table></figure><hr><blockquote><p>添加可执行权限</p></blockquote><pre><code>chmod +x /etc/ha.d/resource.d/killnfsd </code></pre><hr><h3 id="配置Heartbeat资源"><a href="#配置Heartbeat资源" class="headerlink" title="配置Heartbeat资源"></a>配置Heartbeat资源</h3><pre><code># 停止heartbeat服务systemctl stop heartbeat# 配置资源cat &lt;&lt;EOF   &gt;/etc/ha.d/haresources# 虚拟IP(提供资源访问)配置到ens33接口 对外资源流量也走ens33接口data-1-1 IPaddr::10.0.0.101/24/ens33 drbddisk::data Filesystem::/dev/drbd0::/md1::ext4 killnfsddata-1-2 IPaddr::10.0.0.102/24/ens33 drbddisk::data Filesystem::/dev/drbd0::/md1::ext4 killnfsdEOF# 启动heartbeat服务systemctl start heartbeat</code></pre><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><pre><code># ssh登录 web-01 web-02df -hTls /md1# 关闭主节点(data-1-1)heartbeat 服务systemctl stop heartbeat# ssh登录 web-01 web-02df -hTls /md1# 启动(data-1-1)heartbeat 服务systemctl start heartbeat# ssh登录 web-01 web-02df -hTls /md1# web-01 web-02 应该能自动挂载其中切换主备时会出现几秒超时现象</code></pre><h2 id="服务重启后启动顺序-两端断电或重启"><a href="#服务重启后启动顺序-两端断电或重启" class="headerlink" title="服务重启后启动顺序(两端断电或重启)"></a>服务重启后启动顺序(两端断电或重启)</h2><pre><code># 1.两端都启动DRBD资源,查看状态(两端都为从 ro:Secondary/Secondary)drbdadm up datacat /proc/drbd# 2.在主端(data-1-1)启动heartbeat服务(查看DRBD状态 ro:Primary/Secondary)systemctl start heartbeatsleep 3cat /proc/drbdip add | grep 10.0.0df -hT# 3.启动备端(data-1-2)(执行完成命令后当前节点已经变为主节点)systemctl start heartbeatsleep 3cat /proc/drbdip add | grep 10.0.0df -hT# 4.1 自动切换主节点为(data-1-1) 如果未能切换请重复执行或查看 heartbeat 日志 tail -f /var/log/ha-logsystemctl stop heartbeatsystemctl start heartbeatsleep 3cat /proc/drbdip add | grep 10.0.0df -hT# 4.2 手动切换主节点# data-1-2(执行后变备节点 释放VIP →停止nfs → 取消drbd设备挂载 → drbd状态为备)/etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 stop/etc/ha.d/resource.d/killnfsd  stop/etc/ha.d/resource.d/Filesystem /dev/drbd0 /md1 ext4 stop/etc/ha.d/resource.d/drbddisk data stop# data-1-1(执行后变主节点 接管VIP → drbd状态为主 → 挂载drbd设备 → 启动nfs)/etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 start/etc/ha.d/resource.d/drbddisk data start/etc/ha.d/resource.d/Filesystem /dev/drbd0 /md1 ext4 start/etc/ha.d/resource.d/killnfsd start</code></pre><hr><h2 id="配置inotyfy实现双主多从"><a href="#配置inotyfy实现双主多从" class="headerlink" title="配置inotyfy实现双主多从"></a>配置inotyfy实现双主多从</h2><pre><code>待续。。。。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;环境说明&quot;&gt;&lt;a href=&quot;#环境说明&quot; class=&quot;headerlink&quot; title=&quot;环境说明&quot;&gt;&lt;/a&gt;环境说明&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
      <category term="Cluster" scheme="https://home.onlycloud.xin/categories/Cluster/"/>
    
    
      <category term="Heartbeat" scheme="https://home.onlycloud.xin/tags/Heartbeat/"/>
    
      <category term="DRBD" scheme="https://home.onlycloud.xin/tags/DRBD/"/>
    
      <category term="NFS" scheme="https://home.onlycloud.xin/tags/NFS/"/>
    
  </entry>
  
  <entry>
    <title>Heartbeat-BRDB安装</title>
    <link href="https://home.onlycloud.xin/posts/dae5.html"/>
    <id>https://home.onlycloud.xin/posts/dae5.html</id>
    <published>2018-08-11T19:02:23.000Z</published>
    <updated>2018-09-27T12:11:44.272Z</updated>
    
    <content type="html"><![CDATA[<pre><code>本文章主要写软件安装及配置过程如需集群配置请访问 http://home.onlycloud.xin/posts/6b7.html环境：CentOS 7.5MASTER: data-1-1    Heartbeat:    ens33: 10.0.0.11    管理IP, Lan数据转发    VIP：10.0.0.101    ens37: 10.0.10.11   NFS服务器心跳链接    ens38: 10.0.11.11   NFS服务器DRDB同步   DRBD:    管理IP        : ens33:10.0.0.11    DRBD管理名称  : data    DRBD挂载目录  : /data    DRBD逻辑设备  : /dev/drbd0    DRBD对接IP    : ens37:10.0.11.11    DRBD存储设备  : /dev/sdb1    DRBDMeta设备  : /dev/sdb2[0]</code></pre><hr><pre><code>BACKUP: data-1-2  Heartbeat:    ens33: 10.0.0.12    管理IP, Lan数据转发    VIP：10.0.0.102    ens37: 10.0.10.12   NFS服务器心跳链接    ens38: 10.0.11.12   NFS服务器DRDB同步  DRBD:    管理IP        : ens33:10.0.0.12    DRBD管理名称  : data    DRBD挂载目录  : /data    DRBD逻辑设备  : /dev/drbd0    DRBD对接IP    : ens37:10.0.11.12    DRBD存储设备  : /dev/sdb1    DRBDMeta设备  : /dev/sdb2[0]</code></pre><h2 id="编译安装Heartbeat"><a href="#编译安装Heartbeat" class="headerlink" title="编译安装Heartbeat"></a>编译安装Heartbeat</h2><h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a><a href="http://linux-ha.org/wiki/Download" target="_blank" rel="noopener">软件下载</a></h3><pre><code>wget -O ClusterGlue-1.0.12.tar.bz2 http://hg.linux-ha.org/glue/archive/0a7add1d9996.tar.bz2wget -O Heartbeat-3.0.6.tar.bz2 http://hg.linux-ha.org/heartbeat-STABLE_3_0/archive/958e11be8686.tar.bz2wget -O resource-agents-3.9.6.tar.gz https://github.com/ClusterLabs/resource-agents/archive/v3.9.6.tar.gz</code></pre><h3 id="创建服务用户"><a href="#创建服务用户" class="headerlink" title="创建服务用户"></a>创建服务用户</h3><pre><code>groupadd -g 501 haclientuseradd -u 501 hacluster -g haclient -s /bin/false</code></pre><h3 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a>安装编译环境</h3><pre><code>yum install -y gcc gcc-c++ autoconf automake libtool glib2-devel libxml2-devel \  bzip2 bzip2-devel libtool-ltdl-devel libuuid-devel asciidoc</code></pre><h3 id="编译安装Glue"><a href="#编译安装Glue" class="headerlink" title="编译安装Glue"></a>编译安装Glue</h3><pre><code>mkdir /usr/local/srctar xvf ClusterGlue-1.0.12.tar.bz2 -C /usr/local/srccd /usr/local/src/Reusable-Cluster-Components-glue--0a7add1d9996./autogen.sh./configure --prefix=/usr/local/heartbeat --with-daemon-user=hacluster --with-daemon-group=haclientmake &amp;&amp; make install</code></pre><h3 id="编译安装-Resource-Agents"><a href="#编译安装-Resource-Agents" class="headerlink" title="编译安装 Resource Agents"></a>编译安装 Resource Agents</h3><pre><code>cd -tar xvf resource-agents-3.9.6.tar.gz -C /usr/local/srccd /usr/local/src/resource-agents-3.9.6./autogen.sh./configure --prefix=/usr/local/heartbeatmake &amp;&amp; make install</code></pre><h3 id="编译安装-Heartbeat"><a href="#编译安装-Heartbeat" class="headerlink" title="编译安装 Heartbeat"></a>编译安装 Heartbeat</h3><pre><code>cd -tar -xvf Heartbeat-3.0.6.tar.bz2 -C /usr/local/srccd /usr/local/src/Heartbeat-3-0-958e11be8686export CFLAGS=&quot;$CFLAGS -I/usr/local/heartbeat/include -L/usr/local/heartbeat/lib&quot;./bootstrap./configure --prefix=/usr/local/heartbeat --enable-fatal-warnings=no LIBS=&apos;/lib64/libuuid.so.1&apos;make &amp;&amp; make installcd</code></pre><h3 id="Heartbeat-配置"><a href="#Heartbeat-配置" class="headerlink" title="Heartbeat 配置"></a>Heartbeat 配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"># Hosts (主机名解析到心跳网卡真实IP)</span><br><span class="line">cat &lt;&lt;EOF   &gt;&gt;/etc/hosts</span><br><span class="line">10.0.10.11    data-1-1</span><br><span class="line">10.0.10.12    data-1-2</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 复制配置文件模板</span><br><span class="line">cp /usr/local/heartbeat/share/doc/heartbeat/&#123;ha.cf,authkeys,haresources&#125; /usr/local/heartbeat/etc/ha.d</span><br><span class="line"></span><br><span class="line"># ha.cf 配置文件</span><br><span class="line">cat &lt;&lt;EOF   &gt;/usr/local/heartbeat/etc/ha.d/ha.cf</span><br><span class="line"># 调试日志</span><br><span class="line">debugfile /var/log/ha-debug</span><br><span class="line"></span><br><span class="line"># heartbeat 运行日志</span><br><span class="line">logfile /var/log/ha-log</span><br><span class="line"></span><br><span class="line"># 在 syslog 服务中配置通过 local1 设备接收日志</span><br><span class="line">logfacility local0</span><br><span class="line"></span><br><span class="line"># 心跳间隔时间</span><br><span class="line">keepalive 2</span><br><span class="line"></span><br><span class="line"># 备用节点在 30 秒内没有收到主节点心跳信号则立即接管主节点服务资源</span><br><span class="line">deadtime 30</span><br><span class="line"></span><br><span class="line"># 心跳延迟时间为 10 秒,当 10 秒内备份节点未收到主节点心跳信号时,将写入警告日志,此时不会切换服务</span><br><span class="line">warntime 10</span><br><span class="line"></span><br><span class="line"># heartbeat 服务首次启动,需要等待 60 秒后才启动服务器的资源,该值至少为 deadtime 两倍(单机启动时vip绑定比较慢)</span><br><span class="line">initdead 60</span><br><span class="line"></span><br><span class="line"># 指定心跳信号网卡(直连网卡)</span><br><span class="line">#bcast ens37</span><br><span class="line"></span><br><span class="line"># 配置多播通信路径(直连网卡)</span><br><span class="line">mcast ens37 239.0.0.1 694 1 0</span><br><span class="line"></span><br><span class="line"># 主节点恢复后,是否将服务自动切回</span><br><span class="line">auto_failback on</span><br><span class="line"></span><br><span class="line"># 节点主机名(使用IP地址也可以)</span><br><span class="line">node data-1-1</span><br><span class="line">node data-1-2</span><br><span class="line"></span><br><span class="line"># 是否开启 CRM 集群管理</span><br><span class="line">crm no</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># authkeys</span><br><span class="line">cat &lt;&lt;EOF  &gt;&gt;/usr/local/heartbeat/etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line">auth 1</span><br><span class="line">1 sha1 cxix9lkzq2aevnxv43yn68yoh2y7zp2cfwufgs7w</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /usr/local/heartbeat/etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line"># haresources</span><br><span class="line">cat &lt;&lt;EOF   &gt;/usr/local/heartbeat/etc/ha.d/haresources</span><br><span class="line"># 虚拟IP 配置到 ens33网卡</span><br><span class="line">data-1-1 IPaddr::10.0.0.101/24/ens33</span><br><span class="line">data-1-2 IPaddr::10.0.0.102/24/ens33</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 链接功能模块</span><br><span class="line">ln -svf /usr/local/heartbeat/lib64/heartbeat/plugins/RAExec/* /usr/local/heartbeat/lib/heartbeat/plugins/RAExec/  </span><br><span class="line">ln -svf /usr/local/heartbeat/lib64/heartbeat/plugins/* /usr/local/heartbeat/lib/heartbeat/plugins/  </span><br><span class="line"></span><br><span class="line">systemctl restart heartbeat</span><br><span class="line">systemctl status heartbeat</span><br><span class="line"></span><br><span class="line"># 接管资源</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_takeover           # 接管所有资源</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_takeover local     # 接管本地资源</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_takeover foreign   # 接管对端资源</span><br><span class="line"></span><br><span class="line"># 释放资源</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_standby</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_standby local      # 释放本地资源</span><br><span class="line">/usr/local/heartbeat/share/heartbeat/hb_standby foreign    # 释放对端资源</span><br><span class="line"></span><br><span class="line"># 链接配置文件(便于修改)</span><br><span class="line">ln -s /usr/local/heartbeat/etc/ha.d/ /etc/</span><br><span class="line">cp /usr/local/src/resource-agents-3.9.6/ldirectord/ldirectord.cf /etc/ha.d/</span><br></pre></td></tr></table></figure><h2 id="RPM包安装Heartbeat"><a href="#RPM包安装Heartbeat" class="headerlink" title="RPM包安装Heartbeat"></a>RPM包安装Heartbeat</h2><h3 id="准备build环境"><a href="#准备build环境" class="headerlink" title="准备build环境"></a>准备build环境</h3><pre><code>yum install -y bzip2 rpm-build</code></pre><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><pre><code>wget -O Heartbeat-3.0.6.tar.bz2 http://hg.linux-ha.org/heartbeat-STABLE_3_0/archive/958e11be8686.tar.bz2</code></pre><h3 id="创建build所需路径"><a href="#创建build所需路径" class="headerlink" title="创建build所需路径"></a>创建build所需路径</h3><pre><code>mkdir -p /root/rpmbuild/SOURCES/tar xjvf Heartbeat-3.0.6.tar.bz2 -C /root/rpmbuild/SOURCES/cd /root/rpmbuild/SOURCES/mv Heartbeat-3-0-958e11be8686 heartbeattar cjvf /root/rpmbuild/SOURCES/heartbeat.tar.bz2 heartbeatcd heartbeat</code></pre><h3 id="安装依赖关系"><a href="#安装依赖关系" class="headerlink" title="安装依赖关系"></a>安装依赖关系</h3><blockquote><p>配置cluster-glue-libs-devel 安装源</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;/etc/yum.repos.d/gf-epel-7.repo[epel-testing]name=Extra Packages for Enterprise Linux 7 - $basearch - Testingbaseurl=http://mirror.ghettoforge.org/distributions/gf/el/7/testing/x86_64enabled=1gpgcheck=0EOF</code></pre><hr><blockquote><p>安装软件</p></blockquote><pre><code>yum install -y glib2-devel libtool-ltdl-devel bzip2-devel ncurses-devel openssl-devel libtool \  zlib-devel mailx cluster-glue-libs-devel libxslt docbook-dtds docbook-style-xsl libuuid-devel</code></pre><hr><h3 id="生成RPM包"><a href="#生成RPM包" class="headerlink" title="生成RPM包"></a>生成RPM包</h3><pre><code>rpmbuild -ba heartbeat-fedora.specls /root/rpmbuild/RPMS/x86_64/</code></pre><h3 id="其他节点安装"><a href="#其他节点安装" class="headerlink" title="其他节点安装"></a>其他节点安装</h3><blockquote><p>下载安装包</p></blockquote><pre><code>mkdir /root/heartbeatscp 10.0.0.11:/root/rpmbuild/RPMS/x86_64/* /root/heartbeatheartbeat=&apos;heartbeat-3.0.6-1.el7.centos.x86_64.rpm&apos;heartbeat-libs=&apos;heartbeat-libs-3.0.6-1.el7.centos.x86_64.rpm&apos; curl -o /root/heartbeat/$heartbeat http://home.onlycloud.xin/soft/heartbeat/$heartbeat --progresscurl -o /root/heartbeat/$heartbeat-libs http://home.onlycloud.xin/soft/heartbeat/$heartbeat-libs --progress</code></pre><hr><blockquote><p>配置cluster-glue-libs-devel 安装源</p></blockquote><pre><code>cat &lt;&lt;EOF   &gt;/etc/yum.repos.d/gf-epel-7.repo[epel-testing]name=Extra Packages for Enterprise Linux 7 - $basearch - Testingbaseurl=http://mirror.ghettoforge.org/distributions/gf/el/7/testing/x86_64enabled=1gpgcheck=0EOF</code></pre><hr><blockquote><p>安装</p></blockquote><pre><code>cd /root/heartbeatyum localinstall heartbeat-*</code></pre><h3 id="配置Heartbeat"><a href="#配置Heartbeat" class="headerlink" title="配置Heartbeat"></a>配置Heartbeat</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"># 复制配置文件模板</span><br><span class="line">cp /usr/share/doc/heartbeat-3.0.6/&#123;ha.cf,authkeys,haresources&#125; /etc/ha.d/</span><br><span class="line"></span><br><span class="line"># ha.cf 配置文件</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/ha.cf</span><br><span class="line"># 调试日志</span><br><span class="line">debugfile /var/log/ha-debug</span><br><span class="line"></span><br><span class="line"># heartbeat 运行日志</span><br><span class="line">logfile /var/log/ha-log</span><br><span class="line"></span><br><span class="line"># 在 syslog 服务中配置通过 local1 设备接收日志</span><br><span class="line">logfacility local0</span><br><span class="line"></span><br><span class="line"># 心跳间隔时间</span><br><span class="line">keepalive 2</span><br><span class="line"></span><br><span class="line"># 备用节点在 30 秒内没有收到主节点心跳信号则立即接管主节点服务资源</span><br><span class="line">deadtime 30</span><br><span class="line"></span><br><span class="line"># 心跳延迟时间为 10 秒,当 10 秒内备份节点未收到主节点心跳信号时,将写入警告日志,此时不会切换服务</span><br><span class="line">warntime 10</span><br><span class="line"></span><br><span class="line"># heartbeat 服务首次启动,需要等待 60 秒后才启动服务器的资源,该值至少为 deadtime 两倍(单机启动时vip绑定比较慢)</span><br><span class="line">initdead 60</span><br><span class="line"></span><br><span class="line"># 指定心跳信号网卡(直连网卡)</span><br><span class="line">#bcast ens37</span><br><span class="line"></span><br><span class="line"># 配置多播通信路径(直连网卡)</span><br><span class="line">mcast ens37 239.0.0.1 694 1 0</span><br><span class="line"></span><br><span class="line"># 主节点恢复后,是否将服务自动切回</span><br><span class="line">auto_failback on</span><br><span class="line"></span><br><span class="line"># 节点主机名(使用IP地址也可以)</span><br><span class="line">node data-1-1</span><br><span class="line">node data-1-2</span><br><span class="line"></span><br><span class="line"># 是否开启 CRM 集群管理</span><br><span class="line">crm no</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 两端认证方式 authkeys</span><br><span class="line">cat &lt;&lt;EOF  &gt;&gt;/etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line">auth 1</span><br><span class="line">1 sha1 cxix9lkzq2aevnxv43yn68yoh2y7zp2cfwufgs7w</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /etc/ha.d/authkeys</span><br><span class="line"></span><br><span class="line"># haresources添加资源</span><br><span class="line"># 相当于执行脚本 /etc/ha.d/resource.d/IPaddr 10.0.0.101/24/ens33 stop/start</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/ha.d/haresources</span><br><span class="line"># 虚拟IP配置到 ens33 网卡(虚拟IP流量走 ens33网卡)</span><br><span class="line">data-1-1 IPaddr::10.0.0.101/24/ens33</span><br><span class="line">data-1-2 IPaddr::10.0.0.102/24/ens33</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="验证Heartbeat"><a href="#验证Heartbeat" class="headerlink" title="验证Heartbeat"></a>验证Heartbeat</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务,跟随系统启动 验证(两个节点各自执行 ip add 能看到两个 10.0.0网段ip)</span><br><span class="line">systemctl start heartbeat</span><br><span class="line">systemctl enable heartbeat</span><br><span class="line">netstat -ntaulp</span><br><span class="line">ip add | grep 10.0.0</span><br><span class="line"></span><br><span class="line"># 关闭一端服务,然后在另一端验证(在正常的一端已经接管了所有虚拟IP ip add 能看到三个 10.0.0网段ip)</span><br><span class="line">systemctl stop heartbeat</span><br><span class="line">ip add | grep 10.0.0</span><br><span class="line"></span><br><span class="line"># 启动关闭的服务后验证 虚拟IP已经恢复</span><br><span class="line">systemctl start heartbeat</span><br><span class="line">ip add | grep 10.0.0</span><br></pre></td></tr></table></figure><h2 id="DRBD编译安装"><a href="#DRBD编译安装" class="headerlink" title="DRBD编译安装"></a>DRBD编译安装</h2><h3 id="安装依赖环境"><a href="#安装依赖环境" class="headerlink" title="安装依赖环境"></a>安装依赖环境</h3><blockquote><p>依赖环境安装(升级内核)</p></blockquote><pre><code>yum install -y gcc gcc-c++  flex kernel kernel-devel kernel-headers elfutils-libelf-develreboot</code></pre><hr><blockquote><p>依赖环境安装(安装指定版本kernel-devel 无需升级内核)</p></blockquote><pre><code>yum install -y gcc gcc-c++ flex kernel-devel-$(uname -r) kernel-headers elfutils-libelf-devel</code></pre><hr><h3 id="编译安装-DRBD-内核驱动"><a href="#编译安装-DRBD-内核驱动" class="headerlink" title="编译安装 DRBD 内核驱动"></a>编译安装 DRBD 内核驱动</h3><blockquote><p>如果 make 立即报错请确定当前使用的内核版本与 kernel-devel 版本一致</p></blockquote><pre><code>wget http://www.linbit.com/downloads/drbd/9.0/drbd-9.0.14-1.tar.gztar xvf drbd-9.0.14-1.tar.gz -C /usr/local/srccd /usr/local/src/drbd-9.0.14-1make KDIR=/usr/src/kernels/$(uname -r)/make install</code></pre><blockquote><p>加载模块,验证</p></blockquote><pre><code>modprobe drbdlsmod | grep drbd# 跟随系统启动加载模块echo &apos;modprobe drbd&apos; &gt;&gt;/etc/rc.localchmod +x /etc/rc.local</code></pre><h3 id="编译安装-DRBD"><a href="#编译安装-DRBD" class="headerlink" title="编译安装 DRBD"></a>编译安装 DRBD</h3><pre><code># 安装依赖环境yum install -y autoconf automake libxslt docbook-style-xslcdwget http://www.linbit.com/downloads/drbd/utils/drbd-utils-9.4.0.tar.gztar xvf drbd-utils-9.4.0.tar.gz -C /usr/local/srccd /usr/local/src/drbd-utils-9.4.0./autogen.sh./configure --prefix=/usr/local/drbd --sysconfdir=/etcmake &amp;&amp; make install</code></pre><h3 id="安装drbdmanage"><a href="#安装drbdmanage" class="headerlink" title="安装drbdmanage"></a>安装drbdmanage</h3><pre><code>wget http://www.linbit.com/downloads/drbdmanage/drbdmanage-0.99.17.tar.gztar xvf drbdmanage-0.99.17.tar.gz -C /usr/local/srccd /usr/local/src/drbdmanage-0.99.17python setup.py install</code></pre><h3 id="DRBD配置"><a href="#DRBD配置" class="headerlink" title="DRBD配置"></a>DRBD配置</h3><blockquote><p>DRBD 配置文件(两端配置文件相同)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/drbd.conf&#123;,.bak&#125;</span><br><span class="line">cat &lt;&lt;EOF   &gt;/etc/drbd.d/data.res</span><br><span class="line"># resource data</span><br><span class="line"></span><br><span class="line">resource data &#123;</span><br><span class="line">    protocol C;</span><br><span class="line">    </span><br><span class="line">    disk &#123;</span><br><span class="line">        on-io-error detach;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    on data-1-1 &#123;</span><br><span class="line">        device     /dev/drbd0;</span><br><span class="line">        disk       /dev/sdb1;</span><br><span class="line">        address    10.0.10.11:7788;</span><br><span class="line">        meta-disk  /dev/sdb2[0];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    on data-1-2 &#123;</span><br><span class="line">        device     /dev/drbd0;</span><br><span class="line">        disk       /dev/sdb1;</span><br><span class="line">        address    10.0.10.12:7788;</span><br><span class="line">        meta-disk  /dev/sdb2[0];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 创建run路径</span><br><span class="line">mkdir -p /usr/local/drbd/var/run/drbd</span><br><span class="line"></span><br><span class="line"># 链接脚本文件</span><br><span class="line">ln -s /usr/local/drbd/lib/drbd/* /usr/lib/drbd/</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><blockquote><p>硬盘分区分区(sdb1为数据分区sdb2为 meta分区用于存储 drdb同步状态信息 )</p></blockquote><pre><code>echo -e &apos;n\np\n1\n\n+3G\nw&apos; | fdisk /dev/sdbecho -e &apos;n\np\n2\n\n+1G\nw&apos; | fdisk /dev/sdbpartprobelsblk# 在节点1,2初始化资源drbdadm create-md data# 在节点1,2启动资源drbdadm up data# 查看两个节点上data的角色(两个都为：Secondary)drbdadm role data# 将节点1设置为主节点(执行这条命令的为主节点)drbdadm primary data --force# 查看节点1 data的角色(此时已经变为：Primary)drbdadm role data# 查看两个节点各自drbd状态(0:data/0  Connected(2*) Second/Primar Incons/UpToDa)/usr/local/drbd/sbin/drbd-overview# 待两边同步完成后(0:data/0  Connected(2*) Second/Primar UpToDa/UpToDa)/usr/local/drbd/sbin/drbd-overviewnetstat -ntaulp</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre><code># 挂载,创建文件mkdir /datamount /dev/drbd0 /datacd /datatouch {1..10}/usr/local/drbd/sbin/drbd-overview# 重启drbd资源umount /datadrbdadm down datadrbdadm up data# 从节点获取主身份,验证数据drbdadm primary data --forcemkdir /datamount /dev/drbd0 /datals -la /data/usr/local/drbd/sbin/drbd-overview</code></pre><h2 id="YUM安装BRBD"><a href="#YUM安装BRBD" class="headerlink" title="YUM安装BRBD"></a>YUM安装BRBD</h2><blockquote><p>YUM 安装 DRDB84</p></blockquote><pre><code>rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpmyum install -y kmod-drbd84 drbd84-utilsmodprobe drbdecho drbd &gt; /etc/modules-load.d/drbd.conf</code></pre><blockquote><p>YUM 安装 DRDB90</p></blockquote><pre><code>rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.orgrpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpmyum install -y drbd90-utils kmod-drbd90modprobe drbdecho drbd &gt; /etc/modules-load.d/drbd.conf</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;本文章主要写软件安装及配置过程如需集群配置请访问 http://home.onlycloud.xin/posts/6b7.html

环境：CentOS 7.5
MASTER: data-1-1  

  Heartbeat:

    ens33: 10.
      
    
    </summary>
    
      <category term="heartbeat" scheme="https://home.onlycloud.xin/categories/heartbeat/"/>
    
    
      <category term="Heartbeat" scheme="https://home.onlycloud.xin/tags/Heartbeat/"/>
    
      <category term="HA" scheme="https://home.onlycloud.xin/tags/HA/"/>
    
      <category term="rpm-build" scheme="https://home.onlycloud.xin/tags/rpm-build/"/>
    
  </entry>
  
  <entry>
    <title>Linux笔记不定期更新</title>
    <link href="https://home.onlycloud.xin/posts/note.html"/>
    <id>https://home.onlycloud.xin/posts/note.html</id>
    <published>2018-08-05T16:51:49.000Z</published>
    <updated>2018-09-27T12:11:46.273Z</updated>
    
    <content type="html"><![CDATA[<h2 id="账号安全"><a href="#账号安全" class="headerlink" title="账号安全"></a>账号安全</h2><h3 id="创建用户指定uid-1200-自动建立用户的登入目录-更改用户密码"><a href="#创建用户指定uid-1200-自动建立用户的登入目录-更改用户密码" class="headerlink" title="创建用户指定uid:1200; 自动建立用户的登入目录; 更改用户密码"></a>创建用户指定uid:1200; 自动建立用户的登入目录; 更改用户密码</h3><pre><code>useradd feng -u 1200 -mecho $pass | passwd --stdin feng</code></pre><h3 id="禁止-root-用户远程-SSH-登录-line-38"><a href="#禁止-root-用户远程-SSH-登录-line-38" class="headerlink" title="禁止 root 用户远程 SSH 登录(line 38)"></a>禁止 root 用户远程 SSH 登录(line 38)</h3><pre><code>sed -i &apos;s/#PermitRootLogin yes/PermitRootLogin no/&apos; /etc/ssh/sshd_configsystemctl restart sshd</code></pre><h3 id="配置用户-feng-使用-sudo-权限"><a href="#配置用户-feng-使用-sudo-权限" class="headerlink" title="配置用户 feng 使用 sudo 权限"></a>配置用户 feng 使用 sudo 权限</h3><blockquote><p>NOPASSWD 使用 sudo 时无需输入密码(详情请执行 visudo 查看示例)</p></blockquote><pre><code>ssh feng@192.168.0.2su - rootecho &quot;feng ALL=(ALL) ALL&quot; | sudo tee /etc/sudoers.d/feng# echo &quot;feng ALL=(ALL) NOPASSWD: ALL&quot; | sudo tee /etc/sudoers.d/feng</code></pre><h3 id="更改-SSH-登录端口号-line-17-默认此行是被注释则登录端口为：22"><a href="#更改-SSH-登录端口号-line-17-默认此行是被注释则登录端口为：22" class="headerlink" title="更改 SSH 登录端口号(line 17  默认此行是被注释则登录端口为：22)"></a>更改 SSH 登录端口号(line 17  默认此行是被注释则登录端口为：22)</h3><pre><code>sed -i &apos;s/^#Port.*/Port 2200/&apos; /etc/ssh/sshd_configsystemctl restart sshdssh -p 2200 feng@192.168.0.2</code></pre><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><h3 id="firewalld"><a href="#firewalld" class="headerlink" title="firewalld"></a>firewalld</h3><blockquote><p>–permanent永久生效，没有此参数重启后失效<a href="https://www.cnblogs.com/hubing/p/6058932.html" target="_blank" rel="noopener">来自</a></p></blockquote><pre><code># 查看区域信息firewall-cmd --get-active-zones# 查看指定接口所属区域firewall-cmd --get-zone-of-interface=ens33# 查看已启动的服务列表systemctl list-unit-files | grep enabled# 查看所有放行的端口firewall-cmd --zone=public --list-ports# 查看指定服务是否放行firewall-cmd --zone=public --query-service=http# 放行一个指定服务firewall-cmd --permanent --add-service=http# 查看指定端口是否允许firewall-cmd --zone=public --query-port=80/tcp# 防火墙放行 2200 端口firewall-cmd --zone=public --add-port=2200/tcp --permanentfirewall-cmd --reload# 防火墙放行 80,443 端口firewall-cmd --zone=public --add-port=80/tcp --permanentfirewall-cmd --zone=public --add-port=443/tcp --permanentfirewall-cmd --reload# 删除规则firewall-cmd --zone=public --remove-port=443/tcp --permanentfirewall-cmd --reload</code></pre><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><pre><code>待续。。。</code></pre><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><blockquote><p>扫描指定主机开放的端口  -A：使用所有高级扫描选项(命令执行时间稍长)</p></blockquote><pre><code>yum install -y nmapnmap 192.168.0.2</code></pre><h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><blockquote><p>http下载文件<br>参数说明: -O 下载后保存为原文件名(-o filename 指定文件名); -C - 断点续传; –progress 显示进度条; –limit-rate 10M 下载速度最大不会超过 10M 每秒</p></blockquote><pre><code>curl -O -C -  http://hostname/filename.iso --progress</code></pre><hr><blockquote><p>http上传文件</p></blockquote><pre><code>curl --form &quot;fileupload=@filename.txt&quot; http://hostname/resource</code></pre><hr><blockquote><p>从FTP服务器下载文件</p></blockquote><pre><code># 列出 public下的所有文件夹和文件curl -u user:pass -O ftp://ftp.testserver.com/public/# 下载 filename.isocurl -u user:pass -O ftp://ftp.testserver.com/public/filename.iso</code></pre><hr><blockquote><p>上传文件到FTP服务器</p></blockquote><pre><code># 将myfile.txt文件上传到服务器curl -u user:pass -T file.txt ftp://ftp.testserver.com# 同时上传多个文件curl -u user:pass -T &quot;{file1,file2}&quot; ftp://ftp.testserver.com</code></pre><h2 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h2><pre><code>待续。。。</code></pre><h2 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h2><blockquote><p>手动配置网络参数 重启后失效</p></blockquote><pre><code>yum install -y net-toolsifconfig ens34 192.168.0.22 netmask 255.255.255.0 upecho nameserver 202.103.24.68 &gt;&gt; /etc/resolv.confroute add default gw 192.168.2.1 dev ens32route add default gw 1​​92.168.0.1</code></pre><blockquote><p>配置子接口(多IP)</p></blockquote><pre><code>ifconfig ens34:0 192.168.3.22 netmask 255.255.255.0 up</code></pre><hr><blockquote><p>删除默认网关, 添加网关到指定接口,度量值为 100(越小越优先)</p></blockquote><pre><code>ip route de​​l defaultip route add default via 192.168.0.1ip route add default via 192.168.0.1 dev ens33ip route add default via 192.168.0.1 dev ens33 proto static metric 100</code></pre><hr><blockquote><p>删除默认网关, 添加网关到指定接口,度量值为 100(越小越优先)</p></blockquote><pre><code>route add default gw 192.168.0.1route add default gw 192.168.0.1 dev ens33route add default gw 192.168.0.1 dev ens33 metric 100</code></pre><h2 id="route"><a href="#route" class="headerlink" title="route"></a>route</h2><blockquote><p>添加默认路由</p></blockquote><pre><code>route add -net 0.0.0.0 ens33route add -net 10.0.0.0/24 gw 10.0.0.2</code></pre><hr><blockquote><p>环境 (Server1单网卡 192.168.0.2; Server2 双网卡 192.168.0.10; 10.0.0.11) 使Server1 ping 通 10.0.0.11<br>以下配置仅针对临时有效, 将相关配置设置开机启动或更改配置文件实现永久生效</p></blockquote><pre><code># 方法1: (Server1 只能访问10.0.0.11 这一个ip ,访问公网还是通过192.168.0.0网络的网关)#Server1: 添加路由route add -net 10.0.0.0/24 dev ens33route add -net 10.0.0.0/24 gw 192.168.0.22----------------- END ---------------------# 方法2: (Server2开启路由,添加NAT规则; Server1 更改默认网关,本机访问外网也通过Server2, 能访问10.0.0.0 整个网络)#Server2: 开启路由功能, 添加NAT规则所有来自192.168.0.0/24 网络的请求 被转换为 10.0.0.11(10.0.0.11是可以上网的)echo 1 &gt; /proc/sys/net/ipv4/ip_forwardiptables -t nat -A POSTROUTING -s 192.168.0.0/24 -j SNAT --to 10.0.0.11# Server1: 更改网关为Server2同网段接口IP(192.168.0.10)重启网络(以下为手动配置请更改配置文件)route de​​l defaultroute add default gw 192.168.0.10 dev ens33----------------- END ---------------------# 方法3: (Server2开启路由,添加NAT规则; Server1 添加访问 Server2 10.0.0.0/24 网络的网关, 能访问10.0.0.0 整个网络)Server2:开启路由功能, 添加NAT规则所有来自192.168.0.0/24 网络的请求 被转换为 10.0.0.11(另一个网卡接口)echo 1 &gt; /proc/sys/net/ipv4/ip_forward      #  echo &apos;net.ipv4.ip_forward = 1&apos; &gt;&gt;/etc/sysctl.confiptables -t nat -A POSTROUTING -s 192.168.0.0/24 -j SNAT --to 10.0.0.11# 如果请求目标是(-d DNAT)192.168.0.0网络则不用转发iptables -t nat -A POSTROUTING -s 192.168.0.0/24 ! -d 192.168.0.0/24 -j SNAT --to 10.0.0.11# Server1: 添加路由route add -net 10.0.0.0/24 gw 192.168.0.22----------------- END---------------------# 方法4: (Server1, 两端的网络都能互相访问)#Server2iptables -t nat -A POSTROUTING -s 192.168.0.0/24 ! -d 192.168.0.0/24 -j SNAT --to 10.0.0.11iptables -t nat -A POSTROUTING -s 10.0.0.0/24 ! -d 10.0.0.0/24 -j SNAT --to 192.168.0.10# 192.168.0.0/24 网段添加路由route add -net 10.0.0.0/24 gw 192.168.0.22# 192.168.0.0/24 网段添加路由route add -net 192.168.0.0/24 gw 10.0.0.11----------------- END---------------------</code></pre><hr><h2 id="nmcli"><a href="#nmcli" class="headerlink" title="nmcli"></a>nmcli</h2><blockquote><p>重新生成网络配置(网卡UUID也会改变)</p></blockquote><pre><code>NetName=ens34rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 192.168.0.22/24 ipv4.dns 202.103.24.68 ipv4.gateway 192.168.0.1nmcli connection reload</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;账号安全&quot;&gt;&lt;a href=&quot;#账号安全&quot; class=&quot;headerlink&quot; title=&quot;账号安全&quot;&gt;&lt;/a&gt;账号安全&lt;/h2&gt;&lt;h3 id=&quot;创建用户指定uid-1200-自动建立用户的登入目录-更改用户密码&quot;&gt;&lt;a href=&quot;#创建用户指定uid-12
      
    
    </summary>
    
      <category term="shell" scheme="https://home.onlycloud.xin/categories/shell/"/>
    
    
      <category term="shell" scheme="https://home.onlycloud.xin/tags/shell/"/>
    
      <category term="note" scheme="https://home.onlycloud.xin/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>Install OpenStack Pike</title>
    <link href="https://home.onlycloud.xin/posts/pike.html"/>
    <id>https://home.onlycloud.xin/posts/pike.html</id>
    <published>2018-08-04T13:53:03.000Z</published>
    <updated>2018-09-27T12:11:38.461Z</updated>
    
    <content type="html"><![CDATA[<pre><code>########################################################################################################################################  初始化环境  ################## Management Netwock   10.0.0.0/24(私有网络, 管理网络)# Provicer  Network   203.0.113.0/24(公有网络, 提供外部访问虚拟机)# controller 网络参数hostnamectl set-hostname controllerNetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.11/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# compute1 网络参数hostnamectl set-hostname compute1NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.31/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# block1 网络参数hostnamectl set-hostname block1NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.41/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# object1 网络参数hostnamectl set-hostname object1NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.51/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload# object2 网络参数hostnamectl set-hostname object2NetName=ens32rm -f /etc/sysconfig/network-scripts/ifcfg-$NetNamenmcli con add con-name $NetName ifname $NetName autoconnect yes type ethernet ip4 10.0.0.52/24 ipv4.dns &quot;202.103.24.68&quot; ipv4.gateway &quot;10.0.0.2&quot;nmcli connection reload```file# 配置hosts解析if [ -z &quot;$(grep &apos;OpenStack_0&apos; /etc/hosts)&quot; ];thencat &lt;&lt;EOF  &gt;&gt;/etc/hosts# OpenStack_0   $(date +&apos;%F %T&apos;)10.0.0.11       controller10.0.0.31       compute110.0.0.41       block110.0.0.51       object110.0.0.52       object2EOFfi# ssh免秘钥curl http://home.onlycloud.xin/code/SSH_KEY -o ~/SSH_KEY. ~/SSH_KEYSSH_KEY controllerSSH_KEY compute1SSH_KEY block1SSH_KEY object1SSH_KEY object2# 同步hosts,关闭防火墙,selinux,yum源for node in controller compute1 block1 object1 object2; do    echo &quot;--------------- $node ---------------&quot;    scp /etc/hosts $node:/etc/hosts    ssh $node &quot;    # 关闭, 禁用 firewalld    systemctl stop firewalld    systemctl disable firewalld    firewall-cmd --state    # 关闭, 禁用 selinux    setenforce 0    sed -i &apos;/^SELINUX=.*/c SELINUX=disabled&apos; /etc/selinux/config    grep --color=auto &apos;^SELINUX&apos; /etc/selinux/config    # 下载阿里云yum源    rm -f /etc/yum.repos.d/*    curl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.repo    sed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repo    sed -i &apos;s/ONBOOT=.*/ONBOOT=yes/&apos; /etc/sysconfig/network-scripts/ifcfg-ens34    sed -i &apos;s/BOOTPROTO=.*/BOOTPROTO=none/&apos; /etc/sysconfig/network-scripts/ifcfg-ens34&quot;done# 网络测试for node in controller compute1 block1 object1 object2; do    echo &quot;--------------- $node ---------------&quot;    ssh $node &quot;    ping -c 3 openstack.org    ping -c 3 controller    ping -c 3 compute1&quot;done########################################################################################################################################  配置本地YUM  ################### 挂载共享mkdir /mnt/yum_pikeecho &apos;//192.168.0.50/openstack /mnt cifs username=admin,vers=2.0,rw&apos; &gt;&gt;/etc/fstabmount -a# 设置yum下载目录mkdir -p /www/share/yumcp /etc/yum.conf{,.bak}sed -i &apos;s#^keepcache=0#keepcache=1#&apos; /etc/yum.confsed -i &apos;s/^cachedir/#cachedir/&apos; /etc/yum.confsed -ir &apos;3 icachedir=/www/share/yum/$basearch/$releasever \n&apos; /etc/yum.confhead /etc/yum.conf# 移动包到新的路径find /www/share/yum/ -name *.rpm |sed -r &apos;s#.*#mv &amp; /mnt/tmp/\n#&apos;|bashyum install -y createrepocreaterepo -pdo  /mnt/tmp/ /mnt/tmp/mv /mnt/tmp/* /mnt/yum_pike# 创建源文件cat &lt;&lt;EOF &gt;/mnt/yum/openstack-pike.repo[My_share]name=My_Soucebaseurl=http://192.168.0.2/yum_pike/gpgcheck=0enabled=1cost=88gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7EOFrm -f /etc/yum.repos.d/*curl http://192.168.0.2/yum/openstack-pike.repo -o /etc/yum.repos.d/openstack-pike.repo########################################################################################################################################  生成 OpenStack 密码, chrony时间同步  ########################################### 生成OpenStack所需密码 文件if [ ! -f /etc/PASS ];thenlist=&apos;ROOT_DBPASS ADMIN_PASS CINDER_DBPASS CINDER_PASS DASH_DBPASS DEMO_PASS GLANCE_DBPASS GLANCE_PASS KEYSTONE_DBPASS  METADATA_SECRET NEUTRON_DBPASS NEUTRON_PASS NOVA_DBPASS NOVA_PASS PLACEMENT_PASS RABBIT_PASS DEMO_PASS&apos;for user in $list; do    echo &quot;# $user&quot; | tee -a PASS    echo -e &quot;$user=$(openssl rand -hex 10)\n&quot; | tee -a ~/PASSdonecp ~/PASS /etc/PASScat ~/PASS. ~/PASSfi# 同步密码文件到其他节点scp ~/PASS compute1:~/PASSscp ~/PASS block1:~/PASSscp ~/PASS object1:~/PASSscp ~/PASS object2:~/PASS# 配置ntp(服务端)# 安装 chronyyum install -y chrony# chrony 服务端配置文件cat &lt;&lt;EOF  &gt;/etc/chrony.conf# net server $(date +&apos;%F %T&apos;)server ntp.aliyun.com iburstdriftfile /var/lib/chrony/driftmakestep 1.0 3rtcsynclogdir /var/log/chrony# 允许同步的网段allow 10.0.0.0/24EOF# 跟随系统启动, 启动服务systemctl enable chronydsystemctl start chronyd# 验证chronyc sources# 配置ntp(客户端)for node in controller compute1 block1 object1 object2; do    echo &quot;--------------- $node ---------------&quot;    ssh -T $node &lt;&lt;EOF    # 安装 chrony    yum install -y chrony    echo &quot;# ntp client $(date +&apos;%F %T&apos;)&quot; &gt;/etc/chrony.conf    echo &apos;server controller iburst&apos; &gt;&gt;/etc/chrony.conf    echo &apos;driftfile /var/lib/chrony/drift&apos; &gt;&gt;/etc/chrony.conf    echo &apos;makestep 1.0 3&apos; &gt;&gt;/etc/chrony.conf    echo &apos;rtcsync&apos; &gt;&gt;/etc/chrony.conf    echo &apos;logdir /var/log/chrony&apos; &gt;&gt;/etc/chrony.conf    # 跟随系统启动, 启动服务    systemctl enable chronyd    systemctl restart chronyd    # 验证    chronyc sourcesEOFdone# 配置OpenStack 安装源 openstack 客户端工具 selinuxfor node in compute1 block1 object1 object2; do    echo &quot;--------------- $node ---------------&quot;    ssh -T $node &lt;&lt;&apos;EOF&apos;    # 启用 OpenStack 存储库    yum install -y centos-release-openstack-pike    # 替换QEMU 安装源    sed -i &apos;s/$contentdir/centos/&apos; /etc/yum.repos.d/CentOS-QEMU-EV.repo    yum install -y https://rdoproject.org/repos/rdo-release.rpm    # 安装openstack 客户端工具 selinux    # yum upgrade    yum install -y python-openstackclient openstack-selinuxEOFdone########################################################################################################################################  安装MariaDB 数据库(控制节点)  #################################### 安装 mariadbyum install -y mariadb mariadb-server python2-PyMySQL# 创建 openstack 数据库配置cat &lt;&lt;EOF  &gt;/etc/my.cnf.d/openstack.cnf[mysqld]bind-address = 10.0.0.11default-storage-engine = innodbinnodb_file_per_table = onmax_connections = 4096collation-server = utf8_general_cicharacter-set-server = utf8EOF# 修改数据库最大连接数cat &lt;&lt;EOF  &gt;&gt;/etc/security/limits.confmysql soft nofile 65535mysql hard nofile 65535EOFmkdir /etc/systemd/system/mariadb.service.dcat &lt;&lt;EOF  &gt;/etc/systemd/system/mariadb.service.d/filelimit.conf[Service]LimitNOFILE=infinityEOF# 启动数据库服务,跟随系统启动systemctl enable mariadbsystemctl start mariadb# 初始化数据库(此处密码读取的 ~/PASS)/usr/bin/expect &lt;&lt;EOFset timeout 30spawn mysql_secure_installationexpect {    &quot;enter for none&quot; { send &quot;\r&quot;; exp_continue}    &quot;Y/n&quot; { send &quot;Y\r&quot; ; exp_continue}    &quot;password:&quot; { send &quot;$ROOT_DBPASS\r&quot;; exp_continue}    &quot;new password:&quot; { send &quot;$ROOT_DBPASS\r&quot;; exp_continue}    &quot;Y/n&quot; { send &quot;Y\r&quot; ; exp_continue}    eof { exit }}EOF########################################################################################################################################  安装 rabbitmq 消息队列服务, memcached, Etcd (控制节点)  ############################################################## 安装 rabbitmqyum install -y rabbitmq-server# 启动服务, 跟随系统启动systemctl enable rabbitmq-serversystemctl start rabbitmq-server# 启动 web 插件 WebUI http://IP:15672rabbitmq-plugins enable rabbitmq_management# 添加 openstack用户, 授权(此处密码读取的 ~/PASS)rabbitmqctl add_user openstack $RABBIT_PASSrabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;# 安装memcached (控制节点)yum install -y memcached python-memcached# 添加控制器节点的管理IP地址sed -i &apos;s/^OPTIONS/# OPTIONS/&apos; /etc/sysconfig/memcachedsed -i &apos;$a OPTIONS=&quot;-l 127.0.0.1,::1,controller&quot;&apos; /etc/sysconfig/memcached# 启动服务,配置服务随系统启动systemctl enable memcachedsystemctl start memcached# 安装 Etcd,一种分布式可靠的键值存储(控制节点)yum install -y etcd# 配置cat &lt;&lt;EOF  &gt;/etc/etcd/etcd.conf#[Member]ETCD_NAME=&quot;controller&quot;ETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;ETCD_LISTEN_PEER_URLS=&quot;http://10.0.0.11:2380&quot;ETCD_LISTEN_CLIENT_URLS=&quot;http://10.0.0.11:2379&quot;#[Clustering]ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://10.0.0.11:2380&quot;ETCD_ADVERTISE_CLIENT_URLS=&quot;http://10.0.0.11:2379&quot;ETCD_INITIAL_CLUSTER=&quot;controller=http://10.0.0.11:2380&quot;ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster-01&quot;ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;EOF# 启动服务,配置服务随系统启动systemctl enable etcdsystemctl start etcd########################################################################################################################################  安装配置 Keyston 服务, http (控制节点)  #############################################[Keystone 教程](https://docs.openstack.org/keystone/pike/install/index.html)# 创建数据库. ~/PASSmysql -u root -p$ROOT_DBPASS -te &quot;CREATE DATABASE keystone;GRANT ALL PRIVILEGES ON keystone.* TO &apos;keystone&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$KEYSTONE_DBPASS&apos;;GRANT ALL PRIVILEGES ON keystone.* TO &apos;keystone&apos;@&apos;%&apos; IDENTIFIED BY &apos;$KEYSTONE_DBPASS&apos;;select user,host from mysql.user;show databases;&quot;# 安装http, keystoneyum install -y openstack-keystone httpd mod_wsgi# keystone 配置cp /etc/keystone/keystone.conf{,.bak}cat &lt;&lt;EOF  &gt;/etc/keystone/keystone.conf[database]connection = mysql+pymysql://keystone:$KEYSTONE_DBPASS@controller/keystone[token]provider = fernetEOF# 初始化 keystone 数据库su -s /bin/sh -c &quot;keystone-manage db_sync&quot; keystone# 初始化Fernet密钥存储库keystone-manage fernet_setup --keystone-user keystone --keystone-group keystonekeystone-manage credential_setup --keystone-user keystone --keystone-group keystone# 创建服务APIkeystone-manage bootstrap --bootstrap-password $ADMIN_PASS \  --bootstrap-admin-url http://controller:35357/v3/ \  --bootstrap-internal-url http://controller:5000/v3/ \  --bootstrap-public-url http://controller:5000/v3/ \  --bootstrap-region-id RegionOne# 配置 httpcp /etc/httpd/conf/httpd.conf{,.bak}echo &apos;ServerName controller&apos; | tee -a /etc/httpd/conf/httpd.conf# 链接keytsone web配置文件ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/# 启动服务,配置服务随系统启动systemctl enable httpdsystemctl start httpd# 配置环境变量凭证export OS_USERNAME=adminexport OS_PASSWORD=$ADMIN_PASSexport OS_PROJECT_NAME=adminexport OS_USER_DOMAIN_NAME=Defaultexport OS_PROJECT_DOMAIN_NAME=Defaultexport OS_AUTH_URL=http://controller:35357/v3export OS_IDENTITY_API_VERSION=3# 创建 service 项目openstack project create --domain default --description &quot;Service Project&quot; service# 创建 demo 项目和用户openstack project create --domain default --description &quot;Demo Project&quot; demoopenstack user create --domain default --password=$DEMO_PASS demo# 创建 user 角色, 将 user 角色添加到dome 项目和用户openstack role create useropenstack role add --project demo --user demo user# 注销变量unset OS_AUTH_URL OS_PASSWORD# 请求 admin 身份验证令牌openstack --os-auth-url http://controller:35357/v3 \  --os-project-domain-name Default --os-user-domain-name Default \  --os-project-name admin --os-username admin --os-password $ADMIN_PASS token issue# 请求 demo 身份验证令牌openstack --os-auth-url http://controller:5000/v3 \  --os-project-domain-name Default --os-user-domain-name Default \  --os-project-name demo --os-username demo --os-password $DEMO_PASS token issue# 创建 admin 用户环境脚本cat &lt;&lt;EOF  &gt;~/admin-openrcexport OS_PROJECT_DOMAIN_NAME=Defaultexport OS_USER_DOMAIN_NAME=Defaultexport OS_PROJECT_NAME=adminexport OS_USERNAME=adminexport OS_PASSWORD=$ADMIN_PASSexport OS_AUTH_URL=http://controller:35357/v3export OS_IDENTITY_API_VERSION=3export OS_IMAGE_API_VERSION=2EOF# 创建 demo 用户环境脚本cat &lt;&lt;EOF  &gt;~/demo-openrcexport OS_PROJECT_DOMAIN_NAME=Defaultexport OS_USER_DOMAIN_NAME=Defaultexport OS_PROJECT_NAME=demoexport OS_USERNAME=demoexport OS_PASSWORD=$DEMO_PASSexport OS_AUTH_URL=http://controller:5000/v3export OS_IDENTITY_API_VERSION=3export OS_IMAGE_API_VERSION=2EOF# 验证凭证. ~/admin-openrcopenstack token issue. ~/demo-openrcopenstack token issue########################################################################################################################################  安装配置 Glance (控制节点)  #################################[glance 官方文档](https://docs.openstack.org/glance/pike/user/index.html)# 创建 glance 用户 数据库 授权mysql -u root -p$ROOT_DBPASS -te &quot;CREATE DATABASE glance;GRANT ALL PRIVILEGES ON glance.* TO &apos;glance&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$GLANCE_DBPASS&apos;;GRANT ALL PRIVILEGES ON glance.* TO &apos;glance&apos;@&apos;%&apos; IDENTIFIED BY &apos;$GLANCE_DBPASS&apos;;select user,host from mysql.user;show databases;&quot;# 创建 glance 用户, 授权. ~/admin-openrcopenstack user create --domain default --password=$GLANCE_PASS glanceopenstack role add --project service --user glance admin# 创建 glance 服务, APIopenstack service create --name glance --description &quot;OpenStack Image&quot; imageopenstack endpoint create --region RegionOne image public http://controller:9292openstack endpoint create --region RegionOne image internal http://controller:9292openstack endpoint create --region RegionOne image admin http://controller:9292# 安装 gnalceyum install -y openstack-glance# 配置 glance-apicp /etc/glance/glance-api.conf{,.bak}cat &lt;&lt;EOF  &gt;/etc/glance/glance-api.conf[database]connection = mysql+pymysql://glance:$GLANCE_DBPASS@controller/glance[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = glancepassword = $GLANCE_PASS[paste_deploy]flavor = keystone[glance_store]stores = file,httpdefault_store = filefilesystem_store_datadir = /var/lib/glance/images/EOF# 配置 glance-registrycp /etc/glance/glance-registry.conf{,.bak}cat &lt;&lt;EOF  &gt;/etc/glance/glance-registry.conf[database]connection = mysql+pymysql://glance:$GLANCE_DBPASS@controller/glance[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = glancepassword = $GLANCE_PASS[paste_deploy]flavor = keystoneEOF# 初始化 glance 数据库su -s /bin/sh -c &quot;glance-manage db_sync&quot; glance# 启动服务, 跟随系统启动systemctl enable openstack-glance-api openstack-glance-registrysystemctl start openstack-glance-api openstack-glance-registry# 验证(上传镜像)yum install -y wget. ~/admin-openrcwget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img# wget http://192.168.0.2/img/cirros-0.3.5-x86_64-disk.img# wget http://192.168.0.2/img/cirros-0.4.0-x86_64-disk.img# wget http://192.168.0.2/img/CentOS-7-x86_64-GenericCloud-1805.qcow2c# 使用QCOW2磁盘格式，qcow2格式和公共可见性将图像上载到Image服务 ，以便所有项目都可以访问它openstack image create &quot;cirros-3.5&quot; --file cirros-0.3.5-x86_64-disk.img --disk-format qcow2 --container-format bare --public# openstack image create &quot;cirros-4.0&quot; --file cirros-0.4.0-x86_64-disk.img --disk-format qcow2 --container-format bare --public# openstack image create &quot;CentOS-7.5&quot; --file CentOS-7-x86_64-GenericCloud-1805.qcow2c --disk-format qcow2 --container-format bare --public########################################################################################################################################  Nova 计算服务安装配置(控制节点)  ######################################[Nova 官方文档](https://docs.openstack.org/nova/pike/install/)[Nova 高级功能](https://docs.openstack.org/nova/pike/admin/index.html)# 创建 nova 数据库 用户 授权. ~/PASSmysql -u root -p$ROOT_DBPASS -te &quot;CREATE DATABASE nova_api;GRANT ALL PRIVILEGES ON nova_api.* TO &apos;nova&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;GRANT ALL PRIVILEGES ON nova_api.* TO &apos;nova&apos;@&apos;%&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;CREATE DATABASE nova;GRANT ALL PRIVILEGES ON nova.* TO &apos;nova&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;GRANT ALL PRIVILEGES ON nova.* TO &apos;nova&apos;@&apos;%&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;CREATE DATABASE nova_cell0;GRANT ALL PRIVILEGES ON nova_cell0.* TO &apos;nova&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;GRANT ALL PRIVILEGES ON nova_cell0.* TO &apos;nova&apos;@&apos;%&apos; IDENTIFIED BY &apos;$NOVA_DBPASS&apos;;select user,host from mysql.user;show databases;&quot;# 创建 navo 用户, 授权. ~/admin-openrcopenstack user create --domain default --password=$NOVA_PASS novaopenstack role add --project service --user nova admin# 创建 glance 服务, APIopenstack service create --name nova --description &quot;OpenStack Compute&quot; computeopenstack endpoint create --region RegionOne compute public http://controller:8774/v2.1openstack endpoint create --region RegionOne compute internal http://controller:8774/v2.1openstack endpoint create --region RegionOne compute admin http://controller:8774/v2.1# 创建 Placement 服务用户, 授权openstack user create --domain default --password=$PLACEMENT_PASS placementopenstack role add --project service --user placement admin# 创建Placement APIopenstack service create --name placement --description &quot;Placement API&quot; placementopenstack endpoint create --region RegionOne placement public http://controller:8778openstack endpoint create --region RegionOne placement internal http://controller:8778openstack endpoint create --region RegionOne placement admin http://controller:8778# 安装 novayum install -y openstack-nova-api openstack-nova-conductor openstack-nova-console \  openstack-nova-novncproxy openstack-nova-scheduler openstack-nova-placement-api# nova 配置cp /etc/nova/nova.conf{,.bak}cat &lt;&lt;&apos;EOF&apos;  &gt;/etc/nova/nova.conf[DEFAULT]my_ip = 10.0.0.11use_neutron = Trueenabled_apis = osapi_compute,metadatafirewall_driver = nova.virt.firewall.NoopFirewallDrivertransport_url = rabbit://openstack:$RABBIT_PASS@controller:5672[api_database]connection = mysql+pymysql://nova:$NOVA_DBPASS@controller/nova_api[database]connection = mysql+pymysql://nova:$NOVA_DBPASS@controller/nova[api]auth_strategy = keystone[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = novapassword = $NOVA_PASS[vnc]enabled = truevncserver_listen = $my_ipvncserver_proxyclient_address = $my_ip[glance]api_servers = http://controller:9292[oslo_concurrency]lock_path = /var/lib/nova/tmp[placement]os_region_name = RegionOneproject_domain_name = Defaultproject_name = serviceauth_type = passworduser_domain_name = Defaultauth_url = http://controller:35357/v3username = placementpassword = $PLACEMENT_PASSEOFsed -i &quot;s/\$RABBIT_PASS/$RABBIT_PASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$NOVA_DBPASS/$NOVA_DBPASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$NOVA_PASS/$NOVA_PASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$PLACEMENT_PASS/$PLACEMENT_PASS/&quot; /etc/nova/nova.conf# 配置 Placement API web服务cp /etc/httpd/conf.d/00-nova-placement-api.conf{,.bak}cat &lt;&lt;EOF  &gt;&gt;/etc/httpd/conf.d/00-nova-placement-api.conf# nova-placement-api&lt;Directory /usr/bin&gt;   &lt;IfVersion &gt;= 2.4&gt;      Require all granted   &lt;/IfVersion&gt;   &lt;IfVersion &lt; 2.4&gt;      Order allow,deny      Allow from all   &lt;/IfVersion&gt;&lt;/Directory&gt;EOF# 重启 httpsystemctl restart httpd# 初始化 nova_api, nova, nova_cell0 数据库su -s /bin/sh -c &quot;nova-manage api_db sync&quot; nova      # 此步骤有一个警告(官方提示 忽略弃用警告)su -s /bin/sh -c &quot;nova-manage cell_v2 create_cell --name=cell1 --verbose&quot; novasu -s /bin/sh -c &quot;nova-manage db sync&quot; nova# 验证nova-manage cell_v2 list_cellsmysql -h controller -u nova -p$NOVA_DBPASS -te &quot;use nova_api;show tables;&quot;mysql -h controller -u nova -p$NOVA_DBPASS -te &quot;use nova;show tables;&quot;mysql -h controller -u nova -p$NOVA_DBPASS -te &quot;use nova_cell0;show tables;&quot;# 启动服务, 配置服务跟随系统启动systemctl enable openstack-nova-api openstack-nova-consoleauth openstack-nova-scheduler \  openstack-nova-conductor openstack-nova-novncproxysystemctl start openstack-nova-api openstack-nova-consoleauth openstack-nova-scheduler \  openstack-nova-conductor openstack-nova-novncproxysystemctl status openstack-nova-api openstack-nova-consoleauth openstack-nova-scheduler \  openstack-nova-conductor openstack-nova-novncproxy# 验证openstack compute service list      # 列出 nova 服务组件进程状态openstack compute service list --service nova-compute      # 列出计算节点openstack catalog list      # 列出所有注册 APIopenstack image list      # 列出服务器上的镜像nova-status upgrade check      # 检测 Cells v2, 及API 状态(所有状态为 Result: Success)openstack host list      # 列出主机及其上运行的与nova相关的服务openstack host show compute1      # 显示主机上运行的实例的虚拟CPU总和,磁盘大小,########################################################################################################################################  neutron 网络服务安装配置(控制节点)  ########################################## 以下网络配置二选一 注意修改配置后需同步数据库,重启服务[官方文档](https://docs.openstack.org/neutron/pike/install/overview.html)# 安装和配置控制器节点# 此处供应商网络(Provide 203.0.113.0)为公网 管理网络(Management 10.0.0.0)为私有网# 创建 neutron 用户, 数据库, 授权. ~/PASSmysql -u root -p$ROOT_DBPASS -te &quot;CREATE DATABASE neutron;GRANT ALL PRIVILEGES ON neutron.* TO &apos;neutron&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$NEUTRON_DBPASS&apos;;GRANT ALL PRIVILEGES ON neutron.* TO &apos;neutron&apos;@&apos;%&apos; IDENTIFIED BY &apos;$NEUTRON_DBPASS&apos;;select user,host from mysql.user;show databases;&quot;# 创建 neutron 用户, 授权. ~/admin-openrcopenstack user create --domain default --password=$NEUTRON_PASS neutronopenstack role add --project service --user neutron admin# 创建 neutron 服务, APIopenstack service create --name neutron --description &quot;OpenStack Networking&quot; networkopenstack endpoint create --region RegionOne network public http://controller:9696openstack endpoint create --region RegionOne network internal http://controller:9696openstack endpoint create --region RegionOne network admin http://controller:9696openstack endpoint list      # 列出所有注册 API ( -f choose from &apos;csv&apos;, &apos;json&apos;, &apos;table&apos;, &apos;value&apos;, &apos;yaml&apos;)openstack catalog list      # 列出所有注册 API############################################################# 1.提供商网络 (Provider networks) 网络模式(二选一)  仅二层网络# 安装 neutron 及网络插件yum install -y openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables# 创建 neutron.conf 配置文件cp /etc/neutron/neutron.conf{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/neutron.conf[database]connection = mysql+pymysql://neutron:$NEUTRON_DBPASS@controller/neutron[DEFAULT]core_plugin = ml2service_plugins =auth_strategy = keystonenotify_nova_on_port_data_changes = truenotify_nova_on_port_status_changes = truetransport_url = rabbit://openstack:$RABBIT_PASS@controller[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = $NEUTRON_PASS[nova]auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = $NOVA_PASS[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF# 创建 插件ML2 配置文(二层网络 启用 flat vlan 网络, 将提供商网络配置为 provider 公网)cp /etc/neutron/plugins/ml2/ml2_conf.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/ml2_conf.ini[ml2]tenant_network_types =type_drivers = flat,vlanmechanism_drivers = linuxbridgeextension_drivers = port_security[ml2_type_flat]flat_networks = provider[securitygroup]enable_ipset = trueEOF# 配置Linux桥代理(此处provider 供商网络 公网地址网卡)cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:ens34[vxlan]enable_vxlan = false[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF# 配置DHCP代理cp /etc/neutron/dhcp_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/dhcp_agent.ini[DEFAULT]interface_driver = linuxbridgeenable_isolated_metadata = truedhcp_driver = neutron.agent.linux.dhcp.DnsmasqEOF############################################################# 2.自助服务网络 (Self-service networks) 网络模式(二选一)  二层三层网络# 安装 neutron 及网络插件yum install -y openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables# 创建 neutron.conf 配置文件cp /etc/neutron/neutron.conf{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/neutron.conf[database]connection = mysql+pymysql://neutron:$NEUTRON_DBPASS@controller/neutron[DEFAULT]core_plugin = ml2auth_strategy = keystoneservice_plugins = routerallow_overlapping_ips = truenotify_nova_on_port_data_changes = truenotify_nova_on_port_status_changes = truetransport_url = rabbit://openstack:$RABBIT_PASS@controller[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = $NEUTRON_PASS[nova]auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = $NOVA_PASS[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF# 创建 插件ML2 配置文(二层网络 启用 flat vlan 网络, 将提供商网络配置为 provider 公网)cp /etc/neutron/plugins/ml2/ml2_conf.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/ml2_conf.ini[ml2]tenant_network_types = vxlantype_drivers = flat,vlan,vxlanextension_drivers = port_securitymechanism_drivers = linuxbridge,l2population[ml2_type_flat]flat_networks = provider[ml2_type_vxlan]vni_ranges = 1:1000[securitygroup]enable_ipset = trueEOF# 配置Linux桥代理(此处provider 供商网络 公网地址网卡 local_ip 为控制器节点的管理IP地址)cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:ens34[vxlan]enable_vxlan = truel2_population = truelocal_ip = 10.0.0.11[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF# 配置第3层代理cp /etc/neutron/l3_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/l3_agent.ini[DEFAULT]interface_driver = linuxbridgeEOF# 配置DHCP代理cp /etc/neutron/dhcp_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/dhcp_agent.ini[DEFAULT]interface_driver = linuxbridgeenable_isolated_metadata = truedhcp_driver = neutron.agent.linux.dhcp.DnsmasqEOF##########  END  ############################################################## 配置元数据代理cp /etc/neutron/metadata_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/metadata_agent.ini[DEFAULT]nova_metadata_host = controllermetadata_proxy_shared_secret = $METADATA_SECRETEOF# 配置Compute服务以使用Networking服务cat &lt;&lt;EOF   &gt;&gt;/etc/nova/nova.conf[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = $NEUTRON_PASSservice_metadata_proxy = truemetadata_proxy_shared_secret = $METADATA_SECRETEOF# 链接配置文件ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini# 初始化数据库su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron# 重启 Compute API 服务systemctl restart openstack-nova-api# 启动网络服务, 配置服务跟随系统启动systemctl enable neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agentsystemctl start neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agent# 启动三层网络服务, 跟随系统启动(仅对于配置 2.自助服务网络)systemctl enable neutron-l3-agentsystemctl start neutron-l3-agent# 验证服务状态openstack network agent listopenstack service list#+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+#| ID                                   | Agent Type         | Host       | Availability Zone | Alive | State | Binary                    |#+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+#| 0256098d-80e6-41a1-8ff8-726c715e0bc1 | Linux bridge agent | controller | None              | :-)   | UP    | neutron-linuxbridge-agent |#| 16a3eaee-8ba1-4b4d-8908-f61908dda6bc | DHCP agent         | controller | nova              | :-)   | UP    | neutron-dhcp-agent        |#| adcee175-91a1-4ca9-909d-39bda3c01152 | Metadata agent     | controller | None              | :-)   | UP    | neutron-metadata-agent    |#+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+##########  END  ################################################################################################################################################################################################################################################################################  dashboard (控制节点)  ###########################[官方安装文档](https://docs.openstack.org/horizon/pike/install/index.html)[自定义Horizo](https://docs.openstack.org/horizon/pike/configuration/customizing.html)[自定义和配置仪表板](https://docs.openstack.org/horizon/pike/admin/customize-configure.html)[OpenStack仪表板用户文档](https://docs.openstack.org/horizon/pike/user/index.html)# 安装 dashboardyum install -y openstack-dashboard# 备份默认配置文件cp /etc/openstack-dashboard/local_settings{,.bak}Setfiles=&apos;/etc/openstack-dashboard/local_settings&apos;# 配置仪表板以在 controller 节点上使用 OpenStack 服务sed -i &apos;s#OPENSTACK_HOST = &quot;127.0.0.1&quot;#OPENSTACK_HOST = &quot;controller&quot;#&apos; $Setfiles# 允许所有主机访问sed -i &quot;/ALLOWED_HOSTS/cALLOWED_HOSTS = [&apos;*&apos;, ]&quot; $Setfiles# 开启 memcahce 缓存sed -in &apos;158,163s/#//&apos; $Setfiles sed -in &apos;165,169s/.*/#&amp;/&apos; $Setfilessed -i &quot;157a SESSION_ENGINE = \&apos;django.contrib.sessions.backends.cache\&apos;&quot; $Setfilessed -i &quot;s/127.0.0.1:11211/controller:11211/&quot; $Setfiles# 启用对域的支持, 配置域名(取消注释,更改值为 True)sed -i &apos;/ULTIDOMAIN_SUPPORT/cOPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True&apos; $Setfilessed -i &quot;s@^#OPENSTACK_KEYSTONE_DEFAULT@OPENSTACK_KEYSTONE_DEFAULT@&quot; $Setfiles# 配置user为您通过仪表板创建的用户的默认角色sed -i &apos;s#_member_#user#g&apos; $Setfiles# 配置API版本cat &lt;&lt;EOF   &gt;&gt;$SetfilesOPENSTACK_API_VERSIONS = {    &quot;identity&quot;: 3,    &quot;image&quot;: 2,    &quot;volume&quot;: 2,}EOF# 修改时区sed -i &apos;s#UTC#Asia/Shanghai#g&apos; $Setfiles# 如果选择网络选项1, 禁用对第3层网络服务的支持sed -i &quot;324,331 s/True/False/&quot; $Setfiles# 如果选择网络选项2, 启用用对第3层网络服务的支持sed -i &quot;324,331 s/False/True/&quot; $Setfiles# 网页无法访问 dashboard 服务器内部错误解决方法sed -i &apos;3a WSGIApplicationGroup %{GLOBAL}&apos; /etc/httpd/conf.d/openstack-dashboard.conf# 重启 httpd, memcachedsystemctl restart httpd memcached########################################################################################################################################  存储  ###########[manila 存储配置](https://docs.openstack.org/manila/queens/install/)########################################################################################################################################  计算节点安装配置(计算节点)【compute1 :10.0.0.31】  ######################################################### 启用 OpenStack 存储库yum install -y centos-release-openstack-pike# 替换QEMU 安装源sed -i &apos;s/$contentdir/centos/&apos; /etc/yum.repos.d/CentOS-QEMU-EV.repoyum install -y https://rdoproject.org/repos/rdo-release.rpm# 安装openstack 客户端工具 selinux# yum upgradeyum install -y python-openstackclient openstack-selinux# 安装 nova-computeyum install -y openstack-nova-compute# 安装计算节点网络服务yum install -y openstack-neutron-linuxbridge ebtables ipset# 配置 nova. ~/PASScp /etc/nova/nova.conf{,.bak}cat &lt;&lt;&apos;EOF&apos; &gt;/etc/nova/nova.conf[DEFAULT]my_ip = 10.0.0.31use_neutron = Trueenabled_apis = osapi_compute,metadatafirewall_driver = nova.virt.firewall.NoopFirewallDrivertransport_url = rabbit://openstack:$RABBIT_PASS@controller[api]auth_strategy = keystone[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = novapassword = $NOVA_PASS[vnc]enabled = Truevncserver_listen = 0.0.0.0vncserver_proxyclient_address = $my_ipnovncproxy_base_url = http://controller:6080/vnc_auto.html[glance]api_servers = http://controller:9292[oslo_concurrency]lock_path = /var/lib/nova/tmp[placement]os_region_name = RegionOneproject_domain_name = Defaultproject_name = serviceauth_type = passworduser_domain_name = Defaultauth_url = http://controller:35357/v3username = placementpassword = $PLACEMENT_PASS# 虚拟机只能设置为 qemu 如果是物理机 则设置为 kvm# egrep -c &apos;(vmx|svm)&apos; /proc/cpuinfo[libvirt]virt_type = qemu[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = $NEUTRON_PASSEOF. ~/PASSsed -i &quot;s/\$RABBIT_PASS/$RABBIT_PASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$NOVA_PASS/$NOVA_PASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$PLACEMENT_PASS/$PLACEMENT_PASS/&quot; /etc/nova/nova.confsed -i &quot;s/\$NEUTRON_PASS/$NEUTRON_PASS/&quot; /etc/nova/nova.conf# 配置 neutroncp /etc/neutron/neutron.conf{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/neutron.conf[DEFAULT]auth_strategy = keystonetransport_url = rabbit://openstack:$RABBIT_PASS@controller[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = $NEUTRON_PASS[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF###################################################################  选择为控制器节点选择的相同网络选项，以配置特定于其的服务#  网络选项1：提供商网络# 配置Linux桥代理(此处provider 供商网络 公网地址网卡)cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:ens34[vxlan]enable_vxlan = false[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF###################################################################  选择与控制器节点选择的相同网络选项，以配置特定于其的服务#  网络选项2：自助服务网络# 配置Linux桥代理(此处provider 供商网络 公网地址网卡 local_ip 为控制器节点的管理IP地址)cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}cat &lt;&lt;EOF   &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:ens34[vxlan]enable_vxlan = truel2_population = truelocal_ip = 10.0.0.11[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF##########  END  #################################################################### 启动服务, 跟随系统启动systemctl enable libvirtd openstack-nova-compute neutron-linuxbridge-agentsystemctl start libvirtd openstack-nova-compute neutron-linuxbridge-agent################################################################### 发现计算节点 (在控制节点运行以下命令)# 手动发现, 注册 计算节点. ~/admin-openrc      # 获取 admin 凭证openstack compute service list --service nova-compute      # 查看列表中是否发现新的计算节点su -s /bin/sh -c &quot;nova-manage cell_v2 discover_hosts --verbose&quot; nova      # 注册计算节点# 自动发现, 注册 计算节点,控制节点 nova 配置文件添加以下配置[scheduler]discover_hosts_in_cells_interval = 300# 验证openstack compute service list      # 列出 nova 服务组件进程状态openstack compute service list --service nova-compute      # 列出计算节点openstack catalog list      # 列出所有注册 APIopenstack image list      # 列出服务器上的镜像nova-status upgrade check      # 检测 Cells v2, 及API 状态(所有状态为 Result: Success)openstack host list      # 列出主机及其上运行的与nova相关的服务openstack host show compute1      # 显示主机上运行的实例的虚拟CPU总和,磁盘大小,########################################################################################################################################  安装完成后初始化  ########################[启动一个实例](https://docs.openstack.org/install-guide/launch-instance.html)# 创建公钥(创建虚拟机时可以选择此公钥免密码登录 公钥名称：mykey)ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa      # 生成秘钥nova keypair-add --pub-key ~/.ssh/id_dsa.pub mykey      # 上传本地公钥到服务器nova keypair-list      # 查看公钥# 创建可用区域nova aggregate-create NOVA-Cluster_01 NOVA-Cluster_01      # 创建 NOVA-Cluster_01 区域nova aggregate-add-host NOVA-Cluster_01 compute1      # 将逐渐 compute1 添加到 NOVA-Cluster_01 区域nova aggregate-list      # 查看创建的区域# 创建安全规则 [开启 icmp, ssh(ping, ssh)]openstack security group rule create --proto icmp defaultopenstack security group rule create --proto tcp --dst-port 22 default# 创建实例类型openstack flavor create --id 0 --vcpus 1 --ram 64 --disk 1 m1.nano      # 创建实例类型 cpu:1 mem:64M disk:1Gopenstack flavor create --id 1 --vcpus 1 --ram 512 --disk 12 m2.nano      # 创建实例类型 cpu:1 mem:512M disk:12Gopenstack flavor list      # 列出所有实例##############################################################################################################################  创建网络[网络选项1：提供商网络 - 连接 ]  ############################################### 1.[提供商网络](https://docs.openstack.org/install-guide/launch-instance-networks-provider.html)# 2.[自助服务网络](https://docs.openstack.org/install-guide/launch-instance-networks-selfservice.html)# 如果不开启lan 类型网络则只能创建一个网络 [provider ：为公用网络 客户通过此网络访问虚拟机]# --share选项允许所有项目使用虚拟网络# --external选项将虚拟网络定义为外部。如果您希望创建内部网络，则可以使用--internal。默认值是internal# Management Netwock   10.0.0.0/24(私有网络, 管理网络)# Provicer  Network   203.0.113.0/24(公有网络, 提供外部访问虚拟机)NETWORK=&apos;203.0.113&apos;openstack network create --share --external --provider-physical-network provider \  --provider-network-type flat Provider_$NETWORK## 在网络上创建子网(在 Provider_$NETWORK 网络创建子网)openstack subnet create --network Provider_$NETWORK --allocation-pool start=$NETWORK.70,end=$NETWORK.100 \  --dns-nameserver 202.103.24.68 --gateway $NETWORK.2 --subnet-range $NETWORK.0/24 Provider_sub_$NETWORK##############################################################################################################################  开启 vlan 功能  ######################对应物理网卡连接交换机trunk，在交换机创建vlan，即可在openstack创建vlan网络)#控制节点 (provider对应网卡lable,在linuxbridge_agent.ini配置对应物理网卡)#配置 type_drivers、ml2_type_vlan (openstack-config 命令由 openstack-utils 包提供)openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types vlanopenstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers flat,vlanopenstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_vlan network_vlan_ranges provider:1001:2000systemctl restart neutron-server# 计算节点systemctl restart neutron-linuxbridge-agent# 创建 vlan 网络openstack network create --share --provider-segment=8 --provider-network-type=vlan --provider-physical-network provider vlan_192.168.4# 创建子网openstack subnet create --network vlan_192.168.4 --allocation-pool start=192.168.4.100,end=192.168.4.200 --dns-nameserver 119.29.29.29 \  --dns-nameserver 114.114.114.114 --gateway 192.168.4.1 --subnet-range 192.168.4.0/24 net_192.168.4# 创建虚拟机示例nova boot --flavor m1.nano --image cirros-0.4.0 --nic net-name=vlan_192.168.4 --security-group default --key-name mykey vm01##########  END  ########################################################################################################################################  END  ############################################################################################################################################################################################################################################################  创建虚拟机(下载镜像,上传镜像,创建虚拟机)  ################################################ 下载镜像wget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.imgwget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img# 上传镜像source ~/admin-openrcopenstack image create &quot;cirros-0.3.5&quot; --file cirros-0.3.5-x86_64-disk.img \  --disk-format qcow2 --container-format bare --publicopenstack image create &quot;cirros-0.4.0&quot; --file cirros-0.4.0-x86_64-disk.img \  --disk-format qcow2 --container-format bare --publicopenstack image list# 创建虚拟机nova boot --flavor m1.nano --image cirros-0.3.5 --nic net-name=Provider_$NETWORK \  --security-group default --key-name mykey_controller1 VM01nova boot --flavor m1.nano --image cirros-0.4.0 --nic net-name=Provider_$NETWORK \  --security-group default --key-name mykey_controller1 VM02openstack server list##########  END  ############################################################################################################################################################################################################################################################  开启 RabbitMQ Web管理(http://IP:15672)  ############################################## 开启插件rabbitmq-plugins enable rabbitmq_management# 创建用户 admin, 设置密码为 adminrabbitmqctl add_user admin admin# 给予 admin 用户管理员权限rabbitmqctl set_user_tags admin administrator# Web管理(http://IP:15672)##########  END  ##############################################################################################################################</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;#################################################################################################################################
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
      <category term="pike" scheme="https://home.onlycloud.xin/tags/pike/"/>
    
  </entry>
  
  <entry>
    <title>Neutron 服务的网络模式(Pike)</title>
    <link href="https://home.onlycloud.xin/posts/neutron-mod.html"/>
    <id>https://home.onlycloud.xin/posts/neutron-mod.html</id>
    <published>2018-08-02T07:51:11.000Z</published>
    <updated>2018-09-27T12:11:52.505Z</updated>
    
    <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><blockquote><p><a href="https://docs.openstack.org/neutron/queens/install/controller-install-option1-rdo.html#configure-the-server-component" target="_blank" rel="noopener">官方文档</a></p></blockquote><blockquote><p>网络选项1：部署了最简单的架构，该架构仅支持将实例附加到提供商（外部）网络。没有自助（私有）网络，路由器或浮动IP地址。只有该admin特权用户或其他特权用户才能管理提供商网络。</p></blockquote><blockquote><p>网络选项2：使用支持将实例附加到自助服务网络的第3层服务来增强选项1。该demo非特权用户或其他非特权用户可以管理自助服务网络，包括提供自助服务和提供商网络之间连接的路由器。此外，浮动IP地址提供与使用来自外部网络（如Internet）的自助服务网络的实例的连接。</p></blockquote><blockquote><p>自助服务网络通常使用覆盖网络。诸如VXLAN之类的覆盖网络协议包括额外的报头，这些报头增加了开销并减少了有效载荷或用户数据的可用空间。在不了解虚拟网络基础设施的情况下，实例尝试使用1500字节的默认以太网最大传输单元（MTU）来发送分组。Networking服务自动通过DHCP为实例提供正确的MTU值。但是，某些云映像不使用DHCP或忽略DHCP MTU选项，需要使用元数据或脚本进行配置。</p></blockquote><h3 id="安装组件"><a href="#安装组件" class="headerlink" title="安装组件"></a>安装组件</h3><pre><code>yum install openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables</code></pre><h3 id="创建用户-数据库-授权-MariaDB"><a href="#创建用户-数据库-授权-MariaDB" class="headerlink" title="创建用户,数据库,授权(MariaDB)"></a>创建用户,数据库,授权(MariaDB)</h3><pre><code>mysql -u root -predhat -te &quot;create database neutron;grant all privileges on neutron.* to &apos;neutron&apos;@&apos;localhost&apos; identified by &apos;neutron&apos;;grant all privileges on neutron.* to &apos;neutron&apos;@&apos;%&apos; identified by &apos;neutron&apos;;&quot;</code></pre><h3 id="创建服务凭据"><a href="#创建服务凭据" class="headerlink" title="创建服务凭据"></a>创建服务凭据</h3><pre><code>source ~/admin-openstack.shopenstack user create --domain default --password=neutron neutronopenstack role add --project service --user neutron adminopenstack service create --name neutron --description &quot;OpenStack Networking&quot; networkopenstack endpoint create --region RegionOne network public http://controller:9696openstack endpoint create --region RegionOne network internal http://controller:9696openstack endpoint create --region RegionOne network admin http://controller:9696</code></pre><h3 id="网络选项1：提供商网络"><a href="#网络选项1：提供商网络" class="headerlink" title="网络选项1：提供商网络"></a>网络选项1：提供商网络</h3><h4 id="neutron配置"><a href="#neutron配置" class="headerlink" title="neutron配置"></a>neutron配置</h4><pre><code>cat &lt;&lt;EOF &gt;/etc/neutron/neutron.conf[DEFAULT]bind_port = 9696bind_host = $(hostname)core_plugin = ml2service_plugins =transport_url = rabbit://openstack:openstack@controllerauth_strategy = keystonenotify_nova_on_port_status_changes = truenotify_nova_on_port_data_changes = true[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = neutron[nova]auth_url = http://controller:35357auth_type = passwordproject_domain_id = defaultuser_domain_id = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = nova[database]connection = mysql://neutron:neutron@controller:3306/neutron[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF</code></pre><h4 id="配置2层网络插件"><a href="#配置2层网络插件" class="headerlink" title="配置2层网络插件"></a>配置2层网络插件</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/plugins/ml2/ml2_conf.ini[ml2]tenant_network_types =type_drivers = flat,vlanmechanism_drivers = linuxbridgeextension_drivers = port_security[ml2_type_flat]flat_networks = provider[securitygroup]enable_ipset = trueEOF</code></pre><hr><blockquote><p>链接配置文件</p></blockquote><pre><code>ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</code></pre><hr><h4 id="配置Linux桥代理"><a href="#配置Linux桥代理" class="headerlink" title="配置Linux桥代理"></a>配置Linux桥代理</h4><blockquote><p>NetName 为底层提供网络的物理接口(此处一般选公网网卡)</p></blockquote><pre><code>NetName=ens34cat &lt;&lt;EOF  &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:$NetName[vxlan]enable_vxlan = false[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF</code></pre><h4 id="开启内核支持网桥过滤器"><a href="#开启内核支持网桥过滤器" class="headerlink" title="开启内核支持网桥过滤器"></a>开启内核支持网桥过滤器</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/sysctl.confnet.bridge.bridge-nf-call-iptables = 1net.bridge.bridge-nf-call-ip6tables = 1EOFsysctl -p</code></pre><h4 id="配置DHCP代理"><a href="#配置DHCP代理" class="headerlink" title="配置DHCP代理"></a>配置DHCP代理</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/dhcp_agent.ini[DEFAULT] interface_driver = linuxbridge dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq enable_isolated_metadata = trueEOF</code></pre><hr><h4 id="配置元数据代理"><a href="#配置元数据代理" class="headerlink" title="配置元数据代理"></a>配置元数据代理</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/metadata_agent.ini[DEFAULT]nova_metadata_ip = controllermetadata_proxy_shared_secret = metadataEOF</code></pre><h4 id="配置计算服务网络"><a href="#配置计算服务网络" class="headerlink" title="配置计算服务网络"></a>配置计算服务网络</h4><pre><code>cat &lt;&lt;EOF  &gt;&gt;/etc/nova/nova.conf# Neutron[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = neutronservice_metadata_proxy = truemetadata_proxy_shared_secret = metadataEOF</code></pre><h4 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h4><pre><code>su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron</code></pre><h4 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h4><pre><code># 重启 nova-apisystemctl restart openstack-nova-api# 启动服务,跟随系统启动systemctl enable neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agentsystemctl start neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agent</code></pre><h3 id="网络选项2：自助服务网络"><a href="#网络选项2：自助服务网络" class="headerlink" title="网络选项2：自助服务网络"></a>网络选项2：自助服务网络</h3><h4 id="neutron-配置"><a href="#neutron-配置" class="headerlink" title="neutron 配置"></a>neutron 配置</h4><pre><code>cat &lt;&lt;EOF &gt;/etc/neutron/neutron.conf[DEFAULT]bind_port = 9696bind_host = $(hostname)core_plugin = ml2service_plugins = routerallow_overlapping_ips = true   transport_url = rabbit://openstack:openstack@controllerauth_strategy = keystonenotify_nova_on_port_status_changes = truenotify_nova_on_port_data_changes = true[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = neutron[nova]auth_url = http://controller:35357auth_type = passwordproject_domain_id = defaultuser_domain_id = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = nova[database]connection = mysql://neutron:neutron@controller:3306/neutron[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF</code></pre><h4 id="配置2层网络插件-1"><a href="#配置2层网络插件-1" class="headerlink" title="配置2层网络插件"></a>配置2层网络插件</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/plugins/ml2/ml2_conf.ini[ml2]tenant_network_types = vxlantype_drivers = flat,vlan,vxlanmechanism_drivers = linuxbridge,l2populationextension_drivers = port_security[ml2_type_flat]flat_networks = provider[ml2_type_vxlan]vni_ranges = 1:1000[securitygroup]enable_ipset = trueEOF</code></pre><hr><blockquote><p>链接配置文件</p></blockquote><pre><code>ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</code></pre><hr><h4 id="配置Linux桥代理-1"><a href="#配置Linux桥代理-1" class="headerlink" title="配置Linux桥代理"></a>配置Linux桥代理</h4><blockquote><p>NetName 为底层提供网络的物理接口(此处一般选公网网卡)</p></blockquote><pre><code>NetName=ens34# 获取第二块网卡IPIP=$(ip add | grep global | grep -v &apos;secondary&apos; |awk -F&apos;[ /]+&apos; &apos;{ print $3 }&apos; | tail -1)cat &lt;&lt;EOF  &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:$NetName[vxlan]enable_vxlan = truelocal_ip = $IPl2_population = true[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF</code></pre><h4 id="开启内核支持网桥过滤器-1"><a href="#开启内核支持网桥过滤器-1" class="headerlink" title="开启内核支持网桥过滤器"></a>开启内核支持网桥过滤器</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/sysctl.confnet.bridge.bridge-nf-call-iptables = 1net.bridge.bridge-nf-call-ip6tables = 1EOFsysctl -p</code></pre><h4 id="配置第3层代理"><a href="#配置第3层代理" class="headerlink" title="配置第3层代理"></a>配置第3层代理</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/l3_agent.ini[DEFAULT] interface_driver  =  linuxbridgeEOF</code></pre><h4 id="配置DHCP代理-1"><a href="#配置DHCP代理-1" class="headerlink" title="配置DHCP代理"></a>配置DHCP代理</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/dhcp_agent.ini[DEFAULT] interface_driver = linuxbridge dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq enable_isolated_metadata = trueEOF</code></pre><h4 id="配置元数据代理-1"><a href="#配置元数据代理-1" class="headerlink" title="配置元数据代理"></a>配置元数据代理</h4><pre><code>cat &lt;&lt;EOF  &gt;/etc/neutron/metadata_agent.ini[DEFAULT]nova_metadata_ip = controllermetadata_proxy_shared_secret = metadataEOF</code></pre><h4 id="配置计算服务网络-1"><a href="#配置计算服务网络-1" class="headerlink" title="配置计算服务网络"></a>配置计算服务网络</h4><pre><code>cat &lt;&lt;EOF  &gt;&gt;/etc/nova/nova.conf# Neutron[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = neutronservice_metadata_proxy = truemetadata_proxy_shared_secret = metadataEOF</code></pre><h4 id="初始化数据库-1"><a href="#初始化数据库-1" class="headerlink" title="初始化数据库"></a>初始化数据库</h4><pre><code>su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron</code></pre><h4 id="服务配置-1"><a href="#服务配置-1" class="headerlink" title="服务配置"></a>服务配置</h4><pre><code># 重启 nova-apisystemctl restart openstack-nova-api# 启动服务,跟随系统启动systemctl enable neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agentsystemctl start neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agent# 启动第3层服务(仅对于网络选项2)systemctl enable neutron-l3-agentsystemctl start neutron-l3-agent</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.openstack.org/neutron/queens/instal
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
      <category term="neutron" scheme="https://home.onlycloud.xin/tags/neutron/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack集群安装-13_创建虚拟机</title>
    <link href="https://home.onlycloud.xin/posts/openstack-13.html"/>
    <id>https://home.onlycloud.xin/posts/openstack-13.html</id>
    <published>2018-07-31T16:34:01.000Z</published>
    <updated>2018-09-27T12:11:52.125Z</updated>
    
    <content type="html"><![CDATA[<h2 id="上传公钥"><a href="#上传公钥" class="headerlink" title="上传公钥"></a>上传公钥</h2><pre><code>source ~/admin-openstack.shnova keypair-add --pub-key ~/.ssh/id_dsa.pub mykey_controller1</code></pre><h2 id="创建可以用区域"><a href="#创建可以用区域" class="headerlink" title="创建可以用区域"></a>创建可以用区域</h2><pre><code>nova aggregate-create Dell01 Dell01nova aggregate-list</code></pre><hr><blockquote><p>添加主机</p></blockquote><pre><code>nova aggregate-add-host Dell01 computer01</code></pre><h2 id="创建安全规则"><a href="#创建安全规则" class="headerlink" title="创建安全规则"></a>创建安全规则</h2><pre><code>openstack security group rule create --proto icmp defaultopenstack security group rule create --proto tcp --dst-port 22 &apos;default&apos;</code></pre><h2 id="创建网络"><a href="#创建网络" class="headerlink" title="创建网络"></a>创建网络</h2><h3 id="获取本机网段"><a href="#获取本机网段" class="headerlink" title="获取本机网段"></a>获取本机网段</h3><pre><code>IP=$(ip add|grep global|awk -F&apos;[ /]+&apos; &apos;{ print $3 }&apos;|head -n 1)IPS=$(echo $IP|awk -F\. &apos;{ print $1&quot;.&quot;$2&quot;.&quot;$3 }&apos;)</code></pre><h3 id="创建网络-1"><a href="#创建网络-1" class="headerlink" title="创建网络"></a>创建网络</h3><pre><code>openstack network create --share --external --provider-physical-network provider \  --provider-network-type flat lan_$IPS</code></pre><h3 id="创建子网"><a href="#创建子网" class="headerlink" title="创建子网"></a>创建子网</h3><pre><code>openstack subnet create --network lan_$IPS --allocation-pool start=$IPS.70,end=$IPS.100 \  --dns-nameserver 223.5.5.5 --gateway $IPS.1 --subnet-range $IPS.0/24 net_$IPS</code></pre><h3 id="创建实例类型"><a href="#创建实例类型" class="headerlink" title="创建实例类型"></a>创建实例类型</h3><pre><code>openstack flavor create --id 1 --vcpus 1 --ram 512 --disk 5  m1.nanoopenstack flavor create --id 2 --vcpus 1 --ram 512 --disk 12  m2.nanoopenstack flavor create --id 3 --vcpus 2 --ram 1024 --disk 12  m3.nano</code></pre><h2 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h2><h3 id="下载测试镜像"><a href="#下载测试镜像" class="headerlink" title="下载测试镜像"></a>下载测试镜像</h3><pre><code>wget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.imgwget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img</code></pre><h3 id="上传镜像-1"><a href="#上传镜像-1" class="headerlink" title="上传镜像"></a>上传镜像</h3><blockquote><p>使用qcow2磁盘格式, bare容器格式, 上传镜像到镜像服务并设置公共可见</p></blockquote><pre><code>openstack image create &quot;cirros-0.3.5&quot; --file cirros-0.3.5-x86_64-disk.img \  --disk-format qcow2 --container-format bare --publicopenstack image create &quot;cirros-0.4.0&quot; --file cirros-0.4.0-x86_64-disk.img \  --disk-format qcow2 --container-format bare --public</code></pre><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><pre><code>nova boot --flavor m1.nano --image cirros-0.3.5 --nic net-name=lan_$IPS \  --security-group default --key-name mykey_controller1 VM01nova boot --flavor m1.nano --image cirros-0.4.0 --nic net-name=lan_$IPS \  --security-group default --key-name mykey_controller1 VM02</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre><code>openstack server listopenstack console url show VM01</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;上传公钥&quot;&gt;&lt;a href=&quot;#上传公钥&quot; class=&quot;headerlink&quot; title=&quot;上传公钥&quot;&gt;&lt;/a&gt;上传公钥&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;source ~/admin-openstack.sh
nova keypair-add --pub-key
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack Pike版安装部署汇总</title>
    <link href="https://home.onlycloud.xin/posts/openstack-readme.html"/>
    <id>https://home.onlycloud.xin/posts/openstack-readme.html</id>
    <published>2018-07-31T11:12:13.000Z</published>
    <updated>2018-09-27T12:11:52.688Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><pre><code># 系统环境 CentOS-7.4 最小化安装(CentOS-7-x86_64-Minimal-1708.iso)# controller1, controller2, controller3 为控制节点(高可用,负载均衡)# nfs 主机本地磁盘提供给 glance 镜像存储# cinder1 主机本地磁盘 nfs,lvm 提给 openstac 卷# computer1 提供计算服务</code></pre><style>/* 第一列表格宽度 */table th:nth-of-type(1){width: 26%;}/* 第二列表格宽度 */table th:nth-of-type(2){width: 74%;}</style><h3 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h3><table><thead><tr><th style="text-align:left">目录</th><th style="text-align:left">服务</th></tr></thead><tbody><tr><td style="text-align:left">00<a href="http://home.onlycloud.xin/posts/openstack-00.html">虚拟机初始化</a></td><td style="text-align:left">所有主机：虚拟机创建, 网络参数配置, 更改主机名</td></tr><tr><td style="text-align:left">01<a href="http://home.onlycloud.xin/posts/openstack-01.html">系统环境初始化</a></td><td style="text-align:left">所有主机：关闭 selinux, firewalld; 配置软件安装源, 时间同步, 常用工具</td></tr><tr><td style="text-align:left">02<a href="http://home.onlycloud.xin/posts/openstack-02.html">Haproxy集群高可用</a></td><td style="text-align:left">controller1, controller2, controller3 安装 pacemaker, haproxy 集群高可用</td></tr><tr><td style="text-align:left">03<a href="http://home.onlycloud.xin/posts/openstack-03.html">MariaDB-Galera-Cluster集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 MariaDB Galera 集群高可用</td></tr><tr><td style="text-align:left">04<a href="http://home.onlycloud.xin/posts/openstack-04.html">RabbitMQ-cluster集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 RabbitMQ 集群高可用</td></tr><tr><td style="text-align:left">05<a href="http://home.onlycloud.xin/posts/openstack-05.html">Keystone验证服务群集</a></td><td style="text-align:left">controller1, controller2, controller3 安装 Keystone 集群</td></tr><tr><td style="text-align:left">06<a href="http://home.onlycloud.xin/posts/openstack-06.html">Glance镜像服务集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 Glance-控制节点集群; nfs 提供 镜像存储</td></tr><tr><td style="text-align:left">07<a href="http://home.onlycloud.xin/posts/openstack-07.html">Nova-控制节点集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 Nova-控制节点集群</td></tr><tr><td style="text-align:left">08<a href="http://home.onlycloud.xin/posts/openstack-08.html">Neutron控制节点集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 Neutron控制节点集群</td></tr><tr><td style="text-align:left">09<a href="http://home.onlycloud.xin/posts/openstack-09.html">dashboard集群</a></td><td style="text-align:left">controller1, controller2, controller3 安装 dashboard集群</td></tr><tr><td style="text-align:left">10<a href="http://home.onlycloud.xin/posts/openstack-10.html">cinder存储安装</a></td><td style="text-align:left">controller1, controller2, controller3 安装 cinder存储控制节点集群; cinder 提供本地 lvm,nfs 存储</td></tr><tr><td style="text-align:left">11<a href="http://home.onlycloud.xin/posts/openstack-11.html">nova计算节点安装</a></td><td style="text-align:left">computer1, computer2 安装 nova计算节点</td></tr><tr><td style="text-align:left">12<a href="http://home.onlycloud.xin/posts/openstack-12.html">创建虚拟机</a></td><td style="text-align:left">任意有管理权限的节点(或使用 dashboard)</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;# 系统环境 CentOS-7.4 最小化安装(CentOS-7-x86_64-Minimal-1708.iso)
# co
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
  </entry>
  
  <entry>
    <title>创建内网OpenStack源(pike版)</title>
    <link href="https://home.onlycloud.xin/posts/openstack-install-13.html"/>
    <id>https://home.onlycloud.xin/posts/openstack-install-13.html</id>
    <published>2018-07-31T10:35:26.000Z</published>
    <updated>2018-09-29T15:59:09.025Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><pre><code># CentOS 7 最小化安装# 关闭, 禁用 firewalldsystemctl stop firewalldsystemctl disable firewalldfirewall-cmd --state# 关闭, 禁用 selinuxsetenforce 0sed -i &apos;/^SELINUX=.*/c SELINUX=disabled&apos; /etc/selinux/configgrep --color=auto &apos;^SELINUX&apos; /etc/selinux/config</code></pre><h2 id="YUM设置"><a href="#YUM设置" class="headerlink" title="YUM设置"></a>YUM设置</h2><blockquote><p>更改YUM缓存路径, 安装完成后不删除已下载软件包</p></blockquote><pre><code>mkdir -p /www/share/tmpcp /etc/yum.conf{,.bak}sed -i &apos;s#^keepcache=0#keepcache=1#&apos; /etc/yum.confsed -i &apos;s/^cachedir/#cachedir/&apos; /etc/yum.confsed -ir &apos;3 icachedir=/www/share/tmp/$basearch/$releasever \n&apos; /etc/yum.conf</code></pre><h2 id="配置-yum-epel-openstack-安装源"><a href="#配置-yum-epel-openstack-安装源" class="headerlink" title="配置 yum, epel, openstack 安装源"></a>配置 yum, epel, openstack 安装源</h2><pre><code>rm -f /etc/yum.repos.d/*curl -so /etc/yum.repos.d/Centos-7.repo http://mirrors.aliyun.com/repo/Centos-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/Centos-7.repoyum -y install epel-releaserm -rf /etc/yum.repos.d/epel*curl -so /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.reposed -i &apos;/aliyuncs.com/d&apos; /etc/yum.repos.d/epel-7.repo# 手动配置阿里云openstack源(关闭GPG验证 否则软件安装时会报错)cat &lt;&lt;&apos;EOF&apos; &gt;/etc/yum.repos.d/centos-openstack.repo[centos-openstack-pike]name=CentOS-$releasever-openstack-pikeenabled=1failovermethod=prioritybaseurl=http://mirrors.aliyun.com/centos/$releasever/cloud/$basearch/openstack-pikegpgcheck=0#gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7[centos-virt-kvm-common]name=CentOS-$releasever-virt-kvm-commonenabled=1failovermethod=prioritybaseurl=https://mirrors.aliyun.com/centos/$releasever/virt/$basearch/kvm-common/gpgcheck=0#gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7EOF</code></pre><h2 id="更新系统并重启"><a href="#更新系统并重启" class="headerlink" title="更新系统并重启"></a>更新系统并重启</h2><blockquote><p>系统更新完毕后需要重新执行上一步替换软装安装源</p></blockquote><pre><code>yum -y updatereboot</code></pre><h2 id="保下载的包"><a href="#保下载的包" class="headerlink" title="保下载的包"></a>保下载的包</h2><blockquote><p>将 /www/share/yum/ 目录下载的包移动到 /www/share/yum</p></blockquote><pre><code>mkdir /www/share/yumfind /www/share/tmp/ -name *.rpm |sed -r &apos;s#.*#mv &amp; /www/share/yum/\n#&apos;|bash</code></pre><h2 id="下载安装openstack-用到的包"><a href="#下载安装openstack-用到的包" class="headerlink" title="下载安装openstack 用到的包"></a>下载安装openstack 用到的包</h2><pre><code>List=&apos;wget vim ntpdate net-tools lrzsz lsof glances htop corosync pacemaker pcs fence-agents   resource-agents httpd haproxy python-openstackclient openstack-selinux openstack-utils expect   mariadb mariadb-server mariadb-galera-server rabbitmq-server erlang socat openstack-keystone   httpd mod_wsgi memcached python-memcached nfs-utils rpcbind openstack-glance python-glance   openstack-nova-api openstack-nova-conductor openstack-nova-console openstack-nova-novncproxy   openstack-nova-scheduler openstack-nova-placement-api openstack-neutron openstack-neutron-ml2   openstack-neutron-linuxbridge python-neutronclient ebtables ipset openstack-dashboard   openstack-cinder targetcli python-keystone lvm2 nfs-utils rpcbind python2-PyMySQL   openstack-nova-compute openstack-neutron-linuxbridge ebtables ipset&apos;for Package in $List; do    yum install -y --downloadonly --downloaddir=/www/share/yum $Packagedone</code></pre><h2 id="生成数据库文件"><a href="#生成数据库文件" class="headerlink" title="生成数据库文件"></a>生成数据库文件</h2><pre><code>yum install -y createrepocreaterepo -pdo  /www/share/yum /www/share/yum</code></pre><h2 id="安装-http"><a href="#安装-http" class="headerlink" title="安装 http"></a>安装 http</h2><pre><code>yum install -y httpdcat &lt;&lt;EOF &gt;/etc/httpd/conf.d/share.conf# http shareAlias /share /www/share&lt;Directory &quot;/www/share&quot;&gt;    Options Indexes FollowSymLinks    IndexOptions NameWidth=* DescriptionWidth=* FoldersFirst    IndexOptions SuppressIcon HTMLTable Charset=UTF-8 SuppressHTMLPreamble    Order allow,deny    Allow from all    Require all granted&lt;/Directory&gt;EOFsystemctl restart httpdsystemctl enable httpd</code></pre><h2 id="创建repo"><a href="#创建repo" class="headerlink" title="创建repo"></a>创建repo</h2><pre><code>cat &lt;&lt;EOF &gt;/www/share/loacl.repo[local_yum]name=My_Soucebaseurl=http://192.168.0.2/share/yum/gpgcheck=0enabled=1cost=88gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7EOF</code></pre><h2 id="添加软件"><a href="#添加软件" class="headerlink" title="添加软件"></a>添加软件</h2><pre><code># 下载没有安装过的包yum install --downloadonly --downloaddir=/www/share/yum/ -y 包名称# 下载已经安装过的包yum reinstall --downloadonly --downloaddir=/www/share/yum/ -y 包名称# 生成数据库createrepo -pdo  /www/share/yum /www/share/yumcreaterepo --update -pdo /www/share/yum /www/share/yum</code></pre><h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><pre><code>curl http://192.168.0.2/share/loacl.repo -o /etc/yum.repos.d/Lan7.repo</code></pre><p><a href="http://www.cnblogs.com/elvi/p/7657770.html" target="_blank" rel="noopener">参考</a>    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;# CentOS 7 最小化安装

# 关闭, 禁用 firewalld
systemctl stop fi
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
      <category term="yum" scheme="https://home.onlycloud.xin/tags/yum/"/>
    
      <category term="repo" scheme="https://home.onlycloud.xin/tags/repo/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack集群安装-11_nova计算节点安装</title>
    <link href="https://home.onlycloud.xin/posts/openstack-11.html"/>
    <id>https://home.onlycloud.xin/posts/openstack-11.html</id>
    <published>2018-07-29T16:49:42.000Z</published>
    <updated>2018-09-27T12:11:51.936Z</updated>
    
    <content type="html"><![CDATA[<pre><code># Computer 计算服务# 计算节点安装配置</code></pre><h2 id="计算节点安装"><a href="#计算节点安装" class="headerlink" title="计算节点安装"></a>计算节点安装</h2><h3 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h3><pre><code>curl http://home.onlycloud.xin/code/openstack-01_init.sh | sh</code></pre><h3 id="安装OpenStack客户端-工具"><a href="#安装OpenStack客户端-工具" class="headerlink" title="安装OpenStack客户端,工具"></a>安装OpenStack客户端,工具</h3><pre><code>yum install -y python-openstackclient openstack-selinux python2-PyMySQL openstack-utils</code></pre><h3 id="安装-Nova"><a href="#安装-Nova" class="headerlink" title="安装 Nova"></a>安装 Nova</h3><pre><code>yum install -y openstack-nova-compute</code></pre><h3 id="安装-Neutron"><a href="#安装-Neutron" class="headerlink" title="安装 Neutron"></a>安装 Neutron</h3><pre><code>yum install -y openstack-neutron-linuxbridge ebtables ipset</code></pre><h2 id="计算节点配置"><a href="#计算节点配置" class="headerlink" title="计算节点配置"></a>计算节点配置</h2><h3 id="备份默认配置"><a href="#备份默认配置" class="headerlink" title="备份默认配置"></a>备份默认配置</h3><pre><code>[ -f /etc/nova/nova.conf.bak ] || cp /etc/nova/nova.conf{,.bak}[ -f /etc/neutron/neutron.conf.bak ] || cp /etc/neutron/neutron.conf{,.bak}[ -f /etc/neutron/plugins/ml2/linuxbridge_agent.ini.bak ] || cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}</code></pre><h3 id="设置-Nova-实例路径-磁盘镜像文件"><a href="#设置-Nova-实例路径-磁盘镜像文件" class="headerlink" title="设置 Nova 实例路径(磁盘镜像文件)"></a>设置 Nova 实例路径(磁盘镜像文件)</h3><pre><code>Vdir=/date/novaVHD=$Vdir/instancesmkdir -p $VHDchown -R nova:nova $Vdir</code></pre><h3 id="虚拟化类型"><a href="#虚拟化类型" class="headerlink" title="虚拟化类型"></a>虚拟化类型</h3><blockquote><p>使用QEMU或KVM ,KVM硬件加速需要硬件支持,虚拟机使用 qemu</p></blockquote><pre><code>#[[ `egrep -c &apos;(vmx|svm)&apos; /proc/cpuinfo` = 0 ]] &amp;&amp; { Kvm=qemu; } || { Kvm=kvm; }Kvm=qemu</code></pre><h3 id="nova-配置"><a href="#nova-配置" class="headerlink" title="nova 配置"></a>nova 配置</h3><blockquote><p>获取第一块网卡名</p></blockquote><pre><code>Netname=$(ip add|egrep global|awk &apos;{ print $NF }&apos;|head -n 1)</code></pre><hr><blockquote><p>获取第一块网卡 ip地址</p></blockquote><pre><code>MyIP=$(ip add|grep global|awk -F&apos;[ /]+&apos; &apos;{ print $3 }&apos;|head -n 1)</code></pre><hr><blockquote><p>VNC代理地址vip</p></blockquote><pre><code>VncProxy=10.0.0.10</code></pre><hr><blockquote><p>创建 nova 配置文件</p></blockquote><pre><code>cat &lt;&lt;EOF  &gt;/etc/nova/nova.conf[DEFAULT]instances_path=&apos;$VHD&apos;enabled_apis = osapi_compute,metadatatransport_url = rabbit://openstack:openstack@controller:5673use_neutron = Truefirewall_driver = nova.virt.firewall.NoopFirewallDrivercpu_allocation_ratio = 4[api_database]connection = mysql+pymysql://nova:nova@controller/nova_api[database]connection = mysql+pymysql://nova:nova@controller/nova[api]auth_strategy = keystone[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = novapassword = nova[vnc]enabled = truevncserver_listen = 0.0.0.0vncserver_proxyclient_address = $MyIPnovncproxy_base_url = http://${VncProxy}:6080/vnc_auto.html[glance]api_servers = http://controller:9292[oslo_concurrency]lock_path = /var/lib/nova/tmp[placement]os_region_name = RegionOneproject_domain_name = Defaultproject_name = serviceauth_type = passworduser_domain_name = Defaultauth_url = http://controller:35357/v3username = placementpassword = placement[libvirt]virt_type = &apos;$Kvm&apos;[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = neutronEOF</code></pre><hr><blockquote><p>创建 neutron 配置文件</p></blockquote><pre><code>cat &lt;&lt;&apos;EOF&apos;  &gt;/etc/neutron/neutron.conf[DEFAULT]auth_strategy = keystonetransport_url = rabbit://openstack:openstack@controller:5673[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller:11211auth_type = passwordproject_domain_id = defaultuser_domain_id = defaultproject_name = serviceusername = neutronpassword = neutron[oslo_concurrency]lock_path = /var/lib/neutron/tmpEOF</code></pre><hr><blockquote><p>创建 linuxbridge-agent 配置文件</p></blockquote><pre><code>cat &lt;&lt;EOF &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:$Netname[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver[vxlan]enable_vxlan = false# local_ip = 10.0.0.21# l2_population = trueEOF</code></pre><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><blockquote><p>配置服务跟随系统启动, 启动服务</p></blockquote><pre><code>systemctl enable libvirtd openstack-nova-compute neutron-linuxbridge-agentsystemctl start libvirtd openstack-nova-compute neutron-linuxbridge-agent</code></pre><h2 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h2><pre><code>site=&apos;http://home.onlycloud.xin&apos;curl $site/code/openstack-11_nova.sh -o openstack-nova.shsh openstack-nova.sh</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;# Computer 计算服务
# 计算节点安装配置
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;计算节点安装&quot;&gt;&lt;a href=&quot;#计算节点安装&quot; class=&quot;headerlink&quot; title=&quot;计算节点安装&quot;&gt;&lt;/a&gt;计算节点安装&lt;/h2&gt;&lt;h3 id
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
      <category term="nova" scheme="https://home.onlycloud.xin/tags/nova/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack集群安装-10_cinder存储安装</title>
    <link href="https://home.onlycloud.xin/posts/openstack-10.html"/>
    <id>https://home.onlycloud.xin/posts/openstack-10.html</id>
    <published>2018-07-29T09:36:00.000Z</published>
    <updated>2018-09-27T12:11:51.558Z</updated>
    
    <content type="html"><![CDATA[<pre><code># Cinder 块存储# 控制节点安装配置 cinder-api, cinder-scheduler 服务# 存储节点安装配置 cinder-volume 服务</code></pre><h2 id="控制节点安装配置"><a href="#控制节点安装配置" class="headerlink" title="控制节点安装配置"></a>控制节点安装配置</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><blockquote><p>创建 cinder 数据库,用户,授权</p></blockquote><pre><code>source ~/PASS               # 读取数据库密码mysql -u root -p$DBPass -e &quot;create database cinder;grant all privileges on cinder.* to &apos;cinder&apos;@&apos;localhost&apos; identified by &apos;cinder&apos;;grant all privileges on cinder.* to &apos;cinder&apos;@&apos;%&apos; identified by &apos;cinder&apos;;flush privileges;select user,host from mysql.user;show databases;&quot;</code></pre><h4 id="创建-角色-服务-API"><a href="#创建-角色-服务-API" class="headerlink" title="创建,角色,服务,API"></a>创建,角色,服务,API</h4><blockquote><p>创建 cinder 角色,授权</p></blockquote><pre><code>source ~/admin-openstack.sh              # 加载凭证openstack user create --domain default --password=cinder cinderopenstack role add --project service --user cinder admin</code></pre><hr><blockquote><p>创建 glance 服务</p></blockquote><pre><code>openstack service create --name cinderv2   --description &quot;OpenStack Block Storage&quot; volumev2openstack service create --name cinderv3   --description &quot;OpenStack Block Storage&quot; volumev3openstack service list        # 查看服务</code></pre><hr><blockquote><p>注册 API</p></blockquote><pre><code>openstack endpoint create --region RegionOne volumev2 public http://controller:8776/v2/%\(project_id\)sopenstack endpoint create --region RegionOne volumev2 internal http://controller:8776/v2/%\(project_id\)sopenstack endpoint create --region RegionOne volumev2 admin http://controller:8776/v2/%\(project_id\)sopenstack endpoint create --region RegionOne volumev3 public http://controller:8776/v3/%\(project_id\)sopenstack endpoint create --region RegionOne volumev3 internal http://controller:8776/v3/%\(project_id\)sopenstack endpoint create --region RegionOne volumev3 admin http://controller:8776/v3/%\(project_id\)sopenstack endpoint list        # 查看注册的 API</code></pre><hr><h3 id="安装-Cinder"><a href="#安装-Cinder" class="headerlink" title="安装 Cinder"></a>安装 Cinder</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;&apos;EOF&apos;    # 安装 Cinder NFS    yum install -y openstack-cinder nfs-utils    # 备份默认配置文件    [ -f /etc/cinder/cinder.conf.bak ] || cp /etc/cinder/cinder.conf{,.bak}    # Nova 添加 cinder 配置    if [ -z &quot;$(grep &apos;Cinder&apos; /etc/nova/nova.conf)&quot; ];then        echo -e &apos;\n# Cinder&apos; &gt;&gt;/etc/nova/nova.conf        echo &apos;[cinder]&apos; &gt;&gt;/etc/nova/nova.conf        echo &apos;os_region_name = RegionOne&apos; &gt;&gt;/etc/nova/nova.conf    fiEOFdone</code></pre><h3 id="配置-Cinder"><a href="#配置-Cinder" class="headerlink" title="配置 Cinder"></a>配置 Cinder</h3><blockquote><p>Cinder 配置文件</p></blockquote><pre><code># 备份默认配置文件[ -f /etc/cinder/cinder.conf.bak ] || cp /etc/cinder/cinder.conf{,.bak}# 创建 Cinder 配置文件cat &lt;&lt;&apos;EOF&apos; &gt;/etc/cinder/cinder.conf[DEFAULT]osapi_volume_listen = controller1osapi_volume_listen_port = 8776auth_strategy = keystonelog_dir = /var/log/cinderstate_path = /var/lib/cinderglance_api_servers = http://controller:9292transport_url = rabbit://openstack:openstack@controller[database]connection = mysql+pymysql://cinder:cinder@controller/cinder[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211,controller2:11211,controller3:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = cinderpassword = cinder[oslo_concurrency]lock_path = /var/lib/cinder/tmpEOF</code></pre><hr><blockquote><p>同步配置到其他节点</p></blockquote><pre><code># 同步 cinder 配置文件, 修改其他节点监听主机rsync -avzP -e &apos;ssh -p 22&apos; /etc/cinder/cinder.conf controller2:/etc/cinder/rsync -avzP -e &apos;ssh -p 22&apos; /etc/cinder/cinder.conf controller3:/etc/cinder/ssh controller2 &quot;sed -i &apos;1,8s/controller1/controller2/&apos; /etc/cinder/cinder.conf&quot;ssh controller3 &quot;sed -i &apos;1,8s/controller1/controller3/&apos; /etc/cinder/cinder.conf&quot;</code></pre><hr><blockquote><p>初始化数据</p></blockquote><pre><code>su -s /bin/sh -c &quot;cinder-manage db sync&quot; cinder</code></pre><hr><blockquote><p>检验 cinder 数据库</p></blockquote><pre><code>mysql -h controller -u cinder -pcinder -e &quot;use cinder;show tables;&quot;</code></pre><h3 id="配置Haproxy"><a href="#配置Haproxy" class="headerlink" title="配置Haproxy"></a>配置Haproxy</h3><blockquote><p>Haproxy 代理 Cinder 配置</p></blockquote><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;&gt;/etc/haproxy/haproxy.cfg##########Cinder_API_cluster##########listen Cinder_API_cluster  bind controller:8776  #balance source  option tcpka  option httpchk  option tcplog  server controller1 controller1:8776 check inter 2000 rise 2 fall 5  server controller2 controller2:8776 check inter 2000 rise 2 fall 5  server controller3 controller3:8776 check inter 2000 rise 2 fall 5EOF</code></pre><hr><blockquote><p>同步配置到其他节点</p></blockquote><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/haproxy.cfg controller2:/etc/haproxy/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/haproxy.cfg controller3:/etc/haproxy/</code></pre><hr><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;&apos;EOF&apos;    # 重启 nova-api, haproxy    systemctl restart openstack-nova-api haproxy    # cinder服务跟随系统启动    systemctl enable openstack-cinder-api openstack-cinder-scheduler    # 启动 cinder 服务    systemctl start openstack-cinder-api openstack-cinder-schedulerEOFdone</code></pre><h3 id="添加-cinder1-主机免密码登录"><a href="#添加-cinder1-主机免密码登录" class="headerlink" title="添加 cinder1 主机免密码登录"></a>添加 cinder1 主机免密码登录</h3><pre><code>source ~/SSH_KEYSSH_KEY cinder1                        # controller1 免密码登录 cinder1scp /etc/hosts cinder1:/etc/           # 同步hostsscp ~/admin-openstack.sh cinder1:~/    # 同步 opentstack 管理员凭证</code></pre><h2 id="存储节点安装配置"><a href="#存储节点安装配置" class="headerlink" title="存储节点安装配置"></a>存储节点安装配置</h2><blockquote><p>cinder 主机执行</p></blockquote><blockquote><p>cinder 后端可以使用LVM, NFS,分布式存储等 (本次安装以LVM, NFS为例 /dev/sdb1: nfs  /dev/sdb2: lvm)</p></blockquote><h3 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h3><pre><code>curl http://home.onlycloud.xin/code/openstack-01_init.sh | sh</code></pre><h3 id="创建分区"><a href="#创建分区" class="headerlink" title="创建分区"></a>创建分区</h3><blockquote><p>快速分区,新建2个30G分区</p></blockquote><pre><code>echo -e &apos;n\np\n1\n\n+30G\nw&apos; | fdisk /dev/sdbecho -e &apos;n\np\n2\n\n+30G\nw&apos; | fdisk /dev/sdb</code></pre><hr><blockquote><p>格式化分区</p></blockquote><pre><code>mkfs.ext4 /dev/sdb1; mkfs.ext4 /dev/sdb2</code></pre><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><pre><code># 创建数据目录,挂载mkdir -p /data# 开机挂载磁盘echo &apos;/dev/sdb1       /data   ext4    defaults        0 0&apos; &gt;&gt;/etc/fstabmount -a</code></pre><h3 id="安装配置-Cinder"><a href="#安装配置-Cinder" class="headerlink" title="安装配置 Cinder"></a>安装配置 Cinder</h3><blockquote><p>安装 openstack 客户端, 工具, cinder, lvm2</p></blockquote><pre><code>yum install -y python-openstackclient openstack-selinux openstack-utilsyum install -y openstack-cinder targetcli python-keystone lvm2 nfs-utils rpcbind</code></pre><hr><blockquote><p>cinder 配置文件</p></blockquote><pre><code># 备份默认配置文件[ -f /etc/cinder/cinder.conf.bak ] || cp /etc/cinder/cinder.conf{,.bak}# 获取第一块网卡 ip地址MyIP=$(ip add|grep global|awk -F&apos;[ /]+&apos; &apos;{ print $3 }&apos;|head -n 1)# 创建 cinder 配置文件cat &lt;&lt;&apos;EOF&apos; &gt;/etc/cinder/cinder.conf[DEFAULT]auth_strategy = keystonelog_dir = /var/log/cinderstate_path = /var/lib/cinderglance_api_servers = http://controller:9292transport_url = rabbit://openstack:openstack@controllerenabled_backends = lvm,nfs[database]connection = mysql+pymysql://cinder:cinder@controller/cinder[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211,controller2:11211,controller3:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = cinderpassword = cinder[oslo_concurrency]lock_path = /var/lib/cinder/tmp[lvm]volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriveriscsi_helper = lioadmiscsi_protocol = iscsivolume_group = cinder_lvm01iscsi_ip_address = cinder_ipvolumes_dir = $state_path/volumesvolume_backend_name = lvm01[nfs]volume_driver = cinder.volume.drivers.nfs.NfsDrivernfs_shares_config = /etc/cinder/nfs_sharesnfs_mount_point_base = $state_path/mntvolume_backend_name = nfs01EOFsed -i &quot;s/cinder_ip/$MyIP/&quot; /etc/cinder/cinder.conf</code></pre><hr><blockquote><p>设置 cinder 配置文件权限</p></blockquote><pre><code>chmod 640 /etc/cinder/cinder.conf chgrp cinder /etc/cinder/cinder.conf </code></pre><hr><h3 id="配置-lvm-后端存储"><a href="#配置-lvm-后端存储" class="headerlink" title="配置 lvm 后端存储"></a>配置 lvm 后端存储</h3><blockquote><p>创建 LVM 物理卷 pv 与卷组 vg</p></blockquote><pre><code>echo -e &apos;y\n&apos; | pvcreate /dev/sdb2vgcreate cinder_lvm01 /dev/sdb2vgdisplay</code></pre><hr><blockquote><p>配置LVM过滤，只接收上面配置的lvm设备/dev/sdb2( sdb2 作为lvm 存储)</p></blockquote><pre><code># 备份lvm默认配置文件[ -f /etc/lvm/lvm.conf.bak ] || cp /etc/lvm/lvm.conf{,.bak}sed -i &apos;141a\        filter = [ &quot;a/sdb2/&quot;, &quot;r/.*/&quot;]&apos; /etc/lvm/lvm.conf</code></pre><hr><h3 id="配置-NFS-后端存储"><a href="#配置-NFS-后端存储" class="headerlink" title="配置 NFS 后端存储"></a>配置 NFS 后端存储</h3><pre><code># 获取第一块网卡 ip地址MyIP=$(ip add|grep global|awk -F&apos;[ /]+&apos; &apos;{ print $3 }&apos;|head -n 1)# 创建数据目录,设置目录权限mkdir -p /data/{cinder_nfs1,cinder_nfs2}chown cinder:cinder /data/cinder_nfs1chmod 777 /data/cinder_nfs1echo &quot;/data/cinder_nfs1 *(rw,root_squash,sync,anonuid=165,anongid=165)&quot;&gt;/etc/exportsexportfs -r# 配置 NFS 权限echo &quot;$MyIP:/data/cinder_nfs1&quot; &gt;/etc/cinder/nfs_shareschmod 640 /etc/cinder/nfs_shareschown root:cinder /etc/cinder/nfs_shares# 启动服务,设置开机启动, 验证 NFSsystemctl restart rpcbind nfs-serversystemctl enable rpcbind nfs-servershowmount -e localhost</code></pre><hr><h3 id="服务管理-1"><a href="#服务管理-1" class="headerlink" title="服务管理"></a>服务管理</h3><pre><code>systemctl enable openstack-cinder-api openstack-cinder-schedulersystemctl start openstack-cinder-api openstack-cinder-schedulersystemctl enable openstack-cinder-volume targetsystemctl start openstack-cinder-volume target</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre><code>source ~/admin-openstack.shcinder service-listopenstack volume service list     # 能看到存储节点@lvm, @nfs 且up状态说明配置成功+------------------+-------------+------+---------+-------+----------------------------+| Binary           | Host        | Zone | Status  | State | Updated At                 |+------------------+-------------+------+---------+-------+----------------------------+| cinder-scheduler | controller1 | nova | enabled | up    | 2018-07-29T13:22:04.000000 || cinder-scheduler | controller2 | nova | enabled | up    | 2018-07-29T13:22:10.000000 || cinder-scheduler | controller3 | nova | enabled | up    | 2018-07-29T13:22:05.000000 || cinder-scheduler | cinder1     | nova | enabled | up    | 2018-07-29T13:22:07.000000 || cinder-volume    | cinder1@lvm | nova | enabled | up    | 2018-07-29T13:22:08.000000 || cinder-volume    | cinder1@nfs | nova | enabled | up    | 2018-07-29T13:22:04.000000 |+------------------+-------------+------+---------+-------+----------------------------+</code></pre><h3 id="创建云硬盘"><a href="#创建云硬盘" class="headerlink" title="创建云硬盘"></a>创建云硬盘</h3><blockquote><p>创建云硬盘类型,关联volum</p></blockquote><pre><code># LVM # (backend_name与配置文件名对应)cinder type-create lvmcinder type-key lvm set volume_backend_name=lvm01# NFScinder type-create nfscinder type-key nfs set volume_backend_name=nfs01# checkcinder extra-specs-listcinder type-list# delete# cinder type-delete nfs# cinder type-delete lvm</code></pre><hr><blockquote><p>创建云盘(容量单位G)</p></blockquote><pre><code>openstack volume create --size 10 --type lvm disk01        # lvm类型openstack volume create --size 10 --type nfs disk02        # nfs类型openstack volume list</code></pre><hr><h2 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h2><blockquote><p>存储控制端(controller1 执行)</p></blockquote><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-10_cinder-cluster.sh -O openstack-cinder-cluster.shsh openstack-cinder-cluster.sh</code></pre><hr><blockquote><p>存储节点(controller1 执行)</p></blockquote><pre><code>ssh cinder1 &lt;&lt;EOFsite=&apos;http://home.onlycloud.xin&apos;curl $site/code/openstack-10_cinder.sh -o openstack-cinder.shsh openstack-cinder.shEOF</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;# Cinder 块存储
# 控制节点安装配置 cinder-api, cinder-scheduler 服务
# 存储节点安装配置 cinder-volume 服务
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;控制节点安装配置&quot;&gt;&lt;a href=&quot;#控制节点
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
      <category term="cinder" scheme="https://home.onlycloud.xin/tags/cinder/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack集群安装-09_dashboard集群</title>
    <link href="https://home.onlycloud.xin/posts/openstack-09.html"/>
    <id>https://home.onlycloud.xin/posts/openstack-09.html</id>
    <published>2018-07-28T08:40:00.000Z</published>
    <updated>2018-09-27T12:11:51.265Z</updated>
    
    <content type="html"><![CDATA[<pre><code>Dashboard 集群(控制节点)</code></pre><h3 id="安装Dashboard"><a href="#安装Dashboard" class="headerlink" title="安装Dashboard"></a>安装Dashboard</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;&apos;EOF&apos;    # 安装 dashboard    yum -y install openstack-dashboard    # 网页无法访问 dashboard 服务器内部错误解决方法    sed -i &apos;3a WSGIApplicationGroup %{GLOBAL}&apos; /etc/httpd/conf.d/openstack-dashboard.confEOFdone</code></pre><h3 id="配置Dashboard"><a href="#配置Dashboard" class="headerlink" title="配置Dashboard"></a>配置Dashboard</h3><pre><code># 备份默认配置[ -f /etc/openstack-dashboard/local_settings.bak ] || cp /etc/openstack-dashboard/local_settings{,.bak}# 修改配置文件# egrep -v &apos;#|^$&apos; /etc/openstack-dashboard/local_settings     # 显示默认配置Setfiles=/etc/openstack-dashboard/local_settingssed -i &apos;s#_member_#user#g&apos; $Setfilessed -i &apos;s#OPENSTACK_HOST = &quot;127.0.0.1&quot;#OPENSTACK_HOST = &quot;controller&quot;#&apos; $Setfiles# 允许所有主机访问sed -i &quot;/ALLOWED_HOSTS/cALLOWED_HOSTS = [&apos;*&apos;, ]&quot; $Setfiles# 去掉memcached注释sed -in &apos;153,158s/#//&apos; $Setfiles sed -in &apos;160,164s/.*/#&amp;/&apos; $Setfiles# 修改时区sed -i &apos;s#UTC#Asia/Shanghai#g&apos; $Setfilessed -i &apos;s#%s:5000/v2.0#%s:5000/v3#&apos; $Setfilessed -i &apos;/ULTIDOMAIN_SUPPORT/cOPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True&apos; $Setfilessed -i &quot;s@^#OPENSTACK_KEYSTONE_DEFAULT@OPENSTACK_KEYSTONE_DEFAULT@&quot; $Setfilesecho -e &quot;\n&quot; &gt;&gt;$Setfilesecho &apos;# set add&apos; &gt;&gt;$Setfilesecho &quot;OPENSTACK_API_VERSIONS = {&quot; &gt;&gt;$Setfilesecho -e &apos;    &quot;identity&quot;: 3,&apos; &gt;&gt;$Setfilesecho -e &apos;    &quot;image&quot;: 2,&apos; &gt;&gt;$Setfilesecho -e &apos;    &quot;volume&quot;: 2,&apos; &gt;&gt;$Setfilesecho &apos;}&apos; &gt;&gt;$Setfiles# 重启 httpdsystemctl restart httpd# 同步 controller1 配置到其它节点rsync -avzP  -e &apos;ssh -p 22&apos;  /etc/openstack-dashboard/local_settings  controller2:/etc/openstack-dashboard/rsync -avzP  -e &apos;ssh -p 22&apos;  /etc/openstack-dashboard/local_settings  controller3:/etc/openstack-dashboard/# 重启httpssh controller2 &quot;systemctl restart httpd&quot;ssh controller3 &quot;systemctl restart httpd&quot;</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><pre><code>#  通过集群 IP 访问Dashboard     http://10.0.0.10/dashboard/# #  http://10.0.0.10/dashboard/    http://192.168.16.21:8080/dashboard/#  http://192.168.0.11:8080/dashboard#  http://192.168.0.12:8080/dashboard#  http://192.168.0.13:8080/dashboard##  域      :  default#  用户名  :  admin#  密码    :  admin</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-09_dashboard-cluster.sh -O openstack-dashboard-cluster.shsh openstack-dashboard-cluster.sh</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;Dashboard 集群(控制节点)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;安装Dashboard&quot;&gt;&lt;a href=&quot;#安装Dashboard&quot; class=&quot;headerlink&quot; title=&quot;安装Dashboard&quot;&gt;&lt;/a&gt;安装Dashboar
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
      <category term="dashboard" scheme="https://home.onlycloud.xin/tags/dashboard/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack集群安装-08_Neutron控制节点集群</title>
    <link href="https://home.onlycloud.xin/posts/openstack-08.html"/>
    <id>https://home.onlycloud.xin/posts/openstack-08.html</id>
    <published>2018-07-27T12:30:00.000Z</published>
    <updated>2018-09-27T12:11:51.078Z</updated>
    
    <content type="html"><![CDATA[<pre><code>Neutron集群安装(控制节点)管理网为私有网 Provide为公网</code></pre><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="创建-neutron-数据库-用户-授权"><a href="#创建-neutron-数据库-用户-授权" class="headerlink" title="创建 neutron 数据库,用户, 授权"></a>创建 neutron 数据库,用户, 授权</h4><pre><code>source ~/PASS                        # 读取数据库密码mysql -u root -p$DBPass -e &quot;create database neutron;grant all privileges on neutron.* to &apos;neutron&apos;@&apos;localhost&apos; identified by &apos;neutron&apos;;grant all privileges on neutron.* to &apos;neutron&apos;@&apos;%&apos; identified by &apos;neutron&apos;;&quot;</code></pre><h4 id="创建-neutron-用户-添加-admin-角色"><a href="#创建-neutron-用户-添加-admin-角色" class="headerlink" title="创建 neutron 用户,添加 admin 角色"></a>创建 neutron 用户,添加 admin 角色</h4><pre><code>source ~/admin-openstack.sh    # 获取管理员凭证openstack user create --domain default --password=neutron neutronopenstack role add --project service --user neutron admin</code></pre><h4 id="创建-neutron-服务实体-API-端点"><a href="#创建-neutron-服务实体-API-端点" class="headerlink" title="创建 neutron 服务实体, API 端点"></a>创建 neutron 服务实体, API 端点</h4><pre><code>openstack service create --name neutron --description &quot;OpenStack Networking&quot; networkopenstack endpoint create --region RegionOne network public http://controller:9696openstack endpoint create --region RegionOne network internal http://controller:9696openstack endpoint create --region RegionOne network admin http://controller:9696</code></pre><h3 id="安装neutron"><a href="#安装neutron" class="headerlink" title="安装neutron"></a>安装neutron</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;EOF    yum install -y openstack-neutron openstack-neutron-ml2 \      openstack-neutron-linuxbridge python-neutronclient ebtables ipset    # 备份默认配置文件    [ -f /etc/neutron/neutron.conf.bak2 ] || cp /etc/neutron/neutron.conf{,.bak2}    [ -f /etc/neutron/plugins/ml2/ml2_conf.ini.bak ] || cp /etc/neutron/plugins/ml2/ml2_conf.ini{,.bak}    ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini    [ -f /etc/neutron/plugins/ml2/linuxbridge_agent.ini.bak ] || cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini{,.bak}    [ -f /etc/neutron/dhcp_agent.ini.bak ] || cp /etc/neutron/dhcp_agent.ini{,.bak}    [ -f /etc/neutron/metadata_agent.ini.bak ] || cp /etc/neutron/metadata_agent.ini{,.bak}    [ -f /etc/neutron/l3_agent.ini.bak ] || cp /etc/neutron/l3_agent.ini{,.bak}EOFdone</code></pre><h3 id="配置-neutron"><a href="#配置-neutron" class="headerlink" title="配置 neutron"></a>配置 neutron</h3><h4 id="创建-neutron-配置文件"><a href="#创建-neutron-配置文件" class="headerlink" title="创建 neutron 配置文件"></a>创建 neutron 配置文件</h4><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;&gt;/etc/nova/nova.conf# Neutron[neutron]url = http://controller:9696auth_url = http://controller:35357auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = neutronpassword = neutronservice_metadata_proxy = truemetadata_proxy_shared_secret = metadataEOFcat &lt;&lt;&apos;EOF&apos; &gt;/etc/neutron/metadata_agent.ini[DEFAULT]nova_metadata_ip = controllermetadata_proxy_shared_secret = metadataEOFcat &lt;&lt;&apos;EOF&apos; &gt;/etc/neutron/plugins/ml2/ml2_conf.ini[ml2]tenant_network_types = type_drivers = vlan,flatmechanism_drivers = linuxbridgeextension_drivers = port_security[ml2_type_flat]flat_networks = provider[securitygroup]enable_ipset = True#vlan# [ml2_type_valn]# network_vlan_ranges = provider:3001:4000EOF# 获取第一块网卡名Netname=$(ip add|egrep global|awk &apos;{ print $NF }&apos;|head -n 1)# provider:网卡名(公网网卡)cat &lt;&lt;EOF &gt;/etc/neutron/plugins/ml2/linuxbridge_agent.ini[linux_bridge]physical_interface_mappings = provider:$Netname[vxlan]enable_vxlan = false#local_ip = 10.0.0.10#l2_population = true[agent]prevent_arp_spoofing = True[securitygroup]firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverenable_security_group = TrueEOFcat &lt;&lt;&apos;EOF&apos; &gt;/etc/neutron/dhcp_agent.ini[DEFAULT]interface_driver = linuxbridgedhcp_driver = neutron.agent.linux.dhcp.Dnsmasqenable_isolated_metadata = trueEOF# 创建 neutron 配置文件cat &lt;&lt;EOF &gt;/etc/neutron/neutron.conf[DEFAULT]bind_port = 9696bind_host = controller1core_plugin = ml2service_plugins = routerallow_overlapping_ips = truetransport_url = rabbit://openstack:openstack@controllerauth_strategy = keystonenotify_nova_on_port_status_changes = truenotify_nova_on_port_data_changes = true[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = neutronpassword = neutron[nova]auth_url = http://controller:35357auth_type = passwordproject_domain_id = defaultuser_domain_id = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = nova[database]connection = mysql://neutron:neutron@controller:3306/neutron[oslo_concurrency]lock_path = /var/lib/neutron/tmp EOFcat &lt;&lt;&apos;EOF&apos; &gt;/etc/neutron/l3_agent.ini[DEFAULT]interface_driver = linuxbridgeEOF</code></pre><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><pre><code>su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron</code></pre><hr><blockquote><p>验证数据库</p></blockquote><pre><code>mysql -h controller -u neutron -pneutron -e &quot;use neutron;show tables;&quot;</code></pre><h3 id="Haproxy配置"><a href="#Haproxy配置" class="headerlink" title="Haproxy配置"></a>Haproxy配置</h3><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/haproxy/haproxy.cfg##########Neutron_API##########listen Neutron_API_cluster  bind controller:9696  balance source  option tcpka  option tcplog  server controller1 controller1:9696 check inter 2000 rise 2 fall 5  server controller2 controller2:9696 check inter 2000 rise 2 fall 5  server controller3 controller3:9696 check inter 2000 rise 2 fall 5EOF</code></pre><h3 id="同步配置"><a href="#同步配置" class="headerlink" title="同步配置"></a>同步配置</h3><blockquote><p>同步软件配置文件</p></blockquote><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/nova/* controller2:/etc/nova/rsync -avzP -e &apos;ssh -p 22&apos; /etc/nova/* controller3:/etc/nova/rsync -avzP -e &apos;ssh -p 22&apos; /etc/neutron/* controller2:/etc/neutron/rsync -avzP -e &apos;ssh -p 22&apos; /etc/neutron/* controller3:/etc/neutron/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/* controller2:/etc/haproxy/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/* controller3:/etc/haproxy/</code></pre><hr><blockquote><p>修改监听主机</p></blockquote><pre><code>ssh controller2 &quot;sed -i &apos;1,7s/controller1/controller2/&apos; /etc/nova/nova.conf&quot;ssh controller3 &quot;sed -i &apos;1,7s/controller1/controller3/&apos; /etc/nova/nova.conf&quot;ssh controller2 &quot;sed -i &apos;s/controller1/controller2/&apos; /etc/neutron/neutron.conf&quot;ssh controller3 &quot;sed -i &apos;s/controller1/controller3/&apos; /etc/neutron/neutron.conf&quot;</code></pre><h4 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h4><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;EOF    # 重启相关服务    systemctl restart haproxy openstack-nova-api    # 配置 neutron-server 相关服务随系统启动    systemctl enable neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agent    # 启动 neutron 相关服务    systemctl start neutron-server neutron-linuxbridge-agent neutron-dhcp-agent neutron-metadata-agentEOFdonesleep 5</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><blockquote><p>查看集群节点</p></blockquote><pre><code># 能看到 neutron-dhcp-agent neutron-metadata-agent 各3个openstack network agent listopenstack service list</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-08_neutron-cluster.sh -O openstack-neutron-cluster.shsh openstack-neutron-cluster.sh</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;Neutron集群安装(控制节点)
管理网为私有网 Provide为公网
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h3&gt;&lt;h4 
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
      <category term="neutron" scheme="https://home.onlycloud.xin/tags/neutron/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack集群安装-07_Nova-控制节点集群</title>
    <link href="https://home.onlycloud.xin/posts/openstack-07.html"/>
    <id>https://home.onlycloud.xin/posts/openstack-07.html</id>
    <published>2018-07-26T12:30:46.000Z</published>
    <updated>2018-09-27T12:11:50.830Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Nova集群安装-控制节点"><a href="#Nova集群安装-控制节点" class="headerlink" title="Nova集群安装(控制节点)"></a>Nova集群安装(控制节点)</h3><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><h5 id="创建-nova-api-和-nova-数据库-用户-授权"><a href="#创建-nova-api-和-nova-数据库-用户-授权" class="headerlink" title="创建 nova_api 和 nova 数据库,用户, 授权"></a>创建 nova_api 和 nova 数据库,用户, 授权</h5><pre><code>source ~/PASS                        # 读取数据库密码mysql -u root -p$DBPass -e &quot;create database nova;grant all privileges on nova.* to &apos;nova&apos;@&apos;localhost&apos; identified by &apos;nova&apos;;grant all privileges on nova.* to &apos;nova&apos;@&apos;%&apos; identified by &apos;nova&apos;;create database nova_api;grant all privileges on nova_api.* to &apos;nova&apos;@&apos;localhost&apos; identified by &apos;nova&apos;;grant all privileges on nova_api.* to &apos;nova&apos;@&apos;%&apos; identified by &apos;nova&apos;;create database nova_cell0;grant all privileges on nova_cell0.* to &apos;nova&apos;@&apos;localhost&apos; identified by &apos;nova&apos;;grant all privileges on nova_cell0.* to &apos;nova&apos;@&apos;%&apos; identified by &apos;nova&apos;;&quot;</code></pre><h5 id="创建nova用户-添加-admin-角色"><a href="#创建nova用户-添加-admin-角色" class="headerlink" title="创建nova用户,添加 admin 角色"></a>创建nova用户,添加 admin 角色</h5><pre><code>source ~/admin-openstack.sh    # 获取管理员凭证openstack user create --domain default --password=nova novaopenstack role add --project service --user nova admin</code></pre><h5 id="创建-compute-服务实体-API-端点"><a href="#创建-compute-服务实体-API-端点" class="headerlink" title="创建 compute 服务实体 API 端点"></a>创建 compute 服务实体 API 端点</h5><pre><code>openstack service create --name nova --description &quot;OpenStack Compute&quot; computeopenstack endpoint create --region RegionOne compute public http://controller:8774/v2.1openstack endpoint create --region RegionOne compute internal http://controller:8774/v2.1openstack endpoint create --region RegionOne compute admin http://controller:8774/v2.1</code></pre><h5 id="创建-placement-用户-添加-admin-角色"><a href="#创建-placement-用户-添加-admin-角色" class="headerlink" title="创建 placement 用户,添加 admin 角色"></a>创建 placement 用户,添加 admin 角色</h5><pre><code>openstack user create --domain default --password=placement placementopenstack role add --project service --user placement admin</code></pre><h5 id="创建-placement-服务实体-API-端点"><a href="#创建-placement-服务实体-API-端点" class="headerlink" title="创建 placement 服务实体 API 端点"></a>创建 placement 服务实体 API 端点</h5><pre><code>openstack service create --name placement --description &quot;Placement API&quot; placementopenstack endpoint create --region RegionOne placement public http://controller:8778openstack endpoint create --region RegionOne placement internal http://controller:8778openstack endpoint create --region RegionOne placement admin http://controller:8778</code></pre><h4 id="安装nova控制节点"><a href="#安装nova控制节点" class="headerlink" title="安装nova控制节点"></a>安装nova控制节点</h4><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;EOF    yum install -y openstack-nova-api openstack-nova-conductor \    openstack-nova-console openstack-nova-novncproxy \    openstack-nova-scheduler openstack-nova-placement-api    # 备份 nova 默认配置文件, 创建 nova 配置文件    [ -f /etc/nova/nova.conf.bak ] || cp /etc/nova/nova.conf{,.bak}EOFdone</code></pre><h3 id="Nova集群配置"><a href="#Nova集群配置" class="headerlink" title="Nova集群配置"></a>Nova集群配置</h3><h4 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h4><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;/etc/nova/nova.conf[DEFAULT]my_ip = controller1use_neutron = Trueosapi_compute_listen = controller1osapi_compute_listen_port = 8774metadata_listen = controller1metadata_listen_port = 8775firewall_driver = nova.virt.firewall.NoopFirewallDriverenabled_apis = osapi_compute,metadatatransport_url = rabbit://openstack:openstack@controller:5673[api_database]connection = mysql+pymysql://nova:nova@controller/nova_api[database]connection = mysql+pymysql://nova:nova@controller/nova[api]auth_strategy = keystone[keystone_authtoken]auth_uri = http://controller:5000auth_url = http://controller:35357memcached_servers = controller1:11211,controller2:11211,controller3:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = novapassword = nova[vnc]enabled = truevncserver_listen = $my_ipvncserver_proxyclient_address = $my_ipnovncproxy_host=$my_ipnovncproxy_port=6080[glance]api_servers = http://controller:9292[oslo_concurrency]lock_path = /var/lib/nova/tmp[placement]os_region_name = RegionOneproject_domain_name = Defaultproject_name = serviceauth_type = passworduser_domain_name = Defaultauth_url = http://controller:35357/v3username = placementpassword = placement[scheduler]discover_hosts_in_cells_interval = 300[cache]enabled = truebackend = oslo_cache.memcache_poolmemcache_servers = controller1:11211,controller2:11211,controller3:11211EOF</code></pre><h4 id="配置nova-alacement-api"><a href="#配置nova-alacement-api" class="headerlink" title="配置nova-alacement-api"></a>配置nova-alacement-api</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/httpd/conf.d/00-nova-placement-api.conf# Placement API&lt;Directory /usr/bin&gt;   &lt;IfVersion &gt;= 2.4&gt;      Require all granted   &lt;/IfVersion&gt;   &lt;IfVersion &lt; 2.4&gt;      Order allow,deny      Allow from all   &lt;/IfVersion&gt;&lt;/Directory&gt;EOF</code></pre><h4 id="初始化nova数据库"><a href="#初始化nova数据库" class="headerlink" title="初始化nova数据库"></a>初始化nova数据库</h4><pre><code>systemctl restart httpd; sleep 4                   # 重启httpdsu -s /bin/sh -c &quot;nova-manage api_db sync&quot; novasu -s /bin/sh -c &quot;nova-manage cell_v2 map_cell0&quot; novasu -s /bin/sh -c &quot;nova-manage cell_v2 create_cell --name=cell1 --verbose&quot; novasu -s /bin/sh -c &quot;nova-manage db sync&quot; nova        # 执行此命令会有两个警告如果出现报错请重复执行此条命令</code></pre><hr><blockquote><p>验证</p></blockquote><pre><code>nova-manage cell_v2 list_cellsmysql -h controller -u nova -pnova -te &quot;use nova_api;show tables;&quot;mysql -h controller -u nova -pnova -te &quot;use nova;show tables;&quot;mysql -h controller -u nova -pnova -te &quot;use nova_cell0;show tables;&quot;</code></pre><h4 id="更改默认端口8778给集群VIP使用"><a href="#更改默认端口8778给集群VIP使用" class="headerlink" title="更改默认端口8778给集群VIP使用"></a>更改默认端口8778给集群VIP使用</h4><pre><code>sed -i &apos;s/8778/9778/&apos; /etc/httpd/conf.d/00-nova-placement-api.confsystemctl restart httpd</code></pre><h3 id="Haproxy-配置"><a href="#Haproxy-配置" class="headerlink" title="Haproxy 配置"></a>Haproxy 配置</h3><h4 id="添加-Nova-代理"><a href="#添加-Nova-代理" class="headerlink" title="添加 Nova 代理"></a>添加 Nova 代理</h4><pre><code>cat &lt;&lt;&apos;EOF&apos; &gt;&gt;/etc/haproxy/haproxy.cfg########## Nova_compute ##########listen nova_compute_api_cluster  bind controller:8774  balance source  option tcpka  option httpchk  option tcplog  server controller1 controller1:8774 check inter 2000 rise 2 fall 5  server controller2 controller2:8774 check inter 2000 rise 2 fall 5  server controller3 controller3:8774 check inter 2000 rise 2 fall 5########## Nova-api-metadata ##########listen Nova-api-metadata_cluster  bind controller:8775  balance source  option tcpka  option httpchk  option tcplog  server controller1 controller1:8775 check inter 2000 rise 2 fall 5  server controller2 controller2:8775 check inter 2000 rise 2 fall 5  server controller3 controller3:8775 check inter 2000 rise 2 fall 5########## Nova_placement ##########listen nova_placement_cluster  bind controller:8778  balance source  option tcpka  option tcplog  server controller1 controller1:9778 check inter 2000 rise 2 fall 5  server controller2 controller2:9778 check inter 2000 rise 2 fall 5  server controller3 controller3:9778 check inter 2000 rise 2 fall 5EOF</code></pre><h4 id="同步配置"><a href="#同步配置" class="headerlink" title="同步配置"></a>同步配置</h4><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/nova/* controller2:/etc/nova/rsync -avzP -e &apos;ssh -p 22&apos; /etc/nova/* controller3:/etc/nova/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/* controller2:/etc/haproxy/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/* controller3:/etc/haproxy/rsync -avzP -e &apos;ssh -p 22&apos; /etc/httpd/conf.d/00-nova-placement-api.conf controller2:/etc/httpd/conf.d/rsync -avzP -e &apos;ssh -p 22&apos; /etc/httpd/conf.d/00-nova-placement-api.conf controller3:/etc/httpd/conf.d/</code></pre><hr><blockquote><p>替换监听主机</p></blockquote><pre><code>ssh controller2 &quot;sed -i &apos;1,7s/controller1/controller2/&apos; /etc/nova/nova.conf&quot;ssh controller3 &quot;sed -i &apos;1,7s/controller1/controller3/&apos; /etc/nova/nova.conf&quot;</code></pre><h4 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h4><pre><code>for HOST in controller{1..3}; do    ssh -T $HOST &quot;systemctl restart httpd haproxy&quot;donesleep 5</code></pre><h3 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h3><pre><code>for HOST in controller{1..3}; do    echo &quot;------------ $HOST ------------&quot;    ssh -T $HOST &lt;&lt;EOF    # 配置服务跟随系统启动    systemctl enable openstack-nova-api openstack-nova-consoleauth \      openstack-nova-scheduler openstack-nova-conductor openstack-nova-novncproxy    # 启动nova服务    systemctl start openstack-nova-api openstack-nova-consoleauth \      openstack-nova-scheduler openstack-nova-conductor openstack-nova-novncproxyFOFdone</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><blockquote><p>查看集群节点</p></blockquote><pre><code>nova service-listnova-status upgrade checkopenstack compute service list# 浏览器打开 http://192.168.0.11:1080/admin# 检测 Nova_compute,Nova-api-metadata,Nova_placement 集群状态</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-07_nova-cluster.sh -O openstack-glance-cluster.shsh openstack-glance-cluster.sh</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Nova集群安装-控制节点&quot;&gt;&lt;a href=&quot;#Nova集群安装-控制节点&quot; class=&quot;headerlink&quot; title=&quot;Nova集群安装(控制节点)&quot;&gt;&lt;/a&gt;Nova集群安装(控制节点)&lt;/h3&gt;&lt;h4 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
      <category term="nova" scheme="https://home.onlycloud.xin/tags/nova/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack集群安装-06_Glance镜像服务集群</title>
    <link href="https://home.onlycloud.xin/posts/openstack-06.html"/>
    <id>https://home.onlycloud.xin/posts/openstack-06.html</id>
    <published>2018-07-25T12:30:46.000Z</published>
    <updated>2018-09-27T12:11:50.583Z</updated>
    
    <content type="html"><![CDATA[<h3 id="集群安装"><a href="#集群安装" class="headerlink" title="集群安装"></a>集群安装</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><blockquote><p>创建glance数据库,授权</p></blockquote><pre><code>source ~/PASS               # 读取数据库密码mysql -u root -p$DBPass -e &quot;create database glance;grant all privileges on glance.* to &apos;glance&apos;@&apos;localhost&apos; identified by &apos;glance&apos;;grant all privileges on glance.* to &apos;glance&apos;@&apos;%&apos; identified by &apos;glance&apos;;&quot;</code></pre><h4 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a>创建服务</h4><blockquote><p>创建 glance 角色,授权</p></blockquote><pre><code>source ~/admin-openstack.sh              # 加载凭证openstack user create --domain default --password=glance glanceopenstack role add --project service --user glance admin</code></pre><hr><blockquote><p>创建glance服务实体</p></blockquote><pre><code>openstack service create --name glance --description &quot;OpenStack Image&quot; image</code></pre><hr><blockquote><p>创建服务 API</p></blockquote><pre><code>openstack endpoint create --region RegionOne image public http://controller:9292openstack endpoint create --region RegionOne image internal http://controller:9292openstack endpoint create --region RegionOne image admin http://controller:9292</code></pre><hr><h3 id="安装-NFS-服务"><a href="#安装-NFS-服务" class="headerlink" title="安装 NFS 服务"></a>安装 NFS 服务</h3><blockquote><p>打开nfs服务器电源,配置 NFS 服务,提供给控制节点存储glance镜像</p></blockquote><h4 id="NFS服务端配置-centos7"><a href="#NFS服务端配置-centos7" class="headerlink" title="NFS服务端配置(centos7)"></a>NFS服务端配置(centos7)</h4><blockquote><p>配置免密码登录,初始化环境</p></blockquote><pre><code>source ~/SSH_KEYSSH_KEY nfsssh nfs &quot;curl http://home.onlycloud.xin/code/openstack-01_init.sh | sh&quot;scp /etc/hosts nfs:/etc/</code></pre><blockquote><p>安装配置 NFS Server</p></blockquote><pre><code># 镜像存储路径ImgDir=&apos;/data/glance&apos;ssh -T nfs &lt;&lt;EOFyum install nfs-utils rpcbind -ymkdir -p $ImgDirecho &quot;$ImgDir 192.168.0.0/24(rw,no_root_squash,sync)&quot;&gt;&gt;/etc/exportsexportfs -rsystemctl enable rpcbind nfs-serversystemctl restart rpcbind nfs-servershowmount -e localhostEOF</code></pre><h4 id="NFS客户端-所有控制节点"><a href="#NFS客户端-所有控制节点" class="headerlink" title="NFS客户端(所有控制节点)"></a>NFS客户端(所有控制节点)</h4><pre><code>for HOST in controller{1..3}; do    ssh -T $HOST  &lt;&lt;EOF    # 启用 rpcbind    systemctl enable rpcbind    systemctl start rpcbind    # 创建挂载目录    mkdir -p $ImgDir    # 设置镜像路径权限    # chown glance:nobody $ImgDir    # 手动挂载    mount -t nfs nfs:$ImgDir $ImgDir    # 写入开机执行shell    echo -e &apos;\n# mount nfs glance&apos; &gt;&gt;/etc/rc.local    echo &quot;/usr/bin/mount -t nfs nfs:$ImgDir $ImgDir&quot;&gt;&gt;/etc/rc.local    chmod +x /etc/rc.d/rc.local    # 验证挂载    df -hEOFdone</code></pre><h3 id="安装配置Glance"><a href="#安装配置Glance" class="headerlink" title="安装配置Glance"></a>安装配置Glance</h3><h4 id="安装-Glance"><a href="#安装-Glance" class="headerlink" title="安装 Glance"></a>安装 Glance</h4><pre><code>for HOST in controller{1..3}; do    echo &quot;------------- $HOST Glance ------------&quot;    ssh -T $HOST  &lt;&lt;EOF    # 安装 Glance    yum install -y openstack-glance python-glance    # 备份默认配置    [ -f /etc/glance/glance-api.conf.bak ] || cp /etc/glance/glance-api.conf{,.bak}    [ -f /etc/glance/glance-registry.conf.bak ] || cp /etc/glance/glance-registry.conf{,.bak}    # 配置镜像路径权限    chown glance:nobody $ImgDirEOFdone</code></pre><h4 id="Glance-配置"><a href="#Glance-配置" class="headerlink" title="Glance 配置"></a>Glance 配置</h4><h5 id="创建-glance-api-配置文件"><a href="#创建-glance-api-配置文件" class="headerlink" title="创建 glance-api 配置文件"></a>创建 glance-api 配置文件</h5><pre><code>cat &lt;&lt;EOF &gt;/etc/glance/glance-api.conf[DEFAULT]debug = Falseverbose = Truebind_host = controller1bind_port = 9292auth_region = RegionOneregistry_client_protocol = http[database]connection = mysql+pymysql://glance:glance@controller/glance[keystone_authtoken]auth_uri = http://controller:5000/v3auth_url = http://controller:35357/v3memcached_servers = controller1:11211,controller2:11211,controller3:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = glancepassword = glance[paste_deploy]flavor = keystone[glance_store]stores = file,httpdefault_store = filefilesystem_store_datadir = $ImgDir[oslo_messaging_rabbit]rabbit_userid = openstackrabbit_password = openstackrabbit_durable_queues=truerabbit_ha_queues = Truerabbit_max_retries= 0rabbit_port = 5672rabbit_hosts = controller1:5672,controller2:5672,controller3:5672EOF</code></pre><h5 id="创建-glance-registry-配置文件"><a href="#创建-glance-registry-配置文件" class="headerlink" title="创建 glance-registry 配置文件"></a>创建 glance-registry 配置文件</h5><pre><code>cat &lt;&lt;EOF &gt;/etc/glance/glance-registry.conf[DEFAULT]debug = Falseverbose = Truebind_host = controller1bind_port = 9191workers = 2[database]connection = mysql+pymysql://glance:glance@controller/glance[keystone_authtoken]auth_uri = http://controller:5000/v3auth_url = http://controller:35357/v3memcached_servers = controller1:11211,controller2:11211,controller3:11211auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultproject_name = serviceusername = glancepassword = glance[paste_deploy]flavor = keystone[oslo_messaging_rabbit]rabbit_userid = openstackrabbit_password = openstackrabbit_durable_queues= truerabbit_ha_queues = Truerabbit_max_retries= 0rabbit_port = 5672  rabbit_hosts = controller1:5672,controller2:5672,controller3:5672EOF</code></pre><h5 id="同步-glance-配置到-controller2-3"><a href="#同步-glance-配置到-controller2-3" class="headerlink" title="同步 glance 配置到 controller2,3"></a>同步 glance 配置到 controller2,3</h5><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/glance/* controller2:/etc/glance/rsync -avzP -e &apos;ssh -p 22&apos; /etc/glance/* controller3:/etc/glance/</code></pre><h5 id="更改controller2-3-监听主机-bind-host"><a href="#更改controller2-3-监听主机-bind-host" class="headerlink" title="更改controller2,3 监听主机 bind_host"></a>更改controller2,3 监听主机 bind_host</h5><pre><code>ssh controller2 &quot;sed -i &apos;s/bind_host =.*/bind_host = controller2/&apos; /etc/glance/glance-api.confssh controller3 &quot;sed -i &apos;s/bind_host =.*/bind_host = controller3/&apos; /etc/glance/glance-api.confssh controller2 &quot;sed -i &apos;s/bind_host =.*/bind_host = controller2/&apos; /etc/glance/glance-registry.conf&quot; ssh controller3 &quot;sed -i &apos;s/bind_host =.*/bind_host = controller3/&apos; /etc/glance/glance-registry.conf&quot;</code></pre><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><blockquote><p>初始化 glance数据库,检查数据库</p></blockquote><pre><code>su -s /bin/sh -c &quot;glance-manage db_sync&quot; glancemysql -h controller -u glance -pglance -e &quot;use glance;show tables;&quot;</code></pre><h3 id="Haproxy代理"><a href="#Haproxy代理" class="headerlink" title="Haproxy代理"></a>Haproxy代理</h3><h4 id="配置-glance-api-cluster-代理"><a href="#配置-glance-api-cluster-代理" class="headerlink" title="配置 glance_api_cluster 代理"></a>配置 glance_api_cluster 代理</h4><pre><code>cat &lt;&lt;EOF &gt;&gt;/etc/haproxy/haproxy.cfg##########Glance_api_cluster##########listen glance_api_cluster  bind controller:9292  #balance  source  option  tcpka  option  httpchk  option  tcplog  server controller1 controller1:9292 check inter 2000 rise 2 fall 5  server controller2 controller2:9292 check inter 2000 rise 2 fall 5  server controller3 controller3:9292 check inter 2000 rise 2 fall 5EOF</code></pre><h4 id="同步-haproxy-配置到其他节点"><a href="#同步-haproxy-配置到其他节点" class="headerlink" title="同步 haproxy 配置到其他节点"></a>同步 haproxy 配置到其他节点</h4><pre><code>rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/haproxy.cfg controller2:/etc/haproxy/rsync -avzP -e &apos;ssh -p 22&apos; /etc/haproxy/haproxy.cfg controller3:/etc/haproxy/</code></pre><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><blockquote><p>启动服务,跟随系统启动</p></blockquote><pre><code>for HOST in controller{1..3}; do    echo &quot;------------- $HOST ------------&quot;    ssh -T $HOST  &lt;&lt;EOF    # 配置服务跟随系统启动    systemctl enable openstack-glance-api openstack-glance-registry    # 重启服务    systemctl restart openstack-glance-api openstack-glance-registry haproxyEOFdone</code></pre><h3 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h3><h4 id="下载镜像源"><a href="#下载镜像源" class="headerlink" title="下载镜像源"></a>下载镜像源</h4><pre><code>wget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.imgwget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img</code></pre><h4 id="上传镜像-1"><a href="#上传镜像-1" class="headerlink" title="上传镜像"></a>上传镜像</h4><blockquote><p>使用qcow2磁盘格式，bare容器格式,上传镜像到镜像服务并设置公共可见</p></blockquote><pre><code>source ~/admin-openstack.shopenstack image create &quot;cirros-0.3.5&quot; --file cirros-0.3.5-x86_64-disk.img --disk-format qcow2 --container-format bare --publicopenstack image create &quot;cirros-0.4.0&quot; --file cirros-0.4.0-x86_64-disk.img --disk-format qcow2 --container-format bare --public</code></pre><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><h4 id="发送凭证到其他控制节点"><a href="#发送凭证到其他控制节点" class="headerlink" title="发送凭证到其他控制节点"></a>发送凭证到其他控制节点</h4><pre><code>scp ~/admin-openstack.sh controller2:~/admin-openstack.shscp ~/admin-openstack.sh controller3:~/admin-openstack.sh</code></pre><h4 id="查看镜像列表-三台节点相同"><a href="#查看镜像列表-三台节点相同" class="headerlink" title="查看镜像列表(三台节点相同)"></a>查看镜像列表(三台节点相同)</h4><pre><code>openstack image listssh controller2 &quot;source ~/admin-openstack.sh;openstack image list&quot;ssh controller3 &quot;source ~/admin-openstack.sh;openstack image list&quot;ls $ImgDir             # 查看本地镜像路径ssh nfs &quot;ls /data/glance&quot;   # 查看 nfs 服务器镜像路径</code></pre><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><pre><code>site=&apos;http://home.onlycloud.xin&apos;wget $site/code/openstack-06_glance-cluster.sh -O openstack-glance-cluster.shsh openstack-glance-cluster.sh</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;集群安装&quot;&gt;&lt;a href=&quot;#集群安装&quot; class=&quot;headerlink&quot; title=&quot;集群安装&quot;&gt;&lt;/a&gt;集群安装&lt;/h3&gt;&lt;h4 id=&quot;创建数据库&quot;&gt;&lt;a href=&quot;#创建数据库&quot; class=&quot;headerlink&quot; title=&quot;创建数据库&quot;&gt;
      
    
    </summary>
    
      <category term="openstack" scheme="https://home.onlycloud.xin/categories/openstack/"/>
    
    
      <category term="openstack" scheme="https://home.onlycloud.xin/tags/openstack/"/>
    
      <category term="glance" scheme="https://home.onlycloud.xin/tags/glance/"/>
    
  </entry>
  
</feed>
